@(#)PROGRAM:XCTDaemonControlMobileDevice  PROJECT:XCTest-17131
initWithMobileDeviceIdentifier:
requestSessionWithDTXConnectionProvider:completion:
requestSessionForMobileDeviceWithIdentifier:completion:
sessionIdentifier
IDECapabilities
exportedCapabilities
initWithSessionIdentifier:capabilities:daemonDTXConnectionProvider:
initWithTestRunnerConnectionProvider:testConfiguration:
initForMobileDeviceWithIdentifier:testConfiguration:
errorWithAMDError:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
identifierForDevice:
connectToDevice:error:
pairWithDevice:options:error:
validatePairingWithDevice:error:
startSessionWithDevice:error:
startServiceOnDevice:identifier:options:error:
socketFromServiceConnection:
secureSocketFromServiceConnection:
invalidateServiceConnection:
stopSessionWithDevice:error:
disconnectFromDevice:error:
devices
standardMobileSyncFunctions
init
sharedMobileSyncFunctions
initWithMobileSyncFunctions:
mobileSyncFunctions
_xct_error:description:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
setSharedMobileSyncFunctions:
resetSharedMobileSyncFunctions
initializeMobileSync:
connectToTargetWithIdentifier:error:
syncCrashReportsFromTargetWithIdentifier:error:
crashReportPathForTargetWithIdentifier:error:
disconnectFromTargetWithIdentifier:error:
cleanupMobileSync:
_mobileSyncRefCount
_mobileSyncFunctions
domain
isEqualToString:
userInfo
objectForKeyedSubscript:
selfOrWrappedErrorWithDomain:
standardUserDefaults
numberWithInt:
registerDefaults:
initWithMobileDeviceIdentifier:secureServiceName:fallbackUnsecureServiceName:
initWithIdentifier:
initWithMobileDeviceProvider:secureServiceName:fallbackUnsecureServiceName:
copy
mobileDeviceProvider
setMobileDevice:
mobileDevice
logDelegate
setLogDelegate:
boolForKey:
fallbackUnsecureServiceName
transportForServiceWithIdentifier:error:
secureServiceName
secureTransportForServiceWithIdentifier:error:
code
initWithTransport:
invalidate
initialize
makeConnectionWithCompletion:
remoteHostDiagnosticReportsSynchronizer
setMobileDeviceProvider:
.cxx_destruct
_logDelegate
_secureServiceName
_fallbackUnsecureServiceName
_mobileDeviceProvider
_mobileDevice
countByEnumeratingWithState:objects:count:
initWithIdentifier:mobileDeviceFramework:mobileSyncFramework:
dealloc
_transportForServiceWithIdentifier:secure:error:
deviceRef
mobileDeviceFramework
errorWithMobileDeviceFrameworkError:
initWithConnectedSocket:disconnectAction:
performWithSession:
startSessionAndReturnError:
_xct_error:description:userInfo:
mobileSyncFramework
identifier
synchronizeDiagnosticReportsDirectoryWithCompletion:
setDeviceRef:
_identifier
_mobileDeviceFramework
_mobileSyncFramework
_deviceRef
MobileDevice
XCTMobileDeviceFramework
NSObject
XCTMobileSyncFramework
XCTMobileDeviceDTXConnectionProvider
XCTDaemonDTXConnectionProviding
XCTConfigurableDebugLogger
XCTMobileDevice
XCTRemoteHostDiagnosticReportsSynchronizing
v32@0:8@16@?24
@32@0:8@16@24
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_AMDevice=}16
c32@0:8^{_AMDevice=}16^@24
c40@0:8^{_AMDevice=}16@24^@32
^{_AMDServiceConnection=}48@0:8^{_AMDevice=}16@24@32^@40
i24@0:8^{_AMDServiceConnection=}16
v24@0:8^{_AMDServiceConnection=}16
@20@0:8i16
@"NSString"24@0:8^{_AMDevice=}16
c40@0:8^{_AMDevice=}16@"NSDictionary"24^@32
^{_AMDServiceConnection=}48@0:8^{_AMDevice=}16@"NSString"24@"NSDictionary"32^@40
@"NSError"20@0:8i16
@"NSArray"16@0:8
{?=^?^?^?^?^?^?}16@0:8
v64@0:8{?=^?^?^?^?^?^?}16
v16@0:8
@64@0:8{?=^?^?^?^?^?^?}16
c24@0:8^@16
c32@0:8@16^@24
@32@0:8@16^@24
{?="initializeFunc"^?"connectFunc"^?"syncCrashReportsFunc"^?"crashReportPathFunc"^?"disconnectFunc"^?"cleanupFunc"^?}
@24@0:8@16
v24@0:8@16
@"<XCTDebugLogDelegate>"16@0:8
v24@0:8@"<XCTDebugLogDelegate>"16
v24@0:8@?16
v24@0:8@?<v@?@"DTXConnection"@"NSError">16
@"<XCTRemoteHostDiagnosticReportsSynchronizing>"16@0:8
@40@0:8@16@24@32
@40@0:8@?16@24@32
@?16@0:8
@"<XCTDebugLogDelegate>"
@"NSString"
@"XCTMobileDevice"
v24@0:8@?<v@?@"NSString"@"NSError">16
@36@0:8@16c24^@28
@24@0:8@?16
^{_AMDevice=}16@0:8
v24@0:8^{_AMDevice=}16
@"<XCTMobileDeviceFramework>"
@"XCTMobileSyncFramework"
^{_AMDevice=}
XCTMobileDeviceFramework
v8@?0
Unknown error
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
devices
T@"NSArray",R,C
q24@?0^v8Q16
q24@?0r^v8Q16
AMSInitialize failed with status %d
XCTMobileSyncFramework.m
Mobile Sync has not been initialized or has been cleaned up.
AMSConnectToCrashReportCopyTarget failed with status %d, error %d
AMSCopyCrashReportsFromTarget failed with status %d, error %d
AMSCopyCrashReportPath failed with status %d, error %d
AMSDisconnectFromCrashReportCopyTarget failed with status %d, error %d
AMSCleanup failed with status %d
sharedMobileSyncFunctions
T{?=^?^?^?^?^?^?}
standardMobileSyncFunctions
T{?=^?^?^?^?^?^?},R
mobileSyncFunctions
T{?=^?^?^?^?^?^?},R,V_mobileSyncFunctions
XCTDisableSecureLockdownService
com.apple.dt.XCTDaemonControl
com.apple.testmanagerd.lockdown.secure
com.apple.testmanagerd.lockdown
Unable to find device with identifier: %@
@"XCTMobileDevice"16@?0^@8
XCTMobileDeviceDTXConnectionProvider.m
Invalid parameter not satisfying: %@
completion != nil
Modern lockdown service is disabled via user default. Using legacy fallback service instead
Failed to start secure service '%@'. Falling back to unsecure service '%@'.
logDelegate
T@"<XCTDebugLogDelegate>",W
remoteHostDiagnosticReportsSynchronizer
T@"<XCTRemoteHostDiagnosticReportsSynchronizing>",R
mobileDeviceProvider
T@?,C,V_mobileDeviceProvider
mobileDevice
T@"XCTMobileDevice",&,V_mobileDevice
secureServiceName
T@"NSString",R,C,V_secureServiceName
fallbackUnsecureServiceName
T@"NSString",R,C,V_fallbackUnsecureServiceName
T@"<XCTDebugLogDelegate>",W,V_logDelegate
Cannot start service with an invalidated mobile device object.
IDEDisableWatchWifi
InvalidateOnDetach
CloseOnInvalidate
PreferWifi
Starting test manager service on mobile device.
Error starting test manager service: %@
Invalid socket returned from AMDServiceConnectionGetSocket
@"NSError"8@?0
Connecting to mobile device: %@
Error connecting to mobile device: %@
Error starting session with mobile device: %@
Starting session with mobile device
Validating mobile device pairing because initial attempt to start session failed: %@
Pairing with mobile device because pairing validation failed: %@
ExtendedPairingErrors
Starting session with mobile device (trying again after pairing)
Failed to pair with mobile device: %@
Unable to connect to test manager on %@
deviceRef
T^{_AMDevice=},V_deviceRef
identifier
T@"NSString",R,C,V_identifier
mobileDeviceFramework
T@"<XCTMobileDeviceFramework>",R,V_mobileDeviceFramework
mobileSyncFramework
T@"XCTMobileSyncFramework",R,V_mobileSyncFramework
