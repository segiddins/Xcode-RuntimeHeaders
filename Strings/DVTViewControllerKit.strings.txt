@(#)PROGRAM:DVTViewControllerKit  PROJECT:DVTFrameworks-17160
_dvt_mainViewControllerMonitor
mainViewController
willChangeValueForKey:
setMainViewController:
didChangeValueForKey:
firstResponder
isValid
view
window
supplementalMainViewController
canBecomeMainViewController
setDvt_mainViewController:
nextResponder
dvt_updateMainViewControllerUsingResponderChain
invalidate
dvt_mainViewController
dvt_viewControllerWillUninstall:
set_dvt_mainViewControllerMonitor:
assertionBehaviorForKeyValueObservationsAtEndOfEvent
automaticallyNotifiesObserversOfDvt_mainViewController
automaticallyNotifiesObserversOf_dvt_mainViewControllerMonitor
dvt_synthesizeInvalidation
representedObject
weakInterposerForRepresentedObject:
init
setWindow:
dvt_newObserverForKeyPath:options:withHandlerBlock:
cancel
initialize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
primitiveInvalidate
addAutoInvalidatedObject:
invalidationBacktrace
creationBacktrace
setCreationBacktrace:
assertionBehaviorAfterEndOfEventForSelector:
supportsInvalidationPrevention
initWithWindow:
.cxx_destruct
_window_dvtWeakInterposer
_firstResponderObservingToken
_mainViewControllerIsValidObservingToken
_mainViewController
addObject:
removeObject:
countForObject:
startMonitoringMainViewControllerInWindow:
stopMonitoringMainViewControllerInWindow:
isViewLoaded
descriptionForAssertionMessage
setFlag:toValue:
dvt_registerActivationStateObserver:
defaultCenter
appActivationChanged
dvt_addObserverForName:object:queue:usingBlock:
mainViewControllerChanged
isKeyWindow
shouldHaveActiveAppearance
mainViewControllerDrawingStrategyActivationStateDidChange:
isActive
dvt_isAncestorOfResponder:
window:didChangeActivationState:
initWithDelegate:monitorWholeTree:
hostViewControllerWillUninstall
hostViewControllerDidInstall
delegate
_monitorWholeTree
_treeHasMainViewController
_viewControllerIsMain
_windowIsKey
_appIsActive
_installed
_windowActivationToken
_mainViewControllerToken
_appActivationObservation
_appDeactivationObservation
_delegate
rangeOfString:
substringFromIndex:
defaultViewNibBundle
pathForResource:ofType:
substringToIndex:
stringWithFormat:
bundleForClass:
currentStackBacktrace
defaultViewNibName
initWithNibName:bundle:
initUsingDefaultNib
dvtViewController_commonInit
initWithCoder:
array
superview
stringRepresentationWithAddresses:
standardUserDefaults
boolForKey:
viewWillUninstall
instanceMethodForSelector:
dvt_clearNibBindings
requiresUninstallAfterLoadView
compileTimeClassNameFromRuntimeClassName:
stringRepresentation
setNextResponder:
removeFromSuperviewWithoutNeedingDisplay
setDvt_viewController:
setView:
__isDVTInvalidation
viewDidAppear
viewDidDisappear
representedExtension
nextKeyView
isDescendantOf:
setNextKeyView:
containsObject:
string
countByEnumeratingWithState:objects:count:
appendFormat:
_interposeViewControllerNotifyingLifecycleMethodsIfNecessaryForView:
setIsViewLoaded:
nibName
loadView
_windowWillClose:
addObserver:selector:name:object:
viewDidInstall
removeObserver:name:object:
_checkKvoWindow
_viewWillUninstall
_viewDidInstall
commitEditing
setWithObject:
_kvoWindow
windowController
_originalClassBeforeLifecycleInterposingInstalled
_requiresConstraintBasedLayout
numberWithBool:
viewControllerUsingDefaultNib
keyPathsForValuesAffectingMainViewControllerInParentWindow
keyPathsForValuesAffectingParentWindowController
commitEditingForAction:errors:
discardEditing
setRepresentedExtension:
delegateFirstResponder
separateKeyViewLoops
_viewWillChangeWindow
_viewWillChangeSuperview
_viewDidMoveToWindow
_viewDidMoveToSuperView
mainViewControllerInParentWindow
parentWindowController
_isInstalled
_didInstall
_isViewLoaded
_representedExtension
dvt_viewController
viewWillMoveToWindow:
viewWillMoveToSuperview:
viewDidMoveToWindow
viewDidMoveToSuperview
dvt_mainViewController
_dvt_mainViewControllerMonitor
T@"DVTViewController",R
-[_DVTMainViewControllerMonitor initWithWindow:]
/Library/Caches/com.apple.xbs/Sources/DVTFrameworks/DVTFrameworks-17160/DVTViewControllerKit/View Controllers/DVTMainViewControllerMonitor.m
((window)) != nil
%@ should not be nil.
(window)
((void *)0) == window._dvt_mainViewControllerMonitor
firstResponder
v32@?0@8@"NSDictionary"16^c24
valid
-[_DVTMainViewControllerMonitor setMainViewController:]_block_invoke
DVTIsMainThread()
code should be running on main thread
viewController != self.mainViewController
self.mainViewController is still: %@
v32@?0@"DVTViewController"8@"NSDictionary"16^c24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Tc,R,N,GisValid
invalidationBacktrace
T@"DVTStackBacktrace",R
creationBacktrace
T@"DVTStackBacktrace",&
window
T@"NSWindow",W
mainViewController
T@"DVTViewController",&
-[DVTMainViewControllerDrawingStrategy initWithDelegate:monitorWholeTree:]
/Library/Caches/com.apple.xbs/Sources/DVTFrameworks/DVTFrameworks-17160/DVTViewControllerKit/View Controllers/DVTMainViewControllerDrawingStrategy.m
![_delegate isViewLoaded]
-[DVTMainViewControllerDrawingStrategy primitiveInvalidate]
((_windowActivationToken)) == nil
%@ should be nil, but it is %@
(_windowActivationToken)
((_appActivationObservation)) == nil
(_appActivationObservation)
((_appDeactivationObservation)) == nil
(_appDeactivationObservation)
((_mainViewControllerToken)) == nil
(_mainViewControllerToken)
-[DVTMainViewControllerDrawingStrategy hostViewControllerDidInstall]
(([[_delegate view] window])) != nil
([[_delegate view] window])
v16@?0@"NSNotification"8
mainViewControllerInParentWindow
shouldHaveActiveAppearance
Tc,R
delegate
T@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>",R,V_delegate
representedObject
+[DVTViewController defaultViewNibName]
Controller
Calling %s
@"NSString"8@?0
+[DVTViewController defaultViewNibBundle]
-[DVTViewController initUsingDefaultNib]
Calling -[%@ initUsingDefaultNib]
-[DVTViewController invalidate]
/Library/Caches/com.apple.xbs/Sources/DVTFrameworks/DVTFrameworks-17160/DVTViewControllerKit/View Controllers/DVTViewController.m
((void *)0) == [[self view] window]
Calling -invalidate while [self view] is still in a window and may still be visible to the user.
superviews:%@
creationBacktrace:%@
DVTViewController_DisableDidCallViewWillUninstallAssertions
_isInstalled == __objc_no
Calling -invalidate without calling -viewWillUninstall first. Set the DVTViewController_DisableDidCallViewWillUninstallAssertions default to YES to disable this.
-[DVTViewController primitiveInvalidate]
%@ was invalidated while still attached to %@
__objc_no
Called DVTWarn
((aClass)) != nil
(aClass)
Did not call -viewWillUninstall for %@
-[DVTViewController primitiveInvalidate]_block_invoke_2
didInstall
-loadView was called but the custom -viewWillUninstall was never called because the view was never added to a window. Since this object implements -viewWillUninstall it may have done setup in -loadView and not have completed all necessary teardown.
creationBacktrace:
v8@?0
Calling -[%@ view]
-[DVTViewController view]
-[DVTViewController setRepresentedExtension:]
!extension || (_representedExtension == ((void *)0))
Represented extension is already set.
<%@: %p representing: %@>
%@, 
%@ (repeated keyview)
-[DVTViewController separateKeyViewLoops]
The following views created a nextKeyView loop. This is a serious issue and should be fixed: %@
-[DVTViewController setView:]
[invalidatableView isValid]
Message sent to invalidated object: <%@ %p>.
invalidationBacktrace:
creationBacktrace:
Calling -[%@ loadView]
-[DVTViewController loadView]
The view controller: "%@" is loading the nib file: "%@".
-[DVTViewController _viewDidInstall]
((self)) != nil
(self)
[self isValid]
__objc_no == _isInstalled
((void *)0) != view.superview
((void *)0) != window
Calling -[%@ viewDidInstall]
-[DVTViewController _viewWillUninstall]
_isInstalled
Calling -[%@ viewWillUninstall]
_kvoWindow.dvt_mainViewController
_kvoWindow.windowController
_kvoWindow
%s_ControlledBy_%s
isViewLoaded
Tc,V_isViewLoaded
representedExtension
T@"DVTExtension",&,N,V_representedExtension
view
T@"NSView",&
parentWindowController
T@"NSWindowController",R
canBecomeMainViewController
DVTMainViewControllerMonitorAdditions
_DVTMainViewControllerMonitor
DVTInvalidation
NSObject
DVTMainViewControllerMonitor
DVTMainViewControllerDrawingStrategy
DVTWindowActivationStateObserver
DVTViewController
DVTEditor
_DVTViewController_ViewLifecycleInterpositions
@16@0:8
v24@0:8@16
v16@0:8
Q16@0:8
c16@0:8
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8:16
v24@0:8@"<DVTInvalidation>"16
@"DVTStackBacktrace"16@0:8
v24@0:8@"DVTStackBacktrace"16
@24@0:8@16
@"DVTWeakInterposer"
@"DVTObservingToken"
@"DVTViewController"
v32@0:8@16q24
v32@0:8@"NSWindow"16q24
@28@0:8@16c24
v28@0:8^c16c24
@"<DVTCancellable>"
@"DVTNotificationToken"
@"DVTViewController<DVTMainViewControllerDrawingStrategyDelegate>"
c28@0:8i16@20
c28@0:8i16@"NSMutableArray"20
@32@0:8@16@24
v20@0:8c16
@"NSWindow"
@"DVTExtension"
