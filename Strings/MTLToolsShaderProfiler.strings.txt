MbP?
St11logic_error
St9exception
St8bad_cast
St12length_error
initWithDelegate:
deviceInfo
platform
metalPluginForPlatform:
isForInternalTool
shaderAnalyzer
shaderAnalyzerDyson
setName:
length
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_calculatePerDrawCallCostWithSampleData:targetIndex:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
bytes
setTotalCost:
dictionaryWithCapacity:
setDrawCallCost:
numberWithDouble:
numberWithUnsignedInt:
setObject:forKeyedSubscript:
objectAtIndexedSubscript:
objectForKeyedSubscript:
doubleValue
enumerateKeysAndObjectsUsingBlock:
defaultManager
fileExistsAtPath:
UTF8String
characterSetWithCharactersInString:
invertedSet
stringWithUTF8String:
lastPathComponent
stringByDeletingPathExtension
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
addObject:
count
numberWithInt:
dataWithJSONObject:options:error:
initWithData:encoding:
writeToFile:atomically:encoding:error:
setPerFileCost:
_createPerFileCostDictionaryWith:lineOffset:
perFileCost
allValues
setTotalPerLineCost:
setDrawCallPerLineCost:
stringByStandardizingPath
setSourcePath:
setLineIndex:
setBinaryRangeInfo:
setDisassembledLineInfo:
setOffset:
setDisasmSource:
setIrSource:
setCost:
setCostPercentage:
setOpcodeType:
setOpcodeSubType:
setOpcode:
disassembledLineInfo
setCallStackInfo:
setFunction:
setFile:
setDirectory:
callStackInfo
binaryRangeInfo
setBinaryDisassemblyInfo:
setSourceInfo:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:
_getAddressAndLineTableForDebugInfo:
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:withDefaultDisassemblyInfo:
blockOperationWithBlock:
addDependency:
addOperation:
waitUntilFinished
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
arrayWithObjects:count:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
dictionary
_createPerLineCostDictionaryWith:lineOffset:
supportRendererType:
isDisassemblerAvailable
setupForAnalysis
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
platformShaderAnalyzer
.cxx_destruct
.cxx_construct
_platformShaderAnalyzer
_isForInternalTool
_parallelQueue
_mutex
dataWithData:
writeToURL:atomically:
path
setupShaderInstructionInfoForBinary:forTargetIndex:
shaderInstructionInfoWithStartOffset:endOffset:
shaderInstructionInfoFromBinary:withStartOffset:forLength:targetIndex:
countByEnumeratingWithState:objects:count:
diassemblyString
irString
cost
opCodeType
opCodeSubType
opCode
offset
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
init
initWithCoder:
decodeInt64ForKey:
encodeWithCoder:
encodeInt64:forKey:
supportsSecureCoding
initWithLibraryId:
libraryId
setLibraryId:
_libraryId
arrayWithCapacity:
allocWithZone:
copy
setWithObjects:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
encodeObject:forKey:
encoderTimeData
calculateRealTimeInfoWithGPUTime:
setGpuTime:
drawCallInfoList
programInfo
programId
encoderIndex
timing
isComputeDispatchCall
vertexTiming
fragmentTiming
commandType
computeTiming
blitTimeData
gpuTime
programInfoList
programPipelineInfoList
valid
vertexShaderInfo
fragmentShaderInfo
computeProgramInfo
drawCallInfoIndices
unsignedIntegerValue
objectForKey:
analyzerResult
drawCallPerLineCost
drawCallIndex
_addPerLineCost:to:
functionIndex
_dividePerLineCost:by:
dictionaryWithObjectsAndKeys:
derivedCountersData
pathExtension
stringWithFormat:
stringWithString:
appendString:
copyWithZone:
perLineInfoForFunctionFilePath:withLibraryIdSet:atFunctionIndex:
exportDerivedCounterDataAtPath:renameWhenConflict:
encoderCount
setEncoderCount:
encoderTilerParamBufBytesUsedArray
setEncoderTilerParamBufBytesUsedArray:
parameterBufferMaxSize
setParameterBufferMaxSize:
parameterBufferMaxSizeEverMemless
setParameterBufferMaxSizeEverMemless:
parameterBufferMaxSizeNeverMemless
setParameterBufferMaxSizeNeverMemless:
parameterBufferPercentFullDict
setParameterBufferPercentFullDict:
softwareCounterInfo
setSoftwareCounterInfo:
perRingPerFrameLimiterData
setPerRingPerFrameLimiterData:
shaderProfilingFrameTimes
setShaderProfilingFrameTimes:
blitEncoderTimeInfo
setBlitEncoderTimeInfo:
shaderProfilingTime
setShaderProfilingTime:
_encoderCount
_encoderTilerParamBufBytesUsedArray
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_parameterBufferPercentFullDict
_softwareCounterInfo
_perRingPerFrameLimiterData
_shaderProfilingFrameTimes
_blitEncoderTimeInfo
_shaderProfilingTime
unsignedLongLongValue
unsignedIntValue
arrayWithObject:
numberWithUnsignedLongLong:
dictionaryWithObjects:forKeys:count:
firstObject
isEqualToString:
setObject:atIndexedSubscript:
arrayWithArray:
supportsBatchIdFiltering
_preparePrioritizedPerEncoderDrawListFromShaderProfilerResult:andGetMaxDrawsPerEncoder:andGetEncoderBatchIndexToDrawIndexMap:andGetDrawCallIndexToEncoderBatchIndexMap:
mutableCopy
superclass
bundleForClass:
pathForResource:ofType:
containsObject:
removeObjectForKey:
numberWithUnsignedInteger:
numberWithBool:
indexOfObject:
_updateDrawCallTimingCounters:forShaderProfilerResult:withDrawCallData:withBottleNeckAnalysisDrawCallsData:withCounterIndices:
captureArchive
getTraceDataForFunctionIndexArray:forCaptureArchive:
encoderInfoList
sortUsingComparator:
numberWithUnsignedLong:
notifyProfilingDataUpdateObservers:
delegate
drawCallInfoWithFunctionIndex:subCommandIndex:
derivedCounterInfo:
result
notifyOnQueue:handler:
notifyCounterGraphItemChangedOnQueue:handler:
_effectiveBatchDrawKickTimes:forShaderProfilerResult:
notifyStreamingShaderProfilingDataOnQueue:handler:
notifyBatchedCounterDataOnQueue:handler:
effectivePerEncoderDrawKickTimes
initWithCapacity:
setDerivedCountersData:
setCommandBufferCount:
setPerCommandBufferEncoderCount:
setEncoderIndexToLabelMap:
source
setBinary:
_gatherStaticInformation
setXpState:
_processEncoderTimeData:withKickTimeData:forPayload:withGPUTime:
setEncoderTimeData:
errorWithDomain:code:userInfo:
setError:
setResult:
supportsDerivedCounters
wantsDerivedCounters
_queryDerivedCounterDataWithDelegate:withShaderInfoResult:forPayload:withShaderProfilerResult:
calculateFrameTime:result:
calculateUtilizations:result:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_preProcessUSCSampleData:result:targetIndex:
_setupFragmentEncoderCountersPerDrawCall:
_setupLimiterInfoPerDrawCall:forPayload:
binary
uscSamples
extractShaderBinaryTextSegment:
disassembleBinary:
setAnalyzerResult:
setDisassembly:
setBlitTimeData:
setVertexCount:
setFragmentCount:
drawCallCost
vertexCount
fragmentCount
instanceCount
setInstanceCount:
setVertexCountPercentage:
setFragmentCountPercentage:
setInstanceCountPercentage:
standardUserDefaults
boolForKey:
removeTemporaryDirectory
shaderSourceForProgramInfo:atFunctionIndex:
_dumpTraceProfileDataForResult:
sortedArrayUsingComparator:
programIndex
computeProgramId
calculateEncoderProgramInfo
encoderProgramInfoList
future
_constructPayload
queryShaderInfoWithPayload:
waitUntilResolved
computeFromFrameInfoResult:forFuture:
futureWithResult:error:
supportsImmediateModeDrawCounters
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
waitUntilAllOperationsAreFinished
loadActionTimes
storeActionTimes
effectiveKickTimes
setEffectivePerEncoderDrawKickTimes:
setArray:
_preProcessStreamingUSCSampleData:result:
dictionaryWithDictionary:
_processHarvestedBinaryData:forStreamedData:
setDictionary:
adjustHWBiasAndFinalizeResult
_addBlitTimesToEffectiveKickTimes:
_processFrameTimeData:forProcessedFrameTimeData:
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
_processDerivedEncoderCounterData:forDerivedEncoderData:
timeoutAfter:label:
error
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
_calculatePerDrawCosts:
computeFromShaderInfoResult:forPayload:forFuture:
shaderProfiler
dumpInstructions
shaderProfilerGPUDesktopReplayer
shaderProfilerDyson
setSupportsImmediateModeDrawCounters:
setMaxConcurrentOperationCount:
constructPayloadFromArchive:
gatherStatisticsFromArchive:
_saveAddressList:size:filename:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
setUscSamples:
appendBytes:length:
newShaderProfilerWithDelegate:
initializeShaderAnalyzer
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
handleCaptureSessionTearDown
collectBatchFilteredDataForShaderProfilerResult:
_createPerCounterCommandData:withPerCommandData:
profileFrame
_showDrawCallDataforResult:
_saveSampleDataFromGPURawCounters:size:filename:
profileShader:
_platformShaderProfiler
_useEncoderDataForCounters
_sessionIsInvalid
_metalPluginName
_derivedCounterInfoResult
_payload
_shaderInfoResult
unarchivedObjectOfClasses:fromData:error:
dataWithLength:
mutableBytes
containsString:
setWithCapacity:
addObjectsFromArray:
stringByAppendingFormat:
context
createArrayRef:
JSGlobalContextRef
setValues:
callFunction:withArguments:
getValue:
toArray
arrayByAddingObjectsFromArray:
string
allKeys
appendFormat:
stringByAppendingString:
evaluteScript:scriptURL:
_grcFrameData
removeObject:
unarchivedObjectOfClass:fromData:error:
dataWithCapacity:
cancelAllOperations
setLength:
maxConcurrentOperationCount
setRawArrayValues:withUint32Values:andNumCounters:
evaluateScriptCode:
prepareCounterNames:softwareCounterNames:derivedCounterNames:
exportCounterValues:
prepareCounterValues:softwareCounterValues:
evaluateDerivedCounters
dictionaryWithContentsOfFile:
boolValue
mainBundle
bundlePath
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
unsignedLongValue
stringValue
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
v8@?0
GlobalLoad
v32@?0@8@"NSNumber"16^c24
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
source
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
    %d %s [%u %u] %.1f %.2f%%
    %d %s [%u %u]
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
perDrawCall
/program_source
Offset
GlobalStore
Sample
LocalLoad
LocalStore
totalCost
perLineCost
16777235-0
::air.vertexFetchFunction()
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
libraryId
TQ,N,V_libraryId
encoderTilerParamBufBytesUsedArray
parameterBufferMaxSize
parameterBufferMaxSizeEverMemless
parameterBufferMaxSizeNeverMemless
v32@?0@8@16^c24
perLineCostTotal
perLineCostVertex
perLineCostFragment
perLineCostComputeKernel
perLineCostCurrentDraw
perBinaryCost
%@_%lu.csv
Index,FunctionIndex,CommandBuffer,Encoder,Marker,%@
%lu,%@,%@
shaderProfilingFrameTimes
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
blitEncoderTimeInfo
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
shaderProfilingTime
Td,N,V_shaderProfilingTime
encoderCount
TI,N,V_encoderCount
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
T@"NSNumber",&,N,V_parameterBufferMaxSize
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
parameterBufferPercentFullDict
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
softwareCounterInfo
T@"NSDictionary",&,N,V_softwareCounterInfo
perRingPerFrameLimiterData
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
vertex shader info
fragment shader info
compute kernel info
activePerEncoderDrawCallCount
perEncoderKickCount
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
TPULimiter
ALULimiter
GlobalLoadLimiter
GlobalStoreLimiter
PBELimiter
SampleLimiter
LocalLoadLimiter
LocalStoreLimiter
BufferLoadLimiter
BufferStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
FSSamplerStall
ShaderCoreFragmentUtilization
FSTextureCacheMissRate
FragmentShaderBusy
FragmentPipelinePercent
PixelWriteStallPercent
GPUCounterGraph
plist
GPUTime
v32@?0@"NSString"8@16^c24
encoderBatchPriorityList
maxDrawsInAnyEncoder
collectInBackground
pause
derivedCounterInfo
Count
Rate
q24@?0@"NSNumber"8@"NSNumber"16
v24@?0@"NSDictionary"8@"NSDictionary"16
FunctionIndex
SubcommandIndex
highPriorityBatches
HighPriorityBatchInfo
v16@?0@"NSDictionary"8
gputools.%@.%p
derivedCounterData
@"NSDictionary"16@?0@"NSDictionary"8
Batch Filtering Started
Kick Times
GPU Time
DerivedCounterInfo
draw call info
perCommandBufferEncoderCount
encoderIndexToLabel
vertex shader key
fragment shader key
compute kernel key
binary
rm -rf /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults
mkdir /tmp/com.apple.gputools.profiling/shaderProfilerResults/json
encoder time data
kick time data
MetalPluginName
gputime
consistent time
tilerParamBufBytesUsedArray
frametime
performance statistics
ParameterBufferMaxSize
ParameterBufferMaxSizeEverMemless
ParameterBufferMaxSizeNeverMemless
/tmp/com.apple.gputools.profiling
disassembly is unavailable
PerDrawNsecTimes
blitEncoderIndices
GPUShaderProfilerExportShaderInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/ProgramPipelineCosts.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
ProgramIndex
ProgramId
[%u] PipelineState 0x%llX
Vertex(0x%s)[%.4f%%]
Fragment(0x%s)[%.4f%%]
VS_Hash
VS_Percent
FS_Hash
FS_Percent
[%u] PipelineState 0x%llX
Compute(0x%s)[%.4f%%]
CS_Hash
CS_Percent
index
functionIndex
Compute
Vert
Fragment
DrawCallsSorted
Index
%.2f%%
%.4f%%
%.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
%10.4f%%
%10.4f%%
%10.4f%%
/tmp/com.apple.gputools.profiling/shaderProfilerResults/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
q24@?0@"NSMutableDictionary"8@"NSMutableDictionary"16
Cost
/tmp/com.apple.gputools.profiling/shaderProfilerResults/PerEncoderPipelineCosts.txt
SortedPipelines
Encoder %u
AbsoluteCost
Pipeline %llu
PipelineState 0x%llX = [%.4f%%]
PipelineId
DrawCalls
index
functionIndex
PercentageCost
frameProfile
frame counters
frame profile data
Frame Profiler
Frame profiler failed due to an internal error.
MTLStat_nSec
MTLStatVertices
Frame profiler failed to get data from the device.
Total Samples = %g
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
%6u : encoderId:%u limiterIdx:%u nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
usc sampling address data
usc sampling sample data
frame index
ring buffer
Blit Encoder Kick Times Nsec
Blit Encoder Indices
Havested Binaries
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
Frame Time Data
Num Ring Buffers
Blit Command Nsec Times
End Streaming Data
UseMTLCounters
QueryShaderInfoWithPayload
Streaming Shader Profiling Data
GPUDebugger.CounterGraph.UseEncoderDataForCounters
gputools.GPUToolsDebugger.DYPMTLShaderProfiler.ParallelQueue
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingAddressProcessed.txt
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
TraceId to SampleIndex
Frame Encoder Times Data
v32@?0@"NSNumber"8@"NSArray"16^c24
Num Frame Iterations
Encoder TraceId Data
Num Encoders
Sample Marker
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Encoder Draw Call Count
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
passList
DerivedCounterDictionary
DerivedCounters
subtype
Normalize
counters
v32@?0@"NSString"8@"NSDictionary"16^c24
_encoderRawData
_encoderKickTimes
DerivedCounterConfigurationVariables
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
_RawCounterValues
AverageSamples
derivedCounterDataForBottleneckAnalysis
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
BatchInfos
name
description
type
num_cores
MTLStatTotalGPUCycles
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var _DerivedCounterResult = [];
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][0] + _encoderRawData[encoderIdx][1][%u][0] + _encoderRawData[encoderIdx][2][%u][0], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
v16@?0@"NSString"8
ErrorLog
DerivedCounterScript
Post Processing Frame Marker
profileCounters
Frame Index
Source Sample Marker
ShaderProfilerData
Derived Counter Sample Data
Batch Filtered Counters
Program Address Buffer
TraceId to BatchId
v32@?0@"NSNumber"8@"NSNumber"16^c24
Frame Encoder Time Data
EncoderTime
RingBufferIndex
Source
Subdivided Dictionary
Encoder Infos
Counter Info
Derived Counters Info Data
Fragment Counter
limiter sample counters
var %@_norm = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex) {
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / %@;
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(Math.min(value, 100.0)); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
limiter data
limiter time stamps
limiter counter list
shader timeline data
usc sample count
usc sample data thread offsets
gputools.MTLShaderProfiler.parallelQueue
groups
vendorCounters
batchfiltered
Resources/GPUCounterGraph.plist
%@ (%@)
unit
Encoder Index
CommandBuffer
Encoder
Marker
%d %d %d
%lu,%d,
0C!1
DYShaderAnalyzerNextGPU
DYMTLShaderProfilerShaderInfo
DYMTLShaderProfilerResult
DYMTLShaderProfiler
GRCPerFrameDataClass
c20@0:8i16
c16@0:8
@24@0:8@16
v16@0:8
@72@0:8@16@24i32@36@44@52I60@64
@52@0:8@16@24i32@36@44
@28@0:8@16i24
d28@0:8@16I24
d36@0:8@16I24@28
{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}}}{unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}IIIII}36@0:8@16@24i32
{pair<std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >, std::__1::vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > > > >={vector<unsigned int, std::__1::allocator<unsigned int> >=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >=^I}}{vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > > >=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}{__compressed_pair<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > *, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > > >=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}}}}24@0:8^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}}}{unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}IIIII}16
v68@0:8^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >=^^{LineEntry}^^{LineEntry}{__compressed_pair<DebugInfo::LineEntry **, std::__1::allocator<DebugInfo::LineEntry *> >=^^{LineEntry}}}16^{vector<PerFileCost, std::__1::allocator<PerFileCost> >=^{PerFileCost}^{PerFileCost}{__compressed_pair<PerFileCost *, std::__1::allocator<PerFileCost> >=^{PerFileCost}}}24^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}}}{unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}IIIII}32d40I48I52i56r^{LineDisassemblyInfo=@@dIIII}60
@72@0:8^{vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > > >=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}{__compressed_pair<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > *, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> > > >=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *> >}}}16^{vector<PerFileCost, std::__1::allocator<PerFileCost> >=^{PerFileCost}^{PerFileCost}{__compressed_pair<PerFileCost *, std::__1::allocator<PerFileCost> >=^{PerFileCost}}}24^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry> >=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo> >=^{LineDisassemblyInfo}}}{unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}IIIII}32d40@48@56^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double> > >={__hash_table<std::__1::__hash_value_type<unsigned int, double>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, double> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true> >=f}}}64
@28@0:8r^{PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}16I24
@28@0:8r^{PerFileCost={PerLineCost={vector<double, std::__1::allocator<double> >=^d^d{__compressed_pair<double *, std::__1::allocator<double> >=^d}}d}{unordered_map<unsigned int, PerFileCost::PerLineCost, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PerFileCost::PerLineCost> > >={__hash_table<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true> >=f}}}}16I24
@16@0:8
@"<DYPShaderAnalyzer>"
@"NSOperationQueue"
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
@24@0:8Q16
v24@0:8@16
Q16@0:8
v24@0:8Q16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
v32@0:8@16d24
v24@0:8d16
@36@0:8@16^{unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >={__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>=^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >=Q}{__compressed_pair<float, std::__1::equal_to<unsigned long long> >=f}}}24I32
@28@0:8@16c24
I16@0:8
v20@0:8I16
d16@0:8
@"NSArray"
@"NSNumber"
@"NSDictionary"
@"NSMutableDictionary"
@"NSMutableArray"
v40@0:8@16@24@?32
@48@0:8@16@24@32Q40
@32@0:8@16@24
@48@0:8@16^Q24^{unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::equal_to<unsigned long long>, true> >=f}}}32^{unordered_map<unsigned int, std::__1::pair<unsigned int, unsigned int>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::pair<unsigned int, unsigned int> > > >={__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::pair<unsigned int, unsigned int> >, std::__1::equal_to<unsigned int>, true> >=f}}}40
@52@0:8I16@20@28@36r^{CounterIndexInfo=QQQQQ}44
@40@0:8@16@24@32
@48@0:8@16@24@32@40
v36@0:8^Q16I24r*28
v36@0:8@16@24i32
v80@0:8@16^{vector<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> >, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> > > >=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> >}^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> >}{__compressed_pair<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> > *, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> > > >=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *> >}}}24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})QQ}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^{vector<unsigned int, std::__1::allocator<unsigned int> >=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >=^I}}64^{unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int> > >={__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true> >=f}}}72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})QQ}16I24r*28
@"<DYPShaderProfiler>"
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool> >="__a_value"AB}}
@"NSString"
{unique_ptr<GRCPerFrameData, std::__1::default_delete<GRCPerFrameData> >="__ptr_"{__compressed_pair<GRCPerFrameData *, std::__1::default_delete<GRCPerFrameData> >="__value_"^{GRCPerFrameData}}}
