sil_coverage_maplt_witness_tablesil_default_witnsil_witness_tabl
unsafeMutableAddckageDescription_PackageDescriptpropertyDelegate_propertyWrapperwarn_unused_resu
_compiler_versiotargetEnvironmenicationExtensionmacCatalystAppli
callee_guaranteeed_inner_pointerunowned_inner_poaqueReturnTypeOf_opaqueReturnTypLLDBDebuggerFuncamicMemberLookupdynamicMemberLooc_tagged_pointerunsafe_no_objc_tUIApplicationMaid_property_initsrequires_stored___raw_doc_commenNSApplicationMaihesized_protocol__synthesized_prlazy_realization_objc_non_lazy_rbjc_runtime_base_swift_native_ob_show_in_interfaqualified_accesswarn_unqualifiedusableFromInlinediscardableResul_objcRuntimeNamelizeObjCMetadata_staticInitializ_restatedObjCConwrapped_optional_implicitly_unwrrSynthesizedType_clangImporterSyalizingReference_forbidSerializi_hasInitialValuenamicReplacement_dynamicReplacemysEmitIntoClient_alwaysEmitIntoCplementationOnly_implementationOsfavoredOverload_disfavoredOverl_functionBuildertedValueProperty_projectedValuePUnsafeValueBuffe_SwiftNewtypeWragedStoredNSError_BridgedStoredNS_ErrorCodeProtocIteratorProtocolRawRepresentablectiveCBridgeable_ObjectiveCBridgleByArrayLiteralExpressibleByArrpolationProtocolStringInterpolatByBooleanLiteralExpressibleByBooictionaryLiteralExpressibleByDicleByFloatLiteralExpressibleByFloByIntegerLiteralExpressibleByIntibleByNilLiteralExpressibleByNileByStringLiteralExpressibleByStrleByColorLiteral_ExpressibleByColeByImageLiteral_ExpressibleByImingInterpolation_DestructorSafeC
FoundationCompatNIOFoundationComUIKitForMacAppliwatchOSApplicatitvOSApplicationEiOSApplicationExOSXApplicationExiOSMacApplicatiomacOSApplication
0000000000000000
MutableCollectiomNumberGeneratorRandomNumberGeneRawBufferPointerUnsafeMutableRawUnsafeRawBufferPAccessCollectionRandomAccessCollutableRawPointertionalCollectionBidirectionalColbleBufferPointerUnsafeMutableBufceableCollectionRangeReplaceableafeBufferPointerUnsafeBufferPoinaryFloatingPointBinaryFloatingPoUnsafeMutablePoiObjectIdentifierUnsafeRawPointer
/=-+*%<>!&|^~.?
SwiftShims
Builtin.Int
Builtin.Word
Builtin.IntLiteral
Builtin.RawPointer
Builtin.NativeObject
Builtin.BridgeObject
Builtin.UnknownObject
Builtin.UnsafeValueBuffer
Builtin.Vec
Builtin.SILToken
0123456789ABCDEF
                                                                                
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
syntax_parse_source
syntax_parse_module
'%s' (aka '%s')
'%s' (%s of '%s')
<<<<
>>>>>>> 
var 
func 
 { get <#set#> }
'read' accessor
'modify' accessor
'willSet'
'didSet'
mutable addressor
oldValue
newValue
a getter
a setter
a 'read' accessor
a 'modify' accessor
an addressor
a mutable addressor
speed
static 
function
class, 
enum 'case'
: <# Type #>
inlineable
_versioned
_inlineable
propertyDelegate
_propertyWrapper
file
file:
'#sourceLocation'
line:
'#line'
(<NULL>)
 [recorded]
 [deferred token]
type(of: 
let 
colorLiteral
imageLiteral
resourceName
fileLiteral
targetEnvironment(simulator)
string literal
a unary comparison '>=' or '<'; for example, '>=2.2' or '<2.2'
os(UIKitForMac)
targetEnvironment(macCatalyst)
operating system
architecture
endianness
import conditional
target environment
pointer authentication scheme
'inout'
'shared'
'owned'
throws 
rethrows 
constant
variable
'#assert' message
 break
self.
super.
unavailable
, introduced:
_PackageDescription
else 
try 
 <#type#>
inout 
======================
--------------
TypeDeclsFromWhereClauseRequest
AllCases
allCases
allocWithZone
allZeros
ArrayLiteralElement
atIndexedSubscript
_bridgeToObjectiveC
buildBlock
buildEither
CodingKeys
container
CoreGraphics
CoreMedia
CoreFoundation
decodeIfPresent
dynamicallyCall
dynamicMember
_enclosingInstance
encodeIfPresent
errorDomain
forKeyedSubscript
hashValue
initialize
initStorage
initialValue
intValue
KeyedDecodingContainer
KeyedEncodingContainer
makeIterator
Iterator
_nsErrorDomain
NSDirectionalEdgeInsets
NSEdgeInsets
objectAtIndexedSubscript
objectForKeyedSubscript
ObjectiveC
_ObjectiveCType
_OptionalNilComparisonType
projected
projectedValue
rawValue
RawValue
Selector
setObject
stringValue
superDecoder
superEncoder
_TtCs12_SwiftObject
UIEdgeInsets
withArguments
withKeywordArguments
Void
wrappedValue
wrapperValue
__derived_enum_equals
__derived_struct_equals
AssignmentPrecedence
CastingPrecedence
DefaultPrecedence
FunctionArrowPrecedence
NilCoalescingPrecedence
TernaryPrecedence
_MaxBuiltinIntegerType
IntegerLiteralType
nilLiteral
integerLiteral
_builtinIntegerLiteral
_MaxBuiltinFloatType
FloatLiteralType
floatLiteral
_builtinFloatLiteral
BooleanLiteralType
_builtinBooleanLiteral
booleanLiteral
ExtendedGraphemeClusterLiteralType
_builtinExtendedGraphemeClusterLiteral
extendedGraphemeClusterLiteral
UnicodeScalarLiteralType
_builtinUnicodeScalarLiteral
unicodeScalarLiteral
stringLiteral
_builtinStringLiteral
StringLiteralType
stringInterpolation
StringInterpolation
literalCapacity
interpolationCount
appendLiteral
appendInterpolation
$interpolation
arrayLiteral
dictionaryLiteral
className
_ErrorType
_nsError
loading extensions for
(file)
local context
explicit closure discriminator=
autoclosure discriminator=
 extension
pattern binding initializer
default argument initializer
error_type
original_type
unresolved_type
builtin_integer_type
bit_width
word_sized
builtin_integer_literal_type
builtin_float_type
builtin_raw_pointer_type
builtin_native_object_type
builtin_bridge_object_type
builtin_unknown_object_type
builtin_unsafe_value_buffer_type
builtin_vector_type
num_elements
tuple_type
tuple_type_elt
name
weak_storage_type
unowned_storage_type
unmanaged_storage_type
enum_type
decl
parent
struct_type
class_type
protocol_type
bound_generic_class_type
bound_generic_enum_type
bound_generic_struct_type
unbound_generic_type
metatype_type
existential_metatype_type
module_type
dynamic_self_type
primary_archetype_type
opaque_type
opened_archetype_type
opened_existential
opened_existential_id
nested_archetype_type
assoc_type
generic_type_param_type
depth
index
dependent_member_type
base
function_type
generic_function_type
generic_sig
sil_function_type
sil_block_storage_type
sil_box_type
sil_token_type
protocol_composition_type
 any_object
lvalue_type
inout_type
type_variable_type
paren_type
type_alias_type
array_slice_type
optional_type
dictionary_type
value
representation
input
function_params
num_params
param
output
substitution_map generic_signature=
<nullptr>
substitution 
<<unresolved concrete type>>
conformance type=
(invalid_conformance)
(abstract_conformance protocol=
normal
 lazy
assoc_type req=
 type=
value req=
 witness=
(none)
(dynamic)
(conditional requirements unable to be computed)
inherited
specialized
(conditional requirements unable to be computed)
_conformance type=
 (details printed above)
nested_type
<<unresolved>>
address
 layout=
conforms_to
superclass
@objc
vararg
shared
<<null>>
brace_stmt
return_stmt
yield_stmt
defer_stmt
if_stmt
guard_stmt
while_stmt
do_stmt
do_catch_stmt
repeat_while_stmt
for_each_stmt
(where
switch_stmt
case_stmt
 @unknown
case_body_variables
case_label_item
 default
break_stmt
continue_stmt
fallthrough_stmt
fail_stmt
throw_stmt
 message=
pattern_paren
pattern_tuple
 names=
pattern_named
pattern_any
pattern_typed
pattern_var
pattern_let
pattern_is
pattern_enum_element
pattern_optional_some
pattern_bool
 false)
 true)
pattern_expr
type_error
type_attributed
 attrs=
type_function
 throws 
type_array
type_dictionary
type_tuple
type_composite
type_metatype
type_protocol
type_inout
type_shared
type_owned
type_ident
component
 id='
 bind=
none
 implicit
 type='
pattern
#available
(**NULL STATEMENT**)
enum_decl
struct_decl
class_decl
 @_staticInitializeObjCMetadata
 requirement signature=
 where requirements: 
 naming_decl=
 opaque_interface=
 underlying:
<<<unresolved>>>
generic_type_param
 depth=
 index=
associated_type_decl
 default=
 overridden=
var_decl
 let
 non_pattern_init
subscript_decl
constructor_decl
 required
 failable=
destructor_decl
func_decl
 type
accessor_decl
_for=
enum_element_decl
extension_decl
top_level_code_decl
import_decl
 exported
 kind=
if_config_decl
#else:
#if:
 active
elements
pound_diagnostic_decl
warning
precedence_group_decl 
associativity 
assignment 
higherThan
lowerThan
missing_member_decl 
pattern_binding_decl
enum_case_decl
infix_operator_decl
prefix_operator_decl
postfix_operator_decl
identifier #
left
right
 range=
 trailing_semi
_read
_modify
willSet
didSet
unsafeAddress
unsafeMutableAddress
result
opaque_result_decl
parameter_list
ImplicitlyUnwrappedOptional
designated
convenience_factory
factory
 foreign_error=
,unowned
,owned
,param=
,paramtype=
,resulttype=
ZeroResult
NonZeroResult
ZeroPreservedResult
NilResult
NonNilError
parameter 
 apiName=
 interface type='
 mutable
 inout
 shared
 owned
 variadic
 autoclosure
stored property
default_arg
 expression=
 readImpl=
 immutable
 writeImpl=
 readWriteImpl=
immutable
stored
mutable_addressor
materialize_to_temporary
modify_coroutine
stored_with_observers
inherited_with_observers
read_coroutine
 superclass='
'anonname=
<null type>
 access=
 override=
 final
 @objc
 dynamic
 @_dynamicReplacement(for: "
 inherits: 
 resilient
 non-resilient
error_expr
nil_literal_expr
 initializer=
integer_literal_expr
 negative
 value=
 builtin_initializer=
float_literal_expr
 builtin_type='
boolean_literal_expr
string_literal_expr
 encoding=
interpolated_string_literal_expr
 literal_capacity=
 interpolation_count=
object_literal
 kind='
magic_identifier_literal_expr
utf8
utf16
discard_assignment_expr
declref_expr
 decl=
 function_ref=
super_ref_expr
type_expr
 typerepr='
<<NULL>>
other_constructor_ref_expr
dot_syntax_base_ignored
overloaded_decl_ref_expr
 number_of_decls=
 decls=[
unresolved_decl_ref_expr
member_ref_expr
 super
subscript_expr
dynamic_member_ref_expr
dynamic_subscript_expr
unresolved_specialize_expr
unresolved_member_expr
 name='
unresolved_dot_expr
 field '
sequence_expr
paren_expr
 trailing-closure
dot_self_expr
try_expr
force_try_expr
optional_try_expr
tuple_expr
<<tuple element default value>>
array_expr
dictionary_expr
keypath_application_expr
tuple_element_expr
 field #
capture_list
closure_expr
 single-expression
autoclosure_expr
inout_expr
vararg_expansion_expr
metatype_expr
rebind_self_in_constructor_expr
opaque_value_expr
bind_optional_expr
optional_evaluation_expr
force_value_expr
open_existential_expr
make_temporarily_escapable_expr
call_expr
prefix_unary_expr
postfix_unary_expr
binary_expr
dot_syntax_call_expr
constructor_ref_call_expr
load_expr
destructure_tuple_expr
 destructured=
argument_shuffle_expr
 scalar_to_tuple
 tuple_to_tuple
 tuple_to_scalar
 elements=[
 variadic_sources=[
 default_args_owner=
unresolvedtype_conversion_expr
function_conversion_expr
covariant_function_conversion_expr
covariant_return_conversion_expr
implicitly_unwrapped_function_conversion_expr
metatype_conversion_expr
collection_upcast_expr
key_conversion
value_conversion
erasure_expr
any_hashable_erasure_expr
bridge_to_objc_expr
bridge_from_objc_expr
conditional_bridge_from_objc_expr
 conversion=
derived_to_base_expr
archetype_to_super_expr
inject_into_optional
class_metatype_to_object
existential_metatype_to_object
protocol_metatype_to_object
inout_to_pointer
 nonaccessing
array_to_pointer
string_to_pointer
pointer_to_pointer
foreign_object_conversion
unevaluated_instance
underlying_to_opaque_expr
forced_checked_cast_expr
conditional_checked_cast_expr
is_subtype_expr
coerce_expr
if_expr
enum_is_case_expr
assign_expr
code_completion_expr
unresolved_pattern_expr
lazy_initializer_expr
editor_placeholder_expr
objc_selector_expr
keypath_expr
 objc
(component=
invalid 
optional_chain 
optional_force 
optional_wrap 
property 
subscript 
unresolved_property 
unresolved_subscript
identity
tuple_element 
type=
key_path_dot_expr
tap_expr
 var=
writtenType='
 nothrow
 throws
 discriminator=
 escaping
direct_to_storage
direct_to_impl
ordinary
 arg_labels=
semantic_expr
(**NULL EXPRESSION**)
unicodeScalar
 location=
Bf16_
Bf32_
Bf64_
Bf80_
Bf128_
undef
sil_stage
sil_property
sil_vtable
sil_global
sil_witness_table
sil_default_witness_table
sil_coverage_map
sil_scope
Cannot pretty-print a null type
<<unresolvedtype>>
Builtin.FPIEEE16
Builtin.FPIEEE32
Builtin.FPIEEE64
Builtin.FPIEEE80
Builtin.FPIEEE128
Builtin.FPPPC128
@sil_weak 
@sil_unowned 
@sil_unmanaged 
module<
@dynamic_self 
@_opaqueReturnTypeOf(
(return type of 
@opened("
<anonymous>
@yield_once 
@yield_many 
block
method
objc_method
witness_method: 
closure
@pseudogeneric
@noescape
@callee_owned 
@callee_guaranteed 
) -> 
@yields 
@error 
@block_storage 
 & AnyObject
@lvalue 
 let 
 var 
@out 
@owned 
@unowned_inner_pointer 
@autoreleased 
@in 
@in_constant 
@in_guaranteed 
@inout 
@inout_aliasable 
@guaranteed 
witness_method
@thin 
@thick 
@objc_metatype 
@autoclosure 
@escaping 
conforms_to: 
layout: 
superclass: 
same_type: 
unresolved
coercion
value_cast
array_downcast
dictionary_downcast
set_downcast
bridging_coercion
 module 
specialize <
inherit (
Preexpanded
TypeDecl
ExtensionGenericParams
 extension of '
TypeOrExtensionBody
GenericParams
 param 
AbstractFunctionParams
DefaultArgument
AbstractFunctionBody
 entry 
PatternInitializer
AfterPatternBinding
BraceStmt
ConditionalClause
 index 
 guard-continuation
ForEachStmt
ForEachPattern
DoCatchStmt
CatchStmt
CaseStmt
Accessors
Closure
TopLevelCode
 expanded
 unexpanded
 [invalid source range]
open
autoclosure
escaping
owned
opened
thin
thick
_opaqueReturnTypeOf
_silgen_name
available
final
required
optional
dynamicCallable
_exported
dynamicMemberLookup
NSCopying
IBAction
IBDesignable
IBInspectable
IBOutlet
NSManaged
objc
lazy
LLDBDebuggerFunction
UIApplicationMain
unsafe_no_objc_tagged_pointer
_semantics
dynamic
infix
prefix
postfix
_transparent
requires_stored_property_inits
nonobjc
_fixed_layout
inlinable
_specialize
objcMembers
__consuming
mutating
nonmutating
convenience
override
_hasStorage
NSApplicationMain
_objc_non_lazy_realization
testable
_alignment
_swift_native_objc_runtime_base
indirect
warn_unqualified_access
_show_in_interface
_cdecl
usableFromInline
discardableResult
GKInspectable
_implements
_staticInitializeObjCMetadata
_restatedObjCConformance
_implicitly_unwrapped_optional
_clangImporterSynthesizedType
_weakLinked
frozen
_forbidSerializingReference
_hasInitialValue
_nonoverride
_dynamicReplacement
_borrowed
_private
_alwaysEmitIntoClient
_implementationOnly
propertyWrapper
_disfavoredOverload
_functionBuilder
_projectedValueProperty
IBSegueAction
inline(never)
inline(__always)
<<custom>>
<<synthesized protocol>>
<<ObjC bridged>>
<<raw doc comment>>
availability
_effects(readnone)
_effects(readonly)
_effects(releasenone)
_effects(readwrite)
_effects(unspecified)
_optimize(none)
_optimize(speed)
_optimize(size)
platform_version_constraint_availability_spec
 platform='
 version='
other_constraint_availability_spec
captures=(
<generic> 
<dynamic_self> 
<opaque_value> 
<direct>
<noescape>
**NULL**
 [with 
Conformances in context:
(conformance @
 protocol=
 loc=
 implied_by=@
 explicit
 inherited
 synthesized
 fixed_conformance=@
 superseded_by=@
top-level code
conditional block
diagnostic
pattern binding
parameter
property
static property
class property
infix operator
prefix operator
postfix operator
precedence group
type alias
generic parameter
associated type
type
generic enum
generic struct
generic class
generic type
static subscript
class subscript
initializer
deinitializer
local function
global function
operator function
instance method
static method
class method
address accessor
mutableAddress accessor
_read accessor
_modify accessor
willSet observer
didSet observer
enum case
module
missing member placeholder
requirement
result
<none>
'static'
'class'
'strong'
weak
unowned
unowned(unsafe)
ExtendedNominalRequest
(null)
(unknown decl)
DefaultAndMaxAccessLevelRequest
AccessLevelRequest
IsDynamicRequest
IsObjCRequest
OverriddenDeclsRequest
SetterAccessLevelRequest
SuperclassDeclRequest
EnumRawTypeRequest
SuperclassTypeRequest
_ErrorCodeProtocol
OptionSet
CaseIterable
SIMDScalar
_BridgedNSError
_BridgedStoredNSError
_CFObject
_SwiftNewtypeWrapper
CodingKey
_ObjectiveCBridgeable
_DestructorSafeContainer
StringInterpolationProtocol
ExpressibleByBooleanLiteral
ExpressibleByDictionaryLiteral
ExpressibleByExtendedGraphemeClusterLiteral
ExpressibleByFloatLiteral
ExpressibleByIntegerLiteral
ExpressibleByStringInterpolation
ExpressibleByStringLiteral
ExpressibleByNilLiteral
ExpressibleByUnicodeScalarLiteral
ExpressibleByArrayLiteral
_ExpressibleByColorLiteral
_ExpressibleByImageLiteral
_ExpressibleByFileReferenceLiteral
_ExpressibleByBuiltinBooleanLiteral
_ExpressibleByBuiltinExtendedGraphemeClusterLiteral
_ExpressibleByBuiltinFloatLiteral
_ExpressibleByBuiltinIntegerLiteral
_ExpressibleByBuiltinStringLiteral
_ExpressibleByBuiltinUnicodeScalarLiteral
Initializer
AbstractClosureExpr
Serialized Local
FileUnit
AbstractFunctionDecl
 name=
 Builtin
 file="
 line=
 base=
 : (no type set)
 PatternBinding 0x
 DefaultArgument index=
 closure : 
DefaultArgument index=
 TopLevelCode
OpaqueTypeDecl
TypeAliasDecl
Module
EnumElementDecl
TopLevelCodeDecl
swift-diagnostics-assert-on-error
INTERNAL ERROR: this diagnostic should not be produced
INTERNAL ERROR: feature not implemented: %0
error opening '%0' for output: %1
cannot find group info file at path: '%0'
cannot parse group info file at path: '%0'
no group info found for file: '%0'
previous definition of %0 is here
did you mean to use a 'do' statement?
while parsing this '<' as a type parameter bracket
SWIFTC_MAXIMUM_DETERMINISM overriding %0
'super' cannot be used outside of class members
class methods are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 method
class properties are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 property
class subscripts are only allowed within classes; use 'static' to declare a %select{static|requirement fulfilled by either a static or class}0 subscript
expected '{' in body of function declaration
change 'let' to 'var' to make it mutable
did you mean '%0'?
failed to load profile data '%0': '%1'
generic requirement '%0' is redundant in %1
requirement of '%1' to '%2' is redundant in an extension of '%0'
'%0' may only be used on parameters
single argument function types require parentheses
unrecognized key '%0' in SDK node
unrecognized SDK node kind '%0'
unrecognized type attribute '%0' in SDK node
unrecognized declaration attribute '%0' in SDK node
unrecognized declaration kind '%0' in SDK node
unrecognized accessor kind '%0' in SDK node
circular reference
redundant type alias declaration
through reference here
%0 inherits from itself
%0 has a raw type that depends on itself
to match this opening '{'
to match this opening '['
to match this opening '('
to match this opening '<'
extraneous '}' at top level
structure nesting level exceeded maximum of %0
expected #else or #endif at end of conditional compilation block
further conditions after #else are unreachable
unexpected conditional compilation block terminator
incomplete condition in conditional compilation directive
extra tokens following conditional compilation directive
unexpected '}' in conditional compilation block
expected string literal in %select{#warning|#error}0 directive
expected '%0' in %select{#warning|#error}1 directive
%select{#warning|#error}0 directive requires parentheses
string interpolation is not allowed in %select{#warning|#error}0 directives
extra tokens following %select{#warning|#error}0 directive
expected '%0' in #sourceLocation directive
parameterless closing #sourceLocation() directive without prior opening #sourceLocation(file:,line:) directive
expected starting line number for #sourceLocation directive
expected filename string literal for #sourceLocation directive
extra tokens at the end of #sourceLocation directive
the line number needs to be greater than zero
keyword '%0' does not need to be escaped in argument list
%0 cannot be an interpolated string literal
%0 cannot be an extended escaping string literal
nul character embedded in middle of file
input files must be encoded as UTF-8 instead of UTF-16
hashbang line is allowed only in the main file
unprintable ASCII character found in source file
invalid UTF-8 found in source file
single-quoted string literal found, use '"'
unicode curly quote found, replace with '"'
unicode character '%0' looks similar to '%1'; did you mean to use '%1'?
non-breaking space (U+00A0) used instead of regular space
unterminated '/*' comment
comment started here
unterminated string literal
invalid escape sequence in literal
\u{...} escape sequence expects between 1 and 8 hex digits
expected '}' in \u{...} escape sequence
too many '#' characters in delimited escape
too many '#' characters in closing delimiter
invalid unicode scalar
expected hexadecimal code in braces after unicode escape
multi-line string literal content must begin on a new line
multi-line string literal closing delimiter must begin on a new line
%select{unexpected space in|unexpected tab in|insufficient}2 indentation of %select{line|next %1 lines}0 in multi-line string literal
should match %select{space|tab}0 here
change indentation of %select{this line|these lines}0 to match closing delimiter
escaped newline at the last line is not allowed
invalid character in source file
an identifier cannot begin with this character
expected a digit in floating point exponent
'%0' is not a valid %select{digit|first character}1 in floating point exponent
'%0' is not a valid %select{binary digit (0 or 1)|octal digit (0-7)|digit|hexadecimal digit (0-9, A-F)}1 in integer literal
hexadecimal floating point literal must end with an exponent
unexpected end of block comment
'=' must have consistent whitespace on both sides
extraneous whitespace after '.' is not permitted
editor placeholder in source file
source control conflict marker in source file
in %select{declaration|extension}0 of %1
#line directive was renamed to #sourceLocation
consecutive declarations on a line must be separated by ';'
expected declaration
expected identifier in %0 declaration
expected '%0' keyword in %1 declaration
%0 name can only start with a letter or underscore, not a number
expected identifier after comma in enum 'case' declaration
definition conflicts with previous value
'let' declarations cannot be computed properties
'let' declarations cannot be observing properties
'let' declarations cannot have addressors
'var' declarations with multiple variables cannot have explicit getters/setters
initial value is not allowed here
variable used within its own initial value
enum 'case' is not allowed outside of an enum
declaration is only valid at file scope
declaration cannot be marked %0
'%0' is a declaration modifier, not an attribute
%0 specified twice
extraneous '.' in enum 'case' declaration
%select{%error|static properties|class properties}0 may only be declared on a type
%select{computed property|subscript}0 must have accessors specified
expected get or set in a protocol property
computed property must have an explicit type
getter/setter can only be defined for a single variable
expected '}' at end of variable get/set clause
%select{variable|subscript}0 already has %1
%select{variable|subscript}0 cannot provide both %1 and %2
%select{|previous definition of }1%0 %select{defined |}1here
expected %select{setter|willSet|didSet}0 parameter name
expected ')' after setter parameter name
expected ')' after willSet parameter name
expected ')' after didSet parameter name
expected '{' to start %0 definition
expected 'get', 'set', 'willSet', or 'didSet' keyword to start an accessor definition
%select{variable|subscript}0 with %1 must also have a getter
%select{variable|subscript}0 with %1 must also have a getter, addressor, or 'read' accessor
%select{'willSet'|'didSet'}0 cannot be provided together with %1
%select{'willSet'|'didSet'}0 is not allowed in subscripts
variable with getter/setter cannot have an initial value
variable with implied type cannot have implied getter/setter
expected module name in import declaration
expected '{' in extension
expected '}' at end of extension
expected type name in extension declaration
expected '=' in type alias declaration
expected type in type alias declaration
expected type in associated type declaration
associated types must not have a generic parameter list
expected '(' in argument list of function declaration
%select{%error|static methods|class methods}0 may only be declared on a type
expected '->' after function parameter tuple
operator '%0' declared in protocol must be 'static'
expected '{' in enum
expected '}' at end of enum
expected '{' in struct
expected '}' in struct
expected '{' in class
expected '}' in class
expected ':' to begin inheritance clause
protocols do not allow generic parameters; use associated types instead
expected '{' in protocol type
expected '}' in protocol
setter in a protocol cannot have a name
protocol methods must not have bodies
protocol initializers must not have bodies
'subscript' functions may only be declared within a type
expected '(' for subscript parameters
subscripts cannot have a name
expected '->' for subscript element type
expected subscripting element type
expected '{' in subscript to specify getter and setter implementation
subscript in protocol must have explicit { get } or { get set } specifier
subscript declarations must have a getter
missing '%select{super.|self.}0' at initializer invocation
initializers may only be declared within a type
expected '(' for initializer parameters
initializers cannot have a name
deinitializers may only be declared within a class
expected '{' for deinitializer
deinitializers cannot have a name
expected ')' to close parameter list
no parameter clause allowed on deinitializer
'operator' may only be declared at file scope
expected operator name in operator declaration
%0 is considered to be an identifier, not an operator
operator should no longer be declared with body
operator should no longer be declared with body; use a precedence group instead
operator must be declared as 'prefix', 'postfix', or 'infix'
expected designated type in operator declaration
trailing comma in operator declaration
only infix operators may declare a precedence
expected identifier after 'precedencegroup'
expected '{' after name of precedence group
expected operator attribute identifier in precedence group body
'%0' is not a valid precedence group attribute
expected colon after attribute name in precedence group
'%0' attribute for precedence group declared multiple times
expected 'none', 'left', or 'right' after 'associativity'
expected 'true' or 'false' after 'assignment'
expected name of related precedence group after '%0'
@inout is no longer an attribute
'%0' only allowed in SIL modules
expected type in SIL code
expected ':' before type in SIL value reference
expected SIL value name
expected SIL type to %0
expected constant in SIL code
referenced declaration has no %select{getter|setter}0
expected value ownership kind in SIL code
expected ':' before %0
expected tuple element index
redefinition of value '%0'
value '%0' defined with mismatching type %1 (expected %2)
value '%0' used with mismatching type %1 (expected %2)
use of undefined value '%0'
prior reference was here
expected ':' in SIL location
line number must be a positive integer
column number must be a positive integer
scope number must be a positive integer 
scope number %0 needs to be declared before first use
scope number %0 is already defined
SIL instructions must be at the start of a line
expected '=' in SIL instruction
wrong number of results for SIL instruction, expected %0
expected SIL instruction opcode
expected '%0' in SIL instruction
sil_property generic signature must match original declaration
string_literal instruction requires an encoding
unknown string literal encoding '%0'
tuple instruction requires a tuple type
tuple instruction requires %0 values
tuple instruction requires a field number
struct instruction requires a field name
ref_element_addr instruction requires a field name
invalid instruction operands
%0 operand of '%1' must have address type
%0 operand of '%1' must have address of %2 type
integer_literal instruction requires a 'Builtin.Int<n>' type
integer_literal value not well-formed for type %0
float_literal instruction requires a 'Builtin.FP<n>' type
apply of non-polymorphic function cannot have substitutions
witness_method is not a protocol method
witness_method type does not conform to protocol
member not found
member %0 not found in type %1
cannot lookup member %0 in non-nominal, non-module type %1
member defined with mismatching type %0 (expected %1)
substitution replacement type %0 does not conform to protocol %1
substitution replacement type %0 is not a class type
missing substitutions
too many substitutions
unknown key '%0' in debug variable declaration
alloc_ref [objc] cannot have tail allocated elements
found unqualified instruction in qualified function '%0'
%0 instruction must have explicit access kind
%0 instruction must have explicit access enforcement
expected keypath component kind
unknown keypath component kind %0
keypath %select{gettable|settable}0_property component needs an %select{id and getter|id, getter, and setter}0
keypath external component with indices needs an indices_equals and indices_hash function
keypath must have a root component declared
key path index type %0 does not conform to Hashable
conflicting types for key path operand %0: %1 vs. %2
operand %0 is not referenced by any component in the pattern
expected basic block name or '}'
expected ':' after basic block name
use of undefined basic block %0
redefinition of basic block %0
expected ')' in basic block argument list
expected SIL function name
expected '}' at the end of a sil body
sil function expected to have SIL function type
dynamically replaced function not found %0
expected 'raw' or 'canonical' after 'sil_stage'
sil_stage declared multiple times
expected ':' in a vtable entry
sil function not found %0
sil class not found %0
expected 'inherited' or 'override'
expected ']' after vtable entry kind
sil global not found %0
expected ':' in a witness table
expected '(' in a witness table
expected ')' in a witness table
sil protocol not found %0
sil associated type decl not found %0
sil associated type path for conformance not found %0
sil protocol conformance not found
expected coverage hash
expected '{' in coverage map
expected line:column pair
expected '->' after start location
expected ':' after source range
expected counter expression, id, or 'zero'
expected ')' to end counter expression
expected quotes surrounding PGO function name
expected '+' or '-'
expected type
expected initial value after '='
expected identifier in dotted type
expected identifier for type name
expected '>' to complete generic argument list
expected type for function result
only syntactic function types can be generic
only function declarations may be marked 'rethrows'; did you mean 'throws'?
'throws' may only occur before '->'
'rethrows' may only occur before '->'
expected throwing specifier; did you mean 'throws'?
expected type before '->'
expected type after '->'
function types cannot have argument labels; use '_' before %0
expected a dynamically_replaceable function
expected expression after '=' in 'case'
raw value for enum case must be a literal
array types are now written with the brackets around the element type
expected ']' in array type
expected element type
expected dictionary value type
expected ']' in dictionary type
expected ')' at end of tuple list
only a single element can be variadic
default argument not permitted in a tuple type
default argument not permitted in a protocol method
default argument not permitted in a protocol initializer
tuple element cannot have two labels
expected '>' to complete protocol-constrained type
'protocol<...>' composition syntax has been removed; join the protocols using '&'
'protocol<...>' composition syntax has been removed and is not needed here
'protocol<>' syntax has been removed; use 'Any' instead
expected 'var' or 'let' to introduce SIL box field type
expected '}' to complete SIL box field type list
expected '>' to complete SIL box generic argument list
'some' should appear at the beginning of a composition
expected non-negative size to be specified in layout constraint
expected non-negative alignment to be specified in layout constraint
expected ')' to complete layout constraint
layout constraints are only allowed inside '_specialize' attributes
expected pattern
keyword '%0' cannot be used as an identifier here
found an unexpected second identifier in %0 declaration; is there an accidental break?
join the identifiers together
join the identifiers together with camel-case
if this name is unavoidable, use backticks to escape it
expected ')' at end of tuple pattern
'...' cannot be applied to a subpattern which is not explicitly typed
default arguments are not allowed in closures
default arguments are not allowed in subscripts
default arguments are not allowed in curried parameter lists
'%select{var|let}0' cannot appear nested inside another 'var' or 'let' pattern
%0 must be bound in every pattern
'let' pattern cannot appear nested in an already immutable context
%0 arguments must have a type specified
expected ')' in parameter
expected parameter type following ':'
expected parameter name followed by ':'
expected ':' following argument label and parameter name
parameter requires an explicit type
only a single variadic parameter '...' is permitted
variadic parameter cannot have a default value
'%0' before a parameter name is not allowed, place it before the parameter type instead
parameter must not have multiple '__owned', 'inout', '__shared', 'var', or 'let' specifiers
'%0' as a parameter attribute is not allowed
extraneous duplicate parameter name; %0 already has an argument label
%select{operator|closure|enum case}0 cannot have keyword arguments
unnamed parameters must be written with the empty name '_'
cannot have more than one parameter list
unexpected initializer in pattern; did you mean to use '='?
a parameter following a variadic parameter requires a label
enum element with associated values must have at least one associated value
enum element with associated values must have at least one associated value; this will be an error in the future version of Swift
did you mean to remove the empty associated value list?
did you mean to explicitly add a 'Void' associated value?
expected statement
statements are not allowed at the top level
expressions are not allowed at the top level
';' statements are not allowed
top-level statement cannot begin with a closure expression
consecutive statements on a line must be separated by ';'
labels are only valid on loops, if, and switch statements
%0 has been replaced with %1 in Swift 3
expected expression in assignment
expected '}' at end of brace statement
type alias is missing an assigned type; use 'associatedtype' to define an associated type requirement
associated types can only be defined in a protocol; define a type or introduce a 'typealias' to satisfy an associated type requirement
expected expression in 'return' statement
expression following 'return' is treated as an argument of the 'return'
indent the expression to silence this warning
expected expression in 'throw' statement
expected expression in 'yield' statement
expected '{' after 'defer'
expected ',' joining parts of a multi-clause condition
expected expression in conditional
expected '%0' in conditional
expected expression after '=' in conditional binding
variable binding in a condition requires an initializer
pattern matching binding is spelled with 'case %0', not '%0 case'
expected expression, var, or let in 'if' condition
missing condition in an 'if' statement
expected '{' after 'if' condition
expected '{' or 'if' after 'else'
expected '{' or 'if' after 'else'; did you mean to write 'if'?
unexpected 'else' immediately following 'if' condition
remove 'else' to execute the braced block of statements when the condition is true
expected expression, var, let or case in 'guard' condition
missing condition in an 'guard' statement
expected 'else' after 'guard' condition
expected '{' after 'guard' else
variable declared in 'guard' condition is not usable in its body
expected expression, var, or let in 'while' condition
missing condition in a 'while' statement
expected '{' after 'while' condition
expected '{' after 'repeat'
expected 'while' after body of 'repeat' statement
expected expression in 'repeat-while' condition
'do-while' statement is not allowed; use 'repeat-while' instead
expected '{' after 'do'
expected '{' after 'catch' pattern
expected expression for 'where' guard of 'catch'
the 'do' keyword is used to specify a 'catch' region
C-style for statement has been removed in Swift 3
expected 'in' after for-each pattern
expected Sequence expression for for-each loop
expected '{' to start the body of for-each loop
expected expression in 'where' guard of 'for/in'
expected expression in 'switch' statement
expected '{' after 'switch' subject expression
expected '}' at end of 'switch' statement
'%0' label can only appear inside a 'switch' statement
all statements inside a switch must be covered by a 'case' or 'default'
additional 'case' blocks cannot appear after the 'default' block of a 'switch'
expected expression for 'where' guard of 'case'
expected ':' after '%0'
'default' cannot be used with a 'where' guard expression
%select{'case'|'default'}0 label in a 'switch' should have at least one executable statement
'try' cannot be used with '%0'
'try' must be placed on the %select{returned|thrown|yielded}0 expression
'try' must be placed on the initial value expression
expected expression
expected '%0' separator
unexpected '%0' separator
expected expression after operator
expected expression after unary operator
unary operator cannot be separated from its operand
expected operator name in operator reference
operator with postfix spacing cannot start a subexpression
expected member name following '.'
numeric value following '$' is too large
expected named member of numeric literal
'$' is not an identifier; use backticks to escape it
cannot declare entity named %0; the '$' prefix is reserved for implicitly-synthesized declarations
anonymous closure argument not contained in a closure
anonymous closure arguments cannot be used inside a closure that has explicit arguments
anonymous closure arguments cannot be used inside a closure that has explicit arguments; did you mean '%0'?
closure tuple parameter does not support destructuring
expected the name of a closure parameter
expected 'weak', 'unowned', or no specifier in capture list
expected name of in closure capture list
expected initializer for closure capture specifier
expected ']' at end of capture list
fields may only be captured by assigning to a specific name
expected closure result type after '->'
expected 'in' after the closure signature
unexpected tokens prior to 'in'
expected '}' at end of closure
braces here form a trailing closure separated from its callee by multiple newlines
callee is here
string literals in Swift are not preceded by an '@' sign
'.%0' is not a valid floating point literal; it must be written '0.%0'
#available may only be used as condition of an 'if', 'guard' or 'while' statement
an empty argument label is spelled with '_'
expected identifier after '.' expression
expected identifier or 'init' after super '.' expression
expected '.' or '[' after 'super'
using 'super' in a closure where 'self' is explicitly captured is not yet supported
'self' explicitly captured here
expected expression in list of expressions
expected expression in container literal
expected key expression in dictionary literal
expected value in dictionary literal
expected ':' in dictionary literal
expected ')' in expression list
expected ']' in expression list
expected ']' in container literal expression
expected argument list in object literal
'%select{|[}0#%1(...)%select{|#]}0' has been renamed to '#%2(...)'
use of unknown directive '#%0'
expected expression after '?' in ternary expression
expected ':' after '? ...' in ternary expression
expected expression after '? ... :' in ternary expression
expected type after 'is'
expected type after 'as'
extra tokens after interpolated string expression
interpolating multiple values will not form a tuple in Swift 5
insert parentheses to keep current behavior
labeled interpolations will not be ignored in Swift 5
remove %0 label to keep current behavior
expected '(' following '#keyPath'
expected property or type name within '#keyPath(...)'
expected ')' to complete '#keyPath' expression
expected expression path in Swift key path
expected '(' following '#selector'
expected expression naming a method within '#selector(...)'
expected expression naming a property within '#selector(...)'
expected ')' to complete '#selector' expression
expected argument label 'of:' within 'type(...)'
expected an expression within 'type(of: ...)'
expected ')' to complete 'type(of: ...)' expression
'.dynamicType' is deprecated. Use 'type(of: ...)' instead
#assert is an experimental feature that is currently disabled
expected '(' in #assert directive
expected ')' in #assert directive
expected a condition expression
expected a string literal
'=' has been replaced with ':' in attribute arguments
expected an attribute name
unknown attribute '%0'
unexpected '(' in attribute '%0'
duplicate %select{attribute|modifier}0
%select{attribute|modifier}0 already specified here
'%0' contradicts previous %select{attribute|modifier}2 '%1'
'infix' modifier is not required or allowed on func declarations
expected ']' or ',' in attribute list
attribute can only be applied to types, not declarations
attribute can only be applied to declarations, not types
expected '(' in '%0' %select{attribute|modifier}1
expected ')' in '%0' %select{attribute|modifier}1
expected ',' in '%0' %select{attribute|modifier}1
expected string literal in '%0' attribute
alignment value must be a positive integer literal
@_swift_native_objc_runtime_base class name must be an identifier
@_objcRuntimeName name must be an identifier
attribute '%0' can only be used in a non-local scope
@_projectedValueProperty name must be an identifier
expected 'set' as subject of '%0' modifier
'@%0' has been renamed to '@%1'
no attribute named '@%0'; did you mean '@%1'?
attribute '%0' is unsupported on target '%1'
expected platform name or '*' for '%0' attribute
'%0' attribute cannot be both unconditionally 'unavailable' and 'deprecated'
'%0' argument has already been specified
unknown platform '%0' for attribute '%1'
'renamed' argument of '%0' attribute must be an operator, identifier, or full function name, optionally prefixed by a type name
expected '%0' option such as 'unavailable', 'introduced', 'deprecated', 'obsoleted', 'message', or 'renamed'
expected ':' after '%1' in '%0' attribute
expected version number in '%0' attribute
expected 'introduced', 'deprecated', or 'obsoleted' in '%0' attribute for platform '%1'
expected version number with 'deprecated' in '%0' attribute for platform '%1'
'%0' cannot be used in '%1' attribute for platform '%2'
unexpected version number in '%0' attribute for non-specific platform '*'
expected '(' after 'convention' attribute
expected convention name identifier in 'convention' attribute
expected ')' after convention name for 'convention' attribute
expected ':' after 'witness_method' for 'convention' attribute
expected protocol name in 'witness_method' 'convention' attribute
missing ':' after selector piece in @objc attribute
expected ')' after name for @objc
expected name within parentheses of @objc attribute
expected ')' after function name for @_dynamicReplacement
expected a function name in @_dynamicReplacement(for:)
expected 'for' in '_dynamicReplacement' attribute
expected ':' after @_dynamicReplacement(for
expected ')' after function name for @_private
expected 'sourceFile' in '_private' attribute
expected a source file name in @_private(sourceFile:)
expected ':' after @_private(sourceFile
expected '(' after 'opened' attribute
known id for 'opened' attribute must be a UUID string
expected ')' after id value for 'opened' attribute
expected '%0' option such as '%1'
unknown option '%0' for attribute '%1'
expected '%0' option (readnone, readonly, readwrite)
expected 'safe' or 'unsafe'
expected ')' after specifier for 'unowned'
'warn_unused_result' attribute behavior is now the default
expected ')' after 'warn_unused_result' attribute
@escaping conflicts with @noescape
missing ':' after %0 in '_specialize' attribute
missing ',' in '_specialize' attribute
unknown parameter %0 in '_specialize attribute'
expected a boolean true or false value in '_specialize' attribute
expected a parameter label or a where clause in '_specialize' attribute
parameter '%0' was already defined in '_specialize' attribute
expected 'partial' or 'full' as values of the 'kind' parameter in '_specialize' attribute
expected a member name as second parameter in '_implements' attribute
expected '>' to complete generic parameter list
expected an identifier to name generic parameter
'class' constraint can only appear on protocol declarations
did you mean to write an 'AnyObject' constraint?
expected a class type or protocol-constrained type restricting %0
use '==' for same-type requirements rather than '='
expected ':' or '==' to indicate a conformance or same-type requirement
redundant 'class' requirement
'class' must come first in the requirement list
'where' clause cannot be attached to %select{a non-generic|a protocol|an associated type}0 declaration
'where' clause next to generic parameters is obsolete, must be written following the declaration's type
expected '&&' or '||' expression
expected unary '!' expression
unexpected platform condition (expected 'os', 'arch', or 'swift')
expected only one argument to platform condition
unexpected argument for the '_runtime' condition; expected '_Native' or '_ObjC'
unexpected platform condition argument: expected %0
invalid conditional compilation expression
'%0' is not a valid conditional compilation expression, use '%1'
version component contains non-numeric characters
compiler version must not have more than five components
the second version component is not used for comparison
found empty version component
compiler version component out of range: must be in [0, %0]
version requirement is empty
unknown %0 for build configuration '%1'
'%0' has been renamed to '%1'
platform condition appears to be testing for simulator environment; use 'targetEnvironment(simulator)' instead
expected availability condition
expected platform name
expected version number
expected ')' in availability query
unrecognized platform name %0
'%0' cannot be used in an availability condition
'%0' can't be combined with shorthand specification '%1'
did you mean to specify an introduction version?
version comparison not needed
must handle potential future platforms with '*'
'%0' version-availability must be specified alone
Swift language version checks not allowed in #available(...)
PackageDescription version checks not allowed in #available(...)
version for '%0' already specified
unknown %0 syntax exists in the source
%0 %1 declared here
%0 declared here
%1 '%0' is implicitly declared
extended type declared here
opaque return type declared here
ambiguous reference to member %0
ambiguous reference to %0 %1
ambiguous subscript with base type %0 and index type %1
value of type %0 has no subscripts
value of tuple type %0 has no member %1
value of type %0 has no member %1
value of type %0 has no member %1; did you mean %2?
type %0 has no member %1
type %0 has no member %1; did you mean %2?
value of type %0 has no property or method named 'subscript'; did you mean to use the subscript operator?
enum type %0 has no case %1; did you mean %2
did you mean to specify a raw type on the enum declaration?
cast 'Any' to 'AnyObject' or use 'as!' to force downcast to a more specific type to access members
member %0 expects argument of type %1
member %0 is a function; did you mean to call it?
member %0 in %2 produces result of type %1, but context expects %2
enum case %0 has no associated values
%0 %1 is not a function
member %1 cannot be used on value of type %0
member %1 cannot be used on type %0
static member %1 cannot be used on instance of type %0
enum case %0 cannot be used as an instance member
static member %1 cannot be used on protocol metatype %0
instance member %1%select{| of type %2}3 cannot be used on%select{| instance of nested}3 type %0
member %1 cannot be used on value of protocol type %0; use a generic constraint instead
%0 is inaccessible due to '%select{private|fileprivate|internal|%error|%error}1' protection level
%0 initializer is inaccessible due to '%select{private|fileprivate|internal|%error|%error}1' protection level
cannot use mutating member on immutable value: %0
cannot use mutating member on immutable value of type %0
cannot use mutating getter on immutable value: %0
cannot use mutating getter on immutable value of type %0
the compiler is unable to type-check this expression in reasonable time; try breaking up the expression into distinct sub-expressions
value of type %0 cannot be compared by reference; did you mean to compare by value?
type %0 is not optional, value can never be nil
expression pattern of type %0 cannot match values of type %1
pattern cannot match values of type %0
cannot check reference equality of functions; operands here have types %1 and %2
binary operator '%0' cannot be applied to operands of type %1 and %2
binary operator '%0' cannot be applied to two %1 operands
unary operator '%0' cannot be applied to an operand of type %1
cannot pass immutable value to mutating operator: %0
cannot pass immutable value of type %0 to mutating operator
left side of mutating operator isn't mutable: %0
left side of mutating operator has immutable type %0
cannot subscript a value of type %0 with an argument of type %1
cannot subscript a value of type %0
cannot subscript a value of incorrect or ambiguous type
cannot subscript a nil literal value
cannot pass immutable value as inout argument: %0
inout argument could be set to a value with a type other than %0; use a value declared as type %1 instead
change variable type to %1 if it doesn't need to be declared as %0
cannot pass immutable value of type %0 as inout argument
cannot provide default value to inout parameter %0
cannot assign to a literal value
cannot invoke %select{|initializer for type }1'%0' with no arguments
cannot invoke %select{|initializer for type }2'%0' with an argument list of type '%1'
Pointer conversion restricted: use '.assumingMemoryBound(to:)' or '.bindMemory(to:capacity:)' to view memory as a type.
cannot call value of non-function type %0
argument labels '%0' do not match any available overloads
no '%0' candidates produce the expected contextual result type %1
'%0' produces %1, not the expected contextual result type %2
cannot convert call result type %0 to expected type %1
cannot invoke closure expression with an argument list of type '%0'
cannot invoke closure of type %0 with an argument list of type '%1'
unable to infer closure type in the current context
unable to infer complex closure return type; add explicit type to disambiguate
declared closure result %0 is incompatible with contextual type %1
cannot invoke value of function type with argument list '%0'
cannot invoke value of type %0 with argument list '%1'
%select{expected an argument list|produces result}0 of type '%1'
overloads for '%1' exist with these %select{partially matching parameter lists|result types}0: %2
binary operator '%0' cannot be synthesized for enums with associated values
cannot convert value of type %0 to specified type %1
value of type %0 does not conform to specified type %1
'nil' cannot initialize specified type %0
cannot convert return expression of type %0 to return type %1
return expression of type %0 does not conform to %1
'nil' is incompatible with return type %0
thrown expression type %0 does not conform to 'Error'
thrown error code type %0 does not conform to 'Error'; construct an %1 instance
expected %0 yield value(s)
cannot infer concrete Error for thrown 'nil' value
cannot convert value of type %0 to raw type %1
cannot convert 'nil' to raw type %0
default argument value of type %0 cannot be converted to type %1
default argument value of type %0 does not conform to %1
nil default argument value cannot be converted to type %0
cannot convert value of type %0 to expected argument type %1
cannot convert value of type %0 (%1) to expected argument type %2 (%3)
argument type %0 does not conform to expected type %1
in argument type %0, %1 does not conform to expected type %2
'nil' is not compatible with expected argument type %0
cannot yield immutable value of type %0 as an inout yield
cannot yield immutable value of type %0 as an inout yield of type %1
cannot yield reference to storage of type %0 as an inout yield of type %1
cannot convert value of type %0 to expected yield type %1
yielded type %0 does not conform to expected type %1
nil is not compatible with expected yield type %0
cannot convert value of type %0 to closure result type %1
result value of type %0 does not conform to closure result type %1
'nil' is not compatible with closure result type %0
deinitializers cannot be accessed
cannot convert value of type %0 to expected element type %1
value of type %0 does not conform to expected element type %1
'nil' is not compatible with expected element type %0
cannot convert value of type %0 to expected dictionary key type %1
value of type %0 does not conform to expected dictionary key type %1
'nil' is not compatible with expected dictionary key type %0
cannot convert value of type %0 to expected dictionary value type %1
value of type %0 does not conform to expected dictionary value type %1
'nil' is not compatible with expected dictionary value type %0
cannot convert value of type %0 to type %1 in coercion
value of type %0 does not conform to %1 in coercion
'nil' is not compatible with type %0 in coercion
cannot assign value of type %0 to type %1
value of type %0 does not conform to %1 in assignment
'nil' cannot be assigned to type %0
cannot convert sequence element type %0 to expected type %1
sequence element type %0 does not conform to expected protocol %1
invalid conversion from throwing function of type %0 to non-throwing function type %1
invalid conversion from non-escaping function of type %0 to potentially escaping function type %1
'#keyPath' can only be used with the Objective-C runtime
result of key path is unused
argument of '#keyPath' refers to non-'@objc' property %0
argument of '#keyPath' refers to property %0 in %1 that depends on '@objc' inference deprecated in Swift 4
cannot refer to type member %0 within instance of type %1
key path cannot refer to generic type %0
%select{key path|dynamic key path member lookup}2 cannot refer to %0 %1
%select{key path|dynamic key path member lookup}1 cannot refer to %0, which has a mutating getter
%select{key path|dynamic key path member lookup}1 cannot refer to static member %0
empty key path does not refer to a property
an Objective-C key path cannot contain %select{BAD|subscript|BAD|BAD|optional-forcing|optional-chaining|BAD} components
an Objective-C key path cannot reference a declaration with a compound name
broken standard library: no 'KeyPath' type found
invalid component of Swift key path
a Swift key path must begin with a type
key path value type %0 cannot be converted to contextual type %1
key path must have at least one component
string interpolation can only appear inside a string literal
subscript index of type %0 in a key path must be Hashable
key path of type %0 cannot be applied to a base of type %1
the root type of a Swift key path cannot be 'AnyObject'
forming a writable keypath to property %0 that is read-only in this context is deprecated and will be removed in a future release
'#selector' can only be used with the Objective-C runtime
import the 'ObjectiveC' module to use '#selector'
argument of '#selector' does not refer to an '@objc' method, property, or initializer
argument of '#selector' cannot refer to %select{local|global}0 function %1
cannot reference %1 %2 as a property; remove '%select{getter|setter}0:'
argument of '#selector' cannot refer to %select{variable|parameter}0 %1
use 'getter:'%select{| or 'setter:'}0 to refer to the Objective-C getter%select{| or setter}0 of property %1%select{|, respectively}0
add '%select{getter|setter}0:' to reference the Objective-C %select{getter|setter}0 for %1
argument of '#selector(setter:)' refers to non-settable %0 %1
setter of %0 %1 is inaccessible
cannot use %0 as a selector because protocol %1 is not exposed to Objective-C
argument of '#selector' refers to %0 %1 that is not exposed to Objective-C
add '@objc' to expose this %0 to Objective-C
argument of '#selector' refers to %0 %1 in %2 that depends on '@objc' inference deprecated in Swift 4
string literal is not a valid Objective-C selector
no method declared with Objective-C selector %0
use of string literal for Objective-C selectors is deprecated; use '#selector' or explicitly construct a 'Selector'
use of string literal for Objective-C selectors is deprecated; use '#selector' instead
use '#selector' instead of explicitly constructing a 'Selector'
wrap the selector name in parentheses to suppress this warning
unexpected non-void return value in void function
no such module '%0'
could not find module '%0' for target '%1'; found: %2
did you forget to set an SDK using -sdk or SDKROOT?
use "xcrun swiftc" to select the default macOS SDK installed with Xcode
this file is part of module %0; ignoring import
file '%0' is part of module %1; ignoring import
opening import file for module %0: %1
failed to load module '%0'
malformed compiled module: %0
compiled module was created by a newer version of the compiler: %0
module compiled with Swift %0 cannot be imported by the Swift %1 compiler: %2
compiled module was created by an older version of the compiler; rebuild %0 and try again: %1
missing required module '%0'
missing required modules: %0
circular dependency between modules '%0' and %1
cannot load underlying module for %0
cannot load module '%0' as '%1'
module %0 was created for incompatible target %1: %2
compiling for %0 %1, but module %2 has a minimum deployment target of %0 %3: %4
fatal error encountered while reading from module '%0'; please file a bug report with your project and the crash log
compiling as Swift %0, with '%1' built as Swift %2 (this is supported but may expose additional compiler issues)
type member must not be named %0, since it would conflict with the 'foo.%1' expression
invalid redeclaration of %0
redeclaration of %0 is deprecated and will be an error in Swift 5
%0 previously declared here
%0 is ambiguous for type lookup in this context
%0 is not a member type of %1
%0 does not have a member type named %1; did you mean %2?
%0 %1 is not a member type of %2
ambiguous type name %0 in %1
no type named %0 in module %1
ambiguous type name %0 in module %1
%0 is not a %select{binary|prefix unary|postfix unary}1 operator
unsupported recursion for reference to %select{associated type|type alias}0 %1 of type %2
reference to invalid %select{associated type|type alias}0 %1 of type %2
missing whitespace between %0 and %1 operators
ambiguous missing whitespace between unary and binary operators
could be %select{binary|postfix}2 %0 and %select{prefix|binary}2 %1
unary operators must not be juxtaposed; parenthesize inner expression
use of unresolved %select{identifier|operator}1 %0
use of unresolved %select{identifier|operator}1 %0; did you mean '%2'?
%select{identifier|operator}0 '%1' contains possibly confused characters; did you mean to use '%2'?
use of undeclared type %0
use of undeclared type %0; did you mean to use '%1'?
did you mean the implicitly-synthesized %1 '%0'?
did you mean to use '%0'?
cannot use module %0 as a type
cannot deduce protocol for %0 literal
could not infer type of %0 literal
import %0 to use '%1' as the default %2 literal type
use of local variable %0 before its declaration
protocol %0 can only be used as a generic constraint because it has Self or associated type requirements
%select{%error|type|struct|class|enum|protocol|variable|function}0 %1 does not exist in module %2
%0 was imported as '%1', but is %select{%error|a type|a struct|a class|an enum|a protocol|a variable|a function}2
%0 %1 cannot be imported as '%2'
ambiguous name %0 in module %1
module %0 was not compiled for testing
module %0 was not compiled for private import
module %0 cannot be both exported and implementation-only
module %0 was not compiled with library evolution support; using it means binary compatibility for %1 can't be guaranteed
ambiguous operator declarations found for operator
found this matching operator declaration
operator redeclared
previous operator declaration here
operator implementation without matching operator declaration
unary operator implementation must have a 'prefix' or 'postfix' modifier
%select{prefix|postfix}0 unary operator missing '%select{prefix|postfix}0' modifier
%select{prefix|postfix}0 operator found here
operators must have one or two arguments
operator functions can only be declared at global or in type scope
operator %0 declared in type %1 must be 'static'
operator %0 declared in non-final class %1 must be 'final'
member operator %2%select{| of protocol %0}1 must have at least one argument of type %select{%0|'Self'}1
multiple precedence groups found
found this matching precedence group
unknown precedence group %0
cycle in higherThan relation: %0
precedence group cannot be given lower precedence than group in same module; make the other precedence group higher than this one instead
precedence group redeclared
previous precedence group declaration here
%1 is not %select{convertible to|a subtype of}0 %2
in cast from type %0 to %1
%0 is not convertible to %1; did you mean %0.boolValue
%0 is not convertible to %1, tuples have a different number of elements
tuple type %0 is not convertible to tuple %1
cannot force unwrap value of non-optional type %0
cannot use optional chaining on non-optional value of type %0
result values in '? :' expression have mismatching types %0 and %1
function value was used as a property; add () to call it
function %0 was used as a property; add () to call it
method %0 was used as a property; add () to call it
'init' is a member of the type; use assignment to initalize the value instead
'init' is a member of the type; use 'type(of: ...)' to initialize a new object of the same dynamic type
'super.init' cannot be called outside of an initializer
'%0' test is always true
'is' test is always true because %0 is a Core Foundation type
conditional cast from %0 to %1 always succeeds
forced cast of %0 to same type has no effect
forced cast from %0 to %1 always succeeds; did you mean to use 'as'?
forced cast from %0 to %1 %select{only unwraps optionals|only unwraps and bridges}3; did you mean to use '%2'%select{| with 'as'}3?
conditional downcast from %0 to %1 %select{does nothing|is equivalent to an implicit conversion to an optional %1|is a bridging conversion; did you mean to use 'as'?}2
checking a value with optional type %0 against dynamic type %1 succeeds whenever the value is non-nil; did you mean to use '!= nil'?
cast from %0 to unrelated type %1 always fails
did you mean to call %0 with '()'?
cannot downcast from %0 to a more optional type %1
optional chain has no effect, expression already produces %0
'?' must be followed by a call, member lookup, or subscript
%0 cannot appear in an expression
in call to operator %0
in call to function %0
in call to %0
in call to initializer
in initialization of parameter %0
function produces expected type %0; did you mean to call it with '()'?
value of optional type %0 must be unwrapped to a value of type %1
coalesce using '??' to provide a default when the optional value contains 'nil'
force-unwrap using '!' to abort execution if the optional value contains 'nil'
value inferred to be type %0 when initialized with an implicitly unwrapped value
short-circuit using 'guard' to exit this function early if the optional value contains 'nil'
value of optional type %0 must be unwrapped to refer to member %1 of wrapped base type %2
chain the optional using '?' to access member %0 only for non-'nil' base values
value of optional type %0 not unwrapped; did you mean to use 'try!' or chain with '?'?
%0 is not convertible to %1; did you mean to use 'as!' to force downcast?
%0 is not implicitly convertible to %1; did you mean to use 'as' to explicitly convert?
passing value of type %0 to an inout parameter requires explicit '&'
yielding mutable value of type %0 requires explicit '&'
use of extraneous '&'
'&' used with non-inout argument of type %0
'&' is not allowed passing array value as %0 argument
cannot pass an inout argument to a subscript; use 'withUnsafeMutablePointer' to explicitly convert argument to a pointer
cannot convert value %0 of type %1 to expected type %2, use %select{wrapper|wrapped value}3 instead
referencing %0 %1 requires %select{wrapper|wrapped value of type}2 %3
initializing from a metatype value must reference 'init' explicitly
extraneous argument label%select{|s}0 '%1' in %select{call|subscript}2
missing argument label%select{|s}0 '%1' in %select{call|subscript}2
incorrect argument label%select{|s}0 in %select{call|subscript}3 (have '%1', expected '%2')
argument %0 must precede argument %1
argument %0 must precede unnamed argument #%1
unnamed argument #%0 must precede argument %1
unnamed argument #%0 must precede unnamed argument #%1
use of %0 refers to %1 %2 rather than %3 %4 in %5 %6
use of %0 nearly matches %3 %4 in %5 %6 rather than %1 %2
instance member %1 cannot be used on type %0; did you mean to use a value of this type instead?
cannot use instance member %0 within property initializer; property initializers run before 'self' is available
cannot use instance member %0 as a default parameter
invalid initializer call with same type %0 as parameter
missing argument for parameter %0 in call
missing argument for parameter #%0 in call
extra argument %0 in call
extra argument in call
argument passed to call that takes no arguments
extra trailing closure passed in call
trailing closure passed to parameter of type %0 that does not accept a closure
%0 cannot be constructed because it has no accessible initializers
non-nominal type %0 does not support explicit initialization
generic parameter %0 could not be inferred
generic parameter %0 could not be inferred in cast to %1
%0 declared as parameter to type %1
explicitly specify the generic arguments to fix this issue
@dynamicCallable attribute requires %0 to have either a valid 'dynamicallyCall(withArguments:)' method or 'dynamicallyCall(withKeywordArguments:)' method
@dynamicCallable type %0 cannot be applied with keyword arguments; missing 'dynamicCall(withKeywordArguments:)' method
@dynamicMemberLookup attribute requires %0 to have a 'subscript(dynamicMember:)' method that accepts either 'ExpressibleByStringLiteral' or a keypath
String must not be indexed with %0, it has variable size elements
consider using an existing high level algorithm, str.startIndex.advanced(by: n), or a projection like str.utf8
a C function pointer can only be formed from a reference to a 'func' or a literal closure
a C function pointer cannot be formed from a method
a C function pointer cannot be formed from a reference to a generic function
a C function pointer cannot be formed from a %select{local function|closure}0 that captures %select{context|generic parameters|dynamic Self type|<<error>}1
add () to forward @autoclosure parameter
initializer requires a body
operators must be declared with 'func'
cannot declare a custom %0 '%1' operator
'%0' requires a function with an operator identifier
'%0' requires a function with one argument
'%select{nonmutating|mutating|__consuming}0' is only valid on methods
'%select{nonmutating|mutating|__consuming}0' isn't valid on methods in classes or class-bound protocols
%0 %1 cannot be used as an attribute
method must not be declared both %select{nonmutating|mutating|__consuming}0 and %select{nonmutating|mutating|__consuming}1
static functions must not be declared mutating
'modify' accessor cannot be %select{nonmutating|mutating}0 when the setter is %select{mutating|nonmutating}0
'@_transparent' attribute is not supported on declarations within protocols
'@_transparent' attribute is not supported on declarations within classes
only instance properties can be declared @IBOutlet
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' class type %1
@IBOutlet property cannot %select{have|be an array of}0 non-'@objc' protocol type %1
@IBOutlet property cannot %select{have|be an array of}0 non-object type %1
@IBOutlet attribute requires property to be mutable
@IBOutlet property has non-optional type %0
add '?' to form the optional type %0
add '!' to form an implicitly unwrapped optional
@IBDesignable can only be applied to classes and extensions of classes
only instance properties can be declared @%0
only instance methods can be declared @%0
methods declared @%0 must %select{|not }1return a value
@%0 methods must have %1 to %2 arguments
@%0 methods must have %2 argument%s2
@%0 methods must have at most %2 argument%s2
@%0 method cannot have selector %1 because it has special memory management behavior
change Swift name to %0
change Objective-C selector to %0
@unsafe_no_objc_tagged_pointer can only be applied to class protocols
@_swift_native_objc_runtime_base_not_on_root_class can only be applied to root classes
@_cdecl can only be applied to global functions
@_cdecl symbol name cannot be empty
raising errors from @_cdecl functions is not supported
only methods can be declared %0
%0 modifier cannot be used in protocols
protocol requirements implicitly have the same access as the protocol itself
'%select{private|fileprivate|internal|public|open}0(set)' modifier can only be applied to variables and subscripts
'%select{private|fileprivate|internal|public|%error}0(set)' modifier cannot be applied to %select{constants|read-only variables|read-only properties|read-only subscripts}1
%select{private|fileprivate|internal|public|%error}0 %select{variable|property|subscript}1 cannot have %select{%error|a fileprivate|an internal|a public|an open}2 setter
'%select{private|fileprivate|internal|public|open}0(set)' modifier is redundant for %select{a private|a fileprivate|an internal|a public|an open}2 %1
'%select{%error|fileprivate|internal|public|open}0' modifier conflicts with extension's default access of '%select{private|fileprivate|internal|public|%error}1'
'%select{%error|fileprivate|internal|public|%error}0' modifier is redundant for %1 declared in %select{a private (equivalent to fileprivate)|a fileprivate|an internal|a public|%error}2 extension
cannot declare %select{%error|a fileprivate|an internal|a public|an open}0 %1 in an extension with %select{private|fileprivate|internal|public|%error}2 requirements
extension of %select{private|fileprivate|internal|%error|%error}0 %1 cannot be declared %select{%error|fileprivate|internal|public|%error}2
extensions cannot use 'open' as their default access; use 'public'
only classes and overridable class members can be declared 'open'; use 'public'
attribute cannot be applied to declaration
'%0' attribute cannot be applied to this declaration
%0 modifier cannot be applied to this declaration
attribute does not apply to type
'optional' can only be applied to protocol members
'optional' can only be applied to members of an @objc protocol
'optional' requirements are an Objective-C compatibility feature; add '@objc'
'@objcMembers' attribute can only be applied to a class
'optional' cannot be applied to an initializer
protocol members can only be marked unavailable in an @objc protocol
stored property %0 requires an initial value%select{| or should be @NSManaged}1
stored properties %0 and %1 require initial values%select{| or should be @NSManaged}2
stored properties %0, %1, %select{and %2|%2, and others}3 require initial values%select{| or should be @NSManaged}4
%select{superclass|class}1 %0 requires all stored properties to have initial values%select{| or use @NSManaged}2
class %0 has no initializers
stored property %0 without initial value prevents synthesized initializers
stored properties %0 and %1 without initial values prevent synthesized initializers
stored properties %0, %1, %select{and %2|%2, and others}3 without initial values prevent synthesized initializers
standard library error: missing _unimplementedInitializer
standard library error: missing _undefined
reference to %0 %1 of %2 depends on '@objc' inference deprecated in Swift 4
default value inheritance via 'super' is only valid on the parameters of designated initializers
default value inheritance via 'super' can only be used when overriding a designated initializer
default value inheritance via 'super' requires that the corresponding parameter of the overridden designated initializer has a default value
corresponding parameter declared here
alignment value must be a power of two
enum case %0 without associated value cannot be 'indirect'
enum case in 'indirect' enum cannot also be 'indirect'
%0 has no effect without -enable-library-evolution
%0 has no effect on non-public enums
%select{ERROR|static|class}1 stored properties not supported%select{ in this context| in generic types| in classes| in protocol extensions}0%select{|; did you mean 'static'?}2
non-member observing properties require an initializer
global '%select{var|let}0' declaration requires an initializer expression%select{ or getter/setter specifier|}0
%select{ERROR|'static var'|'class var'|}0 declaration requires an initializer expression or getter/setter specifier
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
%select{%select{variable|constant}0|property}1 %select{should be declared %select{private|fileprivate|internal|%error|%error}5|should not be declared %select{in this context|fileprivate|internal|public|open}3}2 because its type %6 uses %select{a private|a fileprivate|an internal|%error|%error}5 type
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 should be '@usableFromInline' or public
type referenced from a stored property in a '@frozen' struct must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 must be '@usableFromInline' or public
type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 with inferred type %2 should be '@usableFromInline' or public
type referenced from a stored property with inferred type %2 in a '@frozen' struct must be '@usableFromInline' or public
%select{property|global variable}0 declaration does not bind any variables
assuming you mean '%0.%2'; did you mean '%1.%2' instead?
explicitly specify 'Optional' to silence this warning
use '%0.%1' instead
%select{private|fileprivate|nested|local}0 class %1 has an unstable name when archiving via 'NSCoding'
for new classes, use '@objc' to specify a unique, prefixed Objective-C runtime name
for compatibility with existing archives, use '@objc' to record the Swift 3 runtime name
type %0 cannot be nested in generic function %1
type %0 cannot be nested in closure in generic context
type %0 cannot be nested in protocol %1
type %0 cannot be nested in protocol extension of %1
protocol %0 cannot be nested inside another declaration
type alias %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type alias %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its underlying type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type referenced from the underlying type of a '@usableFromInline' type alias must be '@usableFromInline' or public
type referenced from the underlying type of a '@usableFromInline' type alias should be '@usableFromInline' or public
subscript %select{must be declared %select{private|fileprivate|internal|%error|%error}1|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
subscript %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{index|element type}3 uses %select{a private|a fileprivate|an internal|%error|%error}2 type
%select{index type|element type}0 of a '@usableFromInline' subscript must be '@usableFromInline' or public
%select{index type|element type}0 of a '@usableFromInline' subscript should be '@usableFromInline' or public
%select{function|method|initializer}4 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}2|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
%select{function|method|initializer}4 %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its %select{parameter|result}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
the %select{parameter|result}1 of a '@usableFromInline' %select{function|method|initializer}0 must be '@usableFromInline' or public
the %select{parameter|result}1 of a '@usableFromInline' %select{function|method|initializer}0 should be '@usableFromInline' or public
an 'opaque' type must specify only 'Any', 'AnyObject', protocols, and/or a base class
property definition has inferred type %0, involving the 'some' return type of another declaration
non-nominal type %0 cannot be extended
%0 modifier cannot be used with extensions that declare protocol conformances
cannot extend a metatype %0
constrained extension must be declared on the unspecialized generic type %0 with constraints specified by a 'where' clause
extensions must not contain stored properties
Remove '=' to make %0 a computed property
trailing 'where' clause for extension of non-generic type %0
extension of protocol %0 cannot have an inheritance clause
extension of a generic Objective-C class cannot access the class's generic parameters at runtime
generic parameter used here
add '@objc' to allow uses of 'self' within the function body
type %0 does not conform to protocol %1
'nil' cannot be used in context expecting type %0
use of '=' in a boolean context, did you mean '=='?
protocol type %0 cannot conform to %1 because only concrete types can conform to protocols
%0 cannot be used as a type conforming to protocol %1 because %1 has static requirements
protocol %0 is broken; cannot derive conformance for type %1
%0 requires that %1 inherit from %2
requirement specified as %0 : %1%2
%0 requires the types %1 and %2 be equivalent
%0 requires that %1 conform to %2
referencing %0 %1 on %2 requires that %3 conform to %4
%0 %1 requires that %2 conform to %3
return type of %0 %1 requires that %2 conform to %3
%0 %1 requires the types %2 and %3 be equivalent
referencing %0 %1 on %2 requires the types %3 and %4 be equivalent
%0 %1 requires that %2 inherit from %3
referencing %0 %1 on %2 requires that %3 inherit from %4
where %0 = %1
where %0 = %1, %2 = %3
requirement from conditional conformance of %0 to %1
candidate requires that %0 conform to %1 (requirement specified as %2 == %3%4)
candidate requires that the types %0 and %1 be equivalent (requirement specified as %2 == %3%4)
candidate requires that %1 inherit from %2 (requirement specified as %2 : %3%4)
requirement specified as %0 == %1%2
%0 requires that %1 be a class type
requirement specified as %0 : 'AnyObject'%2
non-class type %0 cannot conform to class protocol %1
Core Foundation class %0 cannot conform to @objc protocol %1 because Core Foundation types are not classes in Objective-C
class %0 cannot conform to @objc protocol %1 because the class is only visible via the Objective-C runtime
type %0 cannot conditionally conform to protocol %1 because the type uses the Objective-C generics model
type %0 cannot conditionally conform to @objc protocol %1 because Objective-C does not support conditional conformances
conformance of %select{class from generic context|generic class}0 %1 to @objc protocol %2 cannot be in an extension
conditional conformance of type %0 to protocol %1 does not imply conformance to inherited protocol %2
did you mean to explicitly state the conformance with different bounds?
did you mean to explicitly state the conformance with relaxed bounds?
did you mean to explicitly state the conformance with the same bounds?
did you mean to explicitly state the conformance like '%0where ...'?
type %0 cannot conform to protocol %1 because it has requirements that cannot be satisfied
type %0 cannot conform to protocol %1 (compiled with Swift %2) because it has requirements that could not be loaded in Swift %3
%0 requirement %1 cannot add constraint '%2%select{:|:| ==|:}3 %4' on 'Self'
%select{method|initializer}0 %1 has different argument labels from those required by protocol %2 (%3)
initializer requirement %0 can only be satisfied by a 'required' initializer in%select{| the definition of}1 non-final class %2
non-failable initializer requirement %0%select{| in Objective-C protocol}1 cannot be satisfied by a failable initializer ('init%select{?|!}1')
protocol %0 requirement %1 cannot be satisfied by a non-final class (%2) because it uses 'Self' in a non-parameter, non-result type position
%0 %1 in non-final class %2 cannot be used to satisfy requirement %3 %4 (in protocol %5) due to same-type requirement involving 'Self'
consider weakening the same-type requirement %0 == %1 to a superclass requirement
method %0 in non-final class %1 must return 'Self' to conform to protocol %2
method %0 in non-final class %1 cannot be implemented in a protocol extension because it returns 'Self' and has associated type requirements
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be declared %select{%error|fileprivate|internal|public|%error}3 because it matches a requirement in %select{private|fileprivate|internal|public|%error}4 protocol %5
%select{initializer %1|method %1|%select{|setter for }2property %1|subscript%select{| setter}2}0 must be as accessible as its enclosing type because it matches a requirement in protocol %5
%0 %1 must be declared %select{%error|fileprivate|internal|public|%error}2 because it matches a requirement in %select{%error|fileprivate|internal|public|%error}2 protocol %3
%0 %1 must be as accessible as its enclosing type because it matches a requirement in protocol %3
%0 %1 must be declared '@usableFromInline' because it matches a requirement in protocol %2
%0 %1 should be declared '@usableFromInline' because it matches a requirement in protocol %2
type %0 involving Objective-C type parameter%select{| %1}2 cannot be used for associated type %3 of protocol %4
mark the %0 as '%select{%error|fileprivate|internal|public|%error}1' to satisfy the requirement
move the %0 to another extension where it can be declared '%select{%error|%error|internal|public|%error}1' to satisfy the requirement
default type %0 for associated type %1 does not satisfy constraint %2: %3
associated type %0 has default type %1 written here
%select{protocol must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}4 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol cannot refine|protocol's 'where' clause cannot use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 protocol
%select{protocol should be declared %select{private|fileprivate|internal|%error|%error}1 because %select{it refines|its 'where' clause uses}2|%select{in this context|fileprivate|internal|public|%error}1 %select{protocol should not refine|protocol's 'where' clause should not use}2}0 %select{a private|a fileprivate|an internal|%error|%error}3 protocol
protocol %select{refined|used}0 by '@usableFromInline' protocol must be '@usableForInline' or public
protocol %select{refined|used}0 by '@usableFromInline' protocol should be '@usableForInline' or public
immutable property requirement must be declared as 'var' with a '{ get }' specifier
property in protocol must have explicit { get } or { get set } specifier
type %0 does not conform to inherited protocol %1
protocol requires %select{initializer %1|function %1|property %1|subscript}0 with type %2%select{|; do you want to add a stub?}3
do you want to add protocol stubs?
multiple matching %select{initializers named %1|functions named %1|properties named %1|subscript operators}0 with type %2
protocol requires nested type %0; do you want to add it?
default type %0 for associated type %1 (from protocol %2) does not %select{inherit from|conform to}4 %3
associated type in %select{a private|a fileprivate|an internal|a public|%error}0 protocol uses %select{a private|a fileprivate|an internal|%error|%error}1 type in its %select{default definition|requirement}2 
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol must be '@usableFromInline' or public
type referenced from a %select{default definition|requirement}0 of an associated type in a '@usableFromInline' protocol should be '@usableFromInline' or public
unable to infer associated type %0 for protocol %1
candidate would match and infer %0 = %1 if %1 %select{inherited from|conformed to}3 %2
candidate can not infer %0 = %1 because %1 is not a nominal type and so can't conform to %2
candidate can not infer %0 = %1 because %1 is not a class type and so can't inherit from %2
ambiguous inference of associated type %0: %1 vs. %2
matching requirement %0 to this declaration inferred associated type to %1
using associated type default %0
multiple matching types named %0
candidate exactly matches%0
rename to %0 to satisfy this requirement%1
candidate is not %select{an initializer|a function|a variable|a subscript}0
candidate has non-matching type %0%1
candidate would match if %0 %select{conformed to|subclassed|was the same type as}2 %1
candidate %select{type has|result type has|parameter type has|parameter types have|result and parameter types have}0 incorrect optionality%1
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than required by protocol %2
%select{type|result|parameter|parameters|result and parameters}0 of %1 %select{has|has|has|have|have|}0 different optionality than expected by protocol %2
candidate operates on %select{a type|an instance}0, not %select{an instance|a type}0 as required
candidate is %select{|prefix, |postfix, }1not %select{prefix|postfix}0 as required
candidate is marked '%select{nonmutating|mutating|__consuming}0' but protocol does not allow it
candidate is not settable, but protocol requires it
candidate is not 'rethrows', but protocol requires it
candidate throws, but protocol does not allow it
candidate is explicitly '@nonobjc'
possibly intended match
possibly intended match %0 does not %select{inherit from|conform to}2 %1
candidate references itself
%select{|class }0%1 declares conformance to protocol %2 here
%select{%0 inherits conformance to protocol %2 from superclass|%0 declares conformance to protocol %2|%0 implicitly conforms to protocol %2 (via conformance to %3)|%0 implicitly conforms to protocol %2}1 here
unavailable %0 %1 was used to satisfy a requirement of protocol %2
redundant conformance of %0 to protocol %1
conflicting conformance of %0 to protocol %1; there cannot be more than one conformance, even with different conditional bounds
conformance of %0 to protocol %1 was already stated in %select{the protocol's|the type's}2 module %3
conformance of %0 to protocol %1 conflicts with that stated in %select{the protocol's|the type's}2 module %3 and will be ignored; there cannot be more than one conformance, even with different conditional bounds
%0 %1 will not be used to satisfy the conformance to %2
%0 %1 nearly matches %select{defaulted|optional}2 requirement %3 of protocol %4
add '@objc' to provide an Objective-C entrypoint
move %0 to %select{an|another}1 extension to silence this warning
add '@nonobjc' to silence this %select{warning|error}0
make %0 %select{ERROR|private|private|non-public|non-public}1 to silence this warning
type conforming to 'StringInterpolationProtocol' does not implement a valid 'appendInterpolation' method
'appendInterpolation' method will never be used because it is static
'appendInterpolation' method does not return 'Void' or have a discardable result
'appendInterpolation' method is %select{private|fileprivate|internal|public|open}0, but %1 is %select{private|fileprivate|internal|public|open}2
associated type %0 can only be used with a concrete type or generic parameter base
type alias %0 can only be used with a concrete type or generic parameter base
protocol %0 refines itself
@objc protocol %0 cannot refine non-@objc protocol %1
constraint with subject type of 'Self' is not supported; consider adding requirement to protocol inheritance clause instead
non-protocol, non-class type %0 cannot be used within a protocol-constrained type
protocol-constrained type cannot contain class %0 because it already contains class %1
type %0 constrained to non-protocol, non-class type %1
use '%0 == %1' to require '%0' to be '%1'
type %0 in conformance requirement does not refer to a generic parameter or associated type
neither type in same-type constraint (%0 or %1) refers to a generic parameter or associated type
same-type requirement makes generic parameters %0 and %1 equivalent
same-type requirement makes generic parameter %0 non-generic
%0 %1 references itself
same-type constraint %0 == %1 is recursive
superclass constraint %0 : %1 is recursive
%select{associated type|generic parameter}0 %1 cannot be equal to both %2 and %3
same-type constraint type %0 does not conform to required protocol %1
generic signature requires types %0 and %1 to be the same
redundant conformance constraint %0: %1
conformance constraint %1: %2 %select{written here|implied here|inferred from type here}0
requirement involves recursion that is not currently supported
%select{generic parameter |protocol |}0%1 cannot be equal to both %2 and %3
redundant same-type constraint %0 == %1
same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
%select{generic parameter |protocol |}0%1 cannot be a subclass of both %2 and %3
redundant superclass constraint %0 : %1
superclass constraint %1 : %2 %select{written here|implied here|inferred from type here}0
%select{generic parameter |protocol |}0%1 has conflicting constraints %2 and %3
redundant constraint %0 : %1
constraint %1 : %2 %select{written here|implied here|inferred from type here}0
previous same-type constraint %1 == %2 %select{written here|implied here|inferred from type here}0
redeclaration of associated type %0 from protocol %1 is better expressed as a 'where' clause on the protocol
typealias overriding associated type %0 from protocol %1 is better expressed as same-type constraint on the protocol
associated type %0 is redundant with type %0 declared in inherited %1 %2
associated type %0 cannot be declared inside '@objc' protocol %1
%0 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
%0 %select{should be declared %select{private|fileprivate|internal|%error|%error}3|should not be declared %select{in this context|fileprivate|internal|public|open}2}1 because its generic %select{parameter|requirement}5 uses %select{a private|a fileprivate|an internal|%error|%error}3 type
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 must be '@usableFromInline' or public
type referenced from a generic %select{parameter|requirement}1 of a '@usableFromInline' %0 should be '@usableFromInline' or public
declaration %0 cannot override more than one superclass declaration
declaration %0 has different argument labels from any potential overrides
potential overridden %0 %1 here
overriding %select{|non-@objc }0declarations %select{in extensions|from extensions}0 is not supported
overridden declaration is here
add '@objc' to make this declaration overridable
overriding declaration requires an 'override' keyword
implicit override should be marked with 'override' or suppressed with '@_nonoverride'
%0 has already been overridden
%0 previously overridden here
cannot override %0 which has been marked unavailable
cannot override %0 which has been marked unavailable: %1
overriding %0 must be as available as declaration it overrides
overriding %0 for %1 must be as available as declaration it overrides
cannot override immutable 'let' property %0 with the getter of a 'var'
%select{|setter of }0overriding %1 must be as accessible as %select{its enclosing type|the declaration it overrides}2
overriding non-open %0 outside of its defining module
method does not override any method from its superclass
property does not override any property from its superclass
subscript does not override any subscript from its superclass
initializer does not override a designated initializer from its superclass
failable initializer %0 cannot override a non-failable initializer
non-failable initializer %0 overridden here
attempt to override property here
attempt to override subscript here
attempt to override convenience initializer here
type does not match superclass %0 with type %1
type does not match superclass initializer with %select{no arguments|argument %1|arguments %1}0
'override' can only be specified on class members
'@_nonoverride' can only be specified on class or protocol members
'override' cannot be combined with '@_nonoverride'
property %0 with type %1 cannot override a property with type %2
cannot override with a stored property %0
cannot observe read-only property %0; it can't change
cannot override mutable property with read-only property %0
argument labels for %select{method|initializer}0 %1 do not match those of overridden %select{method|initializer}0 %2
cannot override %0 property with %1 property
cannot override a Self return type with a non-Self return type
cannot override a non-dynamic class declaration from an extension
cannot override non-throwing %select{method|initializer}0 with throwing %select{method|initializer}0
overriding a throwing @objc %select{method|initializer}0 with a non-throwing %select{method|initializer}0 is not supported
cannot override %0 %select{parameter|index}1 of type %2 with non-optional type %3
cannot override %0 %select{result|element}1 type %2 with optional type %3
overriding %0 parameter of type %1 with implicitly unwrapped optional type %2
overriding %0 optional result type %1 with implicitly unwrapped optional type %2
remove '!' to make the parameter required
use '?' to make the result optional
add parentheses to silence this warning
cannot override mutable property %0 of type %1 with covariant type %2
cannot override mutable subscript of type %0 with covariant type %1
static declarations are already final
%0 cannot be declared both 'final' and 'open'
%select{'let' properties|members of 'final' classes|static declarations}0 are implicitly 'final'; use 'public' instead of 'open'
override of %0 %1 from extension of %2 depends on deprecated inference of '@objc'
duplicate inheritance from %0
redundant inheritance from 'AnyObject' and Swift 3 'class' keyword
inheritance from class-constrained protocol composition type %0
multiple inheritance from classes %0 and %1
inheritance from non-protocol, non-class type %0
inheritance from non-protocol type %0
superclass %0 must appear first in the inheritance clause
cannot inherit from non-open class %0 outside of its defining module
superclass is declared here
superclass %0 of open class must be open
inheritance from a final class %0
inheritance from a generic Objective-C class %0 must bind type parameters of %0 to specific concrete types
cannot inherit from class %0 because it has overridable members that could not be loaded
cannot inherit from class %0 (compiled with Swift %1) because it has overridable members that could not be loaded in Swift %2
cannot inherit from Core Foundation type %0
cannot inherit from class %0 because it is only visible via the Objective-C runtime
enum case in %select{a private|a fileprivate|an internal|a public|%error}0 enum uses %select{a private|a fileprivate|an internal|%error|%error}1 type
type of enum case in '@usableFromInline' enum must be '@usableFromInline' or public
type of enum case in '@usableFromInline' enum should be '@usableFromInline' or public
enums must not contain stored properties
multiple enum raw types %0 and %1
raw type %0 must appear first in the enum inheritance clause
raw type %0 is not expressible by a string, integer, or floating-point literal
RawRepresentable conformance cannot be synthesized because raw type %0 is not Equatable
%0 declares raw type %1, but does not conform to RawRepresentable and conformance could not be synthesized
%0 declares raw type %1, which implies RawRepresentable
enum %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
enum %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its raw type uses %select{a private|a fileprivate|an internal|%error|%error}2 type
type referenced from the raw type of a '@usableFromInline' enum must be '@usableFromInline' or public
type referenced from the raw type of a '@usableFromInline' enum should be '@usableFromInline' or public
an enum with no cases cannot declare a raw type
enum case cannot have a raw value if the enum does not have a raw type
enum with raw type cannot have cases with arguments
declared raw type %0 here
'@objc' enum must declare an integer raw type
'@objc' enum raw type %0 is not an integer type
enum case must declare a raw value when the preceding raw value is not an integer
enum cases require explicit raw values when the raw type is not expressible by integer or string literal
raw value for enum case is not unique
raw value previously used here
raw value auto-incremented from here
raw value implicitly auto-incremented from zero
construct %0 from unwrapped %1 value
cannot use %0 %1 %select{here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %3 has been imported as implementation-only
cannot use conformance of %0 to %1 %select{here|in an extension with public or '@usableFromInline' members|in an extension with conditional conformances}2; %3 has been imported as implementation-only
cannot use conformance of %0 to %1 in associated type %3 (inferred as %4); %2 has been imported as implementation-only
%0 inconsistently imported as implementation-only
imported as implementation-only here
'@_implementationOnly' can only be used on overrides
'@_implementationOnly' override must have the same type as the declaration it overrides (%0)
override of '@_implementationOnly' %0 should also be declared '@_implementationOnly'
override of %0 imported as implementation-only must be declared '@_implementationOnly'
implementation of %0 for non-final class cannot be automatically synthesized in extension because initializer requirement %1 can only be be satisfied by a 'required' initializer in the class definition
implementation of %0 cannot be automatically synthesized in an extension in a different file to the type
CaseIterable protocol is broken: unexpected requirement
RawRepresentable protocol is broken: unexpected requirement
Equatable protocol is broken: unexpected requirement
Hashable protocol is broken: unexpected requirement
Hashable protocol is broken: Hasher type not found
Error protocol is broken: unexpected requirement
Int type is broken: does not conform to Hashable
Int type is broken: does not conform to ExpressibleByIntegerLiteral
no overload of '==' for Int
CodingKey protocol is broken: unexpected requirement
Encodable protocol is broken: unexpected requirement
Decodable protocol is broken: unexpected requirement
CodingKey case %0 does not match any stored properties
cannot automatically synthesize %0 because %1 does not conform to %0
cannot automatically synthesize %0 because %1 does not have a matching CodingKey and does not have a default value
cannot automatically synthesize %0 because 'CodingKeys' is not an enum
cannot automatically synthesize %0 because 'CodingKeys' does not conform to CodingKey
cannot automatically synthesize %0 because superclass does not have a callable %1
cannot automatically synthesize %0 because implementation would need to call %1, which is not designated
cannot automatically synthesize %0 because implementation would need to call %1, which is inaccessible due to '%select{private|fileprivate|internal|%error|%error}2' protection level
cannot automatically synthesize %0 because implementation would need to call %1, which is failable
did you mean to override 'init(from:)'?
did you mean to override 'init(from:)' and 'encode(to:)'?
%select{global|local}0 function cannot return 'Self'
'Self' is only available in a protocol or as the result of a method in a class; did you mean '%0'?
covariant 'Self' type cannot be referenced from a stored property initializer
%0 may only be used on '%1' declarations
'%0' must not be used on variadic parameters
'%0' must not be used on subscript parameters
%0 overrides a 'final' %1
cannot override %0
only classes and class members may be marked with 'final'
'final' may only be applied to classes, properties, methods, and subscripts
'final' cannot be applied to accessors, it must be put on the %select{var|let|subscript}0
override of 'rethrows' %select{method|initializer}0 should also be 'rethrows'
'rethrows' function must take a throwing function argument
@autoclosure attribute only applies to function types
argument type of @autoclosure parameter must be '()'
@escaping attribute may only be used in function parameter position
closure is already escaping in optional type argument
@NSManaged only allowed on an instance property or method
@NSManaged not allowed on %select{computed|observing|addressed}0 properties
@NSManaged not allowed on a 'let' property
@NSManaged property cannot have an initial value
@NSManaged property cannot also be marked @NSCopying
@NSManaged method cannot have a body; it must be provided at runtime
@NSCopying may only be used on properties in classes
@NSCopying requires property to be mutable
@NSCopying is only valid on stored properties
@NSCopying is only valid with types that conform to the NSCopying protocol
%select{'UIApplicationMain'|'NSApplicationMain'}0 class must conform to the %select{'UIApplicationDelegate'|'NSApplicationDelegate'}0 protocol
generic %select{'UIApplicationMain'|'NSApplicationMain'}0 classes are not supported
%select{'UIApplicationMain'|'NSApplicationMain'}0 attribute can only apply to one class in a module
%select{'UIApplicationMain'|'NSApplicationMain'}0 attribute cannot be used in a module that contains top-level code
top-level code defined in this source file
'lazy' cannot be used on a let
'lazy' must not be used on a computed property
'lazy' must not be used on an already-lazy global
'lazy' isn't allowed on a protocol requirement
lazy properties must have an initializer
'lazy' cannot destructure an initializer
lazy is only valid for members of a struct or class
lazy properties must not have observers
lazy properties cannot be %0
@LLDBDebuggerSupport may only be used when debugger support is on
protocol %0 has no member %1
non-protocol type in @_implements attribute
containing type %0 does not conform to protocol %1
found this candidate
found candidate with type %0
standard library error: _MaxBuiltinFloatType is not properly defined
integer literal needs %1 bits, exceeding limit of %0 bits
module %0 has no member named %1
'super' members cannot be referenced in a root class
'init' can only refer to the initializers of 'self'%select{| or 'super'}0
initializer delegation can only occur within an initializer
initializer cannot both delegate ('self.init') and chain to a superclass initializer ('super.init')
previous %select{delegation|chaining}0 call is here
convenience initializer for %0 must delegate (with 'self.init') rather than chaining to a superclass initializer (with 'super.init')
designated initializer for %0 cannot delegate (with 'self.init'); did you mean this to be a convenience initializer?
delegation occurs here
must call a designated initializer of the superclass %0
a non-failable initializer cannot %select{delegate|chain}0 to failable initializer %1 written with 'init?'
force potentially-failing result with '!'
propagate the failure with 'init?'
a non-failable initializer cannot use 'try?' to %select{delegate|chain}0 to another initializer
force potentially-failing result with 'try!'
%select{initializer delegation ('self.init')|initializer chaining ('super.init')}0 cannot be nested in another %select{expression|statement}1
convenience initializer is declared here
designated initializer cannot be declared in an extension of %0; did you mean this to be a convenience initializer?
delegating initializers in %0 are not marked with 'convenience'
convenience initializer not allowed in non-class type %0
convenience initializers are not supported in extensions of CF types
constructing an object of class type %0 with a metatype value must use a 'required' initializer
selected %select{non-required|implicit}0 initializer %1
value of type %0 is a protocol; it cannot be instantiated
protocol type %0 cannot be instantiated
operator is not a known binary operator
adjacent operators are in non-associative precedence group %0
adjacent operators are in unordered precedence groups %0 and %1
broken standard library: missing builtin precedence group %0
'%select{try|try!|try?}0' cannot appear to the right of a non-assignment operator
'%select{try|try!|try?}0' following conditional operator does not cover everything to its right
'%select{try|try!|try?}0' following assignment operator does not cover everything to its right
type 'Bool' is broken
treating a forced downcast to %0 as optional will never produce 'nil'
use 'as?' to perform a conditional downcast to %0
add parentheses around the cast to silence this warning
conditional downcast to CoreFoundation type %0 will always succeed
did you mean to explicitly compare the CFTypeIDs of %0 and %1?
optional type %0 cannot be used as a boolean; test for '!= nil' instead
string interpolation requires the protocol 'ExpressibleByStringInterpolation' to be defined
protocol 'ExpressibleByStringInterpolation' is broken
object literal protocol is broken
'_' can only appear in a pattern or on the left side of an assignment
'&' can only appear immediately in a call argument list
heterogeneous collection literal could only be inferred to %0; add explicit type annotation if this is intentional
empty collection literal requires an explicit type
reference to member %0 cannot be resolved without a contextual type
cannot infer type for empty collection literal without a contextual type
'nil' requires a contextual type
type of expression is ambiguous without more context
expression type %0 is ambiguous without more context
failed to produce diagnostic for expression; please file a bug report
missing protocol %0
protocol 'ExpressibleByNilLiteral' is broken
protocol 'ExpressibleByArrayLiteral' is broken
protocol '_ExpressibleByBuiltinIntegerLiteral' is broken
protocol 'ExpressibleByIntegerLiteral' is broken
protocol '_ExpressibleByBuiltinFloatLiteral' is broken
protocol 'ExpressibleByFloatLiteral' is broken
protocol '_ExpressibleByBuiltinBooleanLiteral' is broken
protocol 'ExpressibleByBooleanLiteral' is broken
protocol '_ExpressibleByBuiltinUnicodeScalarLiteral' is broken
protocol 'ExpressibleByUnicodeScalarLiteral' is broken
protocol '_ExpressibleByBuiltinExtendedGraphemeClusterLiteral' is broken
protocol 'ExpressibleByExtendedGraphemeClusterLiteral' is broken
protocol '_ExpressibleByBuiltinStringLiteral' is broken
protocol 'ExpressibleByStringLiteral' is broken
dictionary of type %0 cannot be %select{used|initialized}1 with array literal
did you mean to use a dictionary literal instead?
use [:] to get an empty dictionary literal
ExpressibleByDictionaryLiteral protocol definition is broken
contextual type %0 cannot be used with dictionary literal
cannot explicitly specialize a generic function
cannot specialize a non-generic definition
cannot specialize non-generic type %0
generic type %0 specialized with %select{too many|too few}3 type parameters (got %2, but expected %1)
reference to generic type %0 requires arguments in <...>
Unsafe%0Pointer<Void> has been replaced by Unsafe%0RawPointer
ambiguous use of %0
ambiguous use of operator %0
%select{use an explicit argument label instead of a trailing closure|avoid using a trailing closure}0 to call %1
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation}0 is not allowed
partial application of %select{'mutating' method|'super.init' initializer chain|'self.init' initializer delegation}0 is not allowed; calling the function has undefined behavior and will be an error in future Swift versions
assigning a variable to itself
assigning a property to itself
reference to property %0 in closure requires explicit 'self.' to make capture semantics explicit
call to method %0 in closure requires explicit 'self.' to make capture semantics explicit
implicit use of 'self' in closure; use 'self.' to make capture semantics explicit
cannot capture %0 before it is declared
cannot capture %0, which would use %1 before it is declared
%0, declared here, captures %1
attempting to %select{access|modify}1 %0 within its own %select{getter|setter}1
access 'self' explicitly to silence this warning
attempting to store to property %0 within its own willSet, which is about to be overwritten by the new value
expected module member name after module name
expected member name or constructor call after type name
add arguments after the type to construct a value of the type
use '.self' to reference the type object
use of %0 treated as a reference to %1 in %2 %3
use 'self.' to silence this warning
use '%0' to reference the %1
use '%0' to reference the %1 in module %2
use of %0 as reference to %1 in %2 %3 will change in future versions of Swift to reference %4 in %5 %6 which comes via a conditional conformance
use '%0' to continue to reference the %1
referencing %0 as a function value is not implemented
'unsafeBitCast' from non-escaping function type %0 to escaping function type %1 is undefined; use 'withoutActuallyEscaping' to temporarily escape a function
'unsafeBitCast' from function type %0 to %1 changes @convention and is undefined; use an implicit conversion to change conventions
'unsafeBitCast' from %0 to %1 can be replaced with 'unsafeDowncast'
'unsafeBitCast' from %0 to %1 is unnecessary and can be removed
'unsafeBitCast' from %0 to %1 can be replaced with %2 initializer
'unsafeBitCast' from %0 to %1 changes pointee type and may lead to undefined behavior; use the 'withMemoryRebound' method on %0 to rebind the type of memory
'unsafeBitCast' from %0 to %1 gives a type to a raw pointer and may lead to undefined behavior
use the 'assumingMemoryBound' method if the pointer is known to point to an existing value or array of type %0 in memory
use the 'bindMemory' method to assign type %0 to uninitialized raw memory
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern:' initializer on %1
'unsafeBitCast' from %0 to %1 can be replaced with 'bitPattern' property on %0
'unsafeBitCast' from %0 to %1 can be replaced with %1 initializer
left side of nil coalescing operator '??' has non-optional type %0, so the right side is never used
comparing non-optional value of type %0 to 'nil' always returns %select{false|true}1
non-optional expression of type %0 used in a check for optionals
explicitly specified type %0 adds an additional level of optional to the initializer, making the optional check always succeed
pattern match introduces an implicit promotion from %0 to %1
expression implicitly coerced from %0 to %1
coercion of implicitly unwrappable value of type %0 to %1 does not unwrap optional
implicitly unwrapped %0 %1 declared here
%0 %1 with implicitly unwrapped result type is declared here
provide a default value to avoid this warning
force-unwrap the value to avoid this warning
explicitly cast to %0 with '%1' to silence this warning
string interpolation produces a debug description for %select{an optional|a function}0 value; did you mean to make this explicit?
use 'String(describing:)' to silence this warning
parameter %0 is implicitly non-escaping
generic parameters are always considered '@escaping'
passing non-escaping parameter %0 to function expecting an @escaping closure
converting non-escaping parameter %0 to generic parameter %1 may allow it to escape
assigning non-escaping parameter %0 to an @escaping closure
using non-escaping parameter %0 in a context expecting an @escaping closure
converting non-escaping value to %0 may allow it to escape
%0 declaration cannot close over value %1 defined in outer scope
'%0' cannot transfer control out of a defer statement
'defer' statement before end of scope always executes immediately; replace with 'do' statement to silence this warning
return invalid outside of a func
non-void function should return a value
only a failable initializer can return 'nil'
use 'init?' to make the initializer %0 failable
'nil' is the only return value permitted in an initializer
'if' condition is always true
'while' condition is always true
'guard' condition is always true, body is unreachable
closure expression is unused
expression resolves to an unused function
expression resolves to an unused %select{variable|property|subscript}0
result of call to %0 is unused
result of operator %0 is unused
result of call to %select{function|closure}0 returning %1 is unused
expression of type %0 is unused
result of %0 initializer is unused
result of 'try?' is unused
result of '#selector' is unused
%0 literal is unused
cannot assign to immutable expression of type %0
expression is not assignable: %0
cannot assign to value: %0
cannot assign to property: %0
cannot assign through subscript: %0
cannot assign through dynamic lookup property: %0
cannot assign through '!': %0
mark %select{method|accessor}0 'mutating' to make 'self' mutable
add explicit 'self.' to refer to mutable property of %0
'let' property %0 may not be initialized directly; use "self.init(...)" or "self = ..." instead
SequenceType protocol definition is broken
IteratorProtocol protocol definition is broken
label %0 cannot be reused on an inner statement
'break' is only allowed inside a loop, if, do, or switch
unlabeled 'break' is only allowed inside a loop or switch, a labeled break is required to exit an if or do
'continue' is only allowed inside a loop
'continue' cannot be used with %0 statements
use of unresolved label %0
use of unresolved label %0; did you mean %1?
no binary '~=' operator available for 'switch' statement
'fallthrough' is only allowed inside a switch
'fallthrough' without a following 'case' or 'default' block
'fallthrough' from a case which doesn't bind variable %0
unnecessary cast over raw value of %0
'%select{var|let}0' pattern binding must match previous '%select{var|let}1' pattern binding
pattern variable bound to type %0, expected type %1
pattern variable bound to type %0, fallthrough case bound to type %1
'@unknown' is only supported for catch-all cases ("case _")
'where' cannot be used with '@unknown'
'@unknown' cannot be applied to multiple patterns
'@unknown' can only be applied to the last case in a switch
'where' only applies to the second pattern match in this case
disambiguate by adding a line break between them if this is desired
duplicate the 'where' on both patterns to check both patterns
trailing closure requires parentheses for disambiguation in this context
property declares an opaque return type, but has no initializer expression from which to infer an underlying type
function declares an opaque return type, but has no return statements in its body from which to infer an underlying type
function declares an opaque return type, but the return statements in its body do not have matching underlying types
return statement has underlying type %0
function opaque return type was inferred as %0, which defines the opaque type in terms of itself
property declares an opaque return type, but cannot infer the underlying type from its initializer expression
type annotation missing in pattern
pattern matching requires an initializer value to match against
'%0' pattern has no effect; sub-pattern didn't bind any variables
pattern matching in a condition requires the 'case' keyword
pattern matching in a condition implicitly unwraps optionals
'is' keyword required to pattern match against type name
type annotation does not match contextual type %0
tuple pattern cannot match values of the non-tuple type %0
contextual closure type %0 expects %1 argument%s1, but %2 %select{were|was}3 used in closure body
contextual type for closure argument list expects %0 argument%s0, which cannot be implicitly ignored
closure tuple parameter %0 does not support destructuring
closure tuple parameter %0 does not support destructuring with implicit parameters
nested tuple parameter %0 of function %1 does not support destructuring
%0 %select{|%1 }3expects a single parameter of type %2
single parameter of type %0 is expected in call
pattern with associated values does not match enum case %0
remove associated values to make the pattern match
tuple pattern has the wrong length for tuple type %0
tuple pattern element label %0 must be %1
enum case '%0' not found in type %1
'?' pattern cannot match values of type %0
initializer for conditional binding must have Optional type, not %0
enum case '%0' is not a member of type %1
generic enum type %0 is ambiguous without explicit generic parameters when matching value of type %1
%select{variable|constant}2 %0 inferred to have type %1, which may be unexpected
%select{variable|constant}2 %0 inferred to have type %1, which is an enum with no cases
%select{variable|constant}2 %0 inferred to have type %1, which contains an enum with no cases
add an explicit type annotation to silence this warning
instance will be immediately deallocated because %select{variable|property}2 %0 is %1
a strong reference is required to prevent the instance from being deallocated
collection downcast in cast pattern is not implemented; use an explicit downcast to %0 instead
errors thrown from here are not handled
call can throw, but the error is not handled
call can throw, but it is not marked with 'try' and the error is not handled
error is not handled because the enclosing function is not declared 'throws'
call can throw, but the error is not handled; a function declared 'rethrows' may only throw if its parameter does
call can throw, but it is not marked with 'try' and the error is not handled; a function declared 'rethrows' may only throw if its parameter does
a function declared 'rethrows' may only throw if its parameter does
call is to 'rethrows' function, but argument function can throw
call is to 'rethrows' function, but a defaulted argument function can throw
call can throw, but it is executed in a non-throwing autoclosure
call can throw, but it is not marked with 'try' and it is executed in a non-throwing autoclosure
error is not handled because it is thrown in a non-throwing autoclosure
errors thrown from here are not handled because the enclosing catch is not exhaustive
call can throw, but the enclosing catch is not exhaustive
call can throw, but it is not marked with 'try' and the enclosing catch is not exhaustive
error is not handled because the enclosing catch is not exhaustive
call can throw, but errors cannot be thrown out of %0
errors cannot be thrown out of %0
operator can throw but expression is not marked with 'try'
interpolation can throw but is not marked with 'try'
call can throw but is not marked with 'try'
did you mean to use 'try'?
did you mean to handle error as optional value?
did you mean to disable error propagation?
no calls to throwing functions occur within 'try' expression
'catch' block is unreachable because no errors are thrown in 'do' block
value type %0 cannot have a stored property that recursively contains it
enum containing only recursive cases is impossible to instantiate
recursive enum %0 is not marked 'indirect'
value type %0 has infinite size
cycle beginning here: %0
recursive case here
broken standard library: cannot find %select{Array|Optional|ImplicitlyUnwrappedOptional|Dictionary|Error}0 type
broken standard library: cannot find %select{UnsafePointer|UnsafeMutablePointer}0 type
broken standard library: cannot find intrinsic operations on Optional<T>
broken standard library: cannot find intrinsic operations on UnsafeMutablePointer<T>
broken standard library: cannot find intrinsic operations on Array<T>
class %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}1|private or fileprivate}3|cannot be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|%error|%error}2|uses %select{a private|a fileprivate|an internal|%error|%error}2 type as a generic parameter}4
class %select{should be declared %select{private|fileprivate|internal|%error|%error}1|should not be declared %select{in this context|fileprivate|internal|public|open}1}0 because its superclass %select{is %select{private|fileprivate|internal|%error|%error}2|uses %select{a private|a fileprivate|an internal|%error|%error}2 type as a generic parameter}4
%select{type referenced from |}0the superclass of a '@usableFromInline' class must be '@usableFromInline' or public
%select{type referenced from |}0the superclass of a '@usableFromInline' class should be '@usableFromInline' or public
cannot use 'Protocol' with non-protocol type %0
cannot create a single-element tuple with an element label
cannot create a variadic tuple
cannot create a tuple with a duplicate element label
variadic enum cases are not supported
using '!' is not allowed here; treating this as '?' instead
using '!' here is deprecated and will be removed in a future release
using '!' is not allowed here; perhaps '?' was intended?
%0 may only be applied to class and class-bound protocol types, not %1
%0 must not be applied to non-class-bound %1; consider adding a protocol conformance that has a class bound
%0 variable cannot have optional type
%0 variable should have optional type %1
%0 must be a mutable variable, because it may change at runtime
%0 cannot be applied to a property declaration in a protocol
%0 should not be applied to a property declaration in a protocol and will be disallowed in future versions
'required' initializer in non-class type %0
'required' initializer must be declared directly in class %0 (not in an extension)
'required' initializer %0 must be provided by subclass of %1
'required' initializer is declared in superclass here
'required' initializer must be accessible wherever class %0 can be subclassed
'required' modifier must be present on all overrides of a required initializer
use the 'required' modifier to override a required initializer
'override' is implied when overriding a required initializer
overridden required initializer is here
@%0 attribute only applies to function types
convention '%0' not supported
generic parameter '%0' is not used in function signature
'some' types are only implemented for the declared type of properties and subscripts and the return type of functions
'some' type can only be declared on a single property declaration
'some' type cannot be the return type of a protocol requirement; did you mean to add an associated type?
@opened cannot be applied to non-protocol type %0
SIL function types cannot be variadic
SIL function types cannot have labeled inputs
SIL function types cannot have labeled results
non-coroutine SIL function types cannot have @yield results
repeated %select{parameter|result|callee}0 convention attribute
SIL function types cannot have multiple @error results
convention '%0' not supported in SIL
type %0 is not a legal SIL value type
SIL box type has wrong number of generic arguments for layout
metatypes in SIL must have @thin, @thick, or @objc_metatype attribute
metatypes in SIL can only be one of @thin, @thick, or @objc_metatype
Objective-C interoperability is disabled
%0 attribute used without importing module %1
@objc can only be used with members of classes, @objc protocols, and concrete extensions of classes
only classes (and their extensions), protocols, methods, initializers, properties, and subscript declarations can be declared @objc
only classes that inherit from NSObject can be declared @objc
only class members and extensions of classes can be declared @nonobjc
only extensions of classes can be declared @nonobjc
members of constrained extensions cannot be declared @objc
extensions of %select{classes from generic context|generic classes}0 cannot contain '@objc' members
'@objc' %0 in extension of subclass of %1 requires %2 %3
operator methods cannot be declared @objc
@objc protocols must not have operator requirements
inference of '@objc' for 'dynamic' members is deprecated
inference of '@objc' for members of Objective-C-derived classes is deprecated
add '@objc' to continue exposing an Objective-C entry point (Swift 3 behavior)
add '@nonobjc' to suppress the Objective-C entry point (Swift 4 behavior)
generic subclasses of '@objc' classes cannot have an explicit '@objc' because they are not directly visible from Objective-C
explicit '@objc' on subclass of %0 requires %1 %2
'@objc' getter for non-'@objc' property
'@objc' getter for non-'@objc' subscript
'@objc' setter for non-'@objc' property
'@objc' setter for non-'@objc' subscript
%select{%0 %1|%1}2 with '@objc' %select{getter|setter}3 depends on deprecated inference of '@objc'
'@objc' enum cannot be generic
'@objc' %0 must have a simple name
'@objc' subscript cannot have a name; did you mean to put the name on the getter or setter?
'@objc' deinitializer cannot have a name
'@objc' %select{initializer|method}0 name provides %select{one argument name|names for %1 arguments}2, but %select{initializer|method}0 has %select{one parameter|%3 parameters}4%select{| (%select{|including }4the error parameter)}5
attribute has no effect; cases within an '@objc' enum are already exposed to Objective-C
'@objc' enum case is not allowed outside of an '@objc' enum
'@objc' enum case declaration defines multiple enum cases with the same Objective-C name
'@objc' can only be applied to an extension of a class
'@%0' attribute is meaningless on a property that cannot be represented in Objective-C
property cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its type cannot be represented in Objective-C
subscript cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its type cannot be represented in Objective-C
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}1
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it has generic parameters
%0 is not representable in Objective-C, so it cannot be used with '@convention(%1)'
when calling this function in Swift 4 or later, you must pass a '()' tuple; did you mean for the input type to be '()'?
'Any' is not considered '@objc'; use 'AnyObject' instead
protocol-constrained type containing protocol %0 cannot be represented in Objective-C
protocol-constrained type containing class %0 cannot be represented in Objective-C
protocol-constrained type containing 'Error' cannot be represented in Objective-C
empty tuple type cannot be represented in Objective-C
tuples cannot be represented in Objective-C
classes not annotated with @objc cannot be represented in Objective-C
Swift structs cannot be represented in Objective-C
non-'@objc' enums cannot be represented in Objective-C
generic type parameters cannot be represented in Objective-C
function types cannot be represented in Objective-C unless their parameters and returns can be
throwing function types cannot be represented in Objective-C
inferring '@objc' because the declaration is a member of an '@objc' protocol
overriding '@objc' %select{property|subscript|initializer|method}0 %1 here
satisfying requirement for %0 %1 in protocol %2
use of %0 %1 to satisfy a requirement of protocol %2 depends on '@objc' inference deprecated in Swift 4
unable to resolve type for _opaqueReturnTypeOf attribute
observing accessors are not allowed to be marked @objc
addressors are not allowed to be marked @objc
'read' and 'modify' accessors are not allowed to be marked @objc
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it has a variadic parameter
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because inout parameters cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}1 because the type of the parameter %0 cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because the type of the parameter cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because its result type cannot be represented in Objective-C
method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because Core Foundation types are not classes in Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it returns a value of optional type %1; 'nil' indicates failure to Objective-C
throwing method cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because it returns a value of type %1; return 'Void' or a type that bridges to an Objective-C class
a failable and throwing initializer cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0 because 'nil' indicates failure to Objective-C
%0 cannot be %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}1 because class %2 is only visible via the Objective-C runtime
Objective-C method has a different selector from the method it overrides (%0 vs. %1)
Objective-C property has a different name from the property it overrides (%0 vs. %1)
ambiguous inference of Objective-C name for %0 %1 (%2 vs %3)
%0 (in protocol %1) provides Objective-C name %2
conformance of %0 to %1 can only be written in module %2
_BridgedToObjectiveC protocol is broken
missing '%select{_forceBridgeFromObjectiveC|_conditionallyBridgeFromObjectiveC}0'
missing _bridgeNSError
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 declared here
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %2 conflicts with previous declaration with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 with Objective-C selector %4 conflicts with %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 from superclass %5 with the same Objective-C selector
%select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 defines Objective-C class method %2, which is not permitted by Swift
Objective-C method %2 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not match the requirement's selector (%3)
Objective-C method %4 provided by %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 conflicts with optional requirement %select{initializer %3|implicit initializer %3|deinitializer|implicit deinitializer|method %3|getter for %3|subscript getter|setter for %3|subscript setter}2 in protocol %5
rename %select{method|initializer|property|subscript}0 to match requirement %1
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{initializer %1|implicit initializer %1|deinitializer|implicit deinitializer|method %1|getter for %1|subscript getter|setter for %1|subscript setter}0 does not satisfy optional requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy requirement of '@objc' protocol %2
non-'@objc' %select{property %1|subscript}0 does not satisfy optional requirement of '@objc' protocol %2
declaration is %select{marked @_cdecl|marked dynamic|marked @objc|marked @IBOutlet|marked @IBAction|marked @IBSegueAction|marked @NSManaged|a member of an @objc protocol|implicitly @objc|an @objc override|an implementation of an @objc requirement|marked @IBInspectable|marked @GKInspectable|in an @objc extension of a class (without @nonobjc)}0, and cannot be marked @nonobjc
%0 cannot be '@_borrowed' if it is '@objc dynamic'
%0 cannot be '@_borrowed' if it is an @objc protocol requirement
a declaration cannot be both '@_tranparent' and 'dynamic'
marking non-'@objc' Swift declaration 'dynamic' in library evolution mode is not supported
replaced accessor %0's type does not match
replaced accessor for %0 is not marked dynamic
replaced accessor %select{get|set|_read|_modify|willSet|didSet|unsafeAddress|addressWithOwner|addressWithNativeOwner|unsafeMutableAddress|mutableAddressWithOwner|}0 for %1 is not explicitly defined
replaced function %0 is not marked dynamic
replaced function %0 could not be found
replaced accessor for %0 could not be found
replaced accessor for %0 occurs in multiple places
candidate accessor found in module %0
replaced function %0 of type %1 could not be found
found function %0 of type %1
dynamicReplacement(for:) of %0 is not defined in an extension or at the file level
dynamicReplacement(for:) of %0 must not be dynamic itself
%0 is not marked @objc dynamic
%0 is marked @objc dynamic
replaced constructor %0 is marked as convenience
replaced constructor %0 is not marked as convenience
%select{getter for |setter for |}0%1 is unavailable%select{ in %3|}2
%select{getter for |setter for |}0%1 has been %select{renamed to|replaced by}2%select{| instance method| property}3 '%4'
%select{getter for |setter for |}0%1 has been %select{renamed to|replaced by}2%select{| instance method| property}3 '%4': %5
%select{getter for |setter for |}0%1 is unavailable%select{ in %3|}2: %4
%select{getter for |setter for |}0%1 has been explicitly marked unavailable here
%select{getter for |setter for |}0%1 was introduced in %2 %3
%select{getter for |setter for |}0%1 was obsoleted in %2 %3
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2: %6
%select{getter for |setter for |}0%1 %select{is|%select{is|was}4}2 deprecated%select{| in %3%select{| %5}4}2: %select{renamed to|replaced by}6%select{| instance method| property}7 '%8'
use '%0' instead
declaration cannot be more available than enclosing scope
enclosing scope here
%0 is only available in %1 %2 or newer
'some' return types are only available in %0 %1 or newer
add 'if #available' version check
add @available attribute to enclosing %0
%select{getter|setter}0 for %1 is only available in %2 %3 or newer
cannot pass as inout because %select{getter|setter}0 for %1 is only available in %2 %3 or newer
condition required for target platform '%0'
unnecessary check for '%0'; enclosing scope ensures guard will always be true
global variable cannot be marked potentially unavailable with '@available' in script mode
stored properties cannot be marked potentially unavailable with '@available'
protocol %0 requires %1 to be available in %2 %3 and newer
protocol requirement here
public declarations should have an availability attribute with -require-explicit-availability
subscripts returning String were obsoleted in Swift 4; explicitly construct a String from subscripted result
@discardableResult declared on a function returning %select{Never|Void}0 is unnecessary
'@_fixed_layout' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
'@frozen' attribute is now used for fixed-layout structs
'@frozen' attribute can only be applied to '@usableFromInline' or public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
'@usableFromInline' attribute can only be applied to internal declarations, but %0 is %select{private|fileprivate|%error|public|open}1
'@inlinable' declaration is already '@usableFromInline'
'@usableFromInline' attribute cannot be used in protocols
type %0 cannot be nested inside %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}1
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and cannot be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3
%select{%0|%0 for}4 %1 is %select{private|fileprivate|internal|%error|%error}2 and should not be referenced from %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}3
%0 %1 cannot be used in %select{a '@_transparent' function|an '@inlinable' function|an '@_alwaysEmitIntoClient' function|a default argument value|a property initializer in a '@frozen' type}2 because %3 was imported implementation-only
%select{%0|%0 for}2 %1 is not public
%select{%0|%0 for}2 %1 is not '@usableFromInline' or public
initializer for class %0 is '%select{@_transparent|@inlinable|@_alwaysEmitIntoClient|%error}1' and must delegate to another initializer
'%0' attribute cannot be applied to stored properties
'@inlinable' attribute cannot be applied to 'dynamic' declarations
'@inlinable' attribute can only be applied to public declarations, but %0 is %select{private|fileprivate|internal|%error|%error}1
deinitializer can only be '@inlinable' if the class is '@_fixed_layout'
trailing 'where' clause in '_specialize' attribute of non-generic function %0
missing 'where' clause in '_specialize' attribute
empty 'where' clause in '_specialize' attribute
Only concrete type same-type requirements are supported by '_specialize' attribute
Only requirements on generic parameters are supported by '_specialize' attribute
Only one concrete type should be used in the same-type requirement in '_specialize' attribute
Only conformances to nominal types are supported by '_specialize' attribute
Only conformances to protocol types are supported by '_specialize' attribute
%select{too many|too few}2 type parameters are specified in '_specialize' attribute (got %1, but expected %0)
Missing constraint for %0 in '_specialize' attribute
Only same-type and layout requirements are supported by '_specialize' attribute
value %0 was defined but never used; consider replacing with boolean test
setter argument %0 was never used, but the property was accessed
did you mean to use %0 instead of accessing the property's current value?
initialization of %select{variable|immutable value}1 %0 was never used; consider replacing with assignment to '_' or removing it
capture %0 was never used
%select{variable|immutable value}1 %0 was never used; consider replacing with '_' or removing it
immutable value %0 was never used; consider removing it
%select{variable|parameter}1 %0 was never mutated; consider %select{removing 'var' to make it|changing to 'let'}2 constant
%select{variable|parameter}1 %0 was written to, but never read
%0 %1 took %2ms to type-check (limit: %3ms)
closure took %0ms to type-check (limit: %1ms)
expression took %0ms to type-check (limit: %1ms)
'switch' statement body must have at least one 'case' or 'default' block; do you want to add a default case?
switch must be exhaustive
the compiler is unable to check that this switch is exhaustive in reasonable time
do you want to add %select{missing cases|a default clause}0?
handle unknown values using "@unknown default"
remove '@unknown' to handle remaining values
add missing case: '%0'
case is already handled by previous patterns; consider removing it
literal value is already handled by previous pattern; consider removing it
first occurrence of identical literal pattern is here
switch covers known cases, but %0 may have additional unknown values%select{|, possibly added in future versions}1
override of 'NSObject.hashValue' is deprecated; did you mean to override 'NSObject.hash'?
'NSObject.hashValue' is not overridable; did you mean to override 'NSObject.hash'?
'Hashable.hashValue' is deprecated as a protocol requirement; conform type %0 to 'Hashable' by implementing 'hash(into:)' instead
property wrapper type %0 does not contain a non-static property named %1
property wrapper type %0 has multiple non-static properties named %1
%0 parameter type (%1) must be the same as its 'wrappedValue' property type (%2) or an @autoclosure thereof
%0 cannot be failable
property wrapper type %0 has multiple initial-value initializers
property wrapper type %0 has multiple default-value initializers
%select{private|fileprivate|internal|public|open}0 %1 %2 cannot have more restrictive access than its enclosing property wrapper type %3 (which is %select{private|fileprivate|internal|public|open}4)
property wrapper type %0 has multiple enclosing-self subscripts %1
property wrapper attribute %0 can only be applied to a property
property wrapper type %0 declared here
multiple property wrappers are not supported
property wrappers are not yet supported on local properties
property wrappers are not yet supported in top-level code
property wrapper can only be applied to a 'var'
property wrapper cannot be applied to a computed property
property %0 with a wrapper cannot also be %select{lazy|@NSCopying|@NSManaged|weak|unowned|unmanaged}1
property wrapper can only apply to a single variable
%select{|non-static |non-static }1property %0 declared inside %select{a protocol|an extension|an enum}1 cannot have a wrapper
property %0 with attached wrapper cannot override another property
initialize the property wrapper type directly with '(...') on the attribute
property type %0 does not match that of the 'wrappedValue' property of its wrapper type %1
%select{%select{variable|constant}0|property}1 %select{must be declared %select{%select{private|fileprivate|internal|%error|%error}3|private or fileprivate}4|cannot be declared %select{in this context|fileprivate|internal|public|open}3}2 because its property wrapper type uses %select{a private|a fileprivate|an internal|%error|%error}5 type
property wrapper type referenced from a '@usableFromInline' %select{%select{variable|constant}0|property}1 must be '@usableFromInline' or public
property wrapper's `wrapperValue` property should be renamed to 'projectedValue'; use of 'wrapperValue' is deprecated
property wrapper's `init(initialValue:)` should be renamed to 'init(wrappedValue:)'; use of 'init(initialValue:)' is deprecated
could not find projection value property %0
closure containing a declaration cannot be used with function builder %0
closure containing control flow statement cannot be used with function builder %0
function builder attribute %0 can only be applied to a parameter, function, or computed property
function builder attribute %0 can only be applied to a %select{subscript|property|constant|variable}1 if it defines a getter
function builder attribute %0 can only be applied to a parameter of function type
function builder attribute %0 cannot be applied to an autoclosure parameter
only one function builder attribute can be attached to a %select{declaration|parameter}0
previous function builder specified here
function builder attributes cannot have arguments
could not build %select{C|Objective-C}0 module '%1'
bridging header '%0' does not exist
failed to import bridging header '%0'
failed to serialize bridging header; target may not be debuggable outside of its original project
failed to emit precompiled header '%0' for bridging header '%1'
too %select{few|many}0 parameters in swift_name attribute (expected %1; got %2)
while importing '%0'
swift_name cannot be used to define %select{static member|init}0 on protocol
swift_name cannot be used on a non-prototyped function declaration
inconsistent Swift name for Objective-C %select{method|property}0 '%1' in '%2' (%3 in '%4' vs. %5 in '%6')
imported declaration '%0' could not be mapped to '%1'
implicit import of bridging header '%0' via module %1 is deprecated and will be removed in a later version of Swift
ignoring '-ivfsoverlay' options provided to '-Xcc' in favor of '-vfsoverlay'
unable to find module '%0' for implicit conversion function '%0.%1'
unable to find implicit conversion function '%0.%1'
multiple definitions of implicit conversion function '%0.%1'
definition of implicit conversion function '%0.%1' is not a function
definition of implicit conversion function '%0.%1' is not of the correct type
cannot find definition of '_ObjectiveCBridgeable' protocol
broken definition of '_ObjectiveCBridgeable' protocol: missing %0
INTERNAL ERROR: invalid use of builtin: %0
could not find Objective-C bridge type for type %0; did you forget to import Foundation?
could not find 'pointee' property of pointer type %0
inout writeback to computed property %0 occurs in multiple arguments to call, introducing invalid aliasing
inout writeback through subscript occurs in multiple arguments to call, introducing invalid aliasing
concurrent writeback occurred here
inout arguments are not allowed to alias each other
previous aliasing argument
protocol conformance emission for generator coroutines is unimplemented
overlapping accesses to %0, but %select{initialization|read|modification|deinitialization}1 requires exclusive access; %select{consider copying to a local variable|consider calling MutableCollection.swapAt(_:_:)}2
overlapping accesses, but %select{initialization|read|modification|deinitialization}0 requires exclusive access; consider copying to a local variable
conflicting access is here
C function pointer signature %0 is not compatible with expected type %1
the type ObjectiveC.Selector is malformed
escaping closure captures 'inout' parameter %0
parameter %0 is declared 'inout'
escaping closure captures mutating 'self' parameter
escaping closure captures non-escaping parameter %0
escaping closure captures non-escaping value
captured here
captured indirectly by this call
passing a %select{|closure which captures a }1non-escaping function parameter %0 to a call to a non-escaping function parameter can allow re-entrant modification of a variable
%select{variable|constant}0 defined here
%select{variable|constant}1 '%0' used before being initialized
%select{variable|constant}1 '%0' passed by reference before being initialized
%select{variable|constant}1 '%0' captured by a closure before being initialized
%select{variable|constant}1 '%0' used in defer before being initialized
'self' captured by a closure before all members were initialized
address of %select{variable|constant}1 '%0' taken before it is initialized
property '%0' not initialized at super.init call
property '%0' not initialized at implicitly generated super.init call
'self' used in %select{method call|property access}1 %0 before %select{all stored properties are initialized|'super.init' call|'self.init' call}2
'self' used before all stored properties are initialized
'%0' not initialized
'%select{super|self}0.init' called multiple times in initializer
'%select{super|self}0.init' isn't called on all paths before returning from initializer
'self' used before 'super.init' call
'self' used before 'self.init' call
'self' used before 'self.init' call or assignment to 'self'
'self' used inside 'catch' block reachable from %select{super|self}0.init call
return from initializer before 'self.init' call or assignment to 'self'
return from initializer without initializing all stored properties
%select{variable|constant}1 '%0' used by function definition before being initialized
struct '%0' must be completely initialized before a member is stored to
immutable value '%0' may only be initialized once
initial value already provided in 'let' declaration
cannot mutate %select{property %0|subscript}1 of immutable value '%2'
mutating accessor for %select{property %0|subscript}1 may not be used on immutable value '%2'
mutating %select{method|operator}1 %0 may not be used on immutable value '%2'
immutable value '%0' must not be passed inout
immutable value '%0' must not be assigned to
initializer for struct %0 must use "self.init(...)" or "self = ..."%select{| on all paths}1 because %select{it is not in module %2|the struct was imported from C}3
use "self.init()" to initialize the struct with zero values
missing return in a %select{function|closure}1 expected to return %0
missing return in a %select{function|closure}1 expected to return %0; did you mean to return the last expression?
%select{function|closure}1 with uninhabited return type %0 is missing call to another never-returning function on all paths
'guard' body must not fall through, consider using a 'return' or 'throw' to exit the scope
will never be executed
'%0' is uninhabited, so this function body can never be executed
condition always evaluates to %select{false|true}0
a call to a never-returning function
code after '%select{return|break|continue|throw}0' will never be executed
%select{case|default}0 will never be executed
switch condition evaluates to a constant
all paths through this function will call itself
inlining 'transparent' functions forms circular loop
while inlining here
Cannot pre-specialize %0
Pre-specialized function %0 missing in SwiftOnoneSupport module
integer overflows when converted from %0 to %1
integer overflows when converted from %select{unsigned|signed}0 %1 to %select{unsigned|signed}2 %3
negative integer cannot be converted to unsigned type %0
negative integer '%1' overflows when stored into unsigned type %0
integer literal '%1' overflows when stored into %0
integer literal '%2' overflows when stored into %select{unsigned|signed}0 %1
integer literal overflows when stored into %0
arithmetic operation '%0 %1 %2' (on type %3) results in an overflow
arithmetic operation '%0 %1 %2' (on %select{unsigned|signed}3 %4-bit integer type) results in an overflow
division '%0 %1 %2' results in an overflow
division by zero
assumed non-negative value '%0' is negative
shift amount is greater than or equal to type size in bits
static report error
#assert condition not constant
could not fold operation
exceeded instruction limit: %0 when evaluating the expression at compile time
control flow loop found
integer overflow detected
trap detected
when called from here
expression not evaluable as constant here
addressof only works with purely physical lvalues; use `withUnsafePointer` or `withUnsafeBytes` unless you're implementing `withUnsafePointer` or `withUnsafeBytes`
addressof only works with borrowable in-memory rvalues; use `withUnsafePointer` or `withUnsafeBytes` unless you're implementing `withUnsafePointer` or `withUnsafeBytes`
invalid%select{| implicit}2 conversion: '%0' overflows %1
negative literal '%0' cannot be converted to %select{|unsigned }2%1
'%0' overflows to %select{|-}2inf during conversion to %1
'%0' underflows and loses precision during conversion to %1
'%0' loses precision during conversion to %1
'%0' overflows to %select{|-}1inf because its magnitude exceeds the limits of a float literal
'%1' is not exactly representable as %0; it becomes '%2'
accessor must yield before returning
accessor must not yield more than once
previous yield was here
accessor must yield on all paths before returning
missing yield when the condition is %select{false|true}0
missing yield in the %0 case
missing yield in %select{this|the nil|the non-nil}0 case
missing yield when error is %select{not |}0thrown
error loading LLVM target for triple '%0': %1
cannot initialize code generation passes for target
unimplemented IR generation feature %0
IR generation failure: %0
unable to find type '%0' to verify
type to verify '%0' is ambiguous
type to verify '%0' has unbound generic parameters
too few output file names specified
no swift input files for multi-threaded compilation
@_alignment is not supported on types with dynamic layout
@_alignment cannot decrease alignment below natural alignment of %0
@_alignment cannot increase alignment above maximum alignment of %0
no such SDK: '%0'
no arguments provided to '-frontend'
no such file or directory: '%0'
unsupported target OS: '%0'
unsupported target architecture: '%0'
unsupported option '%0' for target '%1'
argument '%0' is not allowed with '%1'
argument '%0' is not supported with optimization
option '%0' requires a sanitizer to be enabled. Use -sanitize= to enable a sanitizer
option '%0' is missing a required argument (%1)
cannot open file '%0' (%1)
cannot open file '%0' for diagnostics emission (%1)
error opening input file '%0' (%1)
clang importer creation failed
missing argument value for '%0', expected %1 argument(s)
unknown argument: '%0'
invalid value '%1' in '%0'
ignoring -num-threads argument; cannot multithread batch mode
unsupported argument '%1' to option '%0'
could not load the swift standard library
could not load %select{shared library|framework}0 '%1'
immediate mode is incompatible with -primary-file
no frontend action was selected
invalid source location string '%0'
-dump-scope-maps argument must be 'expanded' or a list of source locations
valid arguments to '-swift-version' are %0
this mode does not support emitting dependency files
this mode does not support emitting reference dependency files
this mode does not support emitting Objective-C headers
this mode does not support emitting the loaded module trace
this mode does not support emitting modules
this mode does not support emitting module documentation files
this mode does not support emitting module interface files
ignoring -emit-reference-dependencies (requires -primary-file)
module name "%0" is not a valid identifier%select{|; use -module-name flag to specify an alternate name}1
module name "%0" is reserved for the standard library%select{|; use -module-name flag to specify an alternate name}1
unable to load standard library for target '%0'
underlying Objective-C module %0 not found
unable to load supplementary output file map '%0': %1
supplementary output file map '%0' is missing an entry for '%1' (this likely indicates a compiler issue; please file a bug report)
REPL mode requires no input files
this mode requires a single input file
this mode requires at least one input file
this mode requires .sil for primary-file and only .sib for other inputs
an output filename was not specified for a mode which requires an output filename
the implicit output file '%0' is a directory; explicitly specify a filename using -o
if any output files are specified, they all must be
primary file '%0' was not found in file list '%1'
cannot have input files with file list
cannot have primary input files with primary file list
cannot have '%0' with '%1'
duplicate input file '%0'
variables currently must have an initial value when entered at the top level of the REPL
compiler is in code completion mode (benign diagnostic)
fatal error encountered while in -verify mode
error parsing input file '%0' (%1)
writing index unit file: %0
creating index directory: %0
writing index record file: %0
failed file status check: %0
index output filenames do not match input source files
wrong number of '%0' arguments (expected %1, got %2)
file ranges don't support multiple input files
file range is invalid
compiler was not built with support for collecting statistics
TBD generation is only supported when the whole module can be seen
symbol '%0' (%1) is in TBD file, but not in generated IR
symbol '%0' (%1) is in generated IR file, but not in TBD file
please file a radar or open a bug on bugs.swift.org with this code, and add -Xfrontend -validate-tbd-against-ir=none to squash the errors
invalid argument '-D%0'; did you provide a redundant '-D' in your build settings?
conditional compilation flags must be valid Swift identifiers (rather than '%0')
conditional compilation flags do not have values in Swift; they are either present or absent (rather than '%0')
%0 in '%1'
invalid argument '%0' to -debug-prefix-map; it must be of the form 'original=remapped'
invalid virtual overlay file '%0'
scoped imports are not yet supported in module interfaces
module interfaces are only supported with Swift language version 5 or later (currently using -swift-version %0)
module interfaces are only supported with -enable-library-evolution
error extracting version from module interface
unsupported version of module interface '%0': '%1'
error extracting flags from module interface
rebuilding module '%0' from interface '%1'
%select{compiled|cached|forwarding|prebuilt}0 module is out of date: '%1'
dependency is out of date: '%0'
dependency is missing: '%0'
unable to load compiled module '%0'
unable to load compiled module '%0': %1
error extracting dependencies from cached module '%0'
unknown value for SWIFT_FORCE_MODULE_LOADING variable: '%0'
parallel execution not supported; falling back to serial execution
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
%0 command failed due to signal %1 (use -v to see invocation)
%0 command failed with exit code %1 (use -v to see invocation)
unable to handle compilation, expected exactly one frontend job
expected a swift frontend command
cannot specify -o when generating multiple output files
-static may not be used with -emit-executable
unable to load output file map '%1': %0
no output file map specified
unable to make temporary file: %0
no input files
unexpected input file: %0
unknown target '%0'
using bridging headers with framework targets is unsupported
using bridging headers with module interfaces is unsupported
the flag '-i' is no longer required and has been removed; use '%0 input-filename'
unnecessary option '%0'; this is the default for '%1' with no input files
option '%0' is not supported by '%1'; did you mean to use '%2'?
ignoring -incremental (currently requires an output file map)
ignoring -incremental; output file map has no master dependencies entry ("%0" under "")
Swift requires a minimum deployment target of %0
Swift does not support the SDK '%0'
iOS %0 does not support 32-bit programs
unsupported '%select{-target|-target-variant}1' value '%0'; use 'ios-macabi' instead
filename "%0" used twice: '%1' and '%2'
filenames are used to distinguish private declarations with the same name
unable to determine when '%0' was last modified: %1
unable to load dependencies file "%0", disabling incremental mode
input file '%0' was modified during the build
conflicting options '%0' and '%1'
'%0' is not supported with '%1'
ignoring -embed-bitcode since no object file is being generated
ignoring -embed-bitcode-marker since no object file is being generated
ignoring '-verify-debug-info'; no debug info is being generated
no profdata file exists at '%0'
Emission of optimization records has been disabled, because it requires a single compiler invocation: consider enabling the -whole-module-optimization flag
ignoring '-enable-batch-mode' because '%0' was also specified
the option '-driver-use-filelists' is deprecated; use '-driver-filelist-threshold=0' instead
missing migration script from path '%0'
'%0' is not a valid name
given location is not valid
the given new name '%0' does not match the arity of the old name '%1'
the 'call' name usage cannot be used with a non-function-like name '%0'
cannot resolve location as name
given location does not belong to module '%0'
value decl '%0' has no declaration location
value decl '%0' is referenced out of range
selected range has more than one entry point
selected range contains %0 but not its target loop
given location is not on a default statement
cannot find enclosing switch statement
cannot find subject enum in the enclosing switch statement
no remaining cases to expand
the name at the given location cannot be renamed to '%0'
cannot find inserting position
%0 has generic signature change from %1 to %2
%0(%1) is now %2 representable
%0 has been removed%select{| (deprecated)}1
%0 has been moved to %1
%0 has been renamed to %1
%0 has %1 type change from %2 to %3
%0 changes from %1 to %2
%0 is now %1
%0 in a non-resilient type changes position from %1 to %2
%0 is added to a non-resilient type
%0 is %select{now|no longer}1 a stored property
%0 is %select{now|no longer}1 a non-final instance function
%0 has removed default argument from %1
%0 has removed %select{conformance to|inherited protocol}2 %1
%0 has added inherited protocol %1
%0 has added a conformance to an existing protocol %1
%0 has removed default type %1
%0 has been added as a protocol requirement
%0 has removed its super class %1
%0 has changed its super class from %1 to %2
%0 has been changed to a %1
%0 is %select{now|no longer}1 an optional requirement
%0 changes from %select{var|let}1 to %select{let|var}1
%0 is no longer open for subclassing
%0 has %select{removed|added}2 @escaping in %1
%0 has self access kind changing from %1 to %2
%0 has %1 changing from %2 to %3
%0 has type witness type for %1 changing from %2 to %3
%0 now requires %select{|no}1 new witness table entry
%0 is a new API without @available attribute
<not a diagnostic>
error
<<ERROR>>
digraph Dependencies {
 [label="
request_
 (cyclic dependency)
 (elided)
 (dependency not evaluated)
===CYCLE DETECTED===
unapplied
single
double
compound
file reference
image
 -- 
Concrete
Explicit
Inferred
Nested type match
Concrete type binding
Parent
Protocol requirement
Inferred protocol requirement
Requirement signature self
Superclass
Derived
Equivalent type
 (via 
 in 
 (abstract 
 `--
(cont'd)
 --> 
 where 
 == 
InheritedTypeRequest
_UnknownLayout
_Trivial
_TrivialAtMost
_NativeClass
_RefCountedObject
_NativeRefCountedObject
MangleLocalTypeDeclRequest
LastExtensionIncluded:
  nullptr
Lookup:
Foundation
AnyObject
UnderlyingTypeDeclsReferencedRequest
SelfBoundsFromWhereClauseRequest
InheritedDeclsReferencedRequest
parenthesized pattern
tuple pattern
pattern variable binding
'_' pattern
pattern type annotation
prefix 'is' pattern
expression pattern
'var' binding pattern
enum case matching pattern
optional .Some matching pattern
bool matching pattern
iOSApplicationExtension
tvOSApplicationExtension
watchOSApplicationExtension
OSXApplicationExtension
macCatalystApplicationExtension
NULL declaration!
getter
setter
willset
didset
addressor
mutableAddressor
read
modify
 for 
extension of 
declaration 
 (at 
 (in module '
resolving
While 
 requirement 
 in conformance 
structural
interface
contextual
@_specialize
(SIL generic parameter list)
RequirementRequest
While evaluating request 
Cycle detected:
<<error type>>
.Type
.Protocol
sil_box
__shared
__owned
some
 -> 
<null>
@autoclosure
@escaping
@thin
@thick
@convention
_none
_arm64e
macCatalyst
UIKitForMac
_ObjC
_Native
little
macOS
tvOS
watchOS
Linux
FreeBSD
Windows
Android
Cygwin
Haiku
<invalid loc>
line
Frontend.NumProcessFailures
Frontend.NumInstructionsExecuted
Frontend.MaxMallocUsage
AST.NumSourceBuffers
AST.NumSourceLines
AST.NumSourceLinesPerSecond
AST.NumLinkLibraries
AST.NumLoadedModules
AST.NumImportedExternalDefinitions
AST.NumTotalClangImportedEntities
AST.NumASTBytesAllocated
AST.NumDependencies
AST.NumReferencedTopLevelNames
AST.NumReferencedDynamicNames
AST.NumReferencedMemberNames
AST.NumDecls
AST.NumLocalTypeDecls
AST.NumObjCMethods
AST.NumInfixOperators
AST.NumPostfixOperators
AST.NumPrefixOperators
AST.NumPrecedenceGroups
AST.NumUsedConformances
AST.NumStoredPropertiesQueries
Parse.NumFunctionsParsed
Parse.NumIterableDeclContextParsed
Sema.NumConformancesDeserialized
Sema.NumConstraintScopes
Sema.NumLeafScopes
Sema.NumConstraintsConsideredForEdgeContraction
Sema.NumDeclsDeserialized
Sema.NumDeclsValidated
Sema.NumDeclsTypechecked
Sema.NumDeclsFinalized
Sema.NumFunctionsTypechecked
Sema.NumGenericSignatureBuilders
Sema.NumLazyGenericEnvironments
Sema.NumLazyGenericEnvironmentsLoaded
Sema.NumLazyRequirementSignatures
Sema.NumLazyRequirementSignaturesLoaded
Sema.NumLazyIterableDeclContexts
Sema.NominalTypeLookupDirectCount
Sema.NamedLazyMemberLoadSuccessCount
Sema.NamedLazyMemberLoadFailureCount
Sema.NumTypesDeserialized
Sema.NumTypesValidated
Sema.NumUnloadedLazyIterableDeclContexts
Sema.AccessLevelRequest
Sema.SetterAccessLevelRequest
Sema.DefaultAndMaxAccessLevelRequest
Sema.InheritedDeclsReferencedRequest
Sema.UnderlyingTypeDeclsReferencedRequest
Sema.SuperclassDeclRequest
Sema.ExtendedNominalRequest
Sema.SelfBoundsFromWhereClauseRequest
Sema.TypeDeclsFromWhereClauseRequest
Sema.CustomAttrNominalRequest
Sema.InheritedTypeRequest
Sema.SuperclassTypeRequest
Sema.EnumRawTypeRequest
Sema.OverriddenDeclsRequest
Sema.IsObjCRequest
Sema.IsDynamicRequest
Sema.RequirementRequest
Sema.USRGenerationRequest
Sema.DefaultTypeRequest
Sema.MangleLocalTypeDeclRequest
Sema.PropertyWrapperTypeInfoRequest
Sema.AttachedPropertyWrappersRequest
Sema.AttachedPropertyWrapperTypeRequest
Sema.PropertyWrapperBackingPropertyTypeRequest
Sema.PropertyWrapperBackingPropertyInfoRequest
Sema.AttachedFunctionBuilderRequest
Sema.FunctionBuilderTypeRequest
SILModule.NumSILGenFunctions
SILModule.NumSILGenVtables
SILModule.NumSILGenWitnessTables
SILModule.NumSILGenDefaultWitnessTables
SILModule.NumSILGenGlobalVariables
SILModule.NumSILOptFunctions
SILModule.NumSILOptVtables
SILModule.NumSILOptWitnessTables
SILModule.NumSILOptDefaultWitnessTables
SILModule.NumSILOptGlobalVariables
IRModule.NumIRGlobals
IRModule.NumIRFunctions
IRModule.NumIRAliases
IRModule.NumIRIFuncs
IRModule.NumIRNamedMetaData
IRModule.NumIRValueSymbols
IRModule.NumIRComdatSymbols
IRModule.NumIRBasicBlocks
IRModule.NumIRInsts
LLVM.NumLLVMBytesOutput
swift
Protocol
invalid
armv2
armv2a
armv3
armv3m
armv4
armv4t
armv5t
armv5te
armv5tej
5TEJ
armv6
armv6k
armv6t2
v6t2
armv6kz
v6kz
armv6-m
armv7-a
armv7ve
v7ve
armv7-r
armv7-m
armv7e-m
7E-M
v7em
armv8-a
armv8.1-a
8.1-A
v8.1a
armv8.2-a
8.2-A
v8.2a
armv8.3-a
8.3-A
v8.3a
armv8.4-a
8.4-A
v8.4a
armv8.5-a
8.5-A
v8.5a
armv8-r
armv8-m.base
8-M.Baseline
v8m.base
armv8-m.main
8-M.Mainline
v8m.main
iwmmxt
iwmmxt2
armv7s
armv7k
v5te
v6-m
v7-a
v7-r
v7-m
v7e-m
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8.5-a
v8-r
v8-m.base
v8-m.main
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
may only occur zero or one times!
must occur exactly one time!
: for the -
 option: 
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
string
 (default: 
*no default*
>...
' is invalid value for boolean argument! Try 0 or 1
General options
Generic Options
Display list of available options (-help-list-hidden for more)
help-list
Display list of all available options
help-list-hidden
help
Display available options (-help-hidden for more)
help-hidden
Display all available options
Print non-default options after command line parsing
print-options
Print all option values after command line parsing
print-all-options
version
Display the version of this program
= *cannot print option value*
LLVM (http://llvm.org/):
LLVM
 version 
8.0.0svn
Optimized build
(unknown)
  Default target: 
  Host CPU: 
OVERVIEW: 
USAGE: 
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
  This option category has no options.
Multiple errors
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
A file error occurred.
Error
Multiple errors:
LLVM ERROR: out of memory
LLVM ERROR: 
Execute graph viewer in the background. Creates tmp file litter.
view-background
%.2x
Enable statistics output from program (available with Asserts)
stats
Display statistics as json data
stats-json
Enable -time-passes memory tracking (this may be slow)
track-memory
filename
File to append -stats and -timer output to
info-output-file
powerpc64
powerpc64le
s390x
x86_64
ananas
cloudabi
darwin
dragonfly
freebsd
fuchsia
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
cuda
nvcl
amdhsa
elfiamcu
tvos
watchos
bridgeos
driverkit
mesa3d
contiki
amdpal
hermit
hurd
simulator
macabi
arm64
xscale
arm64_32
Color Options
Use colors in output (default=autodetect)
color
IO failure on output stream: 
x86_64-apple-darwin16.0
-darwin
.0.0
generic
i486
yonah
pentium-m
pentium3
pentium2
pentiumpro
goldmont-plus
goldmont
btver2
btver1
silvermont
penryn
core2
cannonlake
skylake-avx512
skylake
broadwell
haswell
ivybridge
sandybridge
westmere
nehalem
bonnell
bdver2
bdver3
bdver4
znver1
icelake-client
cascadelake
i386
nocona
pentium
amdfam10
bdver1
tremont
pentium-mmx
pentium4
prescott
athlon
athlon-xp
k8-sse3
icelake-server
k6-2
k6-3
geode
colors
PATH
Disable symbolizing crash backtraces.
disable-symbolication
cl::location(x) specified more than once!
llvm-symbolizer
AutoreleasingUnsafeMutablePointer
Array
Dictionary
Optional
Encodable
Decodable
Hashable
Comparable
Equatable
Sequence
IteratorProtocol
RawRepresentable
4459570639681560034
associatedtype
class
deinit
enum
extension
func
import
init
inout
operator
precedencegroup
protocol
struct
subscript
typealias
fileprivate
internal
private
public
static
defer
guard
repeat
else
while
return
break
continue
fallthrough
switch
case
default
where
catch
throw
false
rethrows
super
self
Self
true
throws
__FILE__
__LINE__
__COLUMN__
__FUNCTION__
__DSO_HANDLE__
#keyPath
#line
#selector
#file
#column
#function
#dsohandle
#assert
#sourceLocation
#warning
#error
#else
#elseif
#endif
#available
#fileLiteral
#imageLiteral
#colorLiteral
Token
Unknown
Decl
Expr
Stmt
Type
Pattern
UnknownDecl
UnknownExpr
UnknownStmt
UnknownType
UnknownPattern
CodeBlockItem
CodeBlockItemList
CodeBlock
InOutExpr
PoundColumnExpr
FunctionCallArgumentList
TupleElementList
ArrayElementList
DictionaryElementList
StringLiteralSegments
TryExpr
DeclNameArgument
DeclNameArgumentList
DeclNameArguments
IdentifierExpr
SuperRefExpr
NilLiteralExpr
DiscardAssignmentExpr
AssignmentExpr
SequenceExpr
ExprList
PoundLineExpr
PoundFileExpr
PoundFunctionExpr
PoundDsohandleExpr
SymbolicReferenceExpr
PrefixOperatorExpr
BinaryOperatorExpr
ArrowExpr
FloatLiteralExpr
TupleExpr
ArrayExpr
DictionaryExpr
FunctionCallArgument
TupleElement
ArrayElement
DictionaryElement
IntegerLiteralExpr
BooleanLiteralExpr
TernaryExpr
MemberAccessExpr
IsExpr
AsExpr
TypeExpr
ClosureCaptureItem
ClosureCaptureItemList
ClosureCaptureSignature
ClosureParam
ClosureParamList
ClosureSignature
ClosureExpr
UnresolvedPatternExpr
FunctionCallExpr
SubscriptExpr
OptionalChainingExpr
ForcedValueExpr
PostfixUnaryExpr
SpecializeExpr
StringSegment
ExpressionSegment
StringLiteralExpr
KeyPathExpr
KeyPathBaseExpr
ObjcNamePiece
ObjcName
ObjcKeyPathExpr
ObjcSelectorExpr
EditorPlaceholderExpr
ObjectLiteralExpr
TypeInitializerClause
TypealiasDecl
AssociatedtypeDecl
FunctionParameterList
ParameterClause
ReturnClause
FunctionSignature
IfConfigClause
IfConfigClauseList
IfConfigDecl
PoundErrorDecl
PoundWarningDecl
PoundSourceLocation
PoundSourceLocationArgs
DeclModifier
InheritedType
InheritedTypeList
TypeInheritanceClause
ClassDecl
StructDecl
ProtocolDecl
ExtensionDecl
MemberDeclBlock
MemberDeclList
MemberDeclListItem
SourceFile
InitializerClause
FunctionParameter
ModifierList
FunctionDecl
InitializerDecl
DeinitializerDecl
SubscriptDecl
AccessLevelModifier
AccessPathComponent
AccessPath
ImportDecl
AccessorParameter
AccessorDecl
AccessorList
AccessorBlock
PatternBinding
PatternBindingList
VariableDecl
EnumCaseElement
EnumCaseElementList
EnumCaseDecl
EnumDecl
OperatorDecl
IdentifierList
OperatorPrecedenceAndTypes
PrecedenceGroupDecl
PrecedenceGroupAttributeList
PrecedenceGroupRelation
PrecedenceGroupNameList
PrecedenceGroupNameElement
PrecedenceGroupAssignment
PrecedenceGroupAssociativity
TokenList
NonEmptyTokenList
CustomAttribute
Attribute
AttributeList
SpecializeAttributeSpecList
LabeledSpecializeEntry
NamedAttributeStringArgument
DeclName
ImplementsAttributeArguments
ObjCSelectorPiece
ObjCSelector
ContinueStmt
WhileStmt
DeferStmt
ExpressionStmt
SwitchCaseList
RepeatWhileStmt
GuardStmt
WhereClause
ForInStmt
SwitchStmt
CatchClauseList
DoStmt
ReturnStmt
YieldStmt
YieldList
FallthroughStmt
BreakStmt
CaseItemList
ConditionElement
AvailabilityCondition
MatchingPatternCondition
OptionalBindingCondition
ConditionElementList
DeclarationStmt
ThrowStmt
IfStmt
ElseIfContinuation
ElseBlock
SwitchCase
SwitchDefaultLabel
CaseItem
SwitchCaseLabel
CatchClause
PoundAssertStmt
GenericWhereClause
GenericRequirementList
SameTypeRequirement
GenericParameterList
GenericParameter
GenericParameterClause
ConformanceRequirement
SimpleTypeIdentifier
MemberTypeIdentifier
ClassRestrictionType
ArrayType
DictionaryType
MetatypeType
OptionalType
SomeType
ImplicitlyUnwrappedOptionalType
CompositionTypeElement
CompositionTypeElementList
CompositionType
TupleTypeElement
TupleTypeElementList
TupleType
FunctionType
AttributedType
GenericArgumentList
GenericArgument
GenericArgumentClause
TypeAnnotation
EnumCasePattern
IsTypePattern
OptionalPattern
IdentifierPattern
AsTypePattern
TuplePattern
WildcardPattern
TuplePatternElement
ExpressionPattern
TuplePatternElementList
ValueBindingPattern
AvailabilitySpecList
AvailabilityArgument
AvailabilityLabeledArgument
AvailabilityVersionRestriction
VersionTuple
(trivia 
space 
tab 
verticalTab 
formfeed 
newline 
carriageReturn 
carriageReturnLineFeed 
backtick 
lineComment 
blockComment 
docLineComment 
docBlockComment 
garbageText 
kw_associatedtype
kw_class
kw_deinit
kw_enum
kw_extension
kw_func
kw_import
kw_init
kw_inout
kw_let
kw_operator
kw_precedencegroup
kw_protocol
kw_struct
kw_subscript
kw_typealias
kw_var
kw_fileprivate
kw_internal
kw_private
kw_public
kw_static
kw_defer
kw_if
kw_guard
kw_do
kw_repeat
kw_else
kw_for
kw_in
kw_while
kw_return
kw_break
kw_continue
kw_fallthrough
kw_switch
kw_case
kw_default
kw_where
kw_catch
kw_throw
kw_as
kw_Any
kw_false
kw_is
kw_nil
kw_rethrows
kw_super
kw_self
kw_Self
kw_true
kw_try
kw_throws
kw___FILE__
kw___LINE__
kw___COLUMN__
kw___FUNCTION__
kw___DSO_HANDLE__
kw__
l_paren
r_paren
l_brace
r_brace
l_square
r_square
l_angle
r_angle
period
period_prefix
comma
ellipsis
colon
semi
equal
at_sign
pound
amp_prefix
arrow
backtick
backslash
exclaim_postfix
question_postfix
question_infix
string_quote
single_quote
multiline_string_quote
pound_keyPath
pound_line
pound_selector
pound_file
pound_column
pound_function
pound_dsohandle
pound_assert
pound_sourceLocation
pound_warning
pound_error
pound_if
pound_else
pound_elseif
pound_endif
pound_available
pound_fileLiteral
pound_imageLiteral
pound_colorLiteral
integer_literal
floating_literal
string_literal
unknown
identifier
oper_binary_unspaced
oper_binary_spaced
oper_postfix
oper_prefix
dollarident
contextual_keyword
raw_string_delimiter
string_segment
string_interpolation_anchor
kw_yield
kw_undef
kw_sil
kw_sil_stage
kw_sil_property
kw_sil_vtable
kw_sil_global
kw_sil_witness_table
kw_sil_default_witness_table
kw_sil_coverage_map
kw_sil_scope
sil_dollar
sil_exclamation
code_complete
sil_local_name
comment
NUM_TOKENS (unset)
 [missing] 
(text="
