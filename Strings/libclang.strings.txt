0000000000000000unsafe_unretaine
verySignalHandleCrashRecoverySig''''''''''''''''$$$$$$$$$$$$$$$$
partial_ordering
troying_delete_tdestroying_delet
st_app_extensionmaccatalyst_app_os_app_extensionwatchos_app_extetvos_app_extensimacos_app_extensios_app_extensio
0123456789abcdef
----------------,/\:. 
apinotesc
apinotes
-?:\,[]{}#&*!|>'"%@`
objc_runtime_namownership_returnns_inner_pointerobjc_returns_inne_load_hardeningspeculative_loadobjc_externally_pass_dynamic_objined_on_non_zeroos_returns_retairetained_on_zeroated_initializerobjc_designated_ssing_restrictedobjc_subclassing_safety_analysisno_thread_safetyneon_polyvector_objc_runtime_visinternal_linkagemin_vector_widthns_consumes_selfneon_vector_typeos_consumes_thispass_object_sizerns_not_retainedcf_returns_not_rrns_autoreleasedns_returns_autorns_returns_not_ros_returns_not_raudited_transfercf_audited_transreturns_retainedcf_returns_retaiunknown_transfercf_unknown_transns_returns_retaic_bridge_mutableobjc_bridge_mutac_bridge_relatedobjc_bridge_relac_requires_superobjc_requires_suer_with_type_tagpointer_with_typisibility_publiclto_visibility_p_member_50591731union_member_505precise_lifetimeobjc_precise_lif_indirect_resultswift_indirect_rtag_for_datatypetype_tag_for_datnever_instrumentxray_never_instrnt_with_type_tagargument_with_tyal_source_symbolexternal_source_ndependent_classobjc_independentlways_instrumentxray_always_instaarch64_vector_pdisable_tail_calenum_extensibiliiboutletcollectimig_server_routino_sanitize_memono_stack_protectobjc_method_famiobjc_nonlazy_claswift_error_resu_saved_registersno_caller_saved_trument_functionno_instrument_futransparent_uniono_sanitize_thresanitize_addressno_sanitize_addrno_address_safetlign_arg_pointerforce_align_arg_warn_unused_resuet_state_on_readconsumable_set_s_auto_cast_stateconsumable_auto_assert_shared_caassert_capabilitshared_capabilithared_capabilityacquire_shared_cgpu_waves_per_euamdgpu_waves_per_work_group_sizeamdgpu_flat_workacquire_capabilitry_acquire_sharneric_capabilityrelease_generic_requires_shared_exclusive_locks_quire_capabilitytry_acquire_capat_initializationrequire_constantrelease_shared_cuires_capabilityrequires_capabilreturn_typestaterelease_capabilid_locks_requiredshared_locks_reqcarries_dependennounroll_and_jam__launch_bounds_n_surface_type____device_builtinn_texture_type____cudart_builtinanalyzer_noreturshared_lock_funcve_lock_functionexclusive_lock_fassert_shared_lotin_surface_typedevice_builtin_stin_texture_typedevice_builtin_tt_exclusive_lockassert_exclusivetrylock_functionexclusive_tryloc_bridged_typedefswift_bridged_tyd_sub_group_sizeintel_reqd_sub_gopencl_unroll_hiswift_objc_membeobjc_complete_dereqd_work_group_work_group_size_shared_trylock_f
#pragma-messages
#warnings
CFString-literal
IndependentClass-attribute
NSObject-attribute
absolute-value
abstract-final-class
abstract-vbase-init
address
address-of-packed-member
address-of-temporary
aggregate-return
alloca-with-align-alignof
ambiguous-delete
ambiguous-ellipsis
ambiguous-macro
ambiguous-member-template
analyzer-incompatible-plugin
anonymous-pack-parens
apinotes
arc%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assign
argument-outside-rangearray-bounds
array-bounds-pointer-arithmetic
asm-ignored-qualifier
asm-operand-widths
assign-enum
assume
at-protocol
atimport-in-framework-header
atomic-alignment
atomic-implicit-seq-cst
atomic-memory-ordering
atomic-properties*atomic-property-with-user-defined-accessor
attribute-packed-for-bitfield
attributes
auto-disable-vptr-sanitizer
auto-import
auto-storage-class
auto-var-idavailability
backend-plugin
backslash-newline-escape
bad-function-cast
binary-literal
bind-to-temporary-copy
binding-in-condition
bitfield-constant-conversion
bitfield-enum-conversion
bitfield-width
bitwise-op-parentheses
block-capture-autoreleasing
bool-conversion
bool-conversions
braced-scalar-init
bridge-cast
builtin-macro-redefined
builtin-memcpy-chk-size
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-inline-namespace
c++11-long-long
c++11-narrowing
c++14-binary-literalc++14-compat
c++14-compat-pedantic
c++14-extensionsc++17-compat
c++17-compat-mangling
c++17-compat-pedantic
c++17-extensions
c++1y-extensionsc++1z-compat
c++1z-compat-mangling
c++1z-extensionsc++2a-compat
c++2a-compat-pedantic
c++2a-extensions
c++98-c++11-c++14-c++17-compat'c++98-c++11-c++14-c++17-compat-pedantic
c++98-c++11-c++14-compat!c++98-c++11-c++14-compat-pedantic
c++98-c++11-compat!c++98-c++11-compat-binary-literal
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy
c++98-compat-extra-semi%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c99-compat
c99-extensions#call-to-pure-virtual-from-ctor-dtor
cast-align
cast-calling-convention
cast-of-sel-type
cast-qual
cast-qual-unrelated
char-align
char-subscriptsclang-cl-pch
class-varargs
comma
comment
comments
compare-distinct-pointer-types
complex-component-init
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
coroutine%coroutine-missing-unhandled-exception
covered-switch-default
cstring-format-directive
ctor-dtor-privacy
cuda-compat
custom-atomic-properties
dangling
dangling-else
dangling-field
dangling-initializer-list
darwin-sdk-settings
date-time
dealloc-in-category
debug-compression-unavailable
declaration-after-statement
defaulted-function-deleted
delegating-ctor-cycles delete-abstract-non-virtual-dtor
delete-incomplete$delete-non-abstract-non-virtual-dtor
delete-non-virtual-dtor
deprecated
deprecated-attributes
deprecated-declarations!deprecated-dynamic-exception-spec
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-this-capture
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
dll-attribute-on-redeclaration%dllexport-explicit-instantiation-decl
dllimport-static-field-def
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
double-promotion
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
duplicate-protocol
dynamic-class-memaccess
dynamic-exception-spec
effc++
embedded-directive
empty-body
empty-decomposition
empty-init-stmt
empty-translation-unit
encode-typeendif-labelsenum-compare
enum-compare-switch
enum-conversion
enum-too-large
exceptions
exit-time-destructors
expansion-to-defined
experimental-isel
explicit-initialize-call
explicit-ownership-type
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semi
extra-semi-stmtextra-tokens
fallback
fixed-enum-extension
flag-enum
flexible-array-extensions
float-conversion
float-equal
float-overflow-conversion
float-zero-conversion
for-loop-analysis
format
format-extra-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-pedantic
format-security
format-y2k
format-zero-length
format=2
four-char-constants
frame-larger-than=%framework-include-private-from-public
function-def-in-objc-container
function-multiversion
future-compat
gcc-compat
global-constructors
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-auto-type
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-include-next
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
idiomatic-parentheses
ignored-attributes
ignored-optimization-argument
ignored-pragma-intrinsic
ignored-pragma-optimize
ignored-pragmas
ignored-qualifiers
implicit
implicit-atomic-properties*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-float-conversion
implicit-function-declarationimplicit-int
implicit-int-conversion
implicit-retain-self
implicitly-unsigned-literal
import&import-preprocessor-directive-pedantic
inaccessible-base
include-next-absolute-path
include-next-outside-header
incompatible-exception-spec#incompatible-function-pointer-types"incompatible-library-redeclaration
incompatible-ms-struct
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incompatible-property-type
incompatible-sysroot'incomplete-framework-module-declaration
incomplete-implementation
incomplete-module
incomplete-umbrella
inconsistent-dllimport(inconsistent-missing-destructor-override
inconsistent-missing-override
increment-bool
index-store
infinite-recursion
init-self
initializer-overrides
injected-class-name
inline
inline-asm
inline-new-delete"instantiation-after-specialization
int-conversion
int-conversions
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet&invalid-initializer-from-system-header
invalid-ios-deployment-target
invalid-noreturn
invalid-offsetof invalid-or-nonexistent-directory
invalid-partial-specialization
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
jump-seh-finally
keyword-compat
keyword-macro
knr-promoted-parameter
language-extension-token
large-by-value-copy
liblto
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
macro-redefined
main
main-return-type
malformed-warning-check
many-braces-around-scalar-init
max-unsigned-zero
memset-transposed-args
memsize-comparison
method-signatures
microsoft
microsoft-anon-tag
microsoft-cast
microsoft-charize
microsoft-comment-paste
microsoft-const-init
microsoft-cpp-macro"microsoft-default-arg-redefinition
microsoft-end-of-file microsoft-enum-forward-reference
microsoft-enum-value
microsoft-exception-spec
microsoft-exists#microsoft-explicit-constructor-call
microsoft-extra-qualification
microsoft-fixed-enum
microsoft-flexible-array
microsoft-goto
microsoft-inaccessible-base
microsoft-include
microsoft-mutable-reference
microsoft-pure-definition
microsoft-redeclare-static
microsoft-sealed
microsoft-template microsoft-union-member-reference
microsoft-unqualified-friend
microsoft-using-decl
microsoft-void-pseudo-dtor
mismatched-new-delete
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-declarations
missing-exception-spec
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noescape
missing-noreturn
missing-prototype-for-cc
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarationsmodule-build
module-conflict
module-file-config-mismatch
module-file-extension
module-import
module-import-in-extern-c"modules-ambiguous-internal-linkage
modules-import-nested-redundant
most
movemsvc-include
msvc-not-found
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
noderef
noexcept-type
non-gcc
non-literal-null-conversion'non-modular-include-in-framework-module
non-modular-include-in-module
non-pod-varargs
non-virtual-dtor
nonnull
nonportable-cfstrings
nonportable-include-path!nonportable-private-apinotes-path(nonportable-private-system-apinotes-path
nonportable-system-include-path!nonportable-vector-initialization
nontrivial-memaccess
nsconsumed-mismatch
nsreturns-mismatch
null-arithmetic
null-character
null-conversion
null-dereference
null-pointer-arithmetic
nullability
nullability-completeness"nullability-completeness-on-arrays
nullability-declspec
nullability-extension#nullability-inferred-on-nested-type
nullable-to-nonnull-conversion+objc-autosynthesis-property-ivar-name-match
objc-boxing
objc-circular-container
objc-cocoa-api
objc-designated-initializers
objc-flexible-array
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-literal-conversion
objc-macro-redefinition
objc-messaging-id
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls
objc-multiple-method-names"objc-noncopy-retain-block-property
objc-nonunified-exceptions#objc-property-assign-on-object-type
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis
objc-protocol-qualifiers"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-string-compare
objc-string-concatenation
objc-unsafe-perform-selector
objc-weak-compat
old-style-cast
old-style-definition
opencl-unsupported-rgba
openmp-clauses
openmp-loop-form
openmp-target
option-ignored!ordered-compare-function-pointers
out-of-line-declaration
out-of-scope-functionover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
override-module
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
partial-availability
pass
pass-analysis
pass-failed
pass-missed
pch-date-time
pedantic
pedantic-core-features
pessimizing-move
pointer-arith
pointer-bool-conversionpointer-sign
pointer-to-int-cast
pointer-type-mismatch potentially-evaluated-expression
pragma-clang-attribute
pragma-once-outside-header
pragma-pack
pragma-pack-suspicious-include#pragma-system-header-outside-header
pragmas&predefined-identifier-outside-function
private-extern
private-header
private-module
profile-instr-missing
profile-instr-out-of-date
profile-instr-unprofiled
property-access-dot-syntax
property-attribute-mismatch
protocol%protocol-property-synthesis-ambiguity
ptrauth-null-pointers
qualified-void-return-type"quoted-include-in-framework-header
range-loop-analysis
readonly-iboutlet-property
receiver-expr
receiver-forward-class
redeclared-class-member
redundant-decls
redundant-move
redundant-parens
register
reinterpret-base-class
remark-backend-plugin
reorder
requires-super-attribute
reserved-id-macro
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-std-move
return-std-move-in-c++11
return-type
return-type-c-linkage
sanitize-address
section
selector
selector-type-mismatch
self-assign
self-assign-field
self-assign-overloaded
self-move
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-allshadow-field
shadow-field-in-constructor$shadow-field-in-constructor-modified
shadow-ivar
shadow-uncaptured-local
shift-count-negative
shift-count-overflow
shift-negative-value
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
signed-enum-bitfield
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-div
sizeof-pointer-memaccess
slash-u-filename
sometimes-uninitialized
source-uses-openmp
spir-compat
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
stdlibcxx-not-found
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5
strict-prototypes
strict-selector-match
string-compare
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
super-class-method-mismatch
suspicious-bzero
suspicious-memaccess
swift-name-attribute
swift-newtype-attribute
switch
switch-bool
switch-default
switch-enum%sync-fetch-and-nand-semantics-changed
synth
tautological-compare
tautological-constant-compare&tautological-constant-in-range-compare*tautological-constant-out-of-range-compare
tautological-overlap-compare
tautological-pointer-compare
tautological-type-limit-compare
tautological-undefined-compare'tautological-unsigned-enum-zero-compare"tautological-unsigned-zero-compare$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-negative
thread-safety-precise
thread-safety-reference
thread-safety-verbose
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unable-to-open-stats-file
unavailable-declarations
undeclared-selector
undef
undefined-bool-conversion
undefined-func-template
undefined-inline
undefined-internal
undefined-internal-type
undefined-reinterpret-cast
undefined-var-template
underaligned-exception-object
unevaluated-expression
unguarded-availability
unguarded-availability-new
unicode
unicode-homoglyph
unicode-whitespace
unicode-zero-width
uninitialized
unknown-argument
unknown-attributes
unknown-escape-sequence
unknown-pragmas
unknown-sanitizers
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unreachable-code-aggressive
unreachable-code-break
unreachable-code-loop-increment
unreachable-code-return
unsequenced
unsupported-abs
unsupported-availability-guard
unsupported-cb#unsupported-dll-base-class-template
unsupported-friend
unsupported-gpopt
unsupported-nan
unsupported-target-opt
unsupported-visibility
unusable-partial-specialization
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-function
unused-getter-return-valueunused-label
unused-lambda-capture
unused-local-typedef
unused-local-typedefs
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-templateunused-value
unused-variable
unused-volatile-lvalue
used-but-marked-unused
user-defined-literals
user-defined-warnings
varargs
variadic-macros
vec-elem-size
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
void-ptr-dereference
volatile-register-var
weak-template-vtablesweak-vtables
writable-strings
write-strings
zero-as-null-pointer-constant
zero-length-array
__include_macrosStringWithFormatlocalizedStringW distribute simdteams distributetarget parallel ute parallel forarallel for simddistribute paraltarget teams discancellation poiend declare targget parallel fortarget exit datatarget enter datparallel for simparallel sectiondeclare reductioatomic_default_mdynamic_allocatoed_shared_memoryunified_shared_miency-cache-fragefficiency-cacheeger-sign-changeimplicit-integerteger-truncationinteger-overflowsigned-integer-oonnull-attributereturns-nonnull-unsigned-integernullability-assinullability-retucfi-unrelated-canonnull-attributshadow-call-stacr-divide-by-zerointeger-divide-bency-working-setefficiency-workifloat-divide-by-at-cast-overflowfloat-cast-overflicit-conversionimplicit-converskernel-hwaddresspointer-overflowcfi-derived-cast
  @@
nios2r2mandatoryexception-handlitrapping-fptointnontrapping-fptondirect-branchesretpoline-indireretpoline-externcore_aes_pclmulqcore_2_duo_sse4_atom_sse4_2_movbcore_2_duo_ssse3_iii_no_xmm_regspentium_iii_no_xcore_2nd_gen_avxcore_3rd_gen_avxcore_4th_gen_avxcore_5th_gen_avx
__builtin_va_lisX
module.private.mmodule_private.m
html-single-fileplist-multi-fileassembler-with-cline-directives-line-tables-only
.xctoolchain/usrandLineTools/usr/CommandLineTool/XcodeDefault.xc
module.modulemap
////////////////
iple_inheritance__multiple_inher__has_trivial_de__has_virtual_demove_constructor__has_trivial_monds_to_temporary__reference_bindlly_destructible__is_trivially_d__is_destructibl__is_literal_typ__underlying_typ__bridge_transfe__bridge_retaine_Null_unspecifie__builtin_aligno__unknown_anytyp__is_interface_c__has_nothrow_as__has_trivial_as__is_standard_laimage2d_array_msimage2d_msaa_dep__single_inheritow_constructible__is_nothrow_conr_object_pointer__is_member_objeray_msaa_depth_tthrow_assignable__is_nothrow_assivially_copyable__is_trivially_cin_convertvector__builtin_converRETTY_FUNCTION____PRETTY_FUNCTIOs_convertible_to__is_convertibles_floating_point__is_floating_pos_member_pointer__is_member_poinuiltin_available__builtin_availarow_destructible__is_nothrow_deshrow_move_assign__has_nothrow_mohrow_constructor__has_nothrow_covial_move_assignvial_constructor__has_trivial_coially_assignable__is_trivially_apes_compatible_p__builtin_types_ly_constructiblefunction_pointer__is_member_func__builtin_offset__is_constructib__is_complete_ty__private_extern__module_privateltin_choose_expr__builtin_chooselvalue_reference__is_lvalue_refervalue_reference__is_rvalue_refe2d_array_depth_timage2d_array_detual_inheritance__virtual_inherireinterpret_cast__builtin_va_arg__is_polymorphic__is_lvalue_expr__is_rvalue_expr__is_fundamental__builtin_astypeimage1d_buffer_timport_as_memberswift_infer_impoeclared_includesno_undeclared_in
condition_variabscoped_allocatorinitializer_listnsafe_unretained__unsafe_unretai
attribute_ns_conobjc_ivar_unusedattribute_objc_iunused_on_fieldsattribute_unuseddiagnose_if_objcattribute_diagnoafety_attributesc_thread_safety_bute_ns_consumedbute_cf_consumedattribute_cf_con_ext_vector_typeattribute_ext_veattribute_cf_retattribute_ns_retbility_driverkitattribute_availaability_bridgeoslability_watchosute_availabilityute_overloadableattribute_overlonalyzer_noreturnattribute_analyzvailability_tvoshavior_sanitizerundefined_behaviailability_swiftjc_method_familyattribute_objc_mddress_sanitizerhwaddress_sanitiaddress_sanitizeefficiency_sanitdataflow_sanitizptrauth_intrinsimemory_sanitizerthread_sanitizerlized_swift_namegeneralized_swifrator_attributesenumerator_attribility_on_arraysnullability_on_ah_indirect_gotosptrauth_indirectptrauth_qualifieobjc_instancetypalifier_manglingobjc_protocol_qu_explicit_atomicobjc_property_exc_nonfragile_abiobjc_nonfragile_alue_expressionsobjc_boxed_nsvaloxed_expressionsobjc_boxed_expreobjc_dictionary_c_array_literalsobjc_array_literobjc_subscriptine_id_on_typedefsobjc_bridge_id_o_cf_code_auditedarc_cf_code_audic_class_propertyobjc_class_propeonstant_literalsobjc_constant_lienerics_varianceobjc_generics_vac_generic_selectcxx_override_concxx_static_assercxx_strong_enumscxx_implicit_movzed_initializerscxx_generalized_pe_template_argscxx_local_type_tcxx_explicit_coneleted_functionscxx_deleted_funcnline_namespacescxx_inline_namesvalue_referencescxx_rvalue_refering_constructorscxx_delegating_ccxx_inheriting_caulted_functionscxx_defaulted_fu_string_literalscxx_raw_string_l_string_builtinscxx_constexpr_st_alias_templatescxx_alias_templas_control_sfinaecxx_access_contratic_member_initcxx_nonstatic_meriadic_templatescxx_variadic_temcxx_user_literalestricted_unionscxx_unrestrictedcxx_unicode_lite_trailing_returncxx_trailing_ret_aggregate_nsdmicxx_aggregate_ns_binary_literalscxx_binary_liter_generic_lambdascxx_generic_lambcxx_thread_localriable_templatescxx_variable_temn_type_deductioncxx_return_type_elaxed_constexprcxx_relaxed_conscxx_decltype_autcxx_init_capturehas_nothrow_copyhas_trivial_copyhas_nothrow_assihas_trivial_assitual_conversionscxx_contextual_cis_convertible_tis_constructibleivial_destructorhas_trivial_destrtual_destructorhas_virtual_desthas_nothrow_conshas_trivial_consis_trivially_assis_standard_layois_trivially_copis_trivially_conshadow_call_stacoadable_unmarkedoverloadable_unmype_pack_element__type_pack_elem__make_integer_s__is_target_vendiant_environment__is_target_variarget_variant_os__has_target_varrget_environment__is_target_envi__is_target_archllvm_fatal_error
_returns_retaineubclassing_restresignated_initiapeculative_load_bjc_returns_inneclang::no_threadamic_object_sizeass_dynamic_objeernally_retainedbjc_externally_rs_returns_not_ref_returns_not_reray_always_instrbjc_independent_xternal_source_srgument_with_typray_never_instrunion_member_5059ype_tag_for_datawift_indirect_reointer_with_typebjc_precise_lifeto_visibility_pu_runtime_visiblebjc_runtime_visi_polyvector_typeeon_polyvector_ts_returns_retainwift_error_resulig_server_routinboutletcollectionum_extensibilitisable_tail_callarch64_vector_pcequire_constant_mdgpu_flat_work_uires_shared_capease_generic_caponsumable_auto_celease_shared_cao_thread_safety_cquire_shared_canu::no_address_se_locks_requiredxclusive_locks_rssert_shared_capnu::no_caller_sary_acquire_capabnu::force_align_ift_indirect_resared_locks_requinu::no_instrumenequires_capabilimdgpu_waves_per_arn_unused_resulelease_capabilitrch64_vector_pcsnu::no_sanitize_ssert_capabilityo_sanitize_threaransparent_unionnu::transparent_:returns_nonnullnu::returns_nonnrries_dependency:carries_dependeo_address_safetyxclusive_trylockhread_safety_anaaller_saved_regintel_reqd_sub_grxternally_retainomplete_definitihared_trylock_fuorce_align_arg_pxclusive_lock_fuo_instrument_funssert_exclusive__group_size_hintork_group_size_hed_lock_functionhared_lock_functeqd_work_group_s_sanitize_addresencl_unroll_hintarries_dependencsert_shared_lockfied_inheritance__unspecified_in
erationWithBlockaddOperationWith
tObjectFromCoderreplacementObjecableCopyWithZonemutableCopyWithZ$
ATED_INITIALIZERNS_DESIGNATED_INF
objc_msgSendSupekeConstantString__CFStringMakeCo
interleave_countCONCEPT_REQUIRES
olor-diagnostics-fcolor-diagnostiagnostics-color-fdiagnostics-co-no-integrated-a
.textual.matchesrename.avoid.tex
llvm.embedded.mo
@@@@@@@@@@@@@@@@
respondsToSelect1
::::::::::::::::
StrictVTablePoin?terminate@@YAXX
llvm.metadata
mental_type_info__fundamental_ty
DISTRIB_CODENAMERed Hat EnterpriScientific Linux
full
local-exec
4096
mips1
mips2
mips32r2
mips32r3
mips32r5
mips32r6
mips3
mips4
mips5
mips64r2
mips64r3
mips64r5
mips64r6
hexagonv55
hexagonv5
hexagonv60
hexagonv62
hexagonv65
hexagonv66
no-invalid-source-encoding
invalid-source-encoding
everything
no-macro-redefined
no-sign-compare
no-unused-parameter
no-dllexport-explicit-instantiation-decl
no-deprecated-declarations
no-error
error
error=c++11-compat-deprecated-writable-strings
marker
mips32
mips64
-externc-isystem-internal-extern-internal-isyste-dwarf-debug-fla-iwithprefixbefo-diagnostic-log--header-include--compilation-dir-fdebug-compilat-dependency-file-diagnostic-file-serialize-diagn-index-store-patules-cache-path=-fmodules-cache-otes-cache-path=-fapinotes-cache
Xinline-8bit-coun
-analyzer-config-finclude-defaul-disable-llvm-op--fatal-warningse_cpusubtype_ALL-force_cpusubtyp-compress-debug---compress-debug-relocations=yes--mrelax-relocat--nocompress-deb-nocompress-debussp-buffer-size=
-fmodules-cache-path=
-lcompiler_rt-st/usr/lib/system/AppleTVSimulatorcorecrypto_sepro
-fxray-instrument
-fxray-instruction-threshold=
T_REMOVED_EXPR____IMPL_ARCMT_REM
dispatch_releaseA
kchk-strong-linkdarwin-stkchk-st
                PPPPPPPPPPPPPPPP````````````````pppppppppppppppp
stack-probe-size 
ect-tls-seg-refsindirect-tls-seg
#Z"C^
D#^-
e#Z-
#Z +
L#`-
L#\-
L#3-
L#--
L#&-
"5$#[
<F) 
<FB,
<F`,
<FQ,
<F",
<F=,
<F[,
<FL,
<FG,
<Fe,
<FV,
<F',
<F) 
`$^.
\$Z.
<Fh*
<F#,
<Fl*
<FC,
<Fa,
<FR,
<Fj*
<Fn*
<F>,
<F\,
<FM,
<F(,
<FH,
<Ff,
<FW,
=GK;
=GF;
=GB;
=G=;
<Gv)
3Gw)
<Gt)
3Gu)
<Gr)
3Gs)
<Gp)
3Gq)
=Gp2
=Gx2
=Gt2
=G~)
=Gn2
=Gv2
=Gr2
=G|)
=G~
@<FQ
A<FO
<Fj*
<Fh*
<Fn*
<Fl*
?<Fn
?<Fo
3<F+
X<F9<
4<F<
2<FT
-$-
3$3
I2$2
I1$1
&$&
I%$%
I$$$
-$-
3$3
&$&
I%$%
I$$$
=G$3
=G23
=G,3
=G&3
-$-
3$3
&$&
I%$%
I$$$
>GD6
>G>6
>Gz6
>G86
>Gt6
=GD6
>GU6
>G96
>Gu6
>GY6
>G?6
>G{6
>G!6
>G]6
>GE6
>GU6
>GI6
>G96
>Gu6
>GY6
>GM6
>G?6
>G{6
>G!6
>G]6
>GQ6
>GE6
>GU6
>GI6
>GY6
>GM6
>G!6
>G]6
>GQ6
>GI6
>G96
>Gu6
>GM6
>G?6
>G{6
>GQ6
>GE6
=GD6
<GD6
=G>6
=G>6
<G>6
=G86
=G86
<G86
=Gz6
=Gz6
<Gz6
=Gt6
=Gt6
<Gt6
=G!6
=G!6
<G!6
=G!6
=G!6
<G!6
=G!6
=G!6
<G!6
=GI6
=GI6
<GI6
=GM6
=GM6
<GM6
=GQ6
=GQ6
<GQ6
=GI6
=GI6
<GI6
=GM6
=GM6
<GM6
=GQ6
=GQ6
<GQ6
=GI6
=GI6
<GI6
=GM6
=GM6
<GM6
=GQ6
=GQ6
<GQ6
=G96
=G96
<G96
=G?6
=G?6
<G?6
=GE6
=GE6
<GE6
=G96
=G96
<G96
=G?6
=G?6
<G?6
=GE6
=GE6
<GE6
=G96
=G96
<G96
=G?6
=G?6
<G?6
=GE6
=GE6
<GE6
=GU6
=GU6
<GU6
=GY6
=GY6
<GY6
=G]6
=G]6
<G]6
=GU6
=GU6
<GU6
=GY6
=GY6
<GY6
=G]6
=G]6
<G]6
=GU6
=GU6
<GU6
=GY6
=GY6
<GY6
=G]6
=G]6
<G]6
=Gu6
=Gu6
<Gu6
=G{6
=G{6
<G{6
=Gu6
=Gu6
<Gu6
=G{6
=G{6
<G{6
=Gu6
=Gu6
<Gu6
=G{6
=G{6
<G{6
>GQ6
>G!6
>G]6
>GM6
>GI6
>GY6
>GU6
>GE6
>G?6
>G{6
>G96
>Gu6
>G26
>Gn6
>G,6
>Gh6
>G&6
>Gb6
=GQ6
>G'6
>Gc6
>G-6
>Gi6
>G36
>Go6
>G'6
>Gc6
>G-6
>Gi6
>G36
>Go6
>G'6
>Gc6
>G-6
>Gi6
>G36
>Go6
=GQ6
<GQ6
=G!6
=G!6
<G!6
=GM6
=GM6
<GM6
=GI6
=GI6
<GI6
=G26
=G26
<G26
=G,6
=G,6
<G,6
=G&6
=G&6
<G&6
=GE6
=GE6
<GE6
=G?6
=G?6
<G?6
=G96
=G96
<G96
=G]6
=G]6
<G]6
=GY6
=GY6
<GY6
=GU6
=GU6
<GU6
=Gn6
=Gn6
<Gn6
=Gh6
=Gh6
<Gh6
=Gb6
=Gb6
<Gb6
=G{6
=G{6
<G{6
=Gu6
=Gu6
<Gu6
=G'6
=G'6
<G'6
=G-6
=G-6
<G-6
=G36
=G36
<G36
=G'6
=G'6
<G'6
=G-6
=G-6
<G-6
=G36
=G36
<G36
=G'6
=G'6
<G'6
=G-6
=G-6
<G-6
=G36
=G36
<G36
=Gc6
=Gc6
<Gc6
=Gi6
=Gi6
<Gi6
=Go6
=Go6
<Go6
=Gc6
=Gc6
<Gc6
=Gi6
=Gi6
<Gi6
=Go6
=Go6
<Go6
=Gc6
=Gc6
<Gc6
=Gi6
=Gi6
<Gi6
=Go6
=Go6
<Go6
>G36
>Go6
>G-6
>Gi6
>G'6
>Gc6
=G36
=G36
<G36
=G-6
=G-6
<G-6
=G'6
=G'6
<G'6
=Go6
=Go6
<Go6
=Gi6
=Gi6
<Gi6
=Gc6
=Gc6
<Gc6
>G|$
=G|$
=G|$
<G|$
>Gs$
>Go$
>Gk$
>G}$
=Gs$
=Gs$
<Gs$
=Go$
=Go$
<Go$
=Gk$
=Gk$
<Gk$
=G}$
=G}$
<G}$
wG2
wG2
$+ +
$1 1
$$ $
=G0
T+$+
T1$1
$$$
-$-
I,$,
3$3
I2$2
#^ +
#^ +
#^ +
#^ +
#1 Z
#1 Z
=H]<
=HB<
=HK<
=HT<
<H]<
<HB<
<HK<
<HT<
e<F'
n<F+
j<F0
e<F(
e<F,
=G;;
=G9;
=G7;
=G5;
<Gc/
<GZ/
<GQ/
<GH/
<G?/
<G6/
<Gb/
<GY/
<GP/
<GG/
<G>/
<G5/
<G//
<G)/
<G#/
<Gw/
<Gq/
<Gk/
wG2/
xG,/
xG&/
wGz/
xGt/
xGn/
#Z +
=Gz"
=Gf"
=G"
=Gt"
=Gn"
=Gh"
<Gz"
<Gf"
<G"
<Gt"
<Gn"
<Gh"
zG{"
{Gg"
=Gj5
=Ga5
=GX5
=GK5
=GB5
=G95
=G45
=G 5
=GS5
=G65
=Gr5
=GU5
=G`5
=Gi5
=GW5
=GJ5
=GA5
=G85
=G.5
=G(5
=G"5
zG55
{G!5
>G($
>G($
>G($
>G$$
>G$$
>G$$
>G($
>G($
>G($
>G$$
>G$$
>G$$
>G($
>G$$
=G($
=G($
=G($
=G($
=G($
=G($
=G$$
=G$$
=G$$
=G$$
=G$$
=G$$
=G~/
>G($
>G$$
=G($
=G($
=G$$
=G$$
<G~/
=G~/
<G~/
=G}/
<G}/
3G*$
3G&$
3G*$
3G*$
3G*$
3G&$
3G&$
3G&$
3G*$
3G&$
3G*$
3G*$
3G*$
3G&$
3G&$
3G&$
3G*$
3G*$
3G&$
3G&$
3G*$
3G*$
3G*$
3G*$
3G*$
3G*$
3G&$
3G&$
3G&$
3G&$
3G&$
3G&$
=H]<
=HB<
=HK<
=HT<
<H]<
<HB<
<HK<
<HT<
=Gi7
=Gr7
=G{7
<Gi7
<Gr7
<G{7
=G{7
=Gr7
=Gi7
<G{7
<Gr7
<Gi7
=Gz7
=Gq7
=Gh7
<Gz7
<Gq7
<Gh7
4"7-
4"8-
<G* 
F"&2
<G2-
<G.
<G".
<G0-
<GF-
<G .
<G6.
<G$.
<G*.
<G0.
<G$-
<G*-
<G4-
<G:-
<G@-
<G* 
L"&^
<G  
L"$`
<G1<
<G)<
<G,<
<G/<
<Fj,
<Fy,
<Fo,
<F~,
<Ft,
<Fk,
<Fz,
<Fp,
<Fu,
<Ff-
<Fu-
<Fk-
<Fz-
<Fp-
<FH-
<FW-
<FM-
<F\-
<FR-
<Fa-
<Fg-
<Fv-
<Fl-
<F{-
<Fq-
<FI-
<FX-
<FN-
<F]-
<FS-
<Fb-
#^"\
#Z"\
#Z"\
#^"\
D#Z"
D#^"
D#Z"
D#^"
<G.
<G.
<G.
<G0.
'#$"
#+ 2
#% -
#, 3
<G.
<G.
<G.
<G0.
'#$"
#+ 2
#% -
#, 3
! %#
vG0,
vG/,
vG3,
vG2,
<G$-
<G$-
<G$-
<G@-
<G*-
'#$"
#+ 2
#% -
#, 3
! %#
vG0,
vG/,
vG3,
vG2,
=Gp0
=Gg0
=G^0
=Gy0
=Go0
=Gf0
=G]0
=Gx0
"-$-
I,$,
I+$+
3$3
I2$2
I1$1
#Z +
$#Z-
$#^-
l<GN
m<GO
X<G%<
<Gk*
<Gi*
<Go*
<Gm*
X<Gu<
l<H}
=Gr
=Gg
=Gc
=GX
<Gr
<Gg
<Gc
<GX
=GK
=G9
=GB
=G)
=G 
<GK
<G9
<GB
<G)
<G 
=GV
=G4
=G6
=GJ
=G(
=G8
=GA
<GV
<G4
<G6
<GJ
<G(
<G8
<GA
=G1;
=G&;
=G";
=Gu 
=Gc 
=Gl 
=GS 
=GA 
=GJ 
<Gu 
<Gc 
<Gl 
<GS 
<GA 
<GJ 
=G^ 
=G` 
=G> 
=Gt 
=GR 
=Gb 
=Gk 
=G@ 
=GI 
<G^ 
<G` 
<G> 
<Gt 
<GR 
<Gb 
<Gk 
<G@ 
<GI 
>#+" Z
'#,"
#- \
7#1 ^
n#2"3_
<Gs:
<G|:
<Gp:
<Gr:
<G{:
<G^8
<G\8
G9
=Gb<
<Gb<
=Gb<
<Gb<
 ZGc<
D#,"
n#+"3_
#- \
7#1 ^
n#2"3_
>G^!
>Gp"
=Gp"
>GM5
>G$5
>GO5
>G."
=G."
>Gx5
>GZ"
>G>"
=GZ"
=G>"
>Gw.
=Gw.
>Ga.
=Ga.
>G&#
=G&#
>G`!
>Gs!
>GF*
>Gt*
=Gt*
>G0+
=G0+
>G@+
>Gi+
=G@+
=Gi+
>Gk+
=Gk+
>G}7
=G}7
>GO3
>G%4
>Gl4
>G.3
>Gr0
>Gt0
=GD!
=G-&
=G/&
=GJ/
=G%/
=Gs/
=GL/
>G\7
>G-7
>G+7
=G@)
=G")
>Gb*
=Gb*
>G~7
>G~7
>G~7
=G~7
=G~7
=G~7
>Go"
=Go"
>GL5
>GN5
>G#5
>G]!
>G_!
>Gr!
>Gs*
=Gs*
>G/+
=G/+
>Gh+
=Gh+
>G?+
>Gj+
=G?+
=Gj+
>G|7
=G|7
>G~7
=G~7
>G-3
>Gq0
>Gs0
=GC!
=G,&
=G.&
=GI/
=GK/
=G$/
=Gr/
>G*7
>G[7
>G,7
=G,-
=G+-
>G-"
=G-"
>Gw5
>GY"
>G="
=GY"
=G="
>Gv.
=Gv.
>G`.
=G`.
>G%#
=G%#
>GE*
>Ga*
=Ga*
>GN3
>G$4
>Gk4
>G5
=G!)
=G?)
>Gm7
>Gm7
>Gm7
=Gm7
=Gm7
=Gm7
>Gc5
>G;5
>Ge5
>G=5
>GF.
=GF.
>GH.
=GH.
>G}+
=G}+
>GW+
=GW+
>GY+
=GY+
>Gk7
=Gk7
>Gm7
=Gm7
>G`0
>Gb0
>GH(
>GJ(
>G-*
=G-*
>G/*
=G/*
=G+!
=G-!
=G?&
=GA&
=G\/
=G8/
=G^/
=G:/
>GA7
>GC7
>Gp3
>GN4
=G.)
=G,.
=G<-
>GV*
=GV*
>Gl7
>Gl7
>Gl7
=Gl7
=Gl7
=Gl7
&#2-
&#3-
&#%-
&#&-
>Gb5
>G:5
>Gd5
>G<5
>GE.
=GE.
>GG.
=GG.
>GV+
>G|+
=GV+
=G|+
>GX+
>G~+
=GX+
=G~+
>Gj7
=Gj7
>Gl7
=Gl7
>G_0
>Ga0
>GG(
>GI(
>G,*
=G,*
>G.*
=G.*
=G*!
=G,!
=G>&
=G@&
=G[/
=G7/
=G]/
=G9/
>G@7
>GB7
=G -
=G+.
=G;-
>GU*
=GU*
>Go3
>GM4
=G-)
>Gl5
>GO.
=GO.
>GU!
>G +
=G +
>G!0
>GZ(
>G6*
=G6*
=G4!
=GH&
=Ge/
>GJ7
>Gv7
>Gv7
>Gv7
=Gv7
=Gv7
=Gv7
>Gj"
=Gj"
>Gn5
>GF5
>GD5
>G("
=G("
>GT"
=GT"
>Gq.
=Gq.
>G[.
=G[.
>G #
=G #
>GQ.
=GQ.
>GW!
>G@*
>G*+
>G"+
=G*+
=G"+
>G`+
=G`+
>Gb+
=Gb+
>Gt7
=Gt7
>Gv7
=Gv7
>GC3
>G]4
>G 3
>G(3
>Gi0
>Gk0
>G#0
>G\(
>G8*
=G8*
=G4)
=G:)
=G6!
=G>!
=GJ&
=G&&
=G$&
=Gg/
=Gm/
=GC/
=GA/
>GV7
>GL7
>G$7
>G"7
=G2.
=GB-
>G\*
=G\*
>Gu7
>Gu7
>Gu7
=Gu7
=Gu7
=Gu7
>Gi"
=Gi"
>Gk5
>GC5
>Gm5
>GE5
>GN.
=GN.
>GP.
=GP.
>GT!
>GV!
>G)+
>G!+
=G)+
=G!+
>G_+
=G_+
>Ga+
=Ga+
>Gs7
=Gs7
>Gu7
=Gu7
>G'3
>Gh0
>Gj0
>G 0
>G"0
>GY(
>G[(
>G5*
=G5*
>G7*
=G7*
=G3!
=G5!
=G=!
=GG&
=G#&
=GI&
=G%&
=Gd/
=G@/
=Gf/
=GB/
=Gl/
>G!7
>GI7
>GU7
>G#7
>GK7
=G&-
=G1.
=G%-
=GA-
>G'"
=G'"
>GS"
=GS"
>Gp.
=Gp.
>GZ.
=GZ.
>G?*
>G[*
=G[*
>GB3
>G~3
>G\4
=G3)
=G9)
>G05
>G/5
>GJ"
=GJ"
>GI"
=GI"
>G~!
>GL+
=GL+
>GK+
=GK+
=G1/
=G0/
>Gg!
>Gf!
>Gi!
>Gh!
>Gy!
>Gx!
>Gv"
=Gv"
>Gu"
=Gu"
>G*5
>G)5
>G4"
=G4"
>G3"
=G3"
>G~5
>G}5
>G`"
>GD"
=G`"
=GD"
>G_"
>GC"
=G_"
=GC"
>G}.
=G}.
>G|.
=G|.
>Gg.
=Gg.
>Gf.
=Gf.
>G,#
=G,#
>G+#
=G+#
>GL*
>GK*
>Gz*
=Gz*
>Gy*
=Gy*
>G6+
=G6+
>G5+
=G5+
>GF+
=GF+
>GE+
=GE+
>G[3
>GZ3
>G14
>G04
>G43
>G33
=GJ!
=GI!
>Gb7
>Ga7
=GF)
=GE)
=G+/
=Gy/
=G*/
=Gx/
>GZ5
>GY5
>G\5
>G[5
>G=.
=G=.
>G?.
=G?.
>G<.
=G<.
>G>.
=G>.
>Gt+
=Gt+
>Gv+
=Gv+
>Gs+
=Gs+
>Gu+
=Gu+
-#,-
-#--
-#%-
-#&-
>G3
>G{0
>Gz0
>G}0
>G|0
>G$*
=G$*
>G&*
=G&*
>G#*
=G#*
>G%*
=G%*
=G"!
=G!!
=G$!
=G#!
=G6&
=G5&
=G8&
=G7&
=GS/
=GR/
=GU/
=GT/
>G87
>G77
>G:7
>G97
=G()
=G')
=G&.
=G6-
=G%.
=G5-
,#2-
,#3-
%#,-
%#--
!#,-
!#--
!#%-
!#&-
 G.1
 #2-
 #3-
 G-1
-#[-
-#\-
>GC 
=GC 
>GE 
=GE 
>GB 
=GB 
>GD 
=GD 
=Gu:
=Gt:
=Gw:
=Gv:
>GT;
>GS;
>GV;
>GU;
,#_-
,#`-
!#[-
!#\-
 #_-
 #`-
##2-
##%-
##3-
##&-
#1 1
 G71
 #,-
 #--
#1 1
 G61
>Gk7
=Gk7
>Gm7
>Gm7
>Gm7
>Gm7
=Gm7
=Gm7
=Gm7
=Gm7
>Gj7
=Gj7
>G;
>G"
=G;
=G"
>G=
>G$
=G=
=G$
>Ge 
>GL 
=Ge 
=GL 
>Gg 
>GN 
=Gg 
=GN 
=G29
=G 9
=G49
=G"9
=G~:
>Gs;
>G];
>Gu;
>G_;
=G 
>Gl7
>Gl7
>Gl7
>Gl7
=Gl7
=Gl7
=Gl7
=Gl7
-#_-
-#`-
>G:
>G!
=G:
=G!
>G<
>G#
=G<
=G#
>Gd 
>GK 
=Gd 
=GK 
>Gf 
>GM 
=Gf 
=GM 
=G19
=G39
=G!9
=G}:
>Gr;
>G\;
>Gt;
>G^;
,#[-
,#\-
!#_-
!#`-
 ZG3'
 #[-
 #\-
#1 2
 G=)
xGp/
 GF1
"#`-
"#`-
#1 2
 G<)
xGo/
 GE1
>Gt7
=Gt7
=GY9
=G[9
=G58
=G78
>Gv7
>Gv7
>Gv7
>Gv7
=Gv7
=Gv7
=Gv7
=Gv7
>Gs7
=Gs7
>G+
>GD
=G+
=GD
>G-
>GF
=G-
=GF
>GU 
>Gn 
=GU 
=Gn 
>GW 
>Gp 
=GW 
=Gp 
>G+(
>G (
>G-(
>G"(
=G)9
=G;9
=G+9
=G=9
>Gf;
>G|;
>Gh;
>G~;
=GX9
=GZ9
=G48
=G68
>Gu7
>Gu7
>Gu7
>Gu7
=Gu7
=Gu7
=Gu7
=Gu7
>G*
>GC
=G*
=GC
>G,
>GE
=G,
=GE
>GT 
>Gm 
=GT 
=Gm 
>GV 
>Go 
=GV 
=Go 
>G*(
>G,(
>G!(
=G(9
=G:9
=G*9
=G<9
>Ge;
>G{;
>Gg;
>G};
#^ _
 [G<'
#^ _
#1 3
 GL1
 GC)
xG(/
xGv/
#1 3
 GB)
xG'/
xGu/
 GK1
>G}7
=G}7
=Ge9
=Gg9
=GA8
=GC8
>G|7
=G|7
>GM
=GM
>GO
=GO
>Gw 
=Gw 
>Gy 
=Gy 
>G;
>G4(
>G6(
=GD9
=GF9
=G 8
=G"8
=Gd9
=Gf9
=G@8
=GB8
=G" 
>G~7
>G~7
>G~7
>G~7
=G~7
=G~7
=G~7
=G~7
>GL
=GL
>GN
=GN
>Gv 
=Gv 
>Gx 
=Gx 
>G3(
>G5(
=GC9
=GE9
=G!8
=G! 
#^ `
 \GE'
#^ `
wG4/
wG3/
xG./
wG|/
 G)
xG-/
wG{/
=GC6
=G=6
=Gy6
=G76
=Gs6
<GC6
<G=6
<Gy6
<G76
<Gs6
=GP6
=G 6
=G\6
=GL6
=GH6
=GX6
=GT6
=GB6
=G~6
=G<6
=Gx6
=G66
=Gr6
=G16
=Gm6
=G+6
=Gg6
=G%6
=Ga6
<GP6
<G 6
<G\6
<GL6
<GH6
<GX6
<GT6
<GB6
<G~6
<G<6
<Gx6
<G66
<Gr6
<G16
<Gm6
<G+6
<Gg6
<G%6
<Ga6
=G06
=Gl6
=G*6
=Gf6
=G$6
=G`6
<G06
<Gl6
<G*6
<Gf6
<G$6
<G`6
=GT6
=G66
=Gr6
=GX6
=G<6
=Gx6
=G 6
=G\6
=GB6
=G~6
=GT6
=GH6
=G66
=Gr6
=GX6
=GL6
=G<6
=Gx6
=G 6
=G\6
=GP6
=GB6
=G~6
=GT6
=GH6
=GX6
=GL6
=G 6
=G\6
=GP6
=GH6
=G66
=Gr6
=GL6
=G<6
=Gx6
=GP6
=GB6
=G~6
<GT6
<G66
<Gr6
<GX6
<G<6
<Gx6
<G 6
<G\6
<GB6
<G~6
<GT6
<GH6
<G66
<Gr6
<GX6
<GL6
<G<6
<Gx6
<G 6
<G\6
<GP6
<GB6
<G~6
<GT6
<GH6
<GX6
<GL6
<G 6
<G\6
<GP6
<GH6
<G66
<Gr6
<GL6
<G<6
<Gx6
<GP6
<GB6
<G~6
=G$6
=G`6
=G*6
=Gf6
=G06
=Gl6
=G$6
=G`6
=G*6
=Gf6
=G06
=Gl6
=G$6
=G`6
=G*6
=Gf6
=G06
=Gl6
<G$6
<G`6
<G*6
<Gf6
<G06
<Gl6
<G$6
<G`6
<G*6
<Gf6
<G06
<Gl6
<G$6
<G`6
<G*6
<Gf6
<G06
<Gl6
=G{$
<G{$
=Gr$
=Gn$
=Gj$
=Gz$
<Gr$
<Gn$
<Gj$
<Gz$
vG;,
vG:,
vG,
<G2-
<G0-
<G:-
<GF-
<G4-
<G2-
<G0-
<G0-
<GF-
<G4-
<G:-
<G2-
<G:-
<G0-
<GF-
<G4-
<G2-
<G:-
<G0-
<GF-
<G4-
`#$"
$#+ 1
<G".
<G .
<G*.
<G6.
<G$.
<G".
<G .
<G .
<G6.
<G$.
<G*.
<G".
<G*.
<G .
<G6.
<G$.
<G".
<G*.
<G .
<G6.
<G$.
`#$"
$#+ 1
<Gm*
<Gm*
<Cm*
<Go*
<Go*
<Co*
<G4)
<G:)
<G4)
<G:)
<G3)
<G9)
<G.)
<G.)
<G-)
<G()
<G()
<G')
<GF)
<GF)
<GE)
<G@)
<G")
<G")
<G@)
<G!)
<G?)
<Gi*
<Gi*
<Ci*
<Gk*
<Gk*
<Ck*
<G" 
<G" 
<G! 
<G 
<G 
:$1.
:$2.
:$$.
:$%.
:$+%
:$,%
:$^.
:$_.
:$Z.
:$[.
?#$"
?#+"
?#1"
DCA2
DCA2
DGA2
H#%",%
H#,",,
H#2",2
#& &
#- -
#3 3
?#Z"
?#^"
F#[",[
F#_",_
#\ \7
#` `7
>Gs(
>G|(
>Gr(
>G{(
>Gl(
>G`(
>Gf(
=GM.
=GD.
=G;.
<GM.
<GD.
<G;.
=GU.
=G8.
=GL.
=GC.
=G:.
<GU.
<G8.
<GL.
<GC.
<G:.
=G!/
<G!/
=Ge!
=Gd!
=G\!
=GP!
=G[!
{GQ!
=GS!
=Gm!
=GR!
zGn!
=Gq!
=Go!
=Gw!
{Gp!
=G}!
=Gp*
=G~*
=Gx*
=Gr*
<Gp*
<G~*
<Gx*
<Gr*
{Gq*
=G+
<G+
=G:+
=G&+
=G4+
=G.+
=G(+
<G:+
<G&+
<G4+
<G.+
<G(+
zG;+
{G'+
=Gg+
=G^+
=GU+
=G{+
=Gr+
<Gg+
<G^+
<GU+
<G{+
<Gr+
=Go+
=GP+
=GR+
=G<+
=GJ+
=GD+
=G>+
=Gf+
=G]+
=GT+
=Gz+
=Gq+
<Go+
<GP+
<GR+
<G<+
<GJ+
<GD+
<G>+
<Gf+
<G]+
<GT+
<Gz+
<Gq+
zGQ+
{G=+
=GX(
=GF(
=GW(
=GE(
=G2(
=G)(
=G(
=G&(
=G((
=G1(
=G4*
=G+*
=G"*
<G4*
<G+*
<G"*
=G3*
=G**
=G!*
<G3*
<G**
<G!*
<#Z" +
'#["
1#^" +
'#_"
#\ -
#\ -
%#Z"
<#Z" +
'#["
1#^" +
'#_"
#\ -
#\ -
%#Z"
<G2!
<G)!
<G !
<G!
<GN!
<G:!
<G1!
<G(!
<GH!
<GB!
<G<!
zGO!
{G;!
<GF&
<G=&
<G4&
<G+&
<G"&
<GE&
<G<&
<G3&
<G*&
<G!&
=G)7
=G 7
=GH7
=G?7
=G67
=G37
=Gf7
=G17
=GP7
=GR7
=G7
=G`7
=GZ7
=GT7
=G(7
=GG7
=G>7
=G57
zGg7
{GS7
=Gn;
=GO;
=Gq;
=Gz;
=Gd;
=GR;
=G[;
=Gl;
=Gn;
=GO;
=Gc;
=Gp;
=Gy;
=GQ;
=GZ;
>G1
>G91
>G01
>G'1
>GM1
>GG1
>GA1
>G81
>G/1
>G&1
 GJ1
 GD1
 G51
 G,1
>G|&
>Gs&
>Gj&
>G{&
>Gr&
>Gi&
>Ga&
>GX&
>GO&
>G`&
>GW&
>GN&
=Gf1
<Ge1
=Gj1
<Gi1
=Gn1
<Gm1
3Gg1
3Gk1
3Go1
=G""
=G8"
=G$"
=G,"
=G2"
=G&"
<G""
<G8"
<G$"
<G,"
<G2"
<G&"
zG#"
zG9"
{G%"
=GN"
=G:"
=Gd"
=GP"
=GX"
=G^"
=GR"
=GH"
=GB"
=G<"
<GN"
<G:"
<Gd"
<GP"
<GX"
<G^"
<GR"
<GH"
<GB"
<G<"
zGO"
{G;"
zGe"
{GQ"
=Gm.
=Gu.
=G{.
=Go.
<Gm.
<Gu.
<G{.
<Go.
{Gn.
=Gt5
=G|5
=Gv5
{Gu5
=G0#
=G$#
=G*#
<G0#
<G$#
<G*#
zG1#
=Gf*
=GR*
=G`*
=GZ*
=GT*
<Gf*
<GR*
<G`*
<GZ*
<GT*
zGg*
{GS*
=G`3
=G93
=GY3
=GM3
=GA3
O$$"#$
zGa3
{G:3
O$+"#+
O$1"#1
=Gq4
=GA4
=Gj4
=G[4
=GL4
=Gt4
O$$"#$
O$+"#+
O$1"#1
=G64
=G/4
=G#4
=Gc3
=G}3
=Gn3
O$$"#$
zG74
O$+"#+
~$1"
=Gv$
=Gh$
=Gx$
<Gv$
<Gh$
<Gx$
=G!2
zG"2
=GP*
=G<*
=GJ*
=GD*
=G>*
zGQ*
{G=*
=Gk.
=GW.
=Ge.
=G_.
=GY.
<Gk.
<GW.
<Ge.
<G_.
<GY.
zGl.
{GX.
=Gz)
=Gx)
<G )
<G2)
<G,)
<G&)
<GD)
<G>)
<G8)
 GA)
 G;)
<He)
<Ha)
h 1!
<Ho)
i 2!
<Hk)
g +!
<H`)
j ,!
<H\)
h +!
<Hj)
i +!
<Hf)
j 3!
<Hd)
k 3!
<Hn)
g 2!
<Hc)
i 2!
<Hm)
g 1!
<Hb)
h 1!
<Hl)
l -!
<H_)
k ,!
<Hi)
j ,!
<H^)
i +!
<Hh)
g +!
<H])
h +!
<Hg)
h ^!
i _!
g Z!
j [!
h Z!
i Z!
j `!
k `!
g _!
i _!
g ^!
h ^!
l \!
k [!
j [!
i Z!
g Z!
h Z!
%#1"
%#1"
%#2"
%#3"
%#1"
%#2"
%#3"
4#$"
#% \
<Gc9
<GW9
<Gb9
<GV9
<G?8
<G38
<G>8
<G28
""^#+
"5^#+
<GB9
<G09
<G99
<G'9
<GA9
<G&9
<G/9
<G89
<G8
=G|
=Gz
=Gx
=Gv
disable-tail-calcf-protection-brno-stack-arg-procf-protection-re
@<=<
A<><
C<?<
I<F<
J<G<
L<H<
R<O<
S<P<
U<Q<
[<X<
\<Y<
^<Z<
+ ) 
O)N)
Q)P)
S)R)
U)T)
$,",
),',
S,Q,
X,V,
g,e,
v,t,
T-R-
^-\-
c-a-
|-z-
#   
+ * 
.!(!
7!1!
;!:!
?!<!
E!B!
K!H!
O!N!
'&!&
0&*&
9&3&
B&<&
K&E&
;(:(
B(?(
T(Q(
#) )
))&)
/),)
5)2)
;)8)
A)>)
G)D)
q)p)
s)r)
u)t)
w)v)
'-$-
--*-
1-0-
3-2-
7-4-
=-:-
C-@-
G-F-
!. .
#.".
'.$.
-.*.
3.0.
7.6.
&/#/
,/)/
2///
;/5/
D/>/
M/G/
V/P/
_/Y/
h/b/
n/k/
t/q/
z/w/
-0*0
6030
?0<0
H0E0
Q0N0
Z0W0
g1e1
k1i1
o1m1
$2#2
+2(2
4212
=2:2
A2@2
C2B2
G2D2
M2J2
S2P2
W2V2
Y2X2
]2Z2
c2`2
i2f2
m2l2
|2{2
~2}2
>3;3
J3G3
V3S3
k3h3
z3w3
,4)4
:494
<4;4
>4=4
I4F4
X4U4
g4d4
|4y4
8828
D8>8
]8\8
_8^8
j8g8
s8p8
|8y8
,9&9
59/9
>989
G9A9
\9V9
h9b9
q:p:
x:r:
6;5;
8;7;
:;9;
<;;;
?;=;
@;>;
D;B;
E;C;
H;F;
I;G;
M;K;
N;L;
.(
54
76
>8
GA
PJ
WV
\X
]Y
ec
fd
kg
lh
tr
us
wv
yx
{z
}|
' " 
0 / 
2 1 
? > 
F @ 
O I 
X R 
_ ^ 
a ` 
h b 
q k 
z t 
'!$!
0!-!
9!6!
A!>!
G!D!
M!J!
Q!P!
X!R!
a![!
j!d!
n!m!
p!o!
t!q!
z!w!
#"""
%"$"
)"&"
/","
5"2"
9"8"
;":"
?"<"
E"B"
K"H"
O"N"
Q"P"
U"R"
["X"
a"^"
e"d"
g"f"
k"h"
q"n"
w"t"
{"z"
}"|"
'#$#
-#*#
1#0#
3#2#
5#4#
9#6#
?#<#
E#B#
N#H#
W#Q#
`#Z#
i#c#
r#l#
{#u#
!$ $
#$"$
&$$$
*$($
0$,$
8$4$
@$<$
L$D$
X$P$
d$\$
i$h$
l$j$
p$n$
t$r$
w$v$
y$x$
~$z$
(% %
0%,%
8%4%
@%<%
L%D%
X%P%
d%\%
p%h%
|%t%
)&&&
2&/&
;&8&
D&A&
M&J&
v't'
z'x'
~'|'
'(&(
.(((
7(1(
D(A(
K(E(
V(S(
](W(
%)")
+)()
1).)
7)4)
=):)
C)@)
I)F)
y)x)
{)z)
})|)
=*<*
A*>*
G*D*
M*J*
Q*P*
S*R*
W*T*
]*Z*
c*`*
g*f*
q*p*
u*r*
{*x*
'+&+
++(+
1+.+
7+4+
;+:+
=+<+
A+>+
G+D+
M+J+
Q+P+
S+R+
Z+T+
c+]+
l+f+
p+o+
w+q+
#- -
)-&-
/-,-
9-6-
?-<-
E-B-
).&.
/.,.
5.2.
9.8.
@.:.
I.C.
R.L.
V.U.
X.W.
\.Y.
b._.
h.e.
l.k.
n.m.
r.o.
x.u.
~.{.
"/!/
(/%/
./+/
4/1/
=/:/
F/C/
O/L/
X/U/
a/^/
j/g/
p/m/
v/s/
|/y/
/0,0
8050
A0>0
J0G0
S0P0
\0Y0
c0]0
l0f0
u0o0
~0x0
V1S1
\1Y1
b1_1
g1f1
k1j1
o1n1
w1t1
"2!2
-2*2
6232
?2<2
I2F2
O2L2
U2R2
_2\2
e2b2
k2h2
o2n2
q2p2
s2r2
u2t2
w2v2
y2x2
%3$3
)3&3
/3,3
5323
:393
@3=3
D3A3
L3I3
P3M3
X3U3
\3Y3
a3`3
d3c3
m3j3
q3n3
|3y3
&4#4
.4+4
24/4
7464
B4A4
K4H4
O4L4
Z4W4
^4[4
i4f4
m4j4
r4q4
u4t4
~4{4
!5 5
%5"5
+5(5
15.5
5545
7565
>585
G5A5
P5J5
T5S5
V5U5
]5W5
f5`5
o5i5
s5r5
u5t5
y5v5
"6 6
(6$6
.6*6
4606
:666
@6<6
F6B6
J6H6
N6L6
R6P6
V6T6
Z6X6
^6\6
d6`6
j6f6
p6l6
v6r6
|6x6
.7(7
2717
4737
;757
D7>7
M7G7
Q7P7
S7R7
W7T7
]7Z7
c7`7
g7f7
n7h7
w7q7
%8"8
)8&8
/8,8
=878
I8C8
M8J8
V8S8
b8`8
c8a8
l8i8
u8r8
%9"9
.9+9
7949
@9=9
I9F9
M9J9
S9P9
a9[9
m9g9
q9n9
z9w9
&:#:
/:,:
3:2:
::7:
C:@:
L:I:
P:O:
R:Q:
Y:V:
b:_:
k:h:
o:n:
z:w:
$;";
%;#;
*;&;
+;';
3;1;
4;2;
P;O;
W;Q;
`;Z;
i;c;
m;l;
o;n;
v;p;
C<B<
L<K<
U<T<
^<]<
a<`<
c<b<
'$
3-
@=
IF
UO
_[
nj
% ! 
H E 
Q N 
] W 
j g 
s p 
&!#!
/!,!
8!5!
@!=!
F!C!
L!I!
Z!W!
c!`!
l!i!
v!s!
|!y!
+"("
1"."
7"4"
A">"
G"D"
M"J"
W"T"
]"Z"
c"`"
m"j"
s"p"
y"v"
## #
)#&#
/#,#
:#7#
@#=#
F#C#
O#L#
X#U#
a#^#
j#g#
s#p#
|#y#
&$%$
*$)$
2$.$
:$6$
B$>$
N$J$
Z$V$
f$b$
m$k$
q$o$
u$s$
*%&%
2%.%
:%6%
B%>%
N%J%
Z%V%
f%b%
r%n%
~%z%
(&%&
1&.&
:&7&
C&@&
L&I&
T&N&
]&W&
f&`&
o&i&
x&r&
)'#'
2','
;'5'
D'>'
M'G'
V'P'
_'Y'
e'b'
k'h'
q'n'
v'u'
z'y'
~'}'
%("(
0(-(
9(6(
C(@(
M(J(
U(R(
_(\(
c(`(
i(f(
o(l(
x(r(
$)!)
*)')
0)-)
6)3)
<)9)
B)?)
H)E)
'*!*
0***
9*3*
C*@*
I*F*
O*L*
Y*V*
_*\*
e*b*
w*t*
}*z*
%+"+
-+*+
3+0+
9+6+
C+@+
I+F+
O+L+
\+Y+
e+b+
n+k+
y+v+
(-%-
.-+-
8-5-
>-;-
D-A-
(.%.
..+.
4.1.
B.?.
K.H.
T.Q.
^.[.
d.a.
j.g.
t.q.
z.w.
'/$/
-/*/
3/0/
</9/
E/B/
N/K/
W/T/
`/]/
i/f/
o/l/
u/r/
{/x/
&0#0
.0+0
7040
@0=0
I0F0
R0O0
[0X0
e0b0
n0k0
w0t0
,1&1
51/1
>181
D1A1
J1G1
P1M1
X1U1
^1[1
d1a1
y1v1
,2)2
5222
>2;2
H2E2
N2K2
T2Q2
^2[2
d2a2
j2g2
#3 3
+3(3
13.3
7343
?3<3
F3C3
K3H3
R3O3
W3T3
^3[3
l3i3
s3p3
{3x3
(4%4
-4*4
4414
J4G4
Q4N4
Y4V4
`4]4
h4e4
o4l4
}4z4
'5$5
-5*5
3505
@5=5
I5F5
R5O5
_5\5
h5e5
q5n5
{5x5
#6!6
)6'6
/6-6
5636
;696
A6?6
G6E6
K6I6
O6M6
S6Q6
W6U6
[6Y6
_6]6
e6c6
k6i6
q6o6
w6u6
}6{6
'7$7
07-7
=7:7
F7C7
O7L7
Y7V7
_7\7
e7b7
p7m7
y7v7
$8!8
+8(8
18.8
<868
H8B8
R8L8
[8U8
k8h8
t8q8
$9!9
-9*9
6939
?9<9
H9E9
O9L9
U9R9
`9Z9
l9f9
v9p9
(:%:
1:.:
<:9:
E:B:
N:K:
[:X:
d:a:
m:j:
y:v:
-;);
Y;V;
b;_;
k;h;
x;u;
&#
2,
?<
HE
TN
^Z
mi
G D 
P M 
\ V 
i f 
r o 
~ x 
Y!V!
b!_!
k!h!
u!r!
{!x!
*"'"
0"-"
6"3"
@"="
F"C"
L"I"
V"S"
\"Y"
b"_"
l"i"
r"o"
x"u"
(#%#
.#+#
U&R&
V&S&
^&[&
_&\&
g&d&
h&e&
p&m&
q&n&
y&v&
z&w&
*'''
+'('
3'0'
4'1'
<'9'
=':'
E'B'
F'C'
N'K'
O'L'
W'T'
X'U'
`']'
a'^'
f'c'
g'd'
l'i'
m'j'
r'o'
s'p'
$(!(
/(,(
8(5(
L(I(
^([(
d(a(
e(b(
j(g(
k(h(
p(m(
q(n(
y(v(
z(w(
(*%*
)*&*
1*.*
2*/*
:*7*
;*8*
B*?*
H*E*
N*K*
X*U*
^*[*
d*a*
v*s*
|*y*
$+!+
,+)+
2+/+
8+5+
B+?+
H+E+
N+K+
[+X+
d+a+
m+j+
x+u+
A.>.
J.G.
S.P.
].Z.
c.`.
i.f.
s.p.
y.v.
%0"0
d0a0
m0j0
v0s0
$1!1
%1"1
-1*1
.1+1
6131
7141
?1<1
@1=1
E1B1
F1C1
K1H1
L1I1
Q1N1
R1O1
W1T1
]1Z1
c1`1
x1u1
*3'3
03-3
6333
E3B3
Q3N3
]3Z3
r3o3
'4$4
3404
P4M4
_4\4
n4k4
&5#5
,5)5
25/5
?5<5
H5E5
Q5N5
^5[5
g5d5
p5m5
z5w5
&7#7
/7,7
<797
E7B7
N7K7
X7U7
^7[7
d7a7
o7l7
x7u7
*8'8
08-8
Q8K8
Z8T8
N9K9
T9Q9
u9o9
~9x9
':$:
0:-:
;:8:
D:A:
M:J:
Z:W:
c:`:
l:i:
,;(;
X;U;
a;^;
j;g;
w;t;
b<`<
c<a<
;P7Z
;Q7l;l;
6m;m;
&(&(
&'('(
(;(_
'=2((((
&.(.(
(K(1(1(
&7(7(
(W(#(#(](
;D7Z;Z;
6`;`;
;%7y;y;
;57Y
;;7Q;Q;
6W;W;
7p;p;
6v;v;
;M7c;c;
6i;i;
;47O;O;
6P;P;
7n;n;
6o;o;
7j7
A6G7
 I > O ? k ` q a 
!B!:!E!;![!P!a!Q!w!o!z!p!
","$"/"%"B":"E";"X"P"["Q"n"f"q"g"
(((&(.('(?(:(B(;(D*<*G*=*Z*R*]*S*x*p*{*q*
*.+&+1+'+D+<+G+=+]+R+c+S+
-:-2-=-3-
.*.".-.#.C.8.I.9._.W.b.X.u.m.x.n.
212#242$2J2B2M2C2`2X2c2Y2~2z2
3J383M393P3:3z3b3}3c3
4<484X4@4[4A4^4B4
4(5 5+5!5A565G575`5U5f5V5|5t5
7>737D747Z7R7]7S7q7
&@:2:C:3:_:Q:b:R:{:p:
:Z;O;`;P;y;n;
58V>WXcYd\e]fgrhsktlu
 , - . @ ^ F _ b 
!<!N!?!O!R!m!X!n!q!
"#"&"8")"9"<"N"?"O"R"d"U"e"h"z"k"{"~"
#0#!#1#
'J)L)K)M)N)P)O)Q)R)T)S)U)V)Y)W)Z)X)[)
)>*P*A*Q*T*f*W*g*r*
+(+:+++;+>+P+A+Q+T+o+Z+p+
-0-!-1-4-F-7-G-
.!.$.6.'.7.:.U.@.V.Y.k.\.l.o.
/!//"/}/
2"2(2@2+2A2D2V2G2W2Z2l2]2m2|2
3%3>3_3A3`3D3a3k3
474:4?4I4p4L4q4O4r4|4
5"545%55585S5>5T5W5r5]5s5v5
72757P7;7Q7T7f7W7g7h7
97:O:::P:V:n:Y:o:r:
;%;&;1;';2;*;3;+;4;=;B;>;C;?;D;@;E;F;K;G;L;H;M;I;N;Q;l;W;m;p;
$+1
__llvm_retpoline__llvm_retpoline_r11
__llvm_retpoline_eax
__llvm_retpoline_ecx
__llvm_retpoline_edx
__llvm_retpoline_edi
_except_handler48
_fpo_endprologue.cv_fpo_endprolo.cv_fpo_stackall.cv_fpo_stackali.cv_fpo_setframe
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
.. ;
.- ;
f., ;
f.+ ;
f.) b
f.# ;
f.* >
f.  
f.% 
f.! 
f.' 
f. 
f." 
n., ;
n.$ ;
n.& 
n.( 
x.2 S
x.0 S
x.1 T
x./ U
.3 s
.4 s
.6 ;
.5 "
.8 ;
.7 (
._ F
.? F
.F F
.O F
.X F
.^ *
.@ *
.> +
.I +
.R ,
.Y .
.A /
.J /
.S /
.G 1
.P 1
.\ 1
.D %
.M 4
.V 5
.H 9
.Q 9
.] 9
.Z =
.E >
.N ?
.W @
.B A
.K A
.T A
.[ D
.C E
.L E
.U E
.a F
.h F
.q F
.z F
.b *
.` +
.k +
.t ,
.{ .
.u F
.c F
.l F
.i 1
.r 1
.~ 1
.f %
.o 4
.x 5
.j 9
.s 9
.| =
.g >
.p ?
.v H
.d H
.m H
.y @
.} D
.w J
.e J
.n J
)/!
0/%!;
0/.!;
0/7!;
0/(!
0/1!
0/ !
0/)!
0/2!
0/&!
0//!
0/8!
0/#!
0/,!
0/5!
0/'!
0/0!
0/9!
0/$!
0/-!
0/6!
0/!!
0/*!
0/3!
0/"!
0/+!
0/4!
7/O!;
7/;!;
7/?!;
7/E!;
7/K!;
7/N!>
7/<!>
7/:!
7/B!
7/H!
7/@!
7/F!
7/L!
7/=!
7/C!
7/I!
7/A!
7/G!
7/M!
7/>!
7/D!
7/J!
>/n!F
>/Q!F
>/X!F
>/a!F
>/j!F
>/m!*
>/R!*
>/P!+
>/[!+
>/d!,
>/e!F
>/S!F
>/\!F
>/Y!1
>/b!1
>/k!1
>/V!%
>/_!4
>/h!5
>/Z!9
>/c!9
>/l!9
>/W!>
>/`!?
>/f!H
>/T!H
>/]!H
>/i!@
>/g!J
>/U!J
>/^!J
H/p!F
H/t!F
H/z!F
H/q!*
H/o!+
H/w!+
H/}!,
H/u!1
H/{!1
H/r!%
H/x!4
H/~!5
H/v!9
H/|!9
H/s!>
H/y!?
t/"*
{/#"F
{/""*
{/ "1
{/!"9
/9"F
/%"F
/)"F
//"F
/5"F
/8"*
/&"*
/$"+
/,"+
/2",
/*"1
/0"1
/6"1
/'"%
/-"4
/3"5
/+"9
/1"9
/7"9
/(">
/."?
/4"@
/O"F
/;"F
/?"F
/E"F
/K"F
/N"*
/<"*
/:"+
/B"+
/H",
/@"1
/F"1
/L"1
/="%
/C"4
/I"5
/A"9
/G"9
/M"9
/>">
/D"?
/J"@
/e"F
/Q"F
/U"F
/["F
/a"F
/d"*
/R"*
/P"+
/X"+
/^",
/V"1
/\"1
/b"1
/S"%
/Y"4
/_"5
/W"9
/]"9
/c"9
/T">
/Z"?
/`"@
/{"F
/g"F
/k"F
/q"F
/w"F
/z"*
/h"*
/f"+
/n"+
/t",
/l"1
/r"1
/x"1
/i"%
/o"4
/u"5
/m"9
/s"9
/y"9
/j">
/p"?
/v"@
/}"S
/~"T
/|"U
/#1
/1#F
/!#F
/'#F
/-#F
/0#*
/$#+
/*#,
/"#1
/(#1
/.#1
/%#4
/+#5
/##9
/)#9
//#9
/ #>
/&#?
/,#@
/5#S
/3#S
/4#T
/2#U
/9#F
/?#F
/E#F
/6#*
/<#+
/B#,
/:#9
/@#9
/F#9
/7#>
/=#?
/C#@
/;#9
/A#9
/G#9
/8#>
/>#?
/D#@
/N#F
/W#F
/`#F
/H#*
/Q#+
/Z#,
/[#F
/I#F
/R#F
/O#9
/X#9
/a#9
/L#>
/U#?
/^#@
/P#9
/Y#9
/b#9
/M#>
/V#?
/\#J
/J#J
/S#J
/_#@
/]#J
/K#J
/T#J
0i#F
0r#F
0{#F
0c#*
0l#+
0u#,
0d#/
0m#/
0v#/
0j#9
0s#9
0|#9
0g#>
0p#?
0y#@
0k#9
0t#9
0}#9
0h#>
0q#?
0z#@
0e#E
0n#E
0w#E
0f#E
0o#E
0x#E
0~#*
xxxx
{{{{
q0$;
~0#$
~0!$
~0"$
~0 $
0#$S
0!$S
0"$T
0 $V
0*$y
xxxx
0($|
0&$y
{{{{
0$$~
0)$2
0%$3
01$S
09$S
0A$S
0-$T
05$U
0=$V
03$f
0;$f
0C$f
0/$g
07$h
0?$j
0M$S
0Y$S
0e$S
0E$T
0Q$U
0]$V
0_$X
0G$X
0S$X
0O$f
0[$f
0g$f
0K$g
0W$h
0c$j
0a$l
0I$l
0U$l
0w$F
0i$F
0l$F
0p$F
0t$F
0v$*
0j$*
0h$+
0n$+
0r$,
0m$9
0q$9
0u$9
0k$>
0o$?
0s$@
0y$F
0~$F
0z$*
0x$+
0{$F
0}$>
0|$J
P1)%S
P1!%V
P1#%n
P1+%f
P1'%j
P1%%r
W11%S
W19%S
W1A%S
W1-%T
W15%U
W1=%V
W13%f
W1;%f
W1C%f
W1/%g
W17%h
W1?%j
_1M%S
_1Y%S
_1e%S
_1E%T
_1Q%U
_1]%V
_1_%X
_1G%X
_1S%X
_1O%f
_1[%f
_1g%f
_1K%g
_1W%h
_1c%j
_1a%l
_1I%l
_1U%l
g1q%S
g1}%S
g1i%T
g1u%U
g1k%n
g1w%n
g1s%f
g1o%g
g1{%h
g1m%r
g1y%r
xxx
~1&
1'&;
10&;
19&;
1B&;
1K&;
13&>
2i&#
2r& 
2{&!
2|&,
2j&,
2s&,
2p&1
2y&1
2m&%
2v&4
2q&1
2z&1
2n&%
2w&4
2}&H
2k&H
2t&H
2~&H
2l&H
2u&H
2N&#
2W& 
2`&!
2a&,
2O&,
2X&,
2U&1
2^&1
2g&1
2R&%
2[&4
2d&5
2V&1
2_&1
2h&1
2S&%
2\&4
2b&H
2P&H
2Y&H
2e&5
2c&H
2Q&H
2Z&H
[2'5
d2 '
d2)'
d2#'!
d2$'%
d2!'1
d2*'1
d2''5
d2"'1
d2+'1
d2('5
d2%'A
d2&'A
n22'
n2;'
n2D'
n2,'#
n25' 
n2>'!
n2?',
n2-',
n26',
n23'1
n2<'1
n2E'1
n20'%
n29'4
n2B'5
n24'1
n2='1
n2F'1
n21'%
n2:'4
n2@'H
n2.'H
n27'H
n2C'5
n2A'H
n2/'H
n28'H
x2M'
x2V'
x2_'
x2G'#
x2P' 
x2Y'!
x2H'%
x2Q'%
x2Z'%
x2N'1
x2W'1
x2`'1
x2K'%
x2T'4
x2]'5
x2O'1
x2X'1
x2a'1
x2L'%
x2U'4
x2^'5
x2I'A
x2R'A
x2['A
x2J'A
x2S'A
x2\'A
2b'#
2h' 
2n'!
2f'1
2l'1
2r'1
2c'%
2i'4
2o'5
2g'1
2m'1
2s'1
2d'%
2j'4
2p'5
xxxx
{{{{
xxxx
{{{{
2#(F
2(/
2$(1
2!(5
2%(9
2"(@
2 (E
2'(F
2.(F
27(F
2&(+
2((+
21(,
22(F
2)(F
2/(1
28(1
2,(4
25(5
20(9
29(9
2-(?
23(H
2*(H
26(@
24(J
2+(J
2K(F
2](F
2;(A
2B(A
2T(A
2:(G
2?(G
2Q(I
2E(+
2W(,
2<(D
2N(D
2F(/
2X(/
2L(1
2^(1
2@(w
2R(x
2I(4
2[(5
2M(9
2_(9
2A(H
2S(J
2=(}
2O(}
2J(?
2\(@
2G(A
2Y(A
2>(E
2P(E
2H(E
2Z(E
2`(#
2f( 
2l(!
2d(1
2j(1
2p(1
2a(%
2g(4
2m(5
2e(1
2k(1
2q(1
2b(%
2h(4
2n(5
2r(#
2{( 
2s(,
2|(,
2y(1
2v(%
2z(1
2w(%
2t(H
2}(H
2u(H
2~(H
3#);
3));
3/);
35);
3&)>
(3;);
(3A);
(3G);
(38)>
(3>)
(3D)
(3<)
(3B)
(3H)
(39)
(3?)
(3E)
(3=)
(3C)
(3I)
(3:)
(3@)
(3F)
23M)
23L)
23K)
23J)
:3Q)A
:3P)
:3O)A
:3N)
B3U)A
B3T)
B3S)A
B3R)
J3Z)
J3Y)
J3W)
J3V)
R3`)S
R3\)]
R3])Z
R3^)a
R3_)b
]3e)S
]3a)U
]3b)Z
]3c)[
]3d)\
h3f)i
h3j)k
h3h)p
h3i)q
h3g)r
s3o)S
s3k)]
s3l)Z
s3m)a
s3n)b
~3q);
~3p)>
3s);
3r)>
3u);
3t)>
3{)F
3y)F
3z)*
3x)+
3w);
3v)>
3})F
3~)*
3|)+
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
4 *1
4!*#
4** 
43*!
4"*%
4+*%
44*%
4(*1
41*1
4:*1
4%*%
4.*4
47*5
4)*1
42*1
4;*1
4&*%
4/*4
48*5
4#*A
4,*A
45*A
4$*A
4-*A
46*A
5Q*F
5=*F
5A*F
5G*F
5M*F
5P**
5>**
5<*+
5D*+
5J*,
5B*1
5H*1
5N*1
5?*%
5E*4
5K*5
5C*9
5I*9
5O*9
5@*>
5F*?
5L*@
5g*F
5S*F
5W*F
5]*F
5c*F
5f**
5T**
5R*+
5Z*+
5`*,
5X*1
5^*1
5d*1
5U*%
5[*4
5a*5
5Y*9
5_*9
5e*9
5V*>
5\*?
5b*@
5k**
5i*+
*5n*
*5l*
*5o**
*5m*+
55q*F
55u*F
55{*F
55r**
55p*+
55x*+
55~*,
55v*1
55|*1
55s*%
55y*4
55w*9
55}*9
55t*>
55z*?
e5#+F
e5+/
e5$+1
e5!+5
e5%+9
e5"+@
e5 +E
m5;+F
m5'+F
m5++F
m51+F
m57+F
m5:+*
m5(+*
m5&++
m5.++
m54+,
m5,+1
m52+1
m58+1
m5)+%
m5/+4
m55+5
m5-+9
m53+9
m59+9
m5*+>
m50+?
m56+@
u5Q+F
u5=+F
u5A+F
u5G+F
u5M+F
u5P+*
u5>+*
u5<++
u5D++
u5J+,
u5B+1
u5H+1
u5N+1
u5?+%
u5E+4
u5K+5
u5C+9
u5I+9
u5O+9
u5@+>
u5F+?
u5L+@
}5p+F
}5S+F
}5Z+F
}5c+F
}5l+F
}5o+*
}5T+*
}5R++
}5]++
}5f+,
}5g+F
}5U+F
}5^+F
}5[+1
}5d+1
}5m+1
}5X+%
}5a+4
}5j+5
}5\+9
}5e+9
}5n+9
}5Y+>
}5b+?
}5h+H
}5V+H
}5_+H
}5k+@
}5i+J
}5W+J
}5`+J
5w+F
5q+*
5z++
5r+/
5{+/
5x+1
5u+%
5~+4
5y+9
5v+>
5s+A
5|+A
5t+E
5}+E
5,;
5$,;
5",b
5),;
5,,;
5-,;
5.,;
5/,;
50,;
51,;
52,;
53,;
54,;
55,;
56,;
57,;
6:,;
6;,;
6<,;
6?,;
6=,0
6D,;
6B,"
6I,;
6G,(
6N,;
6L,(
6S,;
6Q,b
6X,;
6],;
6[,"
6b,;
6`,(
6g,;
6e,b
&6l,;
&6j,"
&6q,;
&6o,(
&6v,;
&6t,b
&6m,
&6k,
&6r,
&6p,
&6w,
&6u,
&6n,
&6s,
&6x,
/6{,;
/6y,(
/6~,b
/6|,
/6z,
/6},
z6-
61-;
6!-;
6'-;
6--;
6$->
60-X
6G-;
63-;
67-;
6=-;
6C-;
6@->
6F-W
64-W
62-X
6:-X
6J-;
6H-"
6O-;
6M-(
6T-;
6R-b
6Y-;
6W-(
6^-;
6\-b
6c-;
6h-;
6f-0
6m-;
6k-"
6r-;
6p-(
6w-;
6u-(
6|-;
6z-b
7!.;
7.>
7 .X
77.;
7#.;
7'.;
7-.;
73.;
70.>
76.W
7$.W
7".X
7*.X
!7V.F
!79.F
!7@.F
!7I.F
!7R.F
!7U.*
!7:.*
!78.+
!7C.+
!7L.,
!7;./
!7D./
!7M./
!7A.1
!7J.1
!7S.1
!7>.%
!7G.4
!7P.5
!7B.9
!7K.9
!7T.9
!7?.>
!7H.?
!7Q.@
!7<.A
!7E.A
!7N.A
!7=.E
!7F.E
!7O.E
)7l.F
)7X.F
)7\.F
)7b.F
)7h.F
)7k.*
)7Y.*
)7W.+
)7_.+
)7e.,
)7].1
)7c.1
)7i.1
)7Z.%
)7`.4
)7f.5
)7^.9
)7d.9
)7j.9
)7[.>
)7a.?
)7g.@
37n.F
37r.F
37x.F
37~.F
37o.*
37m.+
37u.+
37{.,
37s.1
37y.1
37p.%
37v.4
37|.5
37t.9
37z.9
37q.>
37w.?
37}.@
k7"/F
k7/F
k7!/*
k7 /9
t7&/;
t7,/;
t72/;
t7#/>
t7)/
t7//
t7'/
t7-/
t73/
t7$/
t7*/
t70/
t7(/
t7./
t74/
t7%/
t7+/
t71/
}7;/;
}7D/;
}7M/;
}75/>
}7>/
}7G/
}7H/
}76/
}7?/
}7</
}7E/
}7N/
}79/
}7B/
}7K/
}7=/
}7F/
}7O/
}7:/
}7C/
}7I/
}77/
}7@/
}7L/
}7J/
}78/
}7A/
7V/;
7_/;
7h/;
7P/>
7n/;
7t/;
7z/;
7k/>
7}/*
7~/F
xxxx
7$0F
70*
7%01
7"05
7&09
7#0@
7 0A
7!0E
7-0A
760A
7?0A
7*0B
730G
7<0I
790M
7'0M
700M
7+0v
740w
7=0x
7,0F
750H
7>0J
7;0N
7)0N
720N
7H0A
7Q0A
7Z0A
7E0B
7N0G
7W0I
7B0D
7K0D
7T0D
7F0v
7O0w
7X0x
7G0F
7P0H
7Y0J
7C0}
7L0}
7U0}
7D0E
7M0E
7V0E
7c0F
7l0F
7u0F
7]0*
7f0+
7o0,
7p0F
7^0F
7g0F
7d01
7m01
7v01
7a0%
7j04
7s05
7e09
7n09
7w09
7b0>
7k0?
7q0H
7_0H
7h0H
7t0@
7r0J
7`0J
7i0J
7~0F
7x0*
7y0/
7|0%
7}0>
7z0A
7{0E
c8g1F
c8e1
c8f1*
z8#1
z81,
z8$11
z8!15
z8%11
z8"15
z8 1H
8&1#
8/1 
881!
8'1%
801%
891%
8-11
8611
8?11
8*1%
8314
8<15
8.11
8711
8@11
8+1%
8414
8=15
8(1A
811A
8:1A
8)1A
821A
8;1A
8A1#
8G1 
8M1!
8E11
8K11
8Q11
8B1%
8H14
8N15
8F11
8L11
8R11
8C1%
8I14
8O15
8V1S
8\1S
8b1S
8S1T
8Y1U
8_1V
8W1]
8]1]
8c1]
8T1^
8Z1_
8`1`
8X1f
8^1f
8d1f
8U1g
8[1h
8a1j
8k1F
8j1*
8o1F
8n1*
8w1S
8t1T
8}1U
8q1X
8z1X
8x1]
8u1^
8~1_
8y1f
8v1g
8r1i
8{1i
8s1l
8|1l
8"2F
8!2*
8 29
829
8A2A
8$2A
8+2A
842A
8=2A
8@2B
8(2B
8#2G
812G
8:2I
872M
8%2M
8.2M
8)2v
822w
8;2x
8*2F
832H
8<2J
892N
8'2N
802N
8W2A
8C2A
8G2A
8M2A
8S2A
8V2B
8D2B
8B2G
8J2G
8P2I
8E2v
8K2w
8Q2x
8F2F
8L2H
8R2J
9m2A
9Y2A
9]2A
9c2A
9i2A
9l2B
9Z2B
9X2G
9`2G
9f2I
9[2v
9a2w
9g2x
9\2F
9b2H
9h2J
9q2F
9o2F
9p2*
9n2+
9u2F
9s2F
9t2*
9r2+
9y2F
9w2F
9x2*
9v2+
,9z2A
,9|2A
,9~2A
,9{2B
,9}2G
C9%3F
C9!3F
C9$3*
C9"31
C9#39
C9 3@
C93E
K9)3F
K9/3F
K953F
K9&3*
K9,3+
K923,
K9*31
K9031
K9631
K9'3%
K9-34
K9335
K9+39
K9139
K9739
K9(3>
K9.3?
K943@
S9a3F
S9:3F
S9D3F
S9P3F
S9\3F
S9_3A
S983A
S9>3A
S9J3A
S9V3A
S9;3B
S9G3G
S9S3I
S9`3*
S993*
S9A3*
S9M3*
S9Y3*
S9E31
S9Q31
S9]31
S9?3
S9K3
S9W3
S9<3v
S9H3w
S9T3x
S9B3%
S9N3%
S9Z3%
S9F39
S9R39
S9^39
S9@3
S9L3
S9X3
S9=3F
S9I3H
S9U3J
S9C3>
S9O3>
S9[3>
Z9d3F
Z9q3F
Z9b3A
Z9k3A
Z9z3A
Z9h3B
Z9w3G
Z9c3*
Z9n3*
Z9}3*
Z9e3M
Z9t3M
Z9r31
Z9l3
Z9{3
Z9i3v
Z9x3w
Z9o3%
Z9~3%
Z9s39
Z9m3
Z9|3
Z9j3F
Z9y3H
Z9f3
Z9u3
Z9p3>
Z9g3N
Z9v3N
x941
974F
9&4F
924F
954A
9 4A
9,4A
9)4I
964*
9#4*
9/4*
9'41
9341
9*4x
9$4%
904%
9(49
9449
9+4J
9%4>
914>
9r4F
9B4F
9O4F
9^4F
9m4F
9p4A
9@4A
9I4A
9X4A
9g4A
9F4B
9U4G
9d4I
9q4*
9A4*
9L4*
9[4*
9j4*
9a4M
9C4M
9R4M
9P41
9_41
9n41
9G4v
9V4w
9e4x
9M4%
9\4%
9k4%
9Q49
9`49
9o49
9H4F
9W4H
9f4J
9N4>
9]4>
9l4>
9c4N
9E4N
9T4N
9?4A
984A
9:4A
9<4A
9>4A
994B
9;4G
9=4I
9u4F
9s4A
9|4A
9y4B
9t4*
9v4D
9z4v
9{4F
9w4}
9x4E
95%
955F
9!5F
9%5F
9+5F
915F
945*
9"5*
9 5+
9(5+
9.5,
9&51
9,51
9251
9#5%
9)54
9/55
9'59
9-59
9359
9$5>
9*5?
905@
9T5F
975F
9>5F
9G5F
9P5F
9S5*
985*
965+
9A5+
9J5,
9K5F
995F
9B5F
9?51
9H51
9Q51
9<5%
9E54
9N55
9@59
9I59
9R59
9=5>
9F5?
9L5H
9:5H
9C5H
9O5@
9M5J
9;5J
9D5J
9s5F
9V5F
9]5F
9f5F
9o5F
9r5*
9W5*
9U5+
9`5+
9i5,
9X5/
9a5/
9j5/
9^51
9g51
9p51
9[5%
9d54
9m55
9_59
9h59
9q59
9\5>
9e5?
9n5@
9Y5A
9b5A
9k5A
9Z5E
9c5E
9l5E
9u5F
9y5F
9v5*
9t5+
9|5+
9z51
9w5%
9}54
9{59
9x5>
9~5?
:"6F
: 6,
:#69
:!6@
 :(6F
 :.6F
 :46F
 :$6*
 :*6+
 :06,
 :16F
 :%6F
 :+6F
 :)69
 :/69
 :569
 :'6>
 :-6?
 :36@
 :26J
 :&6J
 :,6J
)::6F
):@6F
):F6F
):66*
):<6+
):B6,
):76/
):=6/
):C6/
):;69
):A69
):G69
):96>
):?6?
):E6@
):86E
):>6E
):D6E
2:J6F
2:N6F
2:R6F
2:H6*
2:L6+
2:P6,
2:K69
2:O69
2:S69
2:I6>
2:M6?
2:Q6@
;:V6F
;:Z6F
;:^6F
;:T6*
;:X6+
;:\6,
;:W69
;:[69
;:_69
;:U6>
;:Y6?
;:]6@
E:d6F
E:j6F
E:p6F
E:`6*
E:f6+
E:l6,
E:m6F
E:a6F
E:g6F
E:e69
E:k69
E:q69
E:c6>
E:i6?
E:o6@
E:n6J
E:b6J
E:h6J
O:v6F
O:|6F
O:r6*
O:x6+
O:~6,
O:s6/
O:y6/
O:w69
O:}69
O:u6>
O:{6?
O:t6E
O:z6E
:7,
:27F
:%7F
:.7F
:17*
:(7,
:)7F
: 7F
:&71
:/71
:#74
:,75
:'79
:079
:$7?
:*7H
:!7H
:-7@
:+7J
:"7J
:Q7F
:47F
:;7F
:D7F
:M7F
:P7*
:57*
:37+
:>7+
:G7,
:67/
:?7/
:H7/
:<71
:E71
:N71
:97%
:B74
:K75
:=79
:F79
:O79
::7>
:C7?
:L7@
:77A
:@7A
:I7A
:87E
:A7E
:J7E
:g7F
:S7F
:W7F
:]7F
:c7F
:f7*
:T7*
:R7+
:Z7+
:`7,
:X71
:^71
:d71
:U7%
:[74
:a75
:Y79
:_79
:e79
:V7>
:\7?
:b7@
:n7F
:w7F
:h7*
:q7+
:z7,
:{7F
:i7F
:r7F
:o71
:x71
:l7%
:u74
:~75
:p79
:y79
:m7>
:v7?
:|7H
:j7H
:s7H
:}7J
:k7J
:t7J
:#8;
;)8F
;&8H
;*81
;'8K
;+89
;(8L
;/8F
;,8G
;081
;-8M
;189
;.8N
;88;
";D8;
";>8
";E8
";?8
";H8
";B8
";F8
";I8
";@8
";C8
";G8
";A8
+;M8F
+;J8H
+;N8
+;Q81
+;K8K
+;O8
+;R89
+;L8L
+;P8
4;V8F
4;S8G
4;W8
4;Z81
4;T8M
4;X8
4;[89
4;U8N
4;Y8
=;_8;
=;]8;
=;^8>
=;\8
D;b8F
D;`8G
K;j8A
K;s8A
K;|8A
K;g8B
K;p8G
K;y8I
K;}8
K;d8D
K;m8D
K;v8D
K;k8
K;t8
K;h8v
K;q8w
K;z8x
K;~8
K;l8
K;u8
K;i8F
K;r8H
K;{8J
K;e8}
K;n8}
K;w8}
K;f8E
K;o8E
K;x8E
;#9;
;,9;
;59;
;>9;
;G9;
;/9>
;M9F
;J9H
;N91
;K9K
;O99
;L9L
;S9F
;P9G
;T91
;Q9M
;U99
;R9N
;\9;
;h9;
<q9F
<n9H
<u91
<o9K
<v99
<p9L
<z9F
<w9G
<~91
<x9M
<y9N
=:]
"=&:S
"=/:S
"=#:U
"=,:V
"= :n
"=):n
"=':]
"=0:]
"=$:_
"=-:`
"=(:f
"=1:f
"=%:h
"=.:j
"=!:p
"=*:p
"=":r
"=+:r
-=P:S
-=3:S
-=::S
-=C:S
-=L:S
-=O:T
-=7:T
-=2:U
-=@:U
-=I:V
-=4:n
-==:n
-=F:n
-=;:]
-=D:]
-=M:]
-=8:^
-=A:_
-=J:`
-=<:f
-=E:f
-=N:f
-=9:g
-=B:h
-=K:j
-=5:p
-=>:p
-=G:p
-=6:r
-=?:r
-=H:r
5=o:S
5=R:S
5=Y:S
5=b:S
5=k:S
5=n:T
5=V:T
5=Q:U
5=_:U
5=h:V
5=e:X
5=S:X
5=\:X
5=Z:]
5=c:]
5=l:]
5=W:^
5=`:_
5=i:`
5=[:f
5=d:f
5=m:f
5=X:g
5=a:h
5=f:i
5=T:i
5=]:i
5=j:j
5=g:l
5=U:l
5=^:l
==q:;
==x:;
==r:>
==p:
=={:
==s:
==|:
==y:
==v:
==z:
==w:
==t:
==}:
==u:
==~:
m=;J
t=$;F
t=";H
t= ;=
t=!;D
{=3;F
{=+;F
{=1;G
{=';G
{=.;.
{=,;1
{=(;M
{=-;9
{=/;=
{=);N
{=0;D
=8;;
=6;;
=7;>
=<;;
=:;;
=;;>
=D;;
=?;;
=B;X
==;X
=M;;
=H;;
=K;W
=F;W
=m;F
=P;F
=W;F
=`;F
=i;F
=l;*
=Q;*
=O;+
=Z;+
=c;,
=R;/
=[;/
=d;/
=X;1
=a;1
=j;1
=U;%
=^;4
=g;5
=Y;9
=b;9
=k;9
=V;>
=_;?
=h;@
=S;A
=\;A
=e;A
=T;E
=];E
=f;E
=o;F
=v;F
=p;*
=n;+
=y;+
=q;F
=z;F
=w;1
=t;%
=};4
=x;9
=u;>
=~;?
=r;H
={;H
=s;J
=|;J
y>$<
y>#<
>'<p
>1<!
>+<h
>,<'
>.<h
>/</
>(<h
>)<5
>X< 
>]<!
?H<"
?J<#
?J<$
?G<%
?F<&
?K<'
?a<6
?`<:
?c<6
?b<:
?Q<(
?S<)
?S<*
?P<+
?N<,
?R<-
?O<.
?T</
??<0
?A<1
?A<2
?><3
?=<4
?B<5
&?e<t
-?f<t
6?g<t
>?h<t
H?i<t
N?j<t
V?k<t
]?l<t
f?m<t
o?n<t
z?o<t
?p<t
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
xxxx
{{{{
xxxx
{{{{
xxxx
xxxx
.. <
.- <
f., <
f.+ <
f.* =
f.# <
f.  
f.) c
f.% 
f.! 
f. 
f.' 
f." 
n., <
n.$ <
n.& 
n.( 
x.2 O
x.1 P
x.0 O
x./ Q
.3 s
.4 s
.6 <
.8 <
._ C
.^ '
.? C
.> (
.F C
.@ '
.O C
.I (
.X C
.R )
.A E
.J E
.Y -
.S E
.G 0
.D $
.P 0
.M 2
.\ 0
.V 3
.H 6
.E 7
.B 8
.Q 6
.N :
.K 8
.] 6
.W ;
.Z <
.T 8
.C B
.L B
.[ C
.U B
.a C
.` (
.h C
.b '
.q C
.k (
.z C
.t )
.c D
.l D
.{ -
.u D
.i 0
.f $
.r 0
.o 2
.~ 0
.x 3
.j 6
.g 7
.d G
.s 6
.p :
.m G
.y ;
.| <
.v G
.e I
.n I
.} C
.w I
)/!U
0/%!<
0/.!<
0/(!
0/7!<
0/1!
0/ !V
0/)!V
0/2!V
0/&!
0/#!
0//!
0/,!
0/8!
0/5!
0/'!
0/$!
0/!!
0/0!
0/-!
0/*!
0/9!
0/6!
0/3!
0/"!
0/+!
0/4!
7/O!<
7/N!=
7/;!<
7/:!
7/?!<
7/<!=
7/E!<
7/B!
7/K!<
7/H!
7/@!
7/=!
7/F!
7/C!
7/L!
7/I!
7/A!
7/>!
7/G!
7/D!
7/M!
7/J!
>/n!C
>/m!'
>/Q!C
>/P!(
>/X!C
>/R!'
>/a!C
>/[!(
>/j!C
>/d!)
>/S!D
>/\!D
>/e!D
>/Y!0
>/V!$
>/b!0
>/_!2
>/k!0
>/h!3
>/Z!6
>/W!7
>/T!G
>/c!6
>/`!:
>/]!G
>/l!6
>/i!;
>/f!G
>/U!I
>/^!I
>/g!I
H/p!C
H/o!(
H/t!C
H/q!'
H/z!C
H/w!(
H/}!)
H/u!0
H/r!$
H/{!0
H/x!2
H/~!3
H/v!6
H/s!7
H/|!6
H/y!:
t/"'
{/#"C
{/""'
{/ "0
{/!"6
/9"C
/8"'
/%"C
/$"(
/)"C
/&"'
//"C
/,"(
/5"C
/2")
/*"0
/'"$
/0"0
/-"2
/6"0
/3"3
/+"6
/("7
/1"6
/.":
/7"6
/4";
/O"C
/N"'
/;"C
/:"(
/?"C
/<"'
/E"C
/B"(
/K"C
/H")
/@"0
/="$
/F"0
/C"2
/L"0
/I"3
/A"6
/>"7
/G"6
/D":
/M"6
/J";
/e"C
/d"'
/Q"C
/P"(
/U"C
/R"'
/["C
/X"(
/a"C
/^")
/V"0
/S"$
/\"0
/Y"2
/b"0
/_"3
/W"6
/T"7
/]"6
/Z":
/c"6
/`";
/{"C
/z"'
/g"C
/f"(
/k"C
/h"'
/q"C
/n"(
/w"C
/t")
/l"0
/i"$
/r"0
/o"2
/x"0
/u"3
/m"6
/j"7
/s"6
/p":
/y"6
/v";
/}"O
/|"Q
/~"P
/#0
/1#C
/0#'
/!#C
/'#C
/$#(
/-#C
/*#)
/"#0
/(#0
/%#2
/.#0
/+#3
/##6
/ #7
/)#6
/&#:
//#6
/,#;
/5#O
/4#P
/3#O
/2#Q
/9#C
/6#'
/?#C
/<#(
/E#C
/B#)
/:#s
/7#t
/@#s
/=#u
/F#s
/C#v
/;#6
/8#7
/A#6
/>#:
/G#6
/D#;
/N#C
/H#'
/W#C
/Q#(
/`#C
/Z#)
/I#D
/R#D
/[#D
/O#s
/L#t
/X#s
/U#u
/a#s
/^#v
/P#6
/M#7
/J#x
/Y#6
/V#:
/S#x
/b#6
/_#;
/\#x
/K#I
/T#I
/]#I
0i#C
0c#'
0r#C
0l#(
0{#C
0u#)
0d#E
0m#E
0v#E
0j#s
0g#t
0s#s
0p#u
0|#s
0y#v
0k#6
0h#7
0e#w
0t#6
0q#:
0n#w
0}#6
0z#;
0w#w
0f#B
0o#B
0x#B
0~#'
xxxx
{{{{
q0$<
~0#$
~0"$
~0!$
~0 $
0#$O
0"$P
0!$O
0 $R
0*$z
xxxx
0)$0
0(${
0&$z
{{{{
0%$1
0$$}
01$O
0-$P
09$O
05$Q
0A$O
0=$R
0M$O
0E$P
0Y$O
0Q$Q
0e$O
0]$R
0G$W
0S$W
0_$W
0l$C
0j$'
0p$C
0n$(
0t$C
0r$)
0w$C
0v$'
0i$C
0h$(
0m$s
0k$t
0q$s
0o$u
0u$s
0s$v
0~$C
0z$'
0y$C
0x$(
0{$D
0}$t
0|$x
P1)%O
P1!%R
P1#%m
P1+%
P1'%
P1%%
W11%O
W1-%P
W19%O
W15%Q
W1A%O
W1=%R
W13%
W1/%
W1;%
W17%
W1C%
W1?%
_1M%O
_1E%P
_1Y%O
_1Q%Q
_1e%O
_1]%R
_1G%W
_1S%W
_1_%W
_1O%
_1K%
_1[%
_1W%
_1g%
_1c%
_1I%
_1U%
_1a%
g1q%O
g1i%P
g1}%O
g1u%Q
g1k%m
g1w%m
g1s%
g1o%
g1{%
g1m%
g1y%
xxx
~1&
1'&<
10&<
1"&U
1+&U
19&<
13&=
1B&<
1K&<
14&V
1=&V
1F&V
2i&"
2j&+
2s&+
2|&+
2p&0
2m&$
2y&0
2v&2
2q&&
2n&&
2k&G
2z&&
2w&'
2t&G
2}&G
2l&-
2u&-
2~&-
2N&"
2O&+
2X&+
2a&+
2U&0
2R&$
2^&0
2[&2
2g&0
2d&3
2V&&
2S&&
2P&G
2_&&
2\&'
2Y&G
2h&&
2e&(
2b&G
2Q&-
2Z&-
2c&-
[2'3
d2 '
d2)'
d2#'
d2$'"
d2!'0
d2*'0
d2''3
d2"'&
d2+'&
d2('(
d2%'8
d2&')
n22'
n2,'"
n2;'
n25'
n2D'
n2>'
n2-'+
n26'+
n2?'+
n23'0
n20'$
n2<'0
n29'2
n2E'0
n2B'3
n24'&
n21'&
n2.'G
n2='&
n2:''
n27'G
n2F'&
n2C'(
n2@'G
n2/'-
n28'-
n2A'-
x2M'
x2G'"
x2V'
x2P'
x2_'
x2Y'
x2H'"
x2Q'"
x2Z'"
x2N'0
x2K'$
x2W'0
x2T'2
x2`'0
x2]'3
x2O'&
x2L'&
x2I'8
x2X'&
x2U''
x2R'8
x2a'&
x2^'(
x2['8
x2J')
x2S')
x2\')
2b'"
2f'0
2c'$
2l'0
2i'2
2r'0
2o'3
2g'&
2d'&
2m'&
2j''
2s'&
2p'(
xxxx
{{{{
xxxx
{{{{
2#(C
2(E
2$(0
2!(3
2%(6
2"(;
2 (B
2'(C
2&((
2.(C
2(((
27(C
21()
2)(D
22(D
2/(0
2,(2
28(0
25(3
20(6
2-(:
2*(G
29(6
26(;
23(G
2+(I
24(I
2;(?
2:(<
2K(C
2B(?
2E((
2?(<
2](C
2T(?
2W()
2Q(=
2F(E
2<(>
2X(E
2N(>
2L(0
2I(2
2@(t
2^(0
2[(3
2R(u
2M(6
2J(:
2A({
2G(8
2=(z
2_(6
2\(;
2S(|
2Y(8
2O(z
2H(B
2>(~
2Z(B
2P(~
2`("
2d(0
2a($
2j(0
2g(2
2p(0
2m(3
2e(&
2b(&
2k(&
2h('
2q(&
2n((
2r("
2s(+
2|(+
2y(0
2v($
2z(&
2w(&
2t(G
2}(G
2u(-
2~(-
3#)<
3))<
3&)=
3/)<
35)<
(3;)<
(38)=
(3A)<
(3>)
(3G)<
(3D)
(3<)
(39)
(3B)
(3?)
(3H)
(3E)
(3=)
(3:)
(3C)
(3@)
(3I)
(3F)
23M)
23K)
23L)
23J)
:3Q)?
:3O)?
:3P)
:3N)
B3U)?
B3S)?
B3T)
B3R)
J3Z)
J3W)
J3Y)
J3V)
R3`)T
R3\)^
R3])W
R3^)_
R3_)`
]3e)T
]3a)V
]3b)W
]3c)X
]3d)Y
h3f)j
h3j)l
h3h)m
h3g)n
h3i)o
s3o)T
s3k)^
s3l)W
s3m)_
s3n)`
~3q)<
~3p)=
3s)<
3r)=
3u)<
3t)=
3{)C
3z)'
3y)C
3x)(
3w)<
3v)=
3~)'
3})C
3|)(
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
xxxx
4 *&
4!*"
4"*"
4+*"
44*"
4(*0
4%*$
41*0
4.*2
4:*0
47*3
4)*&
4&*&
4#*8
42*&
4/*'
4,*8
4;*&
48*(
45*8
4$*)
4-*)
46*)
5Q*C
5P*'
5=*C
5<*(
5A*C
5>*'
5G*C
5D*(
5M*C
5J*)
5B*0
5?*$
5H*0
5E*2
5N*0
5K*3
5C*6
5@*7
5I*6
5F*:
5O*6
5L*;
5g*C
5f*'
5S*C
5R*(
5W*C
5T*'
5]*C
5Z*(
5c*C
5`*)
5X*0
5U*$
5^*0
5[*2
5d*0
5a*3
5Y*6
5V*7
5_*6
5\*:
5e*6
5b*;
5k*'
5i*(
*5o*'
*5m*(
*5n*
*5l*
55q*C
55p*(
55u*C
55r*'
55{*C
55x*(
55~*)
55v*0
55s*$
55|*0
55y*2
55w*6
55t*7
55}*6
55z*:
e5#+C
e5+E
e5$+0
e5!+3
e5%+6
e5"+;
e5 +B
m5;+C
m5:+'
m5'+C
m5&+(
m5++C
m5(+'
m51+C
m5.+(
m57+C
m54+)
m5,+0
m5)+$
m52+0
m5/+2
m58+0
m55+3
m5-+6
m5*+7
m53+6
m50+:
m59+6
m56+;
u5Q+C
u5P+'
u5=+C
u5<+(
u5A+C
u5>+'
u5G+C
u5D+(
u5M+C
u5J+)
u5B+0
u5?+$
u5H+0
u5E+2
u5N+0
u5K+3
u5C+6
u5@+7
u5I+6
u5F+:
u5O+6
u5L+;
}5p+C
}5o+'
}5S+C
}5R+(
}5Z+C
}5T+'
}5c+C
}5]+(
}5l+C
}5f+)
}5U+D
}5^+D
}5g+D
}5[+0
}5X+$
}5d+0
}5a+2
}5m+0
}5j+3
}5\+6
}5Y+7
}5V+G
}5e+6
}5b+:
}5_+G
}5n+6
}5k+;
}5h+G
}5W+I
}5`+I
}5i+I
5w+C
5q+'
5z+(
5r+E
5{+E
5x+0
5u+$
5~+2
5y+6
5v+7
5s+8
5|+8
5t+B
5}+B
5,<
5$,<
5),<
5",c
5,,<
5-,<
5.,<
5/,<
50,<
51,<
52,<
53,<
54,<
55,<
56,<
57,<
6:,<
6;,<
6<,<
6?,<
6D,<
6I,<
6N,<
6S,<
6X,<
6Q,c
6],<
6b,<
6g,<
6e,c
&6l,<
&6q,<
&6v,<
&6t,c
&6j,
&6o,
&6m,
&6r,
&6w,
&6u,
&6k,
&6p,
&6n,
&6s,
&6x,
/6{,<
/6~,c
/6y,
/6|,
/6z,
/6},
z6-
61-<
60-V
6!-<
6'-<
6$-=
6--<
6G-<
6F-U
63-<
62-V
67-<
64-U
6=-<
6:-V
6C-<
6@-=
6J-<
6O-<
6T-<
6R-c
6Y-<
6^-<
6c-<
6\-c
6h-<
6m-<
6r-<
6w-<
6|-<
6z-c
7!.<
7 .V
7.=
77.<
76.U
7#.<
7".V
7'.<
7$.U
7-.<
7*.V
73.<
70.=
!7V.C
!7U.'
!79.C
!78.(
!7@.C
!7:.'
!7I.C
!7C.(
!7R.C
!7L.)
!7;.E
!7D.E
!7M.E
!7A.0
!7>.$
!7J.0
!7G.2
!7S.0
!7P.3
!7B.6
!7?.7
!7<.8
!7K.6
!7H.:
!7E.8
!7T.6
!7Q.;
!7N.8
!7=.B
!7F.B
!7O.B
)7l.C
)7k.'
)7X.C
)7W.(
)7\.C
)7Y.'
)7b.C
)7_.(
)7h.C
)7e.)
)7].0
)7Z.$
)7c.0
)7`.2
)7i.0
)7f.3
)7^.6
)7[.7
)7d.6
)7a.:
)7j.6
)7g.;
37n.C
37m.(
37r.C
37o.'
37x.C
37u.(
37~.C
37{.)
37s.0
37p.$
37y.0
37v.2
37|.3
37t.6
37q.7
37z.6
37w.:
37}.;
k7"/C
k7!/'
k7/C
k7 /6
t7&/<
t7#/=
t7,/<
t7)/
t72/<
t7//
t7'/
t7$/
t7-/
t7*/
t73/
t70/
t7(/
t7%/
t7./
t7+/
t74/
t71/
}7;/<
}75/=
}7D/<
}7>/
}7M/<
}7G/
}76/U
}7?/U
}7H/U
}7</
}79/
}7E/
}7B/
}7N/
}7K/
}7=/
}7:/
}77/
}7F/
}7C/
}7@/
}7O/
}7L/
}7I/
}78/
}7A/
}7J/
7V/<
7P/=
7_/<
7h/<
7Q/V
7Z/V
7c/V
7n/<
7k/=
7t/<
7z/<
7}/'
7~/D
xxxx
70'
7$0C
7%00
7"03
7&06
7#0;
7 08
7!0B
7-0?
7*0@
760?
730<
7?0?
7<0=
7'0K
700K
790K
7+0s
740t
7=0u
7,0y
750{
7>0|
7H0?
7E0@
7Q0?
7N0<
7Z0?
7W0=
7B0>
7K0>
7T0>
7F0s
7O0t
7X0u
7G0y
7C0z
7P0{
7L0z
7Y0|
7U0z
7D0~
7M0~
7V0~
7c0C
7]0'
7l0C
7f0(
7u0C
7o0)
7^0D
7g0D
7p0D
7d00
7a0$
7m00
7j02
7v00
7s03
7e06
7b07
7_0G
7n06
7k0:
7h0G
7w06
7t0;
7q0G
7`0I
7i0I
7r0I
7~0C
7x0'
7y0E
7|0$
7}07
7z08
7{0B
c8g1C
c8f1'
c8e1
z8#1
z81+
z8$10
z8!13
z8%1&
z8"1(
z8 1-
8&1"
8'1"
801"
891"
8-10
8*1$
8610
8312
8?10
8<13
8.1&
8+1&
8(18
871&
841'
8118
8@1&
8=1(
8:18
8)1)
821)
8;1)
8A1"
8E10
8B1$
8K10
8H12
8Q10
8N13
8F1&
8C1&
8L1&
8I1'
8R1&
8O1(
8V1O
8S1P
8\1O
8Y1Q
8b1O
8_1R
8W1Y
8T1Z
8]1Y
8Z1[
8c1Y
8`1\
8X1a
8U1b
8^1a
8[1d
8d1a
8a1e
8k1C
8j1'
8o1C
8n1'
8w1O
8t1P
8}1Q
8q1W
8z1W
8x1Y
8u1Z
8~1[
8y1a
8v1b
8r1c
8{1c
8s1k
8|1k
8"2C
8!2'
8 26
82s
8A2?
8@2@
8$2?
8#2<
8+2?
8(2@
842?
812<
8=2?
8:2=
8%2K
8.2K
872K
8)2s
822t
8;2u
8*2y
832{
8<2|
8W2?
8V2@
8C2?
8B2<
8G2?
8D2@
8M2?
8J2<
8S2?
8P2=
8E2s
8K2t
8Q2u
8F2y
8L2{
8R2|
9m2?
9l2@
9Y2?
9X2<
9]2?
9Z2@
9c2?
9`2<
9i2?
9f2=
9[2s
9a2t
9g2u
9\2y
9b2{
9h2|
9q2C
9p2'
9o2C
9n2(
9u2C
9t2'
9s2C
9r2(
9y2C
9x2'
9w2C
9v2(
,9z2?
,9|2?
,9{2@
,9~2?
,9}2<
C9%3C
C9$3'
C9!3C
C9"30
C9#36
C9 3;
C93B
K9)3C
K9&3'
K9/3C
K9,3(
K953C
K923)
K9*30
K9'3$
K9030
K9-32
K9630
K9333
K9+36
K9(37
K9136
K9.3:
K9736
K943;
S9a3C
S9_3?
S9`3'
S9:3C
S983?
S993'
S9D3C
S9>3?
S9A3'
S9;3@
S9P3C
S9J3?
S9M3'
S9G3<
S9\3C
S9V3?
S9Y3'
S9S3=
S9E30
S9?3
S9B3$
S9<3s
S9Q30
S9K3
S9N3$
S9H3t
S9]30
S9W3
S9Z3$
S9T3u
S9F36
S9@3
S9C37
S9=3y
S9R36
S9L3
S9O37
S9I3{
S9^36
S9X3
S9[37
S9U3|
Z9d3C
Z9b3?
Z9c3'
Z9q3C
Z9k3?
Z9n3'
Z9h3@
Z9z3?
Z9}3'
Z9w3<
Z9e3K
Z9t3K
Z9r30
Z9l3
Z9o3$
Z9i3s
Z9{3
Z9~3$
Z9x3t
Z9s36
Z9m3
Z9p37
Z9j3y
Z9f3
Z9|3
Z9y3{
Z9u3
Z9g3
Z9v3
x940
974C
954?
964'
9&4C
9 4?
9#4'
924C
9,4?
9/4'
9)4=
9'40
9$4$
9340
904$
9*4u
9(46
9%47
9446
9147
9+4|
9r4C
9p4?
9q4'
9B4C
9@4?
9A4'
9O4C
9I4?
9L4'
9F4@
9^4C
9X4?
9[4'
9U4<
9m4C
9g4?
9j4'
9d4=
9C4K
9R4K
9a4K
9P40
9M4$
9G4s
9_40
9\4$
9V4t
9n40
9k4$
9e4u
9Q46
9N47
9H4y
9`46
9]47
9W4{
9o46
9l47
9f4|
9?4?
984?
9:4?
994@
9<4?
9;4<
9>4?
9=4=
9u4C
9s4?
9t4'
9|4?
9y4@
9v4>
9z4s
9{4y
9w4z
9x4~
95$
955C
945'
9!5C
9 5(
9%5C
9"5'
9+5C
9(5(
915C
9.5)
9&50
9#5$
9,50
9)52
9250
9/53
9'56
9$57
9-56
9*5:
9356
905;
9T5C
9S5'
975C
965(
9>5C
985'
9G5C
9A5(
9P5C
9J5)
995D
9B5D
9K5D
9?50
9<5$
9H50
9E52
9Q50
9N53
9@56
9=57
9:5G
9I56
9F5:
9C5G
9R56
9O5;
9L5G
9;5I
9D5I
9M5I
9s5C
9r5'
9V5C
9U5(
9]5C
9W5'
9f5C
9`5(
9o5C
9i5)
9X5E
9a5E
9j5E
9^50
9[5$
9g50
9d52
9p50
9m53
9_56
9\57
9Y58
9h56
9e5:
9b58
9q56
9n5;
9k58
9Z5B
9c5B
9l5B
9u5C
9t5(
9y5C
9v5'
9|5(
9z50
9w5$
9}52
9{56
9x57
9~5:
:"6C
: 6)
:#6s
:!6v
 :(6C
 :$6'
 :.6C
 :*6(
 :46C
 :06)
 :%6D
 :+6D
 :16D
 :)6s
 :'6t
 :/6s
 :-6u
 :56s
 :36v
 :&6x
 :,6x
 :26x
)::6C
):66'
):@6C
):<6(
):F6C
):B6)
):76E
):=6E
):C6E
):;6s
):96t
):A6s
):?6u
):G6s
):E6v
):86w
):>6w
):D6w
2:J6C
2:H6'
2:N6C
2:L6(
2:R6C
2:P6)
2:K6s
2:I6t
2:O6s
2:M6u
2:S6s
2:Q6v
;:V6C
;:T6'
;:Z6C
;:X6(
;:^6C
;:\6)
;:W6s
;:U6t
;:[6s
;:Y6u
;:_6s
;:]6v
E:d6C
E:`6'
E:j6C
E:f6(
E:p6C
E:l6)
E:a6D
E:g6D
E:m6D
E:e6s
E:c6t
E:k6s
E:i6u
E:q6s
E:o6v
E:b6x
E:h6x
E:n6x
O:v6C
O:r6'
O:|6C
O:x6(
O:~6)
O:s6E
O:y6E
O:w6s
O:u6t
O:}6s
O:{6u
O:t6w
O:z6w
:7)
:27C
:17'
:%7C
:.7C
:(7)
: 7D
:)7D
:&70
:#72
:/70
:,73
:'76
:$7:
:!7G
:076
:-7;
:*7G
:"7I
:+7I
:Q7C
:P7'
:47C
:37(
:;7C
:57'
:D7C
:>7(
:M7C
:G7)
:67E
:?7E
:H7E
:<70
:97$
:E70
:B72
:N70
:K73
:=76
::77
:778
:F76
:C7:
:@78
:O76
:L7;
:I78
:87B
:A7B
:J7B
:g7C
:f7'
:S7C
:R7(
:W7C
:T7'
:]7C
:Z7(
:c7C
:`7)
:X70
:U7$
:^70
:[72
:d70
:a73
:Y76
:V77
:_76
:\7:
:e76
:b7;
:n7C
:h7'
:w7C
:q7(
:z7)
:i7D
:r7D
:{7D
:o70
:l7$
:x70
:u72
:~73
:p76
:m77
:j7G
:y76
:v7:
:s7G
:|7G
:k7I
:t7I
:}7I
:#8<
:8U
;)8C
;&8E
;*80
;'88
;+86
;(8B
;/8C
;,8D
;080
;-8G
;186
;.8I
;88<
;98<
;38V
";D8<
";>8
";E8<
";?8U
";H8
";B8
";I8
";C8
";F8
";@8
";G8
";A8
+;M8C
+;J8E
+;N8C
+;Q80
+;K88
+;R86
+;L8B
+;O80
+;P86
4;V8C
4;S8D
4;W8C
4;Z80
4;T8G
4;[86
4;U8I
4;X80
4;Y86
=;_8<
=;^8=
=;]8<
=;\8
D;b8C
D;`8D
K;j8?
K;g8@
K;s8?
K;p8<
K;|8?
K;y8=
K;d8>
K;m8>
K;}8
K;v8>
K;k8
K;h8s
K;t8
K;q8t
K;z8u
K;l8
K;i8y
K;e8z
K;u8
K;r8{
K;n8z
K;{8|
K;~8
K;w8z
K;f8~
K;o8~
K;x8~
;#9<
;,9<
;'9V
;59<
;/9=
;>9<
;G9<
;09U
;99U
;B9U
;M9C
;J9E
;N90
;K98
;O96
;L9B
;S9C
;P9D
;T90
;Q9G
;U96
;R9I
;\9<
;]9<
;W9V
;h9<
;i9<
;c9U
<q9C
<n9E
<r9C
<u90
<o98
<v96
<p9B
<s90
<t96
<z9C
<w9D
<{9C
<~90
<x9G
<y9I
<|90
<}96
=:Y
"=&:O
"=#:Q
"=/:O
"=,:R
"= :m
"=):m
"=':Y
"=$:[
"=0:Y
"=-:\
"=(:a
"=%:d
"=!:o
"=1:a
"=.:e
"=*:o
"=":q
"=+:q
-=P:O
-=O:P
-=3:O
-=2:Q
-=::O
-=7:P
-=C:O
-=@:Q
-=L:O
-=I:R
-=4:m
-==:m
-=F:m
-=;:Y
-=8:Z
-=D:Y
-=A:[
-=M:Y
-=J:\
-=<:a
-=9:b
-=5:o
-=E:a
-=B:d
-=>:o
-=N:a
-=K:e
-=G:o
-=6:q
-=?:q
-=H:q
5=o:O
5=n:P
5=R:O
5=Q:Q
5=Y:O
5=V:P
5=b:O
5=_:Q
5=k:O
5=h:R
5=S:W
5=\:W
5=e:W
5=Z:Y
5=W:Z
5=c:Y
5=`:[
5=l:Y
5=i:\
5=[:a
5=X:b
5=T:c
5=d:a
5=a:d
5=]:c
5=m:a
5=j:e
5=f:c
5=U:k
5=^:k
5=g:k
==q:<
==p:
==x:<
==r:=
=={:
==s:V
==|:V
==y:
==v:
==z:
==w:
==t:
==}:
==u:
==~:
m=;I
t=$;C
t=";E
t= ;<
t=!;C
{=3;C
{=1;D
{=+;C
{=';D
{=.;-
{=,;0
{=(;G
{=-;6
{=);I
{=/;<
{=0;C
=8;<
=7;=
=6;<
=<;<
=;;=
=:;<
=D;<
=B;V
=?;<
==;V
=A;<
=M;<
=K;U
=H;<
=F;U
=J;<
=m;C
=l;'
=P;C
=O;(
=W;C
=Q;'
=`;C
=Z;(
=i;C
=c;)
=R;E
=[;E
=d;E
=X;0
=U;$
=a;0
=^;2
=j;0
=g;3
=Y;6
=V;7
=S;8
=b;6
=_;:
=\;8
=k;6
=h;;
=e;8
=T;B
=];B
=f;B
=o;C
=n;(
=v;C
=p;'
=y;(
=q;D
=z;D
=w;0
=t;$
=};2
=x;6
=u;7
=r;G
=~;:
={;G
=s;I
=|;I
t> <
t>"<
t>$<
t>!</
t>#<!
>'<p
>(<h
>+<h
>.<h
>)<5
>,<'
>/</
>1<!
>J<
?`<9
?b<9
&?e<t
-?f<t
6?g<t
>?h<t
H?i<t
N?j<t
V?k<t
]?l<t
f?m<t
o?n<t
z?o<t
?p<t
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
prefetchwt1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
prefetcht2
pfrcpit2
vbroadcastf32x2
vbroadcasti32x2
vshuff64x2
vextractf64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vextracti64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vextractf32x8
vinsertf32x8
vbroadcastf32x8
vextracti32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
seta
prefetchnta
crc32b
vpermi2b
vpmovm2b
vpermt2b
movdir64b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
llwpcb
slwpcb
kaddb
vpaddb
xaddb
kandb
vpexpandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
kshiftlb
vgf2p8mulb
imulb
vpblendmb
vptestnmb
vpcomb
vpshufbitqmb
vpermb
vptestmb
kandnb
vpsignb
fcmovnb
vpcmpb
vgf2p8affineqb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmultishiftqb
vgf2p8affineinvqb
vpmovqb
sarb
rcrb
shrb
korb
kxnorb
rorb
kxorb
vpinsrb
kshiftrb
vpextrb
scasb
vpabsb
movabsb
vpsubsb
vpaddsb
lodsb
vpminsb
cmpsb
vpcompressb
outsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
vpopcntb
knotb
vprotb
vpbroadcastb
ktestb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
kaddd
vpaddd
vpshldd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpshrdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
vpternlogd
pf2id
invpcid
rdpid
invvpid
fbld
vpshld
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vfpclasspd
incsspd
rdsspd
vcompresspd
vgetmantpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
vcmpsd
vgetexpsd
vpcompressd
wrssd
vfpclasssd
wrussd
vp4dpwssd
vpdpwssd
vgetmantsd
movntsd
vsqrtsd
vbroadcastsd
vpdpbusd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
vpcmpgtd
vpopcntd
vplzcntd
knotd
vprotd
vpbroadcastd
ktestd
kortestd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpshldvd
vpshrdvd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
kunpckwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
tpause
sete
cldemote
sha1nexte
fnsave
fxsave
fcmove
invlpg
setg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
movdiri
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
bndmk
crc32l
leal
cmoval
lwpval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
bndcl
decl
blcicl
blsicl
t1mskcl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
ptwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
blcil
bzhil
blsil
movntil
blcmskl
blsmskl
tzmskl
rcll
fildll
shll
lcalll
blcfilll
blsfilll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
scasl
movabsl
blcsl
ldsl
lodsl
lesl
lfsl
lgsl
cmovnsl
cmpsl
vfpclasspsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
outsl
cmovsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
bndcn
vpandn
xbegin
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
ffreep
fmulp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
rstorssp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
crc32q
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
leaq
vpshaq
vpsraq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
blcicq
blsicq
t1mskcq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
kaddq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
kunpckdq
vpshldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
rdrandq
vfpclasspdq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vpshrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
ptwriteq
cmoveq
bsfq
negq
cmpxchgq
vpternlogq
cmovgq
pushq
blciq
bzhiq
blsiq
movntiq
blcmskq
blsmskq
tzmskq
rclq
vpshlq
callq
blcfillq
blsfillq
vpsllq
vpmullq
vprolq
vpsrlq
lslq
movslq
kshiftlq
imulq
cmovlq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
cmovnoq
cmovoq
bswapq
pdepq
vpcmpq
cmovnpq
nopq
popq
incsspq
rdsspq
cmovpq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
larq
sarq
rcrq
shrq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
bsrq
blsrq
vpinsrq
btrq
kshiftrq
strq
bextrq
vpextrq
scasq
vpabsq
movabsq
blcsq
lodsq
lfsq
lgsq
vpminsq
cmovnsq
cmpsq
vcvtsi2ssq
vcvtusi2ssq
vpcompressq
lssq
wrssq
wrussq
btsq
cmovsq
vpmaxsq
vpconflictq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
vpopcntq
vplzcntq
tzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
ktestq
kortestq
pextq
vpmadd52huq
vpmadd52luq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpshldvq
vpshrdvq
idivq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
umonitor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
fdivr
fsubs
fisubs
fadds
fiadds
flds
filds
vp4dpwssds
vpdpwssds
vpdpbusds
xsaves
fmuls
fimuls
fcoms
ficoms
lwpins
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vfmsubaddps
vhaddps
v4fmaddps
vfmaddps
v4fnmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
vgatherqps
vscatterqps
vorps
vxorps
vfpclassps
vcompressps
vextractps
vgetmantps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
xrstors
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
v4fmaddss
vfmaddss
v4fnmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
vfpclassss
vgetmantss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
fldt
pfcmpgt
umwait
invept
xsaveopt
clflushopt
fstpt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
bndcu
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
bndmov
crc32w
vpermi2w
vpmovm2w
vpermt2w
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vdbpsadbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
kaddw
vpaddw
xaddw
rdseedw
vpshldw
kandw
vpexpandw
rdrandw
vpblendw
vpshrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
kshiftlw
imulw
cmovlw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
cmovnow
cmovow
bswapw
vpcmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
larw
sarw
rcrw
verw
pmulhrw
shrw
korw
kxnorw
rorw
kxorw
bsrw
vpinsrw
btrw
kshiftrw
ltrw
strw
vpextrw
scasw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lodsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
cmpsw
vpmulhrsw
vpcompressw
lssw
btsw
fnstsw
outsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
vpopcntw
lzcntw
tzcntw
knotw
vprotw
vpbroadcastw
ktestw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
vpshldvw
vpshrdvw
idivw
vpsllvw
vpsrlvw
kmovw
vpmacsww
lmsww
smsww
vpmacssww
movsww
movzww
pfmax
bndldx
vfpclasspdx
vcvttpd2dqx
vcvtpd2dqx
vcvttpd2udqx
vcvtpd2udqx
vcvtpd2psx
vcvtqq2psx
vcvtuqq2psx
vfpclasspsx
bndstx
vfpclasspdy
vcvttpd2dqy
vcvtpd2dqy
vcvttpd2udqy
vcvtpd2udqy
clrssbsy
vcvtpd2psy
vcvtqq2psy
vcvtuqq2psy
vfpclasspsy
vfpclasspdz
vfpclasspsz
jecxz
jcxz
jrcxz
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
sha256rnds2
%xmm0, 
pblendvb
%xmm0, 
blendvpd
%xmm0, 
blendvps
%xmm0, 
xorl
$FP, 
movabsb
%al, 
stosb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
movabsw
%ax, 
stosw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
stosl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
stosq
%rax, 
movq
%rax, 
insb
%dx, 
insl
%dx, 
insw
%dx, 
vexp2pd
{sae}, 
vcvtps2pd
{sae}, 
vrcp28pd
{sae}, 
vrsqrt28pd
{sae}, 
vminpd
{sae}, 
vgetexppd
{sae}, 
vmaxpd
{sae}, 
vcvtss2sd
{sae}, 
vrcp28sd
{sae}, 
vrsqrt28sd
{sae}, 
vucomisd
{sae}, 
vcomisd
{sae}, 
vminsd
{sae}, 
vgetexpsd
{sae}, 
vmaxsd
{sae}, 
vcvttsd2si
{sae}, 
vcvttss2si
{sae}, 
vcvttsd2usi
{sae}, 
vcvttss2usi
{sae}, 
vcvttpd2dq
{sae}, 
vcvttps2dq
{sae}, 
vcvttpd2udq
{sae}, 
vcvttps2udq
{sae}, 
vcvttpd2qq
{sae}, 
vcvttps2qq
{sae}, 
vcvttpd2uqq
{sae}, 
vcvttps2uqq
{sae}, 
vcvtph2ps
{sae}, 
vexp2ps
{sae}, 
vrcp28ps
{sae}, 
vrsqrt28ps
{sae}, 
vminps
{sae}, 
vgetexpps
{sae}, 
vmaxps
{sae}, 
vrcp28ss
{sae}, 
vrsqrt28ss
{sae}, 
vucomiss
{sae}, 
vcomiss
{sae}, 
vminss
{sae}, 
vgetexpss
{sae}, 
vmaxss
{sae}, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
xorq
$FP 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#SEH_StackAlign 
#CMOV__RFP80 PSEUDO!
#CMOV__VR512 PSEUDO!
#CMOV__VK32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#CMOV__VK2 PSEUDO!
#CMOV__VK64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__VK4 PSEUDO!
#CMOV__VK16 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__VR256 PSEUDO!
#CMOV__VR128 PSEUDO!
#CMOV__VK8 PSEUDO!
#CMOV__GR8 PSEUDO!
#CMOV__VR256X PSEUDO!
#CMOV__VR128X PSEUDO!
#BINOP RELEASE_FADD32mr PSEUDO!
#BINOP RELEASE_FADD64mr PSEUDO!
rep;movsb (%esi), %es:(%edi)
rep;movsl (%esi), %es:(%edi)
rep;movsq (%esi), %es:(%edi)
rep;movsw (%esi), %es:(%edi)
rep;stosb %al, %es:(%edi)
rep;stosw %ax, %es:(%edi)
rep;stosl %eax, %es:(%edi)
rep;stosq %rax, %es:(%edi)
rep;movsb (%rsi), %es:(%rdi)
rep;movsl (%rsi), %es:(%rdi)
rep;movsq (%rsi), %es:(%rdi)
rep;movsw (%rsi), %es:(%rdi)
rep;stosb %al, %es:(%rdi)
rep;stosw %ax, %es:(%rdi)
rep;stosl %eax, %es:(%rdi)
rep;stosq %rax, %es:(%rdi)
lcalll
ljmpl
lcallq
rex64 jmpq
ljmpq
lcallw
ljmpw
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
endbr32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
endbr64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
# CATCHPAD
LIFETIME_END
BUNDLE
# EH_RESTORE
DBG_VALUE
# XABORT DEF
DBG_LABEL
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
# CATCHRET
# CLEANUPRET
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
xlatb
clac
stac
xcryptcbc
getsec
salc
rdpmc
vmfunc
rdtsc
cpuid
xend
cltd
cwtd
wbinvd
wbnoinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
pconfig
vmlaunch
clgi
stgi
fldpi
lock
%dx, %al
pushal
popal
pushfl
popfl
# FEntry call
vmmcall
vmcall
syscall
vzeroall
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
vpcom
fpatan
fptan
fsin
# dynamic stack allocation
clzero
into
cqto
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
saveprevssp
fdecstp
fincstp
pushfq
popfq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
fninit
frndint
fsqrt
xtest
ftst
enclu
rdpkru
wrpkru
xgetbv
xsetbv
enclv
pushaw
popaw
pushfw
popfw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%eax, %ecx
invlpga
%rax, %ecx
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
monitorx
mwaitx
setssbsy
fldz
 C!*
*+C!
E!9$C!
 C!z)I!z)C!
!Y+C!
E!HC!
%C!f
1C!?
*B@g
-B@_
C!T*C!i
+C!C
+C!L
+C!U
,C!w
+C!^
+C!g
C!I.C!
C!1-C!
S@Y(B@Y(B@
"B@?
B@c'S@c'F@c'B@c'C!+
CYL
h,B@I
-B@R
E!A$C!
fT&L
/B@/
/B@\
B@0/B@
B@(/B@
a-B@*
,B@b
a?+B 
.B@V
)B@S
(C!S
(C!B>
E!QC!
%C!h
(C!Q
E!QC!
%C!h
 B@_
.C!8
D@8+C!*
g*!L
D@:-C!
.C!(
D@(+C!y
D@A.C!h
D@Z.C!;
D@;/C!:
D@:,C!y
D@y,C!
D@4!C!o
D@o*C!*
,C!r
C!q,J@q
D@q,C!\
C!M*J@M
D@M*C!
D@U!C!
F@E
'E%F@
%B@=
Fx*L
C!=
E!=%C!R
F@k(C!k(C!
-C!T
.C!8+I!8+C!*
F*!L
1C!t
Ft+L
C!:-I!:-C!
B@I,A@I,B@
D@-)C!
/C!\
C!p)A@p)B@
!C!y
.C!(+I!(+C!`
@@`/B@y
*C!"
+B@x
C!m/I!m/C!
C!A.I!A.C!h
C!N/I!N/C!O
C!Z.I!Z.C!y
D@y-C!;/I!;/C!:,I!:,C!z
C!y,I!y,C!
.B@M
4!I!4!C!N
o*I!o*C!*
c0,J
cW,J
C!q,J@q,I!q,C!\
C!M*J@M*I!M*C!
)B@/
U!I!U!C!P,
P,J@
(C!m-
m-J@G
,J@I
-J@S
f!(J
_&B@
g-J@0
!\*C!y
C!p1I!p1C!b,
b,J@'
3C!Q+L
?2C!
-J@M
K2C!#
2C!<
B@`&
`&B@
'C!|!
 )/B@)/B@l
B@3<
/B@^
S@X(B@X(B@
C!2
E!2%C!I$
%Ku$&
eKu$f
au$$au
&ay)
&ay)
ay)'ay)
V@G
"aG
KG 
"a&
_V@
_V@
_V@
_VP
?,Qw
4B@H
S@a(B@a(B@
6B@a
S@a(B@a(B@
C!$
'$&B@$&a!$&C!$
1$&B@$&a!$&C!$
1$&B@$&a!$&C!
"B@50
J50^!5
"C!50
C!(0
J(0^!(
0_!s
"B@>
B@+4B@+4a!+4C!
JA0j!A0I!
B@b'F
_@b'`
ib'$ab
ib'F
C!|0)
J|0b!|0_!
B@f5B@f5a!f5C!
0_!f
5C!f
5C!
B@y5B@y5a!y5C!2
5C!%
B@>5B@"
B@>5B@
B@+5B@
B@+5B@
B@R5B@;
B@R5B@
JM0j!M0I!
#C!6
l*V@l
l*V@l
l*V@>
"C!b
C!}$
}$^!}
E!}$B@}$a!}$C!}$)
}$b!}$_!}$B@}$a!}$C!}$.
b!}$B@}$a!}$C!p
1V@1
r1h
1V@1
1V@1VP1
sX%(
X%V@X
X%V@X
X%V@X%VPX
sr(V@r(VPr
iG'f
e@G'
ig#&
ig#f
eKg##
iB"&
iB"f
eKB"#
i]"&
i]"f
eK]"#
i,#&
i,#f
eK,##
im"&
im"f
eKm"#
i,'f
e@,'
i<#&
i<#f
eK<##
im'f
e@m'
iW#&
iW#f
eKW##
i2"&
i2"f
eK2"#
iT'f
e@T'
it#&
it#f
eKt##
iO"&
iO"f
eKO"#
iz"&
iz"f
eKz"#
i9'f
e@9'
iI#&
iI#f
eKI##
iz'f
e@z'
i$"&
i$"f
eK$"#
nng
Jg^!g
E!gB@ga!gC!g)
Jgb!g_!gB@ga!gC!g.
Kg Kg
b!gB@p4B@p4a!p4C!ga!gC!
%B@W6B@W6a!W6C!
=&(O=
C=&J
=&V@=&L
=&hO=
N=&J
=&V@=&L
O=&J
=&VP=&L
=&V@=&L
(V@.
fS&L
fS&L
)B@F
"aP
KP 
"aP
KP 
'D%F
'D%F
%B@<
 B@w
w*L
B@W>
%K<%&
eK<%f
a<%$a<
e@j(f
ij($aj
&a7+
a7+/
i7+'a7+0
)!L
)!V@)
)!V@)
)!V@)
s+L
&a9-
&a9-
i9-'a9-
?,W1 V@
1 hn
+W1 (
?,W1 V@
?,W1 V@
?lWV/V@
kWV/(
?lWV/V@
?lWV/V@
-V@s
$d.B@d.a!d.C!d
J5d.B@d.a!d.C!d
5d.B@d.a!d.C!s
i */
i *0
&a&%
&%(O&
C&%J
&%V@&%L
&%hO&
N&%J
&%V@&%L
%K&%&
O&%J
&%V@&%L
&%'a&
eK&%f
Ii>
>hO>
N>J
>V@>L
O>J
>V@>L
"a>
K> 
%Kv%&
eKv%f
i!#&
i!#f
eK!##
i4*/
i4*0
@@_+j!_+I!_+B@_+a!_+C!_
j@_+k!_
f!_+B@_+a!_+C!_+[@_+m!_+g!_+B@_+a!_+C!
*B@r
 B@'
&a'+
@@_/B@b
@@b*B@R
i: 'a:
&al/
al//
il/'al/0
&a@.
a@./
i@.'a@.0
i( 'a(
&aM/
aM//
iM/'aM/0
+C!u
B@**B@**B@**B@N
!X-B@X-a!X-C!X
J"X-B@X-a!X-C!X
$X-B@X-a!X-C!
!N-B@N-a!N-C!N
J"N-B@N-a!N-C!N
$N-B@N-a!N-C!
!C-B@C-a!C-C!C
J"C-B@C-a!C-C!C
$C-B@C-a!C-C!
&aY.
aY./
iY.'aY.0
&a:/
a://
i:/'a:/0
&a9,
a9,/
i9,'a9,0
&ax,
ax,/
ix,'ax,0
&a3!
ip 'ap
JL /
0KL 0
i~//
i~/0
O+V@O
O+V@O
O+V@i
JV /
0KV 0
}+V@}
}+V@}
}+V@
x/,J
c/,hL/
F/,J
/,V@/,L
x/,(M/
L/,J
/,V@/,L
Ix/,
KM/,J
/,V@/,L
c/,J
xV,J
cV,hLV
FV,J
V,V@V,L
xV,(MV
LV,J
V,V@V,L
IxV,
KMV,J
V,V@V,L
cV,J
&ag 
ig 'ag
ip,J
cp,hLp
Fp,J
p,V@p,L
ap,/
xp,(Mp
Lp,J
p,V@p,L
ap,/
Ixp,
KMp,J
p,V@p,L
ap,/
ip,J
iC 'aC
au//
iu/'au/0
iL*J
cL*hLL
FL*J
L*V@L*L
aL*/
xL*(ML
LL*J
L*V@L*L
aL*/
IxL*
KML*J
L*V@L*L
aL*/
iL*J
&ay 
iy 'ay
&aT!
p5(L
5(VP5
5(V@v
B@=4B@=4a!=4C!
#B@$6B@$6a!$6C!
p*(L
*(VP*
*(V@
p?(L
?(V@?(L
?(VP
f (L
B@N4B@N4a!N4C!
#B@56B@56a!56C!
i^&)
^&B@^&
^&B@
e@L(f
aL($aL
B@h&)
h&B@h&
Jh&^!h
E!h&B@h&a!h&C!h&)
Kh&&Kh
Kh&b!h&_!h&B@h&a!h&C!h&.
SKh&fKh
b!h&B@h
h&e!h&d!h&a!h&C!h&
h&B@
B@q&)
q&B@q&
q&B@>
4B@>
S@W(B@W(B@
6B@W
S@W(B@W(B@
%K1%&
eK1%f
?+B ?+
-C!Y
&C!v>
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
bnd1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
bnd3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
dirflag
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
prefetchwt1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vbroadcastf32x2
vbroadcasti32x2
vshuff64x2
vextractf64x2
vinsertf64x2
vbroadcastf64x2
vshufi64x2
vextracti64x2
vinserti64x2
vbroadcasti64x2
vmovdqa64
xsavec64
fxsave64
fxrstor64
xsaves64
xrstors64
xsaveopt64
vmovdqu64
sha1rnds4
vshuff32x4
vextractf32x4
vinsertf32x4
vbroadcastf32x4
vshufi32x4
vextracti32x4
vinserti32x4
vbroadcasti32x4
vextractf64x4
vinsertf64x4
vbroadcastf64x4
vextracti64x4
vinserti64x4
vbroadcasti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vextractf32x8
vinsertf32x8
vbroadcastf32x8
vextracti32x8
vinserti32x8
vbroadcasti32x8
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
vpermi2b
vpmovm2b
vpermt2b
movdir64b
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
llwpcb
slwpcb
kaddb
vpaddb
kandb
vpexpandb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
vpavgb
vpmovmskb
vpshlb
kshiftlb
vgf2p8mulb
vpblendmb
vptestnmb
vpcomb
vpshufbitqmb
vpermb
vptestmb
kandnb
vpsignb
vpcmpb
vgf2p8affineqb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmultishiftqb
vgf2p8affineinvqb
vpmovqb
korb
kxnorb
kxorb
vpinsrb
kshiftrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
stosb
cmpsb
vpcompressb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
vpopcntb
knotb
vprotb
vpbroadcastb
ktestb
kortestb
vpcomub
vpminub
vpcmpub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
kmovb
clwb
vpacksswb
vpackuswb
vpmovuswb
vpmovswb
vpmovwb
pfacc
pfnacc
pfpnacc
vaesdec
xsavec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpmovm2d
vpermt2d
vpbroadcastmw2d
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
kaddd
vpaddd
vpshldd
kandd
vpandd
vpexpandd
vpblendd
vpgatherdd
vpscatterdd
vpshrdd
vpmacsdd
vpmacssdd
rdseed
pi2fd
vpshufd
vpternlogd
pf2id
invpcid
rdpid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vprold
vpsrld
vmptrld
kshiftld
vpblendmd
vptestnmd
vpcomd
vpermd
vptestmd
vpand
rdrand
kandnd
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vexp2pd
vcvtdq2pd
vcvtudq2pd
vcvtqq2pd
vcvtuqq2pd
vcvtps2pd
vpermt2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vexpandpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vreducepd
vrangepd
vrndscalepd
vscalefpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vfixupimmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgetexppd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vfpclasspd
incsspd
rdsspd
vcompresspd
vgetmantpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
shrd
kord
kxnord
vpord
vprord
kxord
vpxord
vpinsrd
kshiftrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vreducesd
vrangesd
vrndscalesd
vscalefsd
vucomisd
vcomisd
vmulsd
vfixupimmsd
vpminsd
vminsd
stosd
vcmpsd
vgetexpsd
vpcompressd
wrssd
vfpclasssd
wrussd
vp4dpwssd
vpdpwssd
vgetmantsd
movntsd
vsqrtsd
vbroadcastsd
vpdpbusd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
lgdtd
sgdtd
lidtd
sidtd
vpcmpgtd
vpopcntd
vplzcntd
knotd
vprotd
vpbroadcastd
ktestd
kortestd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpshldvd
vpshrdvd
vpsllvd
vprolvd
vpsrlvd
vpmaskmovd
vmovd
vprorvd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
kunpckwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
tpause
sete
vmwrite
ptwrite
cldemote
sha1nexte
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
movdiri
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
movnti
bndmk
blcmsk
blsmsk
tzmsk
lwpval
bndcl
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
vpmovb2m
vpmovd2m
vpmovq2m
vpmovw2m
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
bndcn
vpandn
xbegin
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
ffreep
fmulp
rex64 jmp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
rstorssp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
cmovp
vpbroadcastmb2q
vpermi2q
vpmovm2q
movdq2q
vpermt2q
vpshaq
vpsraq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
kaddq
vpaddq
vphadddq
vpunpckhdq
kunpckdq
vpshldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
kandq
vpandq
vpexpandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vpshrdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpternlogq
vpshlq
vpsllq
vpmullq
vprolq
vpsrlq
kshiftlq
vpblendmq
vptestnmq
vpcomq
vpermq
vptestmq
kandnq
vpandnq
valignq
vpcmpq
incsspq
rdsspq
vcvttpd2qq
vcvtpd2qq
vcvttps2qq
vcvtps2qq
vpcmpeqq
vpgatherqq
vpscatterqq
vcvttpd2uqq
vcvtpd2uqq
vcvttps2uqq
vcvtps2uqq
korq
kxnorq
vporq
vprorq
kxorq
vpxorq
vpinsrq
kshiftrq
vpextrq
vpabsq
vpminsq
stosq
cmpsq
vpcompressq
wrssq
wrussq
movsq
vpmaxsq
vpconflictq
vpcmpgtq
vpopcntq
vplzcntq
movntq
knotq
vprotq
insertq
vpbroadcastq
ktestq
kortestq
vpmadd52huq
vpmadd52luq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpshldvq
vpshrdvq
vpsllvq
vprolvq
vpsrlvq
vpmaskmovq
vmovq
vprorvq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
umonitor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
vp4dpwssds
vpdpwssds
vpdpbusds
xsaves
lwpins
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vexp2ps
vcvtdq2ps
vcvtudq2ps
vcvtqq2ps
vcvtuqq2ps
vpermt2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
v4fmaddps
vfmaddps
v4fnmaddps
vfnmaddps
vaddps
vexpandps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vreduceps
vrangeps
vrndscaleps
vscalefps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vfixupimmps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgetexpps
vgatherqps
vscatterqps
vorps
vxorps
vfpclassps
vcompressps
vextractps
vgetmantps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
xrstors
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
v4fmaddss
vfmaddss
v4fnmaddss
vfnmaddss
vaddss
vroundss
vreducess
vrangess
vrndscaless
vscalefss
vucomiss
vcomiss
vmulss
vfixupimmss
vminss
vrcpss
vcmpss
vgetexpss
vfpclassss
vgetmantss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
umwait
popcnt
lzcnt
tzcnt
invept
xsaveopt
clflushopt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
bndcu
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
bndmov
vpermi2w
vpmovm2w
vpermt2w
vpshaw
vpsraw
vphsubbw
vdbpsadbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
kaddw
vpaddw
vpshldw
kandw
vpexpandw
vpblendw
vpshrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
kshiftlw
vpblendmw
vptestnmw
vpcomw
vpermw
vptestmw
kandnw
vpsignw
vpcmpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
verw
pmulhrw
korw
kxnorw
kxorw
vpinsrw
kshiftrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
stosw
cmpsw
vpmulhrsw
vpcompressw
fnstsw
vpsubusw
vpaddusw
movsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
vpcmpgtw
vpopcntw
knotw
vprotw
vpbroadcastw
ktestw
kortestw
vpmulhuw
vpcomuw
vpminuw
vpcmpuw
vphminposuw
vpmaxuw
vpsravw
vpshldvw
vpshrdvw
vpsllvw
vpsrlvw
kmovw
vpmacsww
vpmacssww
pfmax
adcx
bndldx
shlx
mulx
adox
sarx
shrx
rorx
movsx
bndstx
movzx
clrssbsy
jecxz
jcxz
jrcxz
fcmovnb
st(0), 
fcmovb
st(0), 
fcmovnbe
st(0), 
fcmovbe
st(0), 
fcmovne
st(0), 
fcmove
st(0), 
fcmovnu
st(0), 
fcmovu
st(0), 
xorl
$FP, 
al, 
scasb
al, 
lodsb
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
scasw
ax, 
lodsw
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
scasd
eax, 
lodsd
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
scasq
rax, 
lodsq
rax, 
rax, 
movabs
rax, 
test
rax, 
rax, 
outsb
dx, 
outsd
dx, 
outsw
dx, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
xorq
$FP 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#SEH_StackAlign 
#CMOV__RFP80 PSEUDO!
#CMOV__VR512 PSEUDO!
#CMOV__VK32 PSEUDO!
#CMOV__RFP32 PSEUDO!
#CMOV__FR32 PSEUDO!
#CMOV__GR32 PSEUDO!
#CMOV__VK2 PSEUDO!
#CMOV__VK64 PSEUDO!
#CMOV__RFP64 PSEUDO!
#CMOV__FR64 PSEUDO!
#CMOV__VK4 PSEUDO!
#CMOV__VK16 PSEUDO!
#CMOV__GR16 PSEUDO!
#CMOV__VR256 PSEUDO!
#CMOV__VR128 PSEUDO!
#CMOV__VK8 PSEUDO!
#CMOV__GR8 PSEUDO!
#CMOV__VR256X PSEUDO!
#CMOV__VR128X PSEUDO!
#BINOP RELEASE_FADD32mr PSEUDO!
#BINOP RELEASE_FADD64mr PSEUDO!
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
endbr32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
endbr64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
# CATCHPAD
LIFETIME_END
BUNDLE
# EH_RESTORE
DBG_VALUE
# XABORT DEF
DBG_LABEL
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
# CATCHRET
# CLEANUPRET
LIFETIME_START
rep movsb es:[edi], [esi]
rep movsd es:[edi], [esi]
rep movsq es:[edi], [esi]
rep movsw es:[edi], [esi]
rep movsb es:[rdi], [rsi]
rep movsdi es:[rdi], [rsi]
rep movsq es:[rdi], [rsi]
rep movsw es:[rdi], [rsi]
ud2b
xcryptecb
xcryptcfb
xcryptofb
xlatb
clac
stac
xcryptcbc
getsec
salc
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
xend
iretd
wbinvd
wbnoinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
pushf
popf
retf
pconfig
vmlaunch
clgi
stgi
fldpi
lock
rep stosb es:[edi], al
rep stosb es:[rdi], al
dx, al
pushal
popal
# FEntry call
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
vpcom
fpatan
fptan
fsin
# dynamic stack allocation
clzero
into
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
saveprevssp
fdecstp
fincstp
pushfq
popfq
retfq
iretq
sysretq
sysexitq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
push
clts
fldl2t
fxtract
iret
sysret
mwait
fninit
sysexit
frndint
fsqrt
xtest
ftst
enclu
rdpkru
wrpkru
xgetbv
xsetbv
enclv
pushaw
popaw
fyl2x
fnstsw
rep stosw es:[edi], ax
rep stosw es:[rdi], ax
dx, ax
vmload
vmsave
vmrun
skinit
rep stosd es:[edi], eax
rep stosd es:[rdi], eax
dx, eax
vmload
vmsave
vmrun
rep stosq es:[edi], rax
rep stosq es:[rdi], rax
invlpga
eax, ecx
invlpga
rax, ecx
al, dx
ax, dx
eax, dx
fnclex
monitorx
mwaitx
setssbsy
fldz
vgatherpf0dpd
vscatterpf0dpd
vgatherpf1dpd
vscatterpf1dpd
vgatherpf0qpd
vscatterpf0qpd
vgatherpf1qpd
vscatterpf1qpd
vgatherpf0dps
vscatterpf0dps
vgatherpf1dps
vscatterpf1dps
vgatherpf0qps
vscatterpf0qps
vgatherpf1qps
vscatterpf1qps
O2:@O
O2:@O
O2J@O
O2J@O
O2J@O
O2J@O
O2J@O
S"O2Z
S"OrZ
S"OrZ
c"O2j@
c"Orj
c"Orj
I2*A
I2:AD
I2:AD
I2:AD
I2:AD
I2JA
I2ZA
I2jAJ
L-
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
dr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
bnd0
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
dr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
bnd1
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
dr12
xmm22
ymm22
zmm22
bnd2
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
dr13
xmm23
ymm23
zmm23
bnd3
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
dr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
dr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
dirflag
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
XMM10
YMM10
ZMM10
CR10
DR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
BND0
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
DR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
BND1
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
DR12
XMM22
YMM22
ZMM22
BND2
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
DR13
XMM23
YMM23
ZMM23
BND3
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
DR14
XMM24
YMM24
ZMM24
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
DR15
XMM25
YMM25
ZMM25
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
R10BH
R11BH
R12BH
R13BH
R14BH
R15BH
R8BH
R9BH
R10WH
R11WH
R12WH
R13WH
R14WH
R15WH
R8WH
R9WH
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
RFP80
VR512
VK32
RFP32
VR512_with_sub_xmm_in_FR32
GR32
VK64
RFP64
FR64
GR64
VR64
GR64_TC_and_GR64_TCW64
GR64_TC_and_GR64_NOSP_and_GR64_TCW64
GR64_NOREX_and_GR64_TCW64
GRH16
VK16
GR16
VR256
VR128
GRH8
GR64_with_sub_32bit_in_GR32_CB
GR64_with_sub_32bit_in_GR32_CB_and_GR32_DC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_DC
GR64_with_sub_32bit_in_GR32_DC
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_TC
GR64_with_sub_32bit_in_GR32_BPSP_and_GR32_TC
GR64_with_sub_32bit_in_GR32_TC
GR64_NOSP_and_GR64_TC
GR64_NOREX_NOSP_and_GR64_TC
GR64_NOREX_and_GR64_TC
GR32_AD
GR64_AD
GR32_ABCD
GR64_ABCD
GR16_ABCD
DEBUG_REG
CONTROL_REG
SEGMENT_REG
VR256H
VR512_with_sub_xmm_in_VR128H
GR8_ABCD_H
GR64_with_sub_32bit_in_GR32_BSI_and_GR32_SIDI
GR64_with_sub_32bit_in_GR32_DIBP_and_GR32_SIDI
GR64_with_sub_32bit_in_GR32_SIDI
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_BSI
GR64_with_sub_32bit_in_GR32_BSI
VR256L
VR512_with_sub_xmm_in_VR128L
GR8_ABCD_L
VK1WM
VK32WM
VK2WM
VK64WM
VK4WM
VK16WM
VK8WM
GR64_with_sub_32bit_in_GR32_BPSP_and_GR32_DIBP
GR64_with_sub_32bit_in_GR32_DIBP
GR64_and_LOW32_ADDR_ACCESS_RBP
GR32_NOSP
GR64_NOSP
GR32_NOREX_NOSP
GR64_NOREX_NOSP
GR64_with_sub_32bit_in_GR32_BPSP
DFCCR
FPCCR
BNDR
GR64_and_LOW32_ADDR_ACCESS
FR32X
FR64X
VR256X
VR128X
GR32_NOREX
GR64_NOREX
GR64_TC_and_GR64_with_sub_16bit_in_GR16_NOREX
LOW32_ADDR_ACCESS_RBP_with_sub_16bit_in_GR16_NOREX
GR8_NOREX
LOW32_ADDR_ACCESS_RBP_with_sub_32bit
LOW32_ADDR_ACCESS_with_sub_32bit
LOW32_ADDR_ACCESS_RBP_with_sub_8bit_with_sub_32bit
GR64_with_sub_8bit
GR64_TCW64_with_sub_8bit
GR64_TCW64_and_GR64_TC_with_sub_8bit
LOW32_ADDR_ACCESS_RBP_with_sub_8bit
G_FLOG10
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
AVX512_256_SET0
AVX512_128_SET0
V_SET0
MMX_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
PREFETCHWT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
MOV32r_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
MOV32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
CMOV_VR512
LD_Fp032
LD_Fp132
INVLPGA32
PUSHA32
POPA32
MOVDIR64B32
VMLOAD32
LXADD32
INVPCID32
RDPID32
INVVPID32
VMSAVE32
PUSHF32
POPF32
LCMPXCHG32
MOVDIRI32
CMOV_VK32
RETPOLINE_CALL32
RETPOLINE_TCRETURN32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
ENDBR32
CMOV_FR32
CMOV_GR32
UMONITOR32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
RDFLAGS32
WRFLAGS32
PUSHGS32
POPGS32
PUSHSS32
POPSS32
IRET32
INVEPT32
SEG_ALLOCA_32
DYN_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
AVX512_512_SEXT_MASK_32
REP_STOSQ_32
REP_MOVSQ_32
REP_STOSW_32
REP_MOVSW_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX32rm32
MOVSX64rm32
MOVSX16rm32
MOV32ao32
MOV64ao32
MOV16ao32
MOV8ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX32rr32
MOVSX64rr32
MOVSX16rr32
FLDLG2
G_FLOG2
CMOV_VK2
FLDLN2
G_FEXP2
PREFETCHT2
JA_2
JB_2
JAE_2
JBE_2
JGE_2
JE_2
JLE_2
JNE_2
JG_2
JL_2
XBEGIN_2
JO_2
JNO_2
JP_2
JMP_2
JNP_2
JS_2
JNS_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
MOVDIR64B64
LLWPCB64
SLWPCB64
XSAVEC64
VMLOAD64
LXADD64
INVPCID64
RDPID64
INVVPID64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
PUSHF64
POPF64
LCMPXCHG64
MOVDIRI64
CMOV_VK64
FARCALL64
RETPOLINE_CALL64
RETPOLINE_TCRETURN64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
ENDBR64
CMOV_FR64
UMONITOR64
FXRSTOR64
XSAVES64
PUSHFS64
POPFS64
RDFLAGS64
WRFLAGS64
PUSHGS64
POPGS64
XRSTORS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
SEG_ALLOCA_64
DYN_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
AVX512_512_SEXT_MASK_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MOV32ao64
MOV64ao64
MOV16ao64
MOV8ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
CMOV_VK4
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
XBEGIN_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
PUSHA16
POPA16
MOVDIR64B16
LXADD16
PUSHF16
POPF16
LCMPXCHG16
CMOV_VK16
CMOV_GR16
UMONITOR16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
PUSHSS16
POPSS16
IRET16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOVZX64rm16
MOVSX16rm16
MOVZX16rm16
MOV32ao16
MOV16ao16
MOV8ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
MOVZX64rr16
MOVSX16rr16
MOVZX16rr16
XSHA256
CMOV_VR256
VBROADCASTF128
VBROADCASTI128
CMOV_VR128
LXADD8
LCMPXCHG8
CMOV_VK8
CMOV_GR8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
SBB8mi8
SUB8mi8
ADC8mi8
ADD8mi8
AND8mi8
CMP8mi8
XOR8mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SBB8ri8
SUB8ri8
ADC8ri8
ADD8ri8
AND8ri8
CMP8ri8
XOR8ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
MOV32ImmSExti8
MOV64ImmSExti8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVZX64rm8
MOVSX16rm8
MOVZX16rm8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVZX64rr8
MOVSX16rr8
MOVZX16rr8
G_FMA
PREFETCHNTA
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
LLWPCB
SLWPCB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
SCASB
LODSB
INSB
STOSB
CMPSB
OUTSB
MOVSB
G_FSUB
G_SUB
G_ATOMICRMW_SUB
CLWB
CLAC
STAC
XCRYPTCBC
TAILJMPd64_CC
TAILJMPd_CC
GETSEC
XSAVEC
G_INTRINSIC
SALC
RDPMC
VMFUNC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
RDTSC
KSET0D
KSET1D
BSWAP16r_BAD
G_SEXTLOAD
G_ZEXTLOAD
G_LOAD
CATCHPAD
G_FADD
G_ADD
G_ATOMICRMW_ADD
CPUID
G_ATOMICRMW_NAND
G_AND
G_ATOMICRMW_AND
XEND
LIFETIME_END
G_BRCOND
G_INTRINSIC_ROUND
INCSSPD
RDSSPD
LOAD_STACK_GUARD
AVX512_FsFLD0SD
WRSSD
WRUSSD
MOVNTSD
WBINVD
WBNOINVD
FLDL2E
G_SSUBE
G_USUBE
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
G_SADDE
G_UADDE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOCAL_ESCAPE
LOOPE
CDQE
EH_RESTORE
XSTORE
G_STORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
TPAUSE
CLDEMOTE
DBG_VALUE
G_GLOBAL_VALUE
LEAVE
FXSAVE
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
XABORT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
G_FNEG
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
PCONFIG
G_FLOG
INVLPG
G_VAARG
VMLAUNCH
PREFETCH
G_SMULH
G_UMULH
CLFLUSH
CLGI
STGI
G_PHI
FLDPI
EXTRQI
INSERTQI
G_FPTOSI
G_FPTOUI
G_PTR_MASK
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
ICALL_BRANCH_FUNNEL
G_SHL
G_FCEIL
LRETIL
VMMCALL
VMCALL
SYSCALL
PATCHABLE_TAIL_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
FENTRY_CALL
VZEROALL
KILL
NOOPL
SCASL
LODSL
INSL
STOSL
CMPSL
OUTSL
MOVSL
LRETL
G_FMUL
MONTMUL
G_MUL
FXAM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
G_FREM
FPREM
G_SREM
G_UREM
SEH_SaveXMM
INLINEASM
FPATAN
FPTAN
XBEGIN
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
CFI_INSTRUCTION
VMXON
EH_RETURN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
CLZERO
INTO
STACKMAP
TRAP
G_BSWAP
RDTSCP
FFREEP
G_GEP
G_SITOFP
G_UITOFP
XOR32_FP
XOR64_FP
G_FCMP
G_ICMP
FNOP
LOOP
NOOP
G_CTPOP
PATCHABLE_OP
FAULTING_OP
FCOMPP
RSTORSSP
SAVEPREVSSP
FDECSTP
FINCSTP
G_FEXP
KSET0Q
KSET1Q
LRETIQ
NOOPQ
INCSSPQ
RDSSPQ
EXTRQ
SCASQ
LODSQ
STOSQ
CMPSQ
WRSSQ
WRUSSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
G_BR
G_BLOCK_ADDR
VZEROUPPER
SYSENTER
PATCHABLE_FUNCTION_ENTER
G_ASHR
G_LSHR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
MONITOR
FXRSTOR
G_XOR
G_ATOMICRMW_XOR
G_OR
G_ATOMICRMW_OR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
G_INTTOPTR
G_FABS
AVX1_SETALLONES
AVX512_512_SETALLONES
AVX2_SETALLONES
V_SETALLONES
G_UNMERGE_VALUES
G_MERGE_VALUES
XSAVES
VASTART_SAVE_XMM_REGS
SWAPGS
ENCLS
FEMMS
MMX_EMMS
FSINCOS
G_CONCAT_VECTORS
XRSTORS
AVX512_FsFLD0SS
COPY_TO_REGCLASS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
MOVNTSS
G_INTRINSIC_W_SIDE_EFFECTS
CLTS
FLDL2T
XLAT
G_EXTRACT
FXTRACT
G_SELECT
G_BRINDIRECT
CATCHRET
IRET
CLEANUPRET
SYSRET
PATCHABLE_RET
MORESTACK_RET
UMWAIT
SKINIT
FNINIT
SYSEXIT
PATCHABLE_FUNCTION_EXIT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
G_FCONSTANT
G_CONSTANT
FRNDINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
CALL32m_NT
JMP32m_NT
CALL64m_NT
JMP64m_NT
CALL16m_NT
JMP16m_NT
CALL32r_NT
JMP32r_NT
CALL64r_NT
JMP64r_NT
CALL16r_NT
JMP16r_NT
XSAVEOPT
CLFLUSHOPT
G_VASTART
LIFETIME_START
G_INSERT
XABORT
G_BITCAST
G_ADDRSPACE_CAST
XTEST
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
ENCLU
VMASKMOVDQU
RDPKRU
WRPKRU
XGETBV
XSETBV
VMOVDQA32Z256rrk_REV
VMOVDQU32Z256rrk_REV
VMOVDQA64Z256rrk_REV
VMOVDQU64Z256rrk_REV
VMOVDQU16Z256rrk_REV
VMOVDQU8Z256rrk_REV
VMOVAPDZ256rrk_REV
VMOVUPDZ256rrk_REV
VMOVAPSZ256rrk_REV
VMOVUPSZ256rrk_REV
VMOVDQA32Z128rrk_REV
VMOVDQU32Z128rrk_REV
VMOVDQA64Z128rrk_REV
VMOVDQU64Z128rrk_REV
VMOVDQU16Z128rrk_REV
VMOVDQU8Z128rrk_REV
VMOVAPDZ128rrk_REV
VMOVUPDZ128rrk_REV
VMOVAPSZ128rrk_REV
VMOVUPSZ128rrk_REV
VMOVDQA32Zrrk_REV
VMOVDQU32Zrrk_REV
VMOVDQA64Zrrk_REV
VMOVDQU64Zrrk_REV
VMOVDQU16Zrrk_REV
VMOVDQU8Zrrk_REV
VMOVAPDZrrk_REV
VMOVUPDZrrk_REV
VMOVSDZrrk_REV
VMOVAPSZrrk_REV
VMOVUPSZrrk_REV
VMOVSSZrrk_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
MMX_MOVQ64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
VMOVDQA32Z256rr_REV
VMOVDQU32Z256rr_REV
VMOVDQA64Z256rr_REV
VMOVDQU64Z256rr_REV
VMOVDQU16Z256rr_REV
VMOVDQU8Z256rr_REV
VMOVAPDZ256rr_REV
VMOVUPDZ256rr_REV
VMOVAPSZ256rr_REV
VMOVUPSZ256rr_REV
VMOVDQA32Z128rr_REV
VMOVDQU32Z128rr_REV
VMOVDQA64Z128rr_REV
VMOVDQU64Z128rr_REV
VMOVDQU16Z128rr_REV
VMOVDQU8Z128rr_REV
VMOVAPDZ128rr_REV
VMOVUPDZ128rr_REV
VMOVAPSZ128rr_REV
VMOVUPSZ128rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VPSHABrr_REV
VPSHLBrr_REV
VPROTBrr_REV
VPSHADrr_REV
VPSHLDrr_REV
VPERMIL2PDrr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VPROTDrr_REV
VPSHAQrr_REV
VPSHLQrr_REV
VPROTQrr_REV
VPERMIL2PSrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
BNDMOVrr_REV
VPSHAWrr_REV
VPSHLWrr_REV
VPEXTRWrr_REV
VPROTWrr_REV
VFMADDSUBPD4Yrr_REV
VFMSUBPD4Yrr_REV
VFNMSUBPD4Yrr_REV
VFMSUBADDPD4Yrr_REV
VFMADDPD4Yrr_REV
VFNMADDPD4Yrr_REV
VFMADDSUBPS4Yrr_REV
VFMSUBPS4Yrr_REV
VFNMSUBPS4Yrr_REV
VFMSUBADDPS4Yrr_REV
VFMADDPS4Yrr_REV
VFNMADDPS4Yrr_REV
VMOVDQAYrr_REV
VPERMIL2PDYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VPERMIL2PSYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVDQA32Zrr_REV
VMOVDQU32Zrr_REV
VMOVDQA64Zrr_REV
VMOVDQU64Zrr_REV
VMOVDQU16Zrr_REV
VMOVDQU8Zrr_REV
VMOVAPDZrr_REV
VMOVUPDZrr_REV
VMOVSDZrr_REV
VMOVAPSZrr_REV
VMOVUPSZrr_REV
VMOVSSZrr_REV
VPEXTRWZrr_REV
VPPERMrrr_REV
VPCMOVrrr_REV
VPCMOVYrrr_REV
VFMSUBSD4rr_Int_REV
VFNMSUBSD4rr_Int_REV
VFMADDSD4rr_Int_REV
VFNMADDSD4rr_Int_REV
VFMSUBSS4rr_Int_REV
VFNMSUBSS4rr_Int_REV
VFMADDSS4rr_Int_REV
VFNMADDSS4rr_Int_REV
VMOVDQA32Z256rrkz_REV
VMOVDQU32Z256rrkz_REV
VMOVDQA64Z256rrkz_REV
VMOVDQU64Z256rrkz_REV
VMOVDQU16Z256rrkz_REV
VMOVDQU8Z256rrkz_REV
VMOVAPDZ256rrkz_REV
VMOVUPDZ256rrkz_REV
VMOVAPSZ256rrkz_REV
VMOVUPSZ256rrkz_REV
VMOVDQA32Z128rrkz_REV
VMOVDQU32Z128rrkz_REV
VMOVDQA64Z128rrkz_REV
VMOVDQU64Z128rrkz_REV
VMOVDQU16Z128rrkz_REV
VMOVDQU8Z128rrkz_REV
VMOVAPDZ128rrkz_REV
VMOVUPDZ128rrkz_REV
VMOVAPSZ128rrkz_REV
VMOVUPSZ128rrkz_REV
VMOVDQA32Zrrkz_REV
VMOVDQU32Zrrkz_REV
VMOVDQA64Zrrkz_REV
VMOVDQU64Zrrkz_REV
VMOVDQU16Zrrkz_REV
VMOVDQU8Zrrkz_REV
VMOVAPDZrrkz_REV
VMOVUPDZrrkz_REV
VMOVSDZrrkz_REV
VMOVAPSZrrkz_REV
VMOVUPSZrrkz_REV
VMOVSSZrrkz_REV
G_FDIV
G_SDIV
G_UDIV
ENCLV
KSET0W
KSET1W
PREFETCHW
LRETIW
G_FPOW
NOOPW
SCASW
LODSW
INSW
STOSW
CMPSW
OUTSW
MOVSW
LRETW
FYL2X
CMOV_VR256X
CMOV_VR128X
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
LCMPXCHG8B_SAVE_EBX
LCMPXCHG16B_SAVE_RBX
G_FRAME_INDEX
FNCLEX
MOVSX32rm8_NOREX
MOVZX32rm8_NOREX
MOVSX32rr8_NOREX
MOVZX32rr8_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
TAILJMPm64_REX
TAILJMPr64_REX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
VMOVAPSZ256rm_NOVLX
VMOVUPSZ256rm_NOVLX
VMOVAPSZ128rm_NOVLX
VMOVUPSZ128rm_NOVLX
VMOVAPSZ256mr_NOVLX
VMOVUPSZ256mr_NOVLX
VMOVAPSZ128mr_NOVLX
VMOVUPSZ128mr_NOVLX
MONITORX
COPY
CLRSSBSY
SETSSBSY
G_CTLZ
G_CTTZ
JECXZ
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV16o32a
MOV8o32a
MOV32o64a
MOV64o64a
MOV16o64a
MOV8o64a
MOV32o16a
MOV16o16a
MOV8o16a
VPCMPDZ256rmib
VPCMPUDZ256rmib
VPCMPQZ256rmib
VPCMPUQZ256rmib
VPCMPDZ128rmib
VPCMPUDZ128rmib
VPCMPQZ128rmib
VPCMPUQZ128rmib
VPCMPDZrmib
VPCMPUDZrmib
VPCMPQZrmib
VPCMPUQZrmib
VREDUCEPDZrrib
VRANGEPDZrrib
VRNDSCALEPDZrrib
VFIXUPIMMPDZrrib
VCMPPDZrrib
VGETMANTPDZrrib
VREDUCESDZrrib
VRANGESDZrrib
VFIXUPIMMSDZrrib
VGETMANTSDZrrib
VREDUCEPSZrrib
VRANGEPSZrrib
VRNDSCALEPSZrrib
VFIXUPIMMPSZrrib
VCMPPSZrrib
VGETMANTPSZrrib
VREDUCESSZrrib
VRANGESSZrrib
VFIXUPIMMSSZrrib
VGETMANTSSZrrib
VFMADDSUB231PDZ256mb
VFMSUB231PDZ256mb
VFNMSUB231PDZ256mb
VFMSUBADD231PDZ256mb
VFMADD231PDZ256mb
VFNMADD231PDZ256mb
VFMADDSUB132PDZ256mb
VFMSUB132PDZ256mb
VFNMSUB132PDZ256mb
VFMSUBADD132PDZ256mb
VFMADD132PDZ256mb
VFNMADD132PDZ256mb
VFMADDSUB213PDZ256mb
VFMSUB213PDZ256mb
VFNMSUB213PDZ256mb
VFMSUBADD213PDZ256mb
VFMADD213PDZ256mb
VFNMADD213PDZ256mb
VRCP14PDZ256mb
VRSQRT14PDZ256mb
VGETEXPPDZ256mb
VSQRTPDZ256mb
VPDPWSSDZ256mb
VPDPBUSDZ256mb
VPSHLDVDZ256mb
VPSHRDVDZ256mb
VPMADD52HUQZ256mb
VPMADD52LUQZ256mb
VPSHLDVQZ256mb
VPSHRDVQZ256mb
VPDPWSSDSZ256mb
VPDPBUSDSZ256mb
VFMADDSUB231PSZ256mb
VFMSUB231PSZ256mb
VFNMSUB231PSZ256mb
VFMSUBADD231PSZ256mb
VFMADD231PSZ256mb
VFNMADD231PSZ256mb
VFMADDSUB132PSZ256mb
VFMSUB132PSZ256mb
VFNMSUB132PSZ256mb
VFMSUBADD132PSZ256mb
VFMADD132PSZ256mb
VFNMADD132PSZ256mb
VFMADDSUB213PSZ256mb
VFMSUB213PSZ256mb
VFNMSUB213PSZ256mb
VFMSUBADD213PSZ256mb
VFMADD213PSZ256mb
VFNMADD213PSZ256mb
VRCP14PSZ256mb
VRSQRT14PSZ256mb
VGETEXPPSZ256mb
VSQRTPSZ256mb
VFMADDSUB231PDZ128mb
VFMSUB231PDZ128mb
VFNMSUB231PDZ128mb
VFMSUBADD231PDZ128mb
VFMADD231PDZ128mb
VFNMADD231PDZ128mb
VFMADDSUB132PDZ128mb
VFMSUB132PDZ128mb
VFNMSUB132PDZ128mb
VFMSUBADD132PDZ128mb
VFMADD132PDZ128mb
VFNMADD132PDZ128mb
VFMADDSUB213PDZ128mb
VFMSUB213PDZ128mb
VFNMSUB213PDZ128mb
VFMSUBADD213PDZ128mb
VFMADD213PDZ128mb
VFNMADD213PDZ128mb
VRCP14PDZ128mb
VRSQRT14PDZ128mb
VGETEXPPDZ128mb
VSQRTPDZ128mb
VPDPWSSDZ128mb
VPDPBUSDZ128mb
VPSHLDVDZ128mb
VPSHRDVDZ128mb
VPMADD52HUQZ128mb
VPMADD52LUQZ128mb
VPSHLDVQZ128mb
VPSHRDVQZ128mb
VPDPWSSDSZ128mb
VPDPBUSDSZ128mb
VFMADDSUB231PSZ128mb
VFMSUB231PSZ128mb
VFNMSUB231PSZ128mb
VFMSUBADD231PSZ128mb
VFMADD231PSZ128mb
VFNMADD231PSZ128mb
VFMADDSUB132PSZ128mb
VFMSUB132PSZ128mb
VFNMSUB132PSZ128mb
VFMSUBADD132PSZ128mb
VFMADD132PSZ128mb
VFNMADD132PSZ128mb
VFMADDSUB213PSZ128mb
VFMSUB213PSZ128mb
VFNMSUB213PSZ128mb
VFMSUBADD213PSZ128mb
VFMADD213PSZ128mb
VFNMADD213PSZ128mb
VRCP14PSZ128mb
VRSQRT14PSZ128mb
VGETEXPPSZ128mb
VSQRTPSZ128mb
VFMADDSUB231PDZmb
VFMSUB231PDZmb
VFNMSUB231PDZmb
VFMSUBADD231PDZmb
VFMADD231PDZmb
VFNMADD231PDZmb
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VEXP2PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VRCP14PDZmb
VRSQRT14PDZmb
VRCP28PDZmb
VRSQRT28PDZmb
VGETEXPPDZmb
VSQRTPDZmb
VPDPWSSDZmb
VPDPBUSDZmb
VPSHLDVDZmb
VPSHRDVDZmb
VPMADD52HUQZmb
VPMADD52LUQZmb
VPSHLDVQZmb
VPSHRDVQZmb
VPDPWSSDSZmb
VPDPBUSDSZmb
VFMADDSUB231PSZmb
VFMSUB231PSZmb
VFNMSUB231PSZmb
VFMSUBADD231PSZmb
VFMADD231PSZmb
VFNMADD231PSZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VEXP2PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VRCP14PSZmb
VRSQRT14PSZmb
VRCP28PSZmb
VRSQRT28PSZmb
VGETEXPPSZmb
VSQRTPSZmb
VPERMI2D256rmb
VPERMT2D256rmb
VPERMI2PD256rmb
VPERMT2PD256rmb
VPERMI2Q256rmb
VPERMT2Q256rmb
VPERMI2PS256rmb
VPERMT2PS256rmb
VPMULTISHIFTQBZ256rmb
VPSUBDZ256rmb
VPADDDZ256rmb
VPANDDZ256rmb
VPMULLDZ256rmb
VPBLENDMDZ256rmb
VPTESTNMDZ256rmb
VPERMDZ256rmb
VPTESTMDZ256rmb
VPANDNDZ256rmb
VCVTDQ2PDZ256rmb
VCVTUDQ2PDZ256rmb
VCVTQQ2PDZ256rmb
VCVTUQQ2PDZ256rmb
VCVTPS2PDZ256rmb
VSUBPDZ256rmb
VMINCPDZ256rmb
VMAXCPDZ256rmb
VADDPDZ256rmb
VANDPDZ256rmb
VSCALEFPDZ256rmb
VUNPCKHPDZ256rmb
VPERMILPDZ256rmb
VUNPCKLPDZ256rmb
VMULPDZ256rmb
VBLENDMPDZ256rmb
VPERMPDZ256rmb
VANDNPDZ256rmb
VMINPDZ256rmb
VORPDZ256rmb
VXORPDZ256rmb
VFPCLASSPDZ256rmb
VDIVPDZ256rmb
VMAXPDZ256rmb
VPCMPEQDZ256rmb
VPORDZ256rmb
VPXORDZ256rmb
VPABSDZ256rmb
VPMINSDZ256rmb
VPMAXSDZ256rmb
VPCONFLICTDZ256rmb
VPCMPGTDZ256rmb
VPOPCNTDZ256rmb
VPLZCNTDZ256rmb
VPMINUDZ256rmb
VPMAXUDZ256rmb
VPSRAVDZ256rmb
VPSLLVDZ256rmb
VPROLVDZ256rmb
VPSRLVDZ256rmb
VPRORVDZ256rmb
VPSUBQZ256rmb
VCVTTPD2DQZ256rmb
VCVTPD2DQZ256rmb
VCVTTPS2DQZ256rmb
VCVTPS2DQZ256rmb
VPADDQZ256rmb
VPUNPCKHDQZ256rmb
VPUNPCKLDQZ256rmb
VPMULDQZ256rmb
VPANDQZ256rmb
VPUNPCKHQDQZ256rmb
VPUNPCKLQDQZ256rmb
VCVTTPD2UDQZ256rmb
VCVTPD2UDQZ256rmb
VCVTTPS2UDQZ256rmb
VCVTPS2UDQZ256rmb
VPMULUDQZ256rmb
VPMULLQZ256rmb
VPBLENDMQZ256rmb
VPTESTNMQZ256rmb
VPERMQZ256rmb
VPTESTMQZ256rmb
VPANDNQZ256rmb
VCVTTPD2QQZ256rmb
VCVTPD2QQZ256rmb
VCVTTPS2QQZ256rmb
VCVTPS2QQZ256rmb
VPCMPEQQZ256rmb
VCVTTPD2UQQZ256rmb
VCVTPD2UQQZ256rmb
VCVTTPS2UQQZ256rmb
VCVTPS2UQQZ256rmb
VPORQZ256rmb
VPXORQZ256rmb
VPABSQZ256rmb
VPMINSQZ256rmb
VPMAXSQZ256rmb
VPCONFLICTQZ256rmb
VPCMPGTQZ256rmb
VPOPCNTQZ256rmb
VPLZCNTQZ256rmb
VPMINUQZ256rmb
VPMAXUQZ256rmb
VPSRAVQZ256rmb
VPSLLVQZ256rmb
VPROLVQZ256rmb
VPSRLVQZ256rmb
VPRORVQZ256rmb
VCVTPD2PSZ256rmb
VCVTDQ2PSZ256rmb
VCVTUDQ2PSZ256rmb
VCVTQQ2PSZ256rmb
VCVTUQQ2PSZ256rmb
VSUBPSZ256rmb
VMINCPSZ256rmb
VMAXCPSZ256rmb
VADDPSZ256rmb
VANDPSZ256rmb
VSCALEFPSZ256rmb
VUNPCKHPSZ256rmb
VPERMILPSZ256rmb
VUNPCKLPSZ256rmb
VMULPSZ256rmb
VBLENDMPSZ256rmb
VPERMPSZ256rmb
VANDNPSZ256rmb
VMINPSZ256rmb
VORPSZ256rmb
VXORPSZ256rmb
VFPCLASSPSZ256rmb
VDIVPSZ256rmb
VMAXPSZ256rmb
VPACKSSDWZ256rmb
VPACKUSDWZ256rmb
VPERMI2D128rmb
VPERMT2D128rmb
VPERMI2PD128rmb
VPERMT2PD128rmb
VPERMI2Q128rmb
VPERMT2Q128rmb
VPERMI2PS128rmb
VPERMT2PS128rmb
VPMULTISHIFTQBZ128rmb
VPSUBDZ128rmb
VPADDDZ128rmb
VPANDDZ128rmb
VPMULLDZ128rmb
VPBLENDMDZ128rmb
VPTESTNMDZ128rmb
VPTESTMDZ128rmb
VPANDNDZ128rmb
VCVTDQ2PDZ128rmb
VCVTUDQ2PDZ128rmb
VCVTQQ2PDZ128rmb
VCVTUQQ2PDZ128rmb
VCVTPS2PDZ128rmb
VSUBPDZ128rmb
VMINCPDZ128rmb
VMAXCPDZ128rmb
VADDPDZ128rmb
VANDPDZ128rmb
VSCALEFPDZ128rmb
VUNPCKHPDZ128rmb
VPERMILPDZ128rmb
VUNPCKLPDZ128rmb
VMULPDZ128rmb
VBLENDMPDZ128rmb
VANDNPDZ128rmb
VMINPDZ128rmb
VORPDZ128rmb
VXORPDZ128rmb
VFPCLASSPDZ128rmb
VDIVPDZ128rmb
VMAXPDZ128rmb
VPCMPEQDZ128rmb
VPORDZ128rmb
VPXORDZ128rmb
VPABSDZ128rmb
VPMINSDZ128rmb
VPMAXSDZ128rmb
VPCONFLICTDZ128rmb
VPCMPGTDZ128rmb
VPOPCNTDZ128rmb
VPLZCNTDZ128rmb
VPMINUDZ128rmb
VPMAXUDZ128rmb
VPSRAVDZ128rmb
VPSLLVDZ128rmb
VPROLVDZ128rmb
VPSRLVDZ128rmb
VPRORVDZ128rmb
VPSUBQZ128rmb
VCVTTPD2DQZ128rmb
VCVTPD2DQZ128rmb
VCVTTPS2DQZ128rmb
VCVTPS2DQZ128rmb
VPADDQZ128rmb
VPUNPCKHDQZ128rmb
VPUNPCKLDQZ128rmb
VPMULDQZ128rmb
VPANDQZ128rmb
VPUNPCKHQDQZ128rmb
VPUNPCKLQDQZ128rmb
VCVTTPD2UDQZ128rmb
VCVTPD2UDQZ128rmb
VCVTTPS2UDQZ128rmb
VCVTPS2UDQZ128rmb
VPMULUDQZ128rmb
VPMULLQZ128rmb
VPBLENDMQZ128rmb
VPTESTNMQZ128rmb
VPTESTMQZ128rmb
VPANDNQZ128rmb
VCVTTPD2QQZ128rmb
VCVTPD2QQZ128rmb
VCVTTPS2QQZ128rmb
VCVTPS2QQZ128rmb
VPCMPEQQZ128rmb
VCVTTPD2UQQZ128rmb
VCVTPD2UQQZ128rmb
VCVTTPS2UQQZ128rmb
VCVTPS2UQQZ128rmb
VPORQZ128rmb
VPXORQZ128rmb
VPABSQZ128rmb
VPMINSQZ128rmb
VPMAXSQZ128rmb
VPCONFLICTQZ128rmb
VPCMPGTQZ128rmb
VPOPCNTQZ128rmb
VPLZCNTQZ128rmb
VPMINUQZ128rmb
VPMAXUQZ128rmb
VPSRAVQZ128rmb
VPSLLVQZ128rmb
VPROLVQZ128rmb
VPSRLVQZ128rmb
VPRORVQZ128rmb
VCVTPD2PSZ128rmb
VCVTDQ2PSZ128rmb
VCVTUDQ2PSZ128rmb
VCVTQQ2PSZ128rmb
VCVTUQQ2PSZ128rmb
VSUBPSZ128rmb
VMINCPSZ128rmb
VMAXCPSZ128rmb
VADDPSZ128rmb
VANDPSZ128rmb
VSCALEFPSZ128rmb
VUNPCKHPSZ128rmb
VPERMILPSZ128rmb
VUNPCKLPSZ128rmb
VMULPSZ128rmb
VBLENDMPSZ128rmb
VANDNPSZ128rmb
VMINPSZ128rmb
VORPSZ128rmb
VXORPSZ128rmb
VFPCLASSPSZ128rmb
VDIVPSZ128rmb
VMAXPSZ128rmb
VPACKSSDWZ128rmb
VPACKUSDWZ128rmb
VPERMI2Drmb
VPERMT2Drmb
VPERMI2PDrmb
VPERMT2PDrmb
VPERMI2Qrmb
VPERMT2Qrmb
VPERMI2PSrmb
VPERMT2PSrmb
VPMULTISHIFTQBZrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPBLENDMDZrmb
VPTESTNMDZrmb
VPERMDZrmb
VPTESTMDZrmb
VPANDNDZrmb
VCVTDQ2PDZrmb
VCVTUDQ2PDZrmb
VCVTQQ2PDZrmb
VCVTUQQ2PDZrmb
VCVTPS2PDZrmb
VSUBPDZrmb
VMINCPDZrmb
VMAXCPDZrmb
VADDPDZrmb
VANDPDZrmb
VSCALEFPDZrmb
VUNPCKHPDZrmb
VPERMILPDZrmb
VUNPCKLPDZrmb
VMULPDZrmb
VBLENDMPDZrmb
VPERMPDZrmb
VANDNPDZrmb
VMINPDZrmb
VORPDZrmb
VXORPDZrmb
VFPCLASSPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPCMPEQDZrmb
VPORDZrmb
VPXORDZrmb
VPABSDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VPCONFLICTDZrmb
VPCMPGTDZrmb
VPOPCNTDZrmb
VPLZCNTDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSRAVDZrmb
VPSLLVDZrmb
VPROLVDZrmb
VPSRLVDZrmb
VPRORVDZrmb
VPSUBQZrmb
VCVTTPD2DQZrmb
VCVTPD2DQZrmb
VCVTTPS2DQZrmb
VCVTPS2DQZrmb
VPADDQZrmb
VPUNPCKHDQZrmb
VPUNPCKLDQZrmb
VPMULDQZrmb
VPANDQZrmb
VPUNPCKHQDQZrmb
VPUNPCKLQDQZrmb
VCVTTPD2UDQZrmb
VCVTPD2UDQZrmb
VCVTTPS2UDQZrmb
VCVTPS2UDQZrmb
VPMULUDQZrmb
VPMULLQZrmb
VPBLENDMQZrmb
VPTESTNMQZrmb
VPERMQZrmb
VPTESTMQZrmb
VPANDNQZrmb
VCVTTPD2QQZrmb
VCVTPD2QQZrmb
VCVTTPS2QQZrmb
VCVTPS2QQZrmb
VPCMPEQQZrmb
VCVTTPD2UQQZrmb
VCVTPD2UQQZrmb
VCVTTPS2UQQZrmb
VCVTPS2UQQZrmb
VPORQZrmb
VPXORQZrmb
VPABSQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VPCONFLICTQZrmb
VPCMPGTQZrmb
VPOPCNTQZrmb
VPLZCNTQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VPSRAVQZrmb
VPSLLVQZrmb
VPROLVQZrmb
VPSRLVQZrmb
VPRORVQZrmb
VCVTPD2PSZrmb
VCVTDQ2PSZrmb
VCVTUDQ2PSZrmb
VCVTQQ2PSZrmb
VCVTUQQ2PSZrmb
VSUBPSZrmb
VMINCPSZrmb
VMAXCPSZrmb
VADDPSZrmb
VANDPSZrmb
VSCALEFPSZrmb
VUNPCKHPSZrmb
VPERMILPSZrmb
VUNPCKLPSZrmb
VMULPSZrmb
VBLENDMPSZrmb
VPERMPSZrmb
VANDNPSZrmb
VMINPSZrmb
VORPSZrmb
VXORPSZrmb
VFPCLASSPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VPACKSSDWZrmb
VPACKUSDWZrmb
VFMADDSUB231PDZrb
VFMSUB231PDZrb
VFNMSUB231PDZrb
VFMSUBADD231PDZrb
VFMADD231PDZrb
VFNMADD231PDZrb
VFMADDSUB132PDZrb
VFMSUB132PDZrb
VFNMSUB132PDZrb
VFMSUBADD132PDZrb
VFMADD132PDZrb
VFNMADD132PDZrb
VEXP2PDZrb
VFMADDSUB213PDZrb
VFMSUB213PDZrb
VFNMSUB213PDZrb
VFMSUBADD213PDZrb
VFMADD213PDZrb
VFNMADD213PDZrb
VRCP28PDZrb
VRSQRT28PDZrb
VGETEXPPDZrb
VSQRTPDZrb
VFMSUB231SDZrb
VFNMSUB231SDZrb
VFMADD231SDZrb
VFNMADD231SDZrb
VFMSUB132SDZrb
VFNMSUB132SDZrb
VFMADD132SDZrb
VFNMADD132SDZrb
VFMSUB213SDZrb
VFNMSUB213SDZrb
VFMADD213SDZrb
VFNMADD213SDZrb
VRCP28SDZrb
VRSQRT28SDZrb
VGETEXPSDZrb
VFMADDSUB231PSZrb
VFMSUB231PSZrb
VFNMSUB231PSZrb
VFMSUBADD231PSZrb
VFMADD231PSZrb
VFNMADD231PSZrb
VFMADDSUB132PSZrb
VFMSUB132PSZrb
VFNMSUB132PSZrb
VFMSUBADD132PSZrb
VFMADD132PSZrb
VFNMADD132PSZrb
VEXP2PSZrb
VFMADDSUB213PSZrb
VFMSUB213PSZrb
VFNMSUB213PSZrb
VFMSUBADD213PSZrb
VFMADD213PSZrb
VFNMADD213PSZrb
VRCP28PSZrb
VRSQRT28PSZrb
VGETEXPPSZrb
VSQRTPSZrb
VFMSUB231SSZrb
VFNMSUB231SSZrb
VFMADD231SSZrb
VFNMADD231SSZrb
VFMSUB132SSZrb
VFNMSUB132SSZrb
VFMADD132SSZrb
VFNMADD132SSZrb
VFMSUB213SSZrb
VFNMSUB213SSZrb
VFMADD213SSZrb
VFNMADD213SSZrb
VRCP28SSZrb
VRSQRT28SSZrb
VGETEXPSSZrb
VCVTQQ2PDZrrb
VCVTUQQ2PDZrrb
VCVTPS2PDZrrb
VSUBPDZrrb
VADDPDZrrb
VSCALEFPDZrrb
VMULPDZrrb
VMINPDZrrb
VDIVPDZrrb
VMAXPDZrrb
VUCOMISDZrrb
VCOMISDZrrb
VCVTPS2PHZrrb
VCVTTPD2DQZrrb
VCVTPD2DQZrrb
VCVTTPS2DQZrrb
VCVTPS2DQZrrb
VCVTTPD2UDQZrrb
VCVTPD2UDQZrrb
VCVTTPS2UDQZrrb
VCVTPS2UDQZrrb
VCVTTPD2QQZrrb
VCVTPD2QQZrrb
VCVTTPS2QQZrrb
VCVTPS2QQZrrb
VCVTTPD2UQQZrrb
VCVTPD2UQQZrrb
VCVTTPS2UQQZrrb
VCVTPS2UQQZrrb
VCVTPD2PSZrrb
VCVTPH2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
VCVTQQ2PSZrrb
VCVTUQQ2PSZrrb
VSUBPSZrrb
VADDPSZrrb
VSCALEFPSZrrb
VMULPSZrrb
VMINPSZrrb
VDIVPSZrrb
VMAXPSZrrb
VUCOMISSZrrb
VCOMISSZrrb
TCRETURNdi64cc
TCRETURNdicc
SEH_StackAlloc
MOV32rc
MOV64rc
TAILJMPd
OR32mi8Locked
MOV32rd
MOV64rd
SEH_PushFrame
SEH_SetFrame
SEH_Epilogue
SEH_EndPrologue
SEH_SaveReg
SEH_PushReg
Int_eh_sjlj_setup_dispatch
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
VPSRADZ256mbi
VPSHUFDZ256mbi
VPSLLDZ256mbi
VPROLDZ256mbi
VPSRLDZ256mbi
VPERMILPDZ256mbi
VPERMPDZ256mbi
VPRORDZ256mbi
VPSRAQZ256mbi
VPSLLQZ256mbi
VPROLQZ256mbi
VPSRLQZ256mbi
VPERMQZ256mbi
VPRORQZ256mbi
VPERMILPSZ256mbi
VPSRADZ128mbi
VPSHUFDZ128mbi
VPSLLDZ128mbi
VPROLDZ128mbi
VPSRLDZ128mbi
VPERMILPDZ128mbi
VPRORDZ128mbi
VPSRAQZ128mbi
VPSLLQZ128mbi
VPROLQZ128mbi
VPSRLQZ128mbi
VPRORQZ128mbi
VPERMILPSZ128mbi
VPSRADZmbi
VPSHUFDZmbi
VPSLLDZmbi
VPROLDZmbi
VPSRLDZmbi
VPERMILPDZmbi
VPERMPDZmbi
VPRORDZmbi
VPSRAQZmbi
VPSLLQZmbi
VPROLQZmbi
VPSRLQZmbi
VPERMQZmbi
VPRORQZmbi
VPERMILPSZmbi
VSHUFF64X2Z256rmbi
VSHUFI64X2Z256rmbi
VSHUFF32X4Z256rmbi
VSHUFI32X4Z256rmbi
VGF2P8AFFINEQBZ256rmbi
VGF2P8AFFINEINVQBZ256rmbi
VPSHLDDZ256rmbi
VPSHRDDZ256rmbi
VPTERNLOGDZ256rmbi
VALIGNDZ256rmbi
VREDUCEPDZ256rmbi
VRANGEPDZ256rmbi
VRNDSCALEPDZ256rmbi
VSHUFPDZ256rmbi
VFIXUPIMMPDZ256rmbi
VCMPPDZ256rmbi
VGETMANTPDZ256rmbi
VPSHLDQZ256rmbi
VPSHRDQZ256rmbi
VPTERNLOGQZ256rmbi
VALIGNQZ256rmbi
VREDUCEPSZ256rmbi
VRANGEPSZ256rmbi
VRNDSCALEPSZ256rmbi
VSHUFPSZ256rmbi
VFIXUPIMMPSZ256rmbi
VCMPPSZ256rmbi
VGETMANTPSZ256rmbi
VGF2P8AFFINEQBZ128rmbi
VGF2P8AFFINEINVQBZ128rmbi
VPSHLDDZ128rmbi
VPSHRDDZ128rmbi
VPTERNLOGDZ128rmbi
VALIGNDZ128rmbi
VREDUCEPDZ128rmbi
VRANGEPDZ128rmbi
VRNDSCALEPDZ128rmbi
VSHUFPDZ128rmbi
VFIXUPIMMPDZ128rmbi
VCMPPDZ128rmbi
VGETMANTPDZ128rmbi
VPSHLDQZ128rmbi
VPSHRDQZ128rmbi
VPTERNLOGQZ128rmbi
VALIGNQZ128rmbi
VREDUCEPSZ128rmbi
VRANGEPSZ128rmbi
VRNDSCALEPSZ128rmbi
VSHUFPSZ128rmbi
VFIXUPIMMPSZ128rmbi
VCMPPSZ128rmbi
VGETMANTPSZ128rmbi
VSHUFF64X2Zrmbi
VSHUFI64X2Zrmbi
VSHUFF32X4Zrmbi
VSHUFI32X4Zrmbi
VGF2P8AFFINEQBZrmbi
VGF2P8AFFINEINVQBZrmbi
VPSHLDDZrmbi
VPSHRDDZrmbi
VPTERNLOGDZrmbi
VALIGNDZrmbi
VREDUCEPDZrmbi
VRANGEPDZrmbi
VRNDSCALEPDZrmbi
VSHUFPDZrmbi
VFIXUPIMMPDZrmbi
VCMPPDZrmbi
VGETMANTPDZrmbi
VPSHLDQZrmbi
VPSHRDQZrmbi
VPTERNLOGQZrmbi
VALIGNQZrmbi
VREDUCEPSZrmbi
VRANGEPSZrmbi
VRNDSCALEPSZrmbi
VSHUFPSZrmbi
VFIXUPIMMPSZrmbi
VCMPPSZrmbi
VGETMANTPSZrmbi
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
VPSRADZ256mi
VPSHUFDZ256mi
VPSLLDZ256mi
VPROLDZ256mi
VPSRLDZ256mi
VPERMILPDZ256mi
VPERMPDZ256mi
VPRORDZ256mi
VPSRAQZ256mi
VPSLLQZ256mi
VPROLQZ256mi
VPSRLQZ256mi
VPERMQZ256mi
VPRORQZ256mi
VPERMILPSZ256mi
VPSRAWZ256mi
VPSHUFHWZ256mi
VPSHUFLWZ256mi
VPSLLWZ256mi
VPSRLWZ256mi
VPSRADZ128mi
VPSHUFDZ128mi
VPSLLDZ128mi
VPROLDZ128mi
VPSRLDZ128mi
VPERMILPDZ128mi
VPRORDZ128mi
VPSRAQZ128mi
VPSLLQZ128mi
VPROLQZ128mi
VPSRLQZ128mi
VPRORQZ128mi
VPERMILPSZ128mi
VPSRAWZ128mi
VPSHUFHWZ128mi
VPSHUFLWZ128mi
VPSLLWZ128mi
VPSRLWZ128mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPROLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPRORDZmi
VPSRAQZmi
VPSLLQZmi
VPROLQZmi
VPSRLQZmi
VPERMQZmi
VPRORQZmi
VPERMILPSZmi
VPSRAWZmi
VPSHUFHWZmi
VPSHUFLWZmi
VPSLLWZmi
VPSRLWZmi
LWPVAL32rmi
IMUL32rmi
LWPINS32rmi
LWPVAL64rmi
LWPINS64rmi
SHA1RNDS4rmi
IMUL16rmi
VSHUFF64X2Z256rmi
VSHUFI64X2Z256rmi
VSHUFF32X4Z256rmi
VSHUFI32X4Z256rmi
VPCMPBZ256rmi
VGF2P8AFFINEQBZ256rmi
VGF2P8AFFINEINVQBZ256rmi
VPCMPUBZ256rmi
VPSHLDDZ256rmi
VPSHRDDZ256rmi
VPTERNLOGDZ256rmi
VALIGNDZ256rmi
VREDUCEPDZ256rmi
VRANGEPDZ256rmi
VRNDSCALEPDZ256rmi
VSHUFPDZ256rmi
VPCMPDZ256rmi
VFIXUPIMMPDZ256rmi
VCMPPDZ256rmi
VGETMANTPDZ256rmi
VPCMPUDZ256rmi
VPSHLDQZ256rmi
VPSHRDQZ256rmi
VPTERNLOGQZ256rmi
VALIGNQZ256rmi
VPCMPQZ256rmi
VPCMPUQZ256rmi
VPALIGNRZ256rmi
VREDUCEPSZ256rmi
VRANGEPSZ256rmi
VRNDSCALEPSZ256rmi
VSHUFPSZ256rmi
VFIXUPIMMPSZ256rmi
VCMPPSZ256rmi
VGETMANTPSZ256rmi
VDBPSADBWZ256rmi
VPSHLDWZ256rmi
VPSHRDWZ256rmi
VPCMPWZ256rmi
VPCMPUWZ256rmi
VPCMPBZ128rmi
VGF2P8AFFINEQBZ128rmi
VGF2P8AFFINEINVQBZ128rmi
VPCMPUBZ128rmi
VPSHLDDZ128rmi
VPSHRDDZ128rmi
VPTERNLOGDZ128rmi
VALIGNDZ128rmi
VREDUCEPDZ128rmi
VRANGEPDZ128rmi
VRNDSCALEPDZ128rmi
VSHUFPDZ128rmi
VPCMPDZ128rmi
VFIXUPIMMPDZ128rmi
VCMPPDZ128rmi
VGETMANTPDZ128rmi
VPCMPUDZ128rmi
VPSHLDQZ128rmi
VPSHRDQZ128rmi
VPTERNLOGQZ128rmi
VALIGNQZ128rmi
VPCMPQZ128rmi
VPCMPUQZ128rmi
VPALIGNRZ128rmi
VREDUCEPSZ128rmi
VRANGEPSZ128rmi
VRNDSCALEPSZ128rmi
VSHUFPSZ128rmi
VFIXUPIMMPSZ128rmi
VCMPPSZ128rmi
VGETMANTPSZ128rmi
VDBPSADBWZ128rmi
VPSHLDWZ128rmi
VPSHRDWZ128rmi
VPCMPWZ128rmi
VPCMPUWZ128rmi
VGF2P8AFFINEQBrmi
VGF2P8AFFINEINVQBrmi
VPBLENDDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VPALIGNRrmi
MMX_PALIGNRrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VGF2P8AFFINEQBYrmi
VGF2P8AFFINEINVQBYrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VPALIGNRYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFF64X2Zrmi
VSHUFI64X2Zrmi
VSHUFF32X4Zrmi
VSHUFI32X4Zrmi
VPCMPBZrmi
VGF2P8AFFINEQBZrmi
VGF2P8AFFINEINVQBZrmi
VPCMPUBZrmi
VPSHLDDZrmi
VPSHRDDZrmi
VPTERNLOGDZrmi
VALIGNDZrmi
VREDUCEPDZrmi
VRANGEPDZrmi
VRNDSCALEPDZrmi
VSHUFPDZrmi
VPCMPDZrmi
VFIXUPIMMPDZrmi
VCMPPDZrmi
VGETMANTPDZrmi
VREDUCESDZrmi
VRANGESDZrmi
VFIXUPIMMSDZrmi
VGETMANTSDZrmi
VPCMPUDZrmi
VPSHLDQZrmi
VPSHRDQZrmi
VPTERNLOGQZrmi
VALIGNQZrmi
VPCMPQZrmi
VPCMPUQZrmi
VPALIGNRZrmi
VREDUCEPSZrmi
VRANGEPSZrmi
VRNDSCALEPSZrmi
VSHUFPSZrmi
VFIXUPIMMPSZrmi
VCMPPSZrmi
VGETMANTPSZrmi
VREDUCESSZrmi
VRANGESSZrmi
VFIXUPIMMSSZrmi
VGETMANTSSZrmi
VDBPSADBWZrmi
VPSHLDWZrmi
VPSHRDWZrmi
VPCMPWZrmi
VPCMPUWZrmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
VPSRADZ256ri
VPSHUFDZ256ri
VPSLLDZ256ri
VPROLDZ256ri
VPSRLDZ256ri
VPERMILPDZ256ri
VPERMPDZ256ri
VPRORDZ256ri
VPSRAQZ256ri
VPSLLQZ256ri
VPROLQZ256ri
VPSRLQZ256ri
VPERMQZ256ri
VPRORQZ256ri
VPERMILPSZ256ri
VPSRAWZ256ri
VPSHUFHWZ256ri
VPSHUFLWZ256ri
VPSLLWZ256ri
VPSRLWZ256ri
VPSRADZ128ri
VPSHUFDZ128ri
VPSLLDZ128ri
VPROLDZ128ri
VPSRLDZ128ri
VPERMILPDZ128ri
VPRORDZ128ri
VPSRAQZ128ri
VPSLLQZ128ri
VPROLQZ128ri
VPSRLQZ128ri
VPRORQZ128ri
VPERMILPSZ128ri
VPSRAWZ128ri
VPSHUFHWZ128ri
VPSHUFLWZ128ri
VPSLLWZ128ri
VPSRLWZ128ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
KSHIFTLBri
VPCOMBri
KSHIFTRBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
KSHIFTLDri
VPCOMDri
VPERMILPDri
KSHIFTRDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
KSHIFTLQri
VPCOMQri
KSHIFTRQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPROLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPRORDZri
VPSRAQZri
VPSLLQZri
VPROLQZri
VPSRLQZri
VPERMQZri
VPRORQZri
VPERMILPSZri
VPSRAWZri
VPSHUFHWZri
VPSHUFLWZri
VPSLLWZri
VPSRLWZri
LWPVAL32rri
IMUL32rri
LWPINS32rri
LWPVAL64rri
LWPINS64rri
SHA1RNDS4rri
IMUL16rri
VSHUFF64X2Z256rri
VSHUFI64X2Z256rri
VSHUFF32X4Z256rri
VSHUFI32X4Z256rri
VPCMPBZ256rri
VGF2P8AFFINEQBZ256rri
VGF2P8AFFINEINVQBZ256rri
VPCMPUBZ256rri
VPSHLDDZ256rri
VPSHRDDZ256rri
VPTERNLOGDZ256rri
VALIGNDZ256rri
VREDUCEPDZ256rri
VRANGEPDZ256rri
VRNDSCALEPDZ256rri
VSHUFPDZ256rri
VPCMPDZ256rri
VFIXUPIMMPDZ256rri
VCMPPDZ256rri
VGETMANTPDZ256rri
VPCMPUDZ256rri
VPSHLDQZ256rri
VPSHRDQZ256rri
VPTERNLOGQZ256rri
VALIGNQZ256rri
VPCMPQZ256rri
VPCMPUQZ256rri
VPALIGNRZ256rri
VREDUCEPSZ256rri
VRANGEPSZ256rri
VRNDSCALEPSZ256rri
VSHUFPSZ256rri
VFIXUPIMMPSZ256rri
VCMPPSZ256rri
VGETMANTPSZ256rri
VDBPSADBWZ256rri
VPSHLDWZ256rri
VPSHRDWZ256rri
VPCMPWZ256rri
VPCMPUWZ256rri
VPCMPBZ128rri
VGF2P8AFFINEQBZ128rri
VGF2P8AFFINEINVQBZ128rri
VPCMPUBZ128rri
VPSHLDDZ128rri
VPSHRDDZ128rri
VPTERNLOGDZ128rri
VALIGNDZ128rri
VREDUCEPDZ128rri
VRANGEPDZ128rri
VRNDSCALEPDZ128rri
VSHUFPDZ128rri
VPCMPDZ128rri
VFIXUPIMMPDZ128rri
VCMPPDZ128rri
VGETMANTPDZ128rri
VPCMPUDZ128rri
VPSHLDQZ128rri
VPSHRDQZ128rri
VPTERNLOGQZ128rri
VALIGNQZ128rri
VPCMPQZ128rri
VPCMPUQZ128rri
VPALIGNRZ128rri
VREDUCEPSZ128rri
VRANGEPSZ128rri
VRNDSCALEPSZ128rri
VSHUFPSZ128rri
VFIXUPIMMPSZ128rri
VCMPPSZ128rri
VGETMANTPSZ128rri
VDBPSADBWZ128rri
VPSHLDWZ128rri
VPSHRDWZ128rri
VPCMPWZ128rri
VPCMPUWZ128rri
VGF2P8AFFINEQBrri
VGF2P8AFFINEINVQBrri
VPBLENDDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VPALIGNRrri
MMX_PALIGNRrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VGF2P8AFFINEQBYrri
VGF2P8AFFINEINVQBYrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VPALIGNRYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFF64X2Zrri
VSHUFI64X2Zrri
VSHUFF32X4Zrri
VSHUFI32X4Zrri
VPCMPBZrri
VGF2P8AFFINEQBZrri
VGF2P8AFFINEINVQBZrri
VPCMPUBZrri
VPSHLDDZrri
VPSHRDDZrri
VPTERNLOGDZrri
VALIGNDZrri
VREDUCEPDZrri
VRANGEPDZrri
VRNDSCALEPDZrri
VSHUFPDZrri
VPCMPDZrri
VFIXUPIMMPDZrri
VCMPPDZrri
VGETMANTPDZrri
VREDUCESDZrri
VRANGESDZrri
VFIXUPIMMSDZrri
VGETMANTSDZrri
VPCMPUDZrri
VPSHLDQZrri
VPSHRDQZrri
VPTERNLOGQZrri
VALIGNQZrri
VPCMPQZrri
VPCMPUQZrri
VPALIGNRZrri
VREDUCEPSZrri
VRANGEPSZrri
VRNDSCALEPSZrri
VSHUFPSZrri
VFIXUPIMMPSZrri
VCMPPSZrri
VGETMANTPSZrri
VREDUCESSZrri
VRANGESSZrri
VFIXUPIMMSSZrri
VGETMANTSSZrri
VDBPSADBWZrri
VPSHLDWZrri
VPSHRDWZrri
VPCMPWZrri
VPCMPUWZrri
VPCMPDZ256rmibk
VPCMPUDZ256rmibk
VPCMPQZ256rmibk
VPCMPUQZ256rmibk
VPCMPDZ128rmibk
VPCMPUDZ128rmibk
VPCMPQZ128rmibk
VPCMPUQZ128rmibk
VPCMPDZrmibk
VPCMPUDZrmibk
VPCMPQZrmibk
VPCMPUQZrmibk
VREDUCEPDZrribk
VRANGEPDZrribk
VRNDSCALEPDZrribk
VFIXUPIMMPDZrribk
VCMPPDZrribk
VGETMANTPDZrribk
VREDUCESDZrribk
VRANGESDZrribk
VFIXUPIMMSDZrribk
VGETMANTSDZrribk
VREDUCEPSZrribk
VRANGEPSZrribk
VRNDSCALEPSZrribk
VFIXUPIMMPSZrribk
VCMPPSZrribk
VGETMANTPSZrribk
VREDUCESSZrribk
VRANGESSZrribk
VFIXUPIMMSSZrribk
VGETMANTSSZrribk
VFMADDSUB231PDZ256mbk
VFMSUB231PDZ256mbk
VFNMSUB231PDZ256mbk
VFMSUBADD231PDZ256mbk
VFMADD231PDZ256mbk
VFNMADD231PDZ256mbk
VFMADDSUB132PDZ256mbk
VFMSUB132PDZ256mbk
VFNMSUB132PDZ256mbk
VFMSUBADD132PDZ256mbk
VFMADD132PDZ256mbk
VFNMADD132PDZ256mbk
VFMADDSUB213PDZ256mbk
VFMSUB213PDZ256mbk
VFNMSUB213PDZ256mbk
VFMSUBADD213PDZ256mbk
VFMADD213PDZ256mbk
VFNMADD213PDZ256mbk
VRCP14PDZ256mbk
VRSQRT14PDZ256mbk
VGETEXPPDZ256mbk
VSQRTPDZ256mbk
VPDPWSSDZ256mbk
VPDPBUSDZ256mbk
VPSHLDVDZ256mbk
VPSHRDVDZ256mbk
VPMADD52HUQZ256mbk
VPMADD52LUQZ256mbk
VPSHLDVQZ256mbk
VPSHRDVQZ256mbk
VPDPWSSDSZ256mbk
VPDPBUSDSZ256mbk
VFMADDSUB231PSZ256mbk
VFMSUB231PSZ256mbk
VFNMSUB231PSZ256mbk
VFMSUBADD231PSZ256mbk
VFMADD231PSZ256mbk
VFNMADD231PSZ256mbk
VFMADDSUB132PSZ256mbk
VFMSUB132PSZ256mbk
VFNMSUB132PSZ256mbk
VFMSUBADD132PSZ256mbk
VFMADD132PSZ256mbk
VFNMADD132PSZ256mbk
VFMADDSUB213PSZ256mbk
VFMSUB213PSZ256mbk
VFNMSUB213PSZ256mbk
VFMSUBADD213PSZ256mbk
VFMADD213PSZ256mbk
VFNMADD213PSZ256mbk
VRCP14PSZ256mbk
VRSQRT14PSZ256mbk
VGETEXPPSZ256mbk
VSQRTPSZ256mbk
VFMADDSUB231PDZ128mbk
VFMSUB231PDZ128mbk
VFNMSUB231PDZ128mbk
VFMSUBADD231PDZ128mbk
VFMADD231PDZ128mbk
VFNMADD231PDZ128mbk
VFMADDSUB132PDZ128mbk
VFMSUB132PDZ128mbk
VFNMSUB132PDZ128mbk
VFMSUBADD132PDZ128mbk
VFMADD132PDZ128mbk
VFNMADD132PDZ128mbk
VFMADDSUB213PDZ128mbk
VFMSUB213PDZ128mbk
VFNMSUB213PDZ128mbk
VFMSUBADD213PDZ128mbk
VFMADD213PDZ128mbk
VFNMADD213PDZ128mbk
VRCP14PDZ128mbk
VRSQRT14PDZ128mbk
VGETEXPPDZ128mbk
VSQRTPDZ128mbk
VPDPWSSDZ128mbk
VPDPBUSDZ128mbk
VPSHLDVDZ128mbk
VPSHRDVDZ128mbk
VPMADD52HUQZ128mbk
VPMADD52LUQZ128mbk
VPSHLDVQZ128mbk
VPSHRDVQZ128mbk
VPDPWSSDSZ128mbk
VPDPBUSDSZ128mbk
VFMADDSUB231PSZ128mbk
VFMSUB231PSZ128mbk
VFNMSUB231PSZ128mbk
VFMSUBADD231PSZ128mbk
VFMADD231PSZ128mbk
VFNMADD231PSZ128mbk
VFMADDSUB132PSZ128mbk
VFMSUB132PSZ128mbk
VFNMSUB132PSZ128mbk
VFMSUBADD132PSZ128mbk
VFMADD132PSZ128mbk
VFNMADD132PSZ128mbk
VFMADDSUB213PSZ128mbk
VFMSUB213PSZ128mbk
VFNMSUB213PSZ128mbk
VFMSUBADD213PSZ128mbk
VFMADD213PSZ128mbk
VFNMADD213PSZ128mbk
VRCP14PSZ128mbk
VRSQRT14PSZ128mbk
VGETEXPPSZ128mbk
VSQRTPSZ128mbk
VFMADDSUB231PDZmbk
VFMSUB231PDZmbk
VFNMSUB231PDZmbk
VFMSUBADD231PDZmbk
VFMADD231PDZmbk
VFNMADD231PDZmbk
VFMADDSUB132PDZmbk
VFMSUB132PDZmbk
VFNMSUB132PDZmbk
VFMSUBADD132PDZmbk
VFMADD132PDZmbk
VFNMADD132PDZmbk
VEXP2PDZmbk
VFMADDSUB213PDZmbk
VFMSUB213PDZmbk
VFNMSUB213PDZmbk
VFMSUBADD213PDZmbk
VFMADD213PDZmbk
VFNMADD213PDZmbk
VRCP14PDZmbk
VRSQRT14PDZmbk
VRCP28PDZmbk
VRSQRT28PDZmbk
VGETEXPPDZmbk
VSQRTPDZmbk
VPDPWSSDZmbk
VPDPBUSDZmbk
VPSHLDVDZmbk
VPSHRDVDZmbk
VPMADD52HUQZmbk
VPMADD52LUQZmbk
VPSHLDVQZmbk
VPSHRDVQZmbk
VPDPWSSDSZmbk
VPDPBUSDSZmbk
VFMADDSUB231PSZmbk
VFMSUB231PSZmbk
VFNMSUB231PSZmbk
VFMSUBADD231PSZmbk
VFMADD231PSZmbk
VFNMADD231PSZmbk
VFMADDSUB132PSZmbk
VFMSUB132PSZmbk
VFNMSUB132PSZmbk
VFMSUBADD132PSZmbk
VFMADD132PSZmbk
VFNMADD132PSZmbk
VEXP2PSZmbk
VFMADDSUB213PSZmbk
VFMSUB213PSZmbk
VFNMSUB213PSZmbk
VFMSUBADD213PSZmbk
VFMADD213PSZmbk
VFNMADD213PSZmbk
VRCP14PSZmbk
VRSQRT14PSZmbk
VRCP28PSZmbk
VRSQRT28PSZmbk
VGETEXPPSZmbk
VSQRTPSZmbk
VPERMI2D256rmbk
VPERMT2D256rmbk
VPERMI2PD256rmbk
VPERMT2PD256rmbk
VPERMI2Q256rmbk
VPERMT2Q256rmbk
VPERMI2PS256rmbk
VPERMT2PS256rmbk
VPMULTISHIFTQBZ256rmbk
VPSUBDZ256rmbk
VPADDDZ256rmbk
VPANDDZ256rmbk
VPMULLDZ256rmbk
VPBLENDMDZ256rmbk
VPTESTNMDZ256rmbk
VPERMDZ256rmbk
VPTESTMDZ256rmbk
VPANDNDZ256rmbk
VCVTDQ2PDZ256rmbk
VCVTUDQ2PDZ256rmbk
VCVTQQ2PDZ256rmbk
VCVTUQQ2PDZ256rmbk
VCVTPS2PDZ256rmbk
VSUBPDZ256rmbk
VMINCPDZ256rmbk
VMAXCPDZ256rmbk
VADDPDZ256rmbk
VANDPDZ256rmbk
VSCALEFPDZ256rmbk
VUNPCKHPDZ256rmbk
VPERMILPDZ256rmbk
VUNPCKLPDZ256rmbk
VMULPDZ256rmbk
VBLENDMPDZ256rmbk
VPERMPDZ256rmbk
VANDNPDZ256rmbk
VMINPDZ256rmbk
VORPDZ256rmbk
VXORPDZ256rmbk
VFPCLASSPDZ256rmbk
VDIVPDZ256rmbk
VMAXPDZ256rmbk
VPCMPEQDZ256rmbk
VPORDZ256rmbk
VPXORDZ256rmbk
VPABSDZ256rmbk
VPMINSDZ256rmbk
VPMAXSDZ256rmbk
VPCONFLICTDZ256rmbk
VPCMPGTDZ256rmbk
VPOPCNTDZ256rmbk
VPLZCNTDZ256rmbk
VPMINUDZ256rmbk
VPMAXUDZ256rmbk
VPSRAVDZ256rmbk
VPSLLVDZ256rmbk
VPROLVDZ256rmbk
VPSRLVDZ256rmbk
VPRORVDZ256rmbk
VPSUBQZ256rmbk
VCVTTPD2DQZ256rmbk
VCVTPD2DQZ256rmbk
VCVTTPS2DQZ256rmbk
VCVTPS2DQZ256rmbk
VPADDQZ256rmbk
VPUNPCKHDQZ256rmbk
VPUNPCKLDQZ256rmbk
VPMULDQZ256rmbk
VPANDQZ256rmbk
VPUNPCKHQDQZ256rmbk
VPUNPCKLQDQZ256rmbk
VCVTTPD2UDQZ256rmbk
VCVTPD2UDQZ256rmbk
VCVTTPS2UDQZ256rmbk
VCVTPS2UDQZ256rmbk
VPMULUDQZ256rmbk
VPMULLQZ256rmbk
VPBLENDMQZ256rmbk
VPTESTNMQZ256rmbk
VPERMQZ256rmbk
VPTESTMQZ256rmbk
VPANDNQZ256rmbk
VCVTTPD2QQZ256rmbk
VCVTPD2QQZ256rmbk
VCVTTPS2QQZ256rmbk
VCVTPS2QQZ256rmbk
VPCMPEQQZ256rmbk
VCVTTPD2UQQZ256rmbk
VCVTPD2UQQZ256rmbk
VCVTTPS2UQQZ256rmbk
VCVTPS2UQQZ256rmbk
VPORQZ256rmbk
VPXORQZ256rmbk
VPABSQZ256rmbk
VPMINSQZ256rmbk
VPMAXSQZ256rmbk
VPCONFLICTQZ256rmbk
VPCMPGTQZ256rmbk
VPOPCNTQZ256rmbk
VPLZCNTQZ256rmbk
VPMINUQZ256rmbk
VPMAXUQZ256rmbk
VPSRAVQZ256rmbk
VPSLLVQZ256rmbk
VPROLVQZ256rmbk
VPSRLVQZ256rmbk
VPRORVQZ256rmbk
VCVTPD2PSZ256rmbk
VCVTDQ2PSZ256rmbk
VCVTUDQ2PSZ256rmbk
VCVTQQ2PSZ256rmbk
VCVTUQQ2PSZ256rmbk
VSUBPSZ256rmbk
VMINCPSZ256rmbk
VMAXCPSZ256rmbk
VADDPSZ256rmbk
VANDPSZ256rmbk
VSCALEFPSZ256rmbk
VUNPCKHPSZ256rmbk
VPERMILPSZ256rmbk
VUNPCKLPSZ256rmbk
VMULPSZ256rmbk
VBLENDMPSZ256rmbk
VPERMPSZ256rmbk
VANDNPSZ256rmbk
VMINPSZ256rmbk
VORPSZ256rmbk
VXORPSZ256rmbk
VFPCLASSPSZ256rmbk
VDIVPSZ256rmbk
VMAXPSZ256rmbk
VPACKSSDWZ256rmbk
VPACKUSDWZ256rmbk
VPERMI2D128rmbk
VPERMT2D128rmbk
VPERMI2PD128rmbk
VPERMT2PD128rmbk
VPERMI2Q128rmbk
VPERMT2Q128rmbk
VPERMI2PS128rmbk
VPERMT2PS128rmbk
VPMULTISHIFTQBZ128rmbk
VPSUBDZ128rmbk
VPADDDZ128rmbk
VPANDDZ128rmbk
VPMULLDZ128rmbk
VPBLENDMDZ128rmbk
VPTESTNMDZ128rmbk
VPTESTMDZ128rmbk
VPANDNDZ128rmbk
VCVTDQ2PDZ128rmbk
VCVTUDQ2PDZ128rmbk
VCVTQQ2PDZ128rmbk
VCVTUQQ2PDZ128rmbk
VCVTPS2PDZ128rmbk
VSUBPDZ128rmbk
VMINCPDZ128rmbk
VMAXCPDZ128rmbk
VADDPDZ128rmbk
VANDPDZ128rmbk
VSCALEFPDZ128rmbk
VUNPCKHPDZ128rmbk
VPERMILPDZ128rmbk
VUNPCKLPDZ128rmbk
VMULPDZ128rmbk
VBLENDMPDZ128rmbk
VANDNPDZ128rmbk
VMINPDZ128rmbk
VORPDZ128rmbk
VXORPDZ128rmbk
VFPCLASSPDZ128rmbk
VDIVPDZ128rmbk
VMAXPDZ128rmbk
VPCMPEQDZ128rmbk
VPORDZ128rmbk
VPXORDZ128rmbk
VPABSDZ128rmbk
VPMINSDZ128rmbk
VPMAXSDZ128rmbk
VPCONFLICTDZ128rmbk
VPCMPGTDZ128rmbk
VPOPCNTDZ128rmbk
VPLZCNTDZ128rmbk
VPMINUDZ128rmbk
VPMAXUDZ128rmbk
VPSRAVDZ128rmbk
VPSLLVDZ128rmbk
VPROLVDZ128rmbk
VPSRLVDZ128rmbk
VPRORVDZ128rmbk
VPSUBQZ128rmbk
VCVTTPD2DQZ128rmbk
VCVTPD2DQZ128rmbk
VCVTTPS2DQZ128rmbk
VCVTPS2DQZ128rmbk
VPADDQZ128rmbk
VPUNPCKHDQZ128rmbk
VPUNPCKLDQZ128rmbk
VPMULDQZ128rmbk
VPANDQZ128rmbk
VPUNPCKHQDQZ128rmbk
VPUNPCKLQDQZ128rmbk
VCVTTPD2UDQZ128rmbk
VCVTPD2UDQZ128rmbk
VCVTTPS2UDQZ128rmbk
VCVTPS2UDQZ128rmbk
VPMULUDQZ128rmbk
VPMULLQZ128rmbk
VPBLENDMQZ128rmbk
VPTESTNMQZ128rmbk
VPTESTMQZ128rmbk
VPANDNQZ128rmbk
VCVTTPD2QQZ128rmbk
VCVTPD2QQZ128rmbk
VCVTTPS2QQZ128rmbk
VCVTPS2QQZ128rmbk
VPCMPEQQZ128rmbk
VCVTTPD2UQQZ128rmbk
VCVTPD2UQQZ128rmbk
VCVTTPS2UQQZ128rmbk
VCVTPS2UQQZ128rmbk
VPORQZ128rmbk
VPXORQZ128rmbk
VPABSQZ128rmbk
VPMINSQZ128rmbk
VPMAXSQZ128rmbk
VPCONFLICTQZ128rmbk
VPCMPGTQZ128rmbk
VPOPCNTQZ128rmbk
VPLZCNTQZ128rmbk
VPMINUQZ128rmbk
VPMAXUQZ128rmbk
VPSRAVQZ128rmbk
VPSLLVQZ128rmbk
VPROLVQZ128rmbk
VPSRLVQZ128rmbk
VPRORVQZ128rmbk
VCVTPD2PSZ128rmbk
VCVTDQ2PSZ128rmbk
VCVTUDQ2PSZ128rmbk
VCVTQQ2PSZ128rmbk
VCVTUQQ2PSZ128rmbk
VSUBPSZ128rmbk
VMINCPSZ128rmbk
VMAXCPSZ128rmbk
VADDPSZ128rmbk
VANDPSZ128rmbk
VSCALEFPSZ128rmbk
VUNPCKHPSZ128rmbk
VPERMILPSZ128rmbk
VUNPCKLPSZ128rmbk
VMULPSZ128rmbk
VBLENDMPSZ128rmbk
VANDNPSZ128rmbk
VMINPSZ128rmbk
VORPSZ128rmbk
VXORPSZ128rmbk
VFPCLASSPSZ128rmbk
VDIVPSZ128rmbk
VMAXPSZ128rmbk
VPACKSSDWZ128rmbk
VPACKUSDWZ128rmbk
VPERMI2Drmbk
VPERMT2Drmbk
VPERMI2PDrmbk
VPERMT2PDrmbk
VPERMI2Qrmbk
VPERMT2Qrmbk
VPERMI2PSrmbk
VPERMT2PSrmbk
VPMULTISHIFTQBZrmbk
VPSUBDZrmbk
VPADDDZrmbk
VPANDDZrmbk
VPMULLDZrmbk
VPBLENDMDZrmbk
VPTESTNMDZrmbk
VPERMDZrmbk
VPTESTMDZrmbk
VPANDNDZrmbk
VCVTDQ2PDZrmbk
VCVTUDQ2PDZrmbk
VCVTQQ2PDZrmbk
VCVTUQQ2PDZrmbk
VCVTPS2PDZrmbk
VSUBPDZrmbk
VMINCPDZrmbk
VMAXCPDZrmbk
VADDPDZrmbk
VANDPDZrmbk
VSCALEFPDZrmbk
VUNPCKHPDZrmbk
VPERMILPDZrmbk
VUNPCKLPDZrmbk
VMULPDZrmbk
VBLENDMPDZrmbk
VPERMPDZrmbk
VANDNPDZrmbk
VMINPDZrmbk
VORPDZrmbk
VXORPDZrmbk
VFPCLASSPDZrmbk
VDIVPDZrmbk
VMAXPDZrmbk
VPCMPEQDZrmbk
VPORDZrmbk
VPXORDZrmbk
VPABSDZrmbk
VPMINSDZrmbk
VPMAXSDZrmbk
VPCONFLICTDZrmbk
VPCMPGTDZrmbk
VPOPCNTDZrmbk
VPLZCNTDZrmbk
VPMINUDZrmbk
VPMAXUDZrmbk
VPSRAVDZrmbk
VPSLLVDZrmbk
VPROLVDZrmbk
VPSRLVDZrmbk
VPRORVDZrmbk
VPSUBQZrmbk
VCVTTPD2DQZrmbk
VCVTPD2DQZrmbk
VCVTTPS2DQZrmbk
VCVTPS2DQZrmbk
VPADDQZrmbk
VPUNPCKHDQZrmbk
VPUNPCKLDQZrmbk
VPMULDQZrmbk
VPANDQZrmbk
VPUNPCKHQDQZrmbk
VPUNPCKLQDQZrmbk
VCVTTPD2UDQZrmbk
VCVTPD2UDQZrmbk
VCVTTPS2UDQZrmbk
VCVTPS2UDQZrmbk
VPMULUDQZrmbk
VPMULLQZrmbk
VPBLENDMQZrmbk
VPTESTNMQZrmbk
VPERMQZrmbk
VPTESTMQZrmbk
VPANDNQZrmbk
VCVTTPD2QQZrmbk
VCVTPD2QQZrmbk
VCVTTPS2QQZrmbk
VCVTPS2QQZrmbk
VPCMPEQQZrmbk
VCVTTPD2UQQZrmbk
VCVTPD2UQQZrmbk
VCVTTPS2UQQZrmbk
VCVTPS2UQQZrmbk
VPORQZrmbk
VPXORQZrmbk
VPABSQZrmbk
VPMINSQZrmbk
VPMAXSQZrmbk
VPCONFLICTQZrmbk
VPCMPGTQZrmbk
VPOPCNTQZrmbk
VPLZCNTQZrmbk
VPMINUQZrmbk
VPMAXUQZrmbk
VPSRAVQZrmbk
VPSLLVQZrmbk
VPROLVQZrmbk
VPSRLVQZrmbk
VPRORVQZrmbk
VCVTPD2PSZrmbk
VCVTDQ2PSZrmbk
VCVTUDQ2PSZrmbk
VCVTQQ2PSZrmbk
VCVTUQQ2PSZrmbk
VSUBPSZrmbk
VMINCPSZrmbk
VMAXCPSZrmbk
VADDPSZrmbk
VANDPSZrmbk
VSCALEFPSZrmbk
VUNPCKHPSZrmbk
VPERMILPSZrmbk
VUNPCKLPSZrmbk
VMULPSZrmbk
VBLENDMPSZrmbk
VPERMPSZrmbk
VANDNPSZrmbk
VMINPSZrmbk
VORPSZrmbk
VXORPSZrmbk
VFPCLASSPSZrmbk
VDIVPSZrmbk
VMAXPSZrmbk
VPACKSSDWZrmbk
VPACKUSDWZrmbk
VFMADDSUB231PDZrbk
VFMSUB231PDZrbk
VFNMSUB231PDZrbk
VFMSUBADD231PDZrbk
VFMADD231PDZrbk
VFNMADD231PDZrbk
VFMADDSUB132PDZrbk
VFMSUB132PDZrbk
VFNMSUB132PDZrbk
VFMSUBADD132PDZrbk
VFMADD132PDZrbk
VFNMADD132PDZrbk
VEXP2PDZrbk
VFMADDSUB213PDZrbk
VFMSUB213PDZrbk
VFNMSUB213PDZrbk
VFMSUBADD213PDZrbk
VFMADD213PDZrbk
VFNMADD213PDZrbk
VRCP28PDZrbk
VRSQRT28PDZrbk
VGETEXPPDZrbk
VSQRTPDZrbk
VRCP28SDZrbk
VRSQRT28SDZrbk
VGETEXPSDZrbk
VFMADDSUB231PSZrbk
VFMSUB231PSZrbk
VFNMSUB231PSZrbk
VFMSUBADD231PSZrbk
VFMADD231PSZrbk
VFNMADD231PSZrbk
VFMADDSUB132PSZrbk
VFMSUB132PSZrbk
VFNMSUB132PSZrbk
VFMSUBADD132PSZrbk
VFMADD132PSZrbk
VFNMADD132PSZrbk
VEXP2PSZrbk
VFMADDSUB213PSZrbk
VFMSUB213PSZrbk
VFNMSUB213PSZrbk
VFMSUBADD213PSZrbk
VFMADD213PSZrbk
VFNMADD213PSZrbk
VRCP28PSZrbk
VRSQRT28PSZrbk
VGETEXPPSZrbk
VSQRTPSZrbk
VRCP28SSZrbk
VRSQRT28SSZrbk
VGETEXPSSZrbk
VCVTQQ2PDZrrbk
VCVTUQQ2PDZrrbk
VCVTPS2PDZrrbk
VSUBPDZrrbk
VADDPDZrrbk
VSCALEFPDZrrbk
VMULPDZrrbk
VMINPDZrrbk
VDIVPDZrrbk
VMAXPDZrrbk
VCVTPS2PHZrrbk
VCVTTPD2DQZrrbk
VCVTPD2DQZrrbk
VCVTTPS2DQZrrbk
VCVTPS2DQZrrbk
VCVTTPD2UDQZrrbk
VCVTPD2UDQZrrbk
VCVTTPS2UDQZrrbk
VCVTPS2UDQZrrbk
VCVTTPD2QQZrrbk
VCVTPD2QQZrrbk
VCVTTPS2QQZrrbk
VCVTPS2QQZrrbk
VCVTTPD2UQQZrrbk
VCVTPD2UQQZrrbk
VCVTTPS2UQQZrrbk
VCVTPS2UQQZrrbk
VCVTPD2PSZrrbk
VCVTPH2PSZrrbk
VCVTDQ2PSZrrbk
VCVTUDQ2PSZrrbk
VCVTQQ2PSZrrbk
VCVTUQQ2PSZrrbk
VSUBPSZrrbk
VADDPSZrrbk
VSCALEFPSZrrbk
VMULPSZrrbk
VMINPSZrrbk
VDIVPSZrrbk
VMAXPSZrrbk
VPSRADZ256mbik
VPSHUFDZ256mbik
VPSLLDZ256mbik
VPROLDZ256mbik
VPSRLDZ256mbik
VPERMILPDZ256mbik
VPERMPDZ256mbik
VPRORDZ256mbik
VPSRAQZ256mbik
VPSLLQZ256mbik
VPROLQZ256mbik
VPSRLQZ256mbik
VPERMQZ256mbik
VPRORQZ256mbik
VPERMILPSZ256mbik
VPSRADZ128mbik
VPSHUFDZ128mbik
VPSLLDZ128mbik
VPROLDZ128mbik
VPSRLDZ128mbik
VPERMILPDZ128mbik
VPRORDZ128mbik
VPSRAQZ128mbik
VPSLLQZ128mbik
VPROLQZ128mbik
VPSRLQZ128mbik
VPRORQZ128mbik
VPERMILPSZ128mbik
VPSRADZmbik
VPSHUFDZmbik
VPSLLDZmbik
VPROLDZmbik
VPSRLDZmbik
VPERMILPDZmbik
VPERMPDZmbik
VPRORDZmbik
VPSRAQZmbik
VPSLLQZmbik
VPROLQZmbik
VPSRLQZmbik
VPERMQZmbik
VPRORQZmbik
VPERMILPSZmbik
VSHUFF64X2Z256rmbik
VSHUFI64X2Z256rmbik
VSHUFF32X4Z256rmbik
VSHUFI32X4Z256rmbik
VGF2P8AFFINEQBZ256rmbik
VGF2P8AFFINEINVQBZ256rmbik
VPSHLDDZ256rmbik
VPSHRDDZ256rmbik
VPTERNLOGDZ256rmbik
VALIGNDZ256rmbik
VREDUCEPDZ256rmbik
VRANGEPDZ256rmbik
VRNDSCALEPDZ256rmbik
VSHUFPDZ256rmbik
VFIXUPIMMPDZ256rmbik
VCMPPDZ256rmbik
VGETMANTPDZ256rmbik
VPSHLDQZ256rmbik
VPSHRDQZ256rmbik
VPTERNLOGQZ256rmbik
VALIGNQZ256rmbik
VREDUCEPSZ256rmbik
VRANGEPSZ256rmbik
VRNDSCALEPSZ256rmbik
VSHUFPSZ256rmbik
VFIXUPIMMPSZ256rmbik
VCMPPSZ256rmbik
VGETMANTPSZ256rmbik
VGF2P8AFFINEQBZ128rmbik
VGF2P8AFFINEINVQBZ128rmbik
VPSHLDDZ128rmbik
VPSHRDDZ128rmbik
VPTERNLOGDZ128rmbik
VALIGNDZ128rmbik
VREDUCEPDZ128rmbik
VRANGEPDZ128rmbik
VRNDSCALEPDZ128rmbik
VSHUFPDZ128rmbik
VFIXUPIMMPDZ128rmbik
VCMPPDZ128rmbik
VGETMANTPDZ128rmbik
VPSHLDQZ128rmbik
VPSHRDQZ128rmbik
VPTERNLOGQZ128rmbik
VALIGNQZ128rmbik
VREDUCEPSZ128rmbik
VRANGEPSZ128rmbik
VRNDSCALEPSZ128rmbik
VSHUFPSZ128rmbik
VFIXUPIMMPSZ128rmbik
VCMPPSZ128rmbik
VGETMANTPSZ128rmbik
VSHUFF64X2Zrmbik
VSHUFI64X2Zrmbik
VSHUFF32X4Zrmbik
VSHUFI32X4Zrmbik
VGF2P8AFFINEQBZrmbik
VGF2P8AFFINEINVQBZrmbik
VPSHLDDZrmbik
VPSHRDDZrmbik
VPTERNLOGDZrmbik
VALIGNDZrmbik
VREDUCEPDZrmbik
VRANGEPDZrmbik
VRNDSCALEPDZrmbik
VSHUFPDZrmbik
VFIXUPIMMPDZrmbik
VCMPPDZrmbik
VGETMANTPDZrmbik
VPSHLDQZrmbik
VPSHRDQZrmbik
VPTERNLOGQZrmbik
VALIGNQZrmbik
VREDUCEPSZrmbik
VRANGEPSZrmbik
VRNDSCALEPSZrmbik
VSHUFPSZrmbik
VFIXUPIMMPSZrmbik
VCMPPSZrmbik
VGETMANTPSZrmbik
VPSRADZ256mik
VPSHUFDZ256mik
VPSLLDZ256mik
VPROLDZ256mik
VPSRLDZ256mik
VPERMILPDZ256mik
VPERMPDZ256mik
VPRORDZ256mik
VPSRAQZ256mik
VPSLLQZ256mik
VPROLQZ256mik
VPSRLQZ256mik
VPERMQZ256mik
VPRORQZ256mik
VPERMILPSZ256mik
VPSRAWZ256mik
VPSHUFHWZ256mik
VPSHUFLWZ256mik
VPSLLWZ256mik
VPSRLWZ256mik
VPSRADZ128mik
VPSHUFDZ128mik
VPSLLDZ128mik
VPROLDZ128mik
VPSRLDZ128mik
VPERMILPDZ128mik
VPRORDZ128mik
VPSRAQZ128mik
VPSLLQZ128mik
VPROLQZ128mik
VPSRLQZ128mik
VPRORQZ128mik
VPERMILPSZ128mik
VPSRAWZ128mik
VPSHUFHWZ128mik
VPSHUFLWZ128mik
VPSLLWZ128mik
VPSRLWZ128mik
VPSRADZmik
VPSHUFDZmik
VPSLLDZmik
VPROLDZmik
VPSRLDZmik
VPERMILPDZmik
VPERMPDZmik
VPRORDZmik
VPSRAQZmik
VPSLLQZmik
VPROLQZmik
VPSRLQZmik
VPERMQZmik
VPRORQZmik
VPERMILPSZmik
VPSRAWZmik
VPSHUFHWZmik
VPSHUFLWZmik
VPSLLWZmik
VPSRLWZmik
VSHUFF64X2Z256rmik
VSHUFI64X2Z256rmik
VSHUFF32X4Z256rmik
VSHUFI32X4Z256rmik
VPCMPBZ256rmik
VGF2P8AFFINEQBZ256rmik
VGF2P8AFFINEINVQBZ256rmik
VPCMPUBZ256rmik
VPSHLDDZ256rmik
VPSHRDDZ256rmik
VPTERNLOGDZ256rmik
VALIGNDZ256rmik
VREDUCEPDZ256rmik
VRANGEPDZ256rmik
VRNDSCALEPDZ256rmik
VSHUFPDZ256rmik
VPCMPDZ256rmik
VFIXUPIMMPDZ256rmik
VCMPPDZ256rmik
VGETMANTPDZ256rmik
VPCMPUDZ256rmik
VPSHLDQZ256rmik
VPSHRDQZ256rmik
VPTERNLOGQZ256rmik
VALIGNQZ256rmik
VPCMPQZ256rmik
VPCMPUQZ256rmik
VPALIGNRZ256rmik
VREDUCEPSZ256rmik
VRANGEPSZ256rmik
VRNDSCALEPSZ256rmik
VSHUFPSZ256rmik
VFIXUPIMMPSZ256rmik
VCMPPSZ256rmik
VGETMANTPSZ256rmik
VDBPSADBWZ256rmik
VPSHLDWZ256rmik
VPSHRDWZ256rmik
VPCMPWZ256rmik
VPCMPUWZ256rmik
VPCMPBZ128rmik
VGF2P8AFFINEQBZ128rmik
VGF2P8AFFINEINVQBZ128rmik
VPCMPUBZ128rmik
VPSHLDDZ128rmik
VPSHRDDZ128rmik
VPTERNLOGDZ128rmik
VALIGNDZ128rmik
VREDUCEPDZ128rmik
VRANGEPDZ128rmik
VRNDSCALEPDZ128rmik
VSHUFPDZ128rmik
VPCMPDZ128rmik
VFIXUPIMMPDZ128rmik
VCMPPDZ128rmik
VGETMANTPDZ128rmik
VPCMPUDZ128rmik
VPSHLDQZ128rmik
VPSHRDQZ128rmik
VPTERNLOGQZ128rmik
VALIGNQZ128rmik
VPCMPQZ128rmik
VPCMPUQZ128rmik
VPALIGNRZ128rmik
VREDUCEPSZ128rmik
VRANGEPSZ128rmik
VRNDSCALEPSZ128rmik
VSHUFPSZ128rmik
VFIXUPIMMPSZ128rmik
VCMPPSZ128rmik
VGETMANTPSZ128rmik
VDBPSADBWZ128rmik
VPSHLDWZ128rmik
VPSHRDWZ128rmik
VPCMPWZ128rmik
VPCMPUWZ128rmik
VSHUFF64X2Zrmik
VSHUFI64X2Zrmik
VSHUFF32X4Zrmik
VSHUFI32X4Zrmik
VPCMPBZrmik
VGF2P8AFFINEQBZrmik
VGF2P8AFFINEINVQBZrmik
VPCMPUBZrmik
VPSHLDDZrmik
VPSHRDDZrmik
VPTERNLOGDZrmik
VALIGNDZrmik
VREDUCEPDZrmik
VRANGEPDZrmik
VRNDSCALEPDZrmik
VSHUFPDZrmik
VPCMPDZrmik
VFIXUPIMMPDZrmik
VCMPPDZrmik
VGETMANTPDZrmik
VREDUCESDZrmik
VRANGESDZrmik
VFIXUPIMMSDZrmik
VGETMANTSDZrmik
VPCMPUDZrmik
VPSHLDQZrmik
VPSHRDQZrmik
VPTERNLOGQZrmik
VALIGNQZrmik
VPCMPQZrmik
VPCMPUQZrmik
VPALIGNRZrmik
VREDUCEPSZrmik
VRANGEPSZrmik
VRNDSCALEPSZrmik
VSHUFPSZrmik
VFIXUPIMMPSZrmik
VCMPPSZrmik
VGETMANTPSZrmik
VREDUCESSZrmik
VRANGESSZrmik
VFIXUPIMMSSZrmik
VGETMANTSSZrmik
VDBPSADBWZrmik
VPSHLDWZrmik
VPSHRDWZrmik
VPCMPWZrmik
VPCMPUWZrmik
VPSRADZ256rik
VPSHUFDZ256rik
VPSLLDZ256rik
VPROLDZ256rik
VPSRLDZ256rik
VPERMILPDZ256rik
VPERMPDZ256rik
VPRORDZ256rik
VPSRAQZ256rik
VPSLLQZ256rik
VPROLQZ256rik
VPSRLQZ256rik
VPERMQZ256rik
VPRORQZ256rik
VPERMILPSZ256rik
VPSRAWZ256rik
VPSHUFHWZ256rik
VPSHUFLWZ256rik
VPSLLWZ256rik
VPSRLWZ256rik
VPSRADZ128rik
VPSHUFDZ128rik
VPSLLDZ128rik
VPROLDZ128rik
VPSRLDZ128rik
VPERMILPDZ128rik
VPRORDZ128rik
VPSRAQZ128rik
VPSLLQZ128rik
VPROLQZ128rik
VPSRLQZ128rik
VPRORQZ128rik
VPERMILPSZ128rik
VPSRAWZ128rik
VPSHUFHWZ128rik
VPSHUFLWZ128rik
VPSLLWZ128rik
VPSRLWZ128rik
VPSRADZrik
VPSHUFDZrik
VPSLLDZrik
VPROLDZrik
VPSRLDZrik
VPERMILPDZrik
VPERMPDZrik
VPRORDZrik
VPSRAQZrik
VPSLLQZrik
VPROLQZrik
VPSRLQZrik
VPERMQZrik
VPRORQZrik
VPERMILPSZrik
VPSRAWZrik
VPSHUFHWZrik
VPSHUFLWZrik
VPSLLWZrik
VPSRLWZrik
VSHUFF64X2Z256rrik
VSHUFI64X2Z256rrik
VSHUFF32X4Z256rrik
VSHUFI32X4Z256rrik
VPCMPBZ256rrik
VGF2P8AFFINEQBZ256rrik
VGF2P8AFFINEINVQBZ256rrik
VPCMPUBZ256rrik
VPSHLDDZ256rrik
VPSHRDDZ256rrik
VPTERNLOGDZ256rrik
VALIGNDZ256rrik
VREDUCEPDZ256rrik
VRANGEPDZ256rrik
VRNDSCALEPDZ256rrik
VSHUFPDZ256rrik
VPCMPDZ256rrik
VFIXUPIMMPDZ256rrik
VCMPPDZ256rrik
VGETMANTPDZ256rrik
VPCMPUDZ256rrik
VPSHLDQZ256rrik
VPSHRDQZ256rrik
VPTERNLOGQZ256rrik
VALIGNQZ256rrik
VPCMPQZ256rrik
VPCMPUQZ256rrik
VPALIGNRZ256rrik
VREDUCEPSZ256rrik
VRANGEPSZ256rrik
VRNDSCALEPSZ256rrik
VSHUFPSZ256rrik
VFIXUPIMMPSZ256rrik
VCMPPSZ256rrik
VGETMANTPSZ256rrik
VDBPSADBWZ256rrik
VPSHLDWZ256rrik
VPSHRDWZ256rrik
VPCMPWZ256rrik
VPCMPUWZ256rrik
VPCMPBZ128rrik
VGF2P8AFFINEQBZ128rrik
VGF2P8AFFINEINVQBZ128rrik
VPCMPUBZ128rrik
VPSHLDDZ128rrik
VPSHRDDZ128rrik
VPTERNLOGDZ128rrik
VALIGNDZ128rrik
VREDUCEPDZ128rrik
VRANGEPDZ128rrik
VRNDSCALEPDZ128rrik
VSHUFPDZ128rrik
VPCMPDZ128rrik
VFIXUPIMMPDZ128rrik
VCMPPDZ128rrik
VGETMANTPDZ128rrik
VPCMPUDZ128rrik
VPSHLDQZ128rrik
VPSHRDQZ128rrik
VPTERNLOGQZ128rrik
VALIGNQZ128rrik
VPCMPQZ128rrik
VPCMPUQZ128rrik
VPALIGNRZ128rrik
VREDUCEPSZ128rrik
VRANGEPSZ128rrik
VRNDSCALEPSZ128rrik
VSHUFPSZ128rrik
VFIXUPIMMPSZ128rrik
VCMPPSZ128rrik
VGETMANTPSZ128rrik
VDBPSADBWZ128rrik
VPSHLDWZ128rrik
VPSHRDWZ128rrik
VPCMPWZ128rrik
VPCMPUWZ128rrik
VSHUFF64X2Zrrik
VSHUFI64X2Zrrik
VSHUFF32X4Zrrik
VSHUFI32X4Zrrik
VPCMPBZrrik
VGF2P8AFFINEQBZrrik
VGF2P8AFFINEINVQBZrrik
VPCMPUBZrrik
VPSHLDDZrrik
VPSHRDDZrrik
VPTERNLOGDZrrik
VALIGNDZrrik
VREDUCEPDZrrik
VRANGEPDZrrik
VRNDSCALEPDZrrik
VSHUFPDZrrik
VPCMPDZrrik
VFIXUPIMMPDZrrik
VCMPPDZrrik
VGETMANTPDZrrik
VREDUCESDZrrik
VRANGESDZrrik
VFIXUPIMMSDZrrik
VGETMANTSDZrrik
VPCMPUDZrrik
VPSHLDQZrrik
VPSHRDQZrrik
VPTERNLOGQZrrik
VALIGNQZrrik
VPCMPQZrrik
VPCMPUQZrrik
VPALIGNRZrrik
VREDUCEPSZrrik
VRANGEPSZrrik
VRNDSCALEPSZrrik
VSHUFPSZrrik
VFIXUPIMMPSZrrik
VCMPPSZrrik
VGETMANTPSZrrik
VREDUCESSZrrik
VRANGESSZrrik
VFIXUPIMMSSZrrik
VGETMANTSSZrrik
VDBPSADBWZrrik
VPSHLDWZrrik
VPSHRDWZrrik
VPCMPWZrrik
VPCMPUWZrrik
KMOVBkk
KMOVDkk
KMOVQkk
KMOVWkk
VBROADCASTF32X2Z256mk
VBROADCASTI32X2Z256mk
VPBROADCASTBZ256mk
VFMADDSUB231PDZ256mk
VFMSUB231PDZ256mk
VFNMSUB231PDZ256mk
VFMSUBADD231PDZ256mk
VFMADD231PDZ256mk
VFNMADD231PDZ256mk
VFMADDSUB132PDZ256mk
VFMSUB132PDZ256mk
VFNMSUB132PDZ256mk
VFMSUBADD132PDZ256mk
VFMADD132PDZ256mk
VFNMADD132PDZ256mk
VFMADDSUB213PDZ256mk
VFMSUB213PDZ256mk
VFNMSUB213PDZ256mk
VFMSUBADD213PDZ256mk
VFMADD213PDZ256mk
VFNMADD213PDZ256mk
VRCP14PDZ256mk
VRSQRT14PDZ256mk
VGETEXPPDZ256mk
VSQRTPDZ256mk
VPDPWSSDZ256mk
VBROADCASTSDZ256mk
VPDPBUSDZ256mk
VPBROADCASTDZ256mk
VPSHLDVDZ256mk
VPSHRDVDZ256mk
VPBROADCASTQZ256mk
VPMADD52HUQZ256mk
VPMADD52LUQZ256mk
VPSHLDVQZ256mk
VPSHRDVQZ256mk
VPDPWSSDSZ256mk
VPDPBUSDSZ256mk
VFMADDSUB231PSZ256mk
VFMSUB231PSZ256mk
VFNMSUB231PSZ256mk
VFMSUBADD231PSZ256mk
VFMADD231PSZ256mk
VFNMADD231PSZ256mk
VFMADDSUB132PSZ256mk
VFMSUB132PSZ256mk
VFNMSUB132PSZ256mk
VFMSUBADD132PSZ256mk
VFMADD132PSZ256mk
VFNMADD132PSZ256mk
VFMADDSUB213PSZ256mk
VFMSUB213PSZ256mk
VFNMSUB213PSZ256mk
VFMSUBADD213PSZ256mk
VFMADD213PSZ256mk
VFNMADD213PSZ256mk
VRCP14PSZ256mk
VRSQRT14PSZ256mk
VGETEXPPSZ256mk
VSQRTPSZ256mk
VBROADCASTSSZ256mk
VPBROADCASTWZ256mk
VPSHLDVWZ256mk
VPSHRDVWZ256mk
VBROADCASTI32X2Z128mk
VPBROADCASTBZ128mk
VFMADDSUB231PDZ128mk
VFMSUB231PDZ128mk
VFNMSUB231PDZ128mk
VFMSUBADD231PDZ128mk
VFMADD231PDZ128mk
VFNMADD231PDZ128mk
VFMADDSUB132PDZ128mk
VFMSUB132PDZ128mk
VFNMSUB132PDZ128mk
VFMSUBADD132PDZ128mk
VFMADD132PDZ128mk
VFNMADD132PDZ128mk
VFMADDSUB213PDZ128mk
VFMSUB213PDZ128mk
VFNMSUB213PDZ128mk
VFMSUBADD213PDZ128mk
VFMADD213PDZ128mk
VFNMADD213PDZ128mk
VRCP14PDZ128mk
VRSQRT14PDZ128mk
VGETEXPPDZ128mk
VSQRTPDZ128mk
VPDPWSSDZ128mk
VPDPBUSDZ128mk
VPBROADCASTDZ128mk
VPSHLDVDZ128mk
VPSHRDVDZ128mk
VPBROADCASTQZ128mk
VPMADD52HUQZ128mk
VPMADD52LUQZ128mk
VPSHLDVQZ128mk
VPSHRDVQZ128mk
VPDPWSSDSZ128mk
VPDPBUSDSZ128mk
VFMADDSUB231PSZ128mk
VFMSUB231PSZ128mk
VFNMSUB231PSZ128mk
VFMSUBADD231PSZ128mk
VFMADD231PSZ128mk
VFNMADD231PSZ128mk
VFMADDSUB132PSZ128mk
VFMSUB132PSZ128mk
VFNMSUB132PSZ128mk
VFMSUBADD132PSZ128mk
VFMADD132PSZ128mk
VFNMADD132PSZ128mk
VFMADDSUB213PSZ128mk
VFMSUB213PSZ128mk
VFNMSUB213PSZ128mk
VFMSUBADD213PSZ128mk
VFMADD213PSZ128mk
VFNMADD213PSZ128mk
VRCP14PSZ128mk
VRSQRT14PSZ128mk
VGETEXPPSZ128mk
VSQRTPSZ128mk
VBROADCASTSSZ128mk
VPBROADCASTWZ128mk
VPSHLDVWZ128mk
VPSHRDVWZ128mk
KMOVBmk
KMOVDmk
KMOVQmk
KMOVWmk
VBROADCASTF32X2Zmk
VBROADCASTI32X2Zmk
VPBROADCASTBZmk
VFMADDSUB231PDZmk
VFMSUB231PDZmk
VFNMSUB231PDZmk
VFMSUBADD231PDZmk
VFMADD231PDZmk
VFNMADD231PDZmk
VFMADDSUB132PDZmk
VFMSUB132PDZmk
VFNMSUB132PDZmk
VFMSUBADD132PDZmk
VFMADD132PDZmk
VFNMADD132PDZmk
VEXP2PDZmk
VFMADDSUB213PDZmk
VFMSUB213PDZmk
VFNMSUB213PDZmk
VFMSUBADD213PDZmk
VFMADD213PDZmk
VFNMADD213PDZmk
VRCP14PDZmk
VRSQRT14PDZmk
VRCP28PDZmk
VRSQRT28PDZmk
VGETEXPPDZmk
VSQRTPDZmk
VRCP28SDZmk
VRSQRT28SDZmk
VGETEXPSDZmk
VPDPWSSDZmk
VBROADCASTSDZmk
VPDPBUSDZmk
VPBROADCASTDZmk
VPSHLDVDZmk
VPSHRDVDZmk
VPBROADCASTQZmk
VPMADD52HUQZmk
VPMADD52LUQZmk
VPSHLDVQZmk
VPSHRDVQZmk
VPDPWSSDSZmk
VPDPBUSDSZmk
VFMADDSUB231PSZmk
VFMSUB231PSZmk
VFNMSUB231PSZmk
VFMSUBADD231PSZmk
VFMADD231PSZmk
VFNMADD231PSZmk
VFMADDSUB132PSZmk
VFMSUB132PSZmk
VFNMSUB132PSZmk
VFMSUBADD132PSZmk
VFMADD132PSZmk
VFNMADD132PSZmk
VEXP2PSZmk
VFMADDSUB213PSZmk
VFMSUB213PSZmk
VFNMSUB213PSZmk
VFMSUBADD213PSZmk
VFMADD213PSZmk
VFNMADD213PSZmk
VRCP14PSZmk
VRSQRT14PSZmk
VRCP28PSZmk
VRSQRT28PSZmk
VGETEXPPSZmk
VSQRTPSZmk
VRCP28SSZmk
VRSQRT28SSZmk
VGETEXPSSZmk
VBROADCASTSSZmk
VPBROADCASTWZmk
VPSHLDVWZmk
VPSHRDVWZmk
VBROADCASTF64X2rmk
VBROADCASTI64X2rmk
VBROADCASTF32X4rmk
VBROADCASTI32X4rmk
VBROADCASTF64X4rmk
VBROADCASTI64X4rmk
VPERMI2B256rmk
VPERMT2B256rmk
VPERMI2D256rmk
VPERMT2D256rmk
VPERMI2PD256rmk
VPERMT2PD256rmk
VPERMI2Q256rmk
VPERMT2Q256rmk
VPERMI2PS256rmk
VPERMT2PS256rmk
VPERMI2W256rmk
VPERMT2W256rmk
VMOVDQA32Z256rmk
VMOVDQU32Z256rmk
VINSERTF64x2Z256rmk
VINSERTI64x2Z256rmk
VMOVDQA64Z256rmk
VMOVDQU64Z256rmk
VBROADCASTF32X4Z256rmk
VBROADCASTI32X4Z256rmk
VINSERTF32x4Z256rmk
VINSERTI32x4Z256rmk
VMOVDQU16Z256rmk
VMOVDQU8Z256rmk
VPSUBBZ256rmk
VPADDBZ256rmk
VPEXPANDBZ256rmk
VPSHUFBZ256rmk
VPAVGBZ256rmk
VGF2P8MULBZ256rmk
VPBLENDMBZ256rmk
VPTESTNMBZ256rmk
VPSHUFBITQMBZ256rmk
VPERMBZ256rmk
VPTESTMBZ256rmk
VPCMPEQBZ256rmk
VPMULTISHIFTQBZ256rmk
VPABSBZ256rmk
VPSUBSBZ256rmk
VPADDSBZ256rmk
VPMINSBZ256rmk
VPSUBUSBZ256rmk
VPADDUSBZ256rmk
VPMAXSBZ256rmk
VPCMPGTBZ256rmk
VPOPCNTBZ256rmk
VPMINUBZ256rmk
VPMAXUBZ256rmk
VPACKSSWBZ256rmk
VPACKUSWBZ256rmk
VPSRADZ256rmk
VPSUBDZ256rmk
VPMOVSXBDZ256rmk
VPMOVZXBDZ256rmk
VPADDDZ256rmk
VPANDDZ256rmk
VPEXPANDDZ256rmk
VPSLLDZ256rmk
VPMULLDZ256rmk
VPSRLDZ256rmk
VPBLENDMDZ256rmk
VPTESTNMDZ256rmk
VPERMDZ256rmk
VPTESTMDZ256rmk
VPANDNDZ256rmk
VCVTDQ2PDZ256rmk
VCVTUDQ2PDZ256rmk
VCVTQQ2PDZ256rmk
VCVTUQQ2PDZ256rmk
VCVTPS2PDZ256rmk
VMOVAPDZ256rmk
VSUBPDZ256rmk
VMINCPDZ256rmk
VMAXCPDZ256rmk
VADDPDZ256rmk
VEXPANDPDZ256rmk
VANDPDZ256rmk
VSCALEFPDZ256rmk
VUNPCKHPDZ256rmk
VPERMILPDZ256rmk
VUNPCKLPDZ256rmk
VMULPDZ256rmk
VBLENDMPDZ256rmk
VPERMPDZ256rmk
VANDNPDZ256rmk
VMINPDZ256rmk
VORPDZ256rmk
VXORPDZ256rmk
VFPCLASSPDZ256rmk
VMOVUPDZ256rmk
VDIVPDZ256rmk
VMAXPDZ256rmk
VPCMPEQDZ256rmk
VPORDZ256rmk
VPXORDZ256rmk
VPABSDZ256rmk
VPMINSDZ256rmk
VPMAXSDZ256rmk
VPCONFLICTDZ256rmk
VPCMPGTDZ256rmk
VPOPCNTDZ256rmk
VPLZCNTDZ256rmk
VPMINUDZ256rmk
VPMAXUDZ256rmk
VPSRAVDZ256rmk
VPSLLVDZ256rmk
VPROLVDZ256rmk
VPSRLVDZ256rmk
VPRORVDZ256rmk
VPMADDWDZ256rmk
VPUNPCKHWDZ256rmk
VPUNPCKLWDZ256rmk
VPMOVSXWDZ256rmk
VPMOVZXWDZ256rmk
VMOVDDUPZ256rmk
VMOVSHDUPZ256rmk
VMOVSLDUPZ256rmk
VPSRAQZ256rmk
VPSUBQZ256rmk
VPMOVSXBQZ256rmk
VPMOVZXBQZ256rmk
VCVTTPD2DQZ256rmk
VCVTPD2DQZ256rmk
VCVTTPS2DQZ256rmk
VCVTPS2DQZ256rmk
VPADDQZ256rmk
VPUNPCKHDQZ256rmk
VPUNPCKLDQZ256rmk
VPMULDQZ256rmk
VPANDQZ256rmk
VPEXPANDQZ256rmk
VPUNPCKHQDQZ256rmk
VPUNPCKLQDQZ256rmk
VCVTTPD2UDQZ256rmk
VCVTPD2UDQZ256rmk
VCVTTPS2UDQZ256rmk
VCVTPS2UDQZ256rmk
VPMULUDQZ256rmk
VPMOVSXDQZ256rmk
VPMOVZXDQZ256rmk
VPSLLQZ256rmk
VPMULLQZ256rmk
VPSRLQZ256rmk
VPBLENDMQZ256rmk
VPTESTNMQZ256rmk
VPERMQZ256rmk
VPTESTMQZ256rmk
VPANDNQZ256rmk
VCVTTPD2QQZ256rmk
VCVTPD2QQZ256rmk
VCVTTPS2QQZ256rmk
VCVTPS2QQZ256rmk
VPCMPEQQZ256rmk
VCVTTPD2UQQZ256rmk
VCVTPD2UQQZ256rmk
VCVTTPS2UQQZ256rmk
VCVTPS2UQQZ256rmk
VPORQZ256rmk
VPXORQZ256rmk
VPABSQZ256rmk
VPMINSQZ256rmk
VPMAXSQZ256rmk
VPCONFLICTQZ256rmk
VPCMPGTQZ256rmk
VPOPCNTQZ256rmk
VPLZCNTQZ256rmk
VPMINUQZ256rmk
VPMAXUQZ256rmk
VPSRAVQZ256rmk
VPSLLVQZ256rmk
VPROLVQZ256rmk
VPSRLVQZ256rmk
VPRORVQZ256rmk
VPMOVSXWQZ256rmk
VPMOVZXWQZ256rmk
VCVTPD2PSZ256rmk
VCVTPH2PSZ256rmk
VCVTDQ2PSZ256rmk
VCVTUDQ2PSZ256rmk
VCVTQQ2PSZ256rmk
VCVTUQQ2PSZ256rmk
VMOVAPSZ256rmk
VSUBPSZ256rmk
VMINCPSZ256rmk
VMAXCPSZ256rmk
VADDPSZ256rmk
VEXPANDPSZ256rmk
VANDPSZ256rmk
VSCALEFPSZ256rmk
VUNPCKHPSZ256rmk
VPERMILPSZ256rmk
VUNPCKLPSZ256rmk
VMULPSZ256rmk
VBLENDMPSZ256rmk
VPERMPSZ256rmk
VANDNPSZ256rmk
VMINPSZ256rmk
VORPSZ256rmk
VXORPSZ256rmk
VFPCLASSPSZ256rmk
VMOVUPSZ256rmk
VDIVPSZ256rmk
VMAXPSZ256rmk
VPSRAWZ256rmk
VPUNPCKHBWZ256rmk
VPUNPCKLBWZ256rmk
VPSUBWZ256rmk
VPMOVSXBWZ256rmk
VPMOVZXBWZ256rmk
VPADDWZ256rmk
VPEXPANDWZ256rmk
VPACKSSDWZ256rmk
VPACKUSDWZ256rmk
VPAVGWZ256rmk
VPMULHWZ256rmk
VPSLLWZ256rmk
VPMULLWZ256rmk
VPSRLWZ256rmk
VPBLENDMWZ256rmk
VPTESTNMWZ256rmk
VPERMWZ256rmk
VPTESTMWZ256rmk
VPCMPEQWZ256rmk
VPABSWZ256rmk
VPMADDUBSWZ256rmk
VPSUBSWZ256rmk
VPADDSWZ256rmk
VPMINSWZ256rmk
VPMULHRSWZ256rmk
VPSUBUSWZ256rmk
VPADDUSWZ256rmk
VPMAXSWZ256rmk
VPCMPGTWZ256rmk
VPOPCNTWZ256rmk
VPMULHUWZ256rmk
VPMINUWZ256rmk
VPMAXUWZ256rmk
VPSRAVWZ256rmk
VPSLLVWZ256rmk
VPSRLVWZ256rmk
VPERMI2B128rmk
VPERMT2B128rmk
VPERMI2D128rmk
VPERMT2D128rmk
VPERMI2PD128rmk
VPERMT2PD128rmk
VPERMI2Q128rmk
VPERMT2Q128rmk
VPERMI2PS128rmk
VPERMT2PS128rmk
VPERMI2W128rmk
VPERMT2W128rmk
VMOVDQA32Z128rmk
VMOVDQU32Z128rmk
VBROADCASTF64X2Z128rmk
VBROADCASTI64X2Z128rmk
VMOVDQA64Z128rmk
VMOVDQU64Z128rmk
VMOVDQU16Z128rmk
VMOVDQU8Z128rmk
VPSUBBZ128rmk
VPADDBZ128rmk
VPEXPANDBZ128rmk
VPSHUFBZ128rmk
VPAVGBZ128rmk
VGF2P8MULBZ128rmk
VPBLENDMBZ128rmk
VPTESTNMBZ128rmk
VPSHUFBITQMBZ128rmk
VPERMBZ128rmk
VPTESTMBZ128rmk
VPCMPEQBZ128rmk
VPMULTISHIFTQBZ128rmk
VPABSBZ128rmk
VPSUBSBZ128rmk
VPADDSBZ128rmk
VPMINSBZ128rmk
VPSUBUSBZ128rmk
VPADDUSBZ128rmk
VPMAXSBZ128rmk
VPCMPGTBZ128rmk
VPOPCNTBZ128rmk
VPMINUBZ128rmk
VPMAXUBZ128rmk
VPACKSSWBZ128rmk
VPACKUSWBZ128rmk
VPSRADZ128rmk
VPSUBDZ128rmk
VPMOVSXBDZ128rmk
VPMOVZXBDZ128rmk
VPADDDZ128rmk
VPANDDZ128rmk
VPEXPANDDZ128rmk
VPSLLDZ128rmk
VPMULLDZ128rmk
VPSRLDZ128rmk
VPBLENDMDZ128rmk
VPTESTNMDZ128rmk
VPTESTMDZ128rmk
VPANDNDZ128rmk
VCVTDQ2PDZ128rmk
VCVTUDQ2PDZ128rmk
VCVTQQ2PDZ128rmk
VCVTUQQ2PDZ128rmk
VCVTPS2PDZ128rmk
VMOVAPDZ128rmk
VSUBPDZ128rmk
VMINCPDZ128rmk
VMAXCPDZ128rmk
VADDPDZ128rmk
VEXPANDPDZ128rmk
VANDPDZ128rmk
VSCALEFPDZ128rmk
VUNPCKHPDZ128rmk
VPERMILPDZ128rmk
VUNPCKLPDZ128rmk
VMULPDZ128rmk
VBLENDMPDZ128rmk
VANDNPDZ128rmk
VMINPDZ128rmk
VORPDZ128rmk
VXORPDZ128rmk
VFPCLASSPDZ128rmk
VMOVUPDZ128rmk
VDIVPDZ128rmk
VMAXPDZ128rmk
VPCMPEQDZ128rmk
VPORDZ128rmk
VPXORDZ128rmk
VPABSDZ128rmk
VPMINSDZ128rmk
VPMAXSDZ128rmk
VPCONFLICTDZ128rmk
VPCMPGTDZ128rmk
VPOPCNTDZ128rmk
VPLZCNTDZ128rmk
VPMINUDZ128rmk
VPMAXUDZ128rmk
VPSRAVDZ128rmk
VPSLLVDZ128rmk
VPROLVDZ128rmk
VPSRLVDZ128rmk
VPRORVDZ128rmk
VPMADDWDZ128rmk
VPUNPCKHWDZ128rmk
VPUNPCKLWDZ128rmk
VPMOVSXWDZ128rmk
VPMOVZXWDZ128rmk
VMOVDDUPZ128rmk
VMOVSHDUPZ128rmk
VMOVSLDUPZ128rmk
VPSRAQZ128rmk
VPSUBQZ128rmk
VPMOVSXBQZ128rmk
VPMOVZXBQZ128rmk
VCVTTPD2DQZ128rmk
VCVTPD2DQZ128rmk
VCVTTPS2DQZ128rmk
VCVTPS2DQZ128rmk
VPADDQZ128rmk
VPUNPCKHDQZ128rmk
VPUNPCKLDQZ128rmk
VPMULDQZ128rmk
VPANDQZ128rmk
VPEXPANDQZ128rmk
VPUNPCKHQDQZ128rmk
VPUNPCKLQDQZ128rmk
VCVTTPD2UDQZ128rmk
VCVTPD2UDQZ128rmk
VCVTTPS2UDQZ128rmk
VCVTPS2UDQZ128rmk
VPMULUDQZ128rmk
VPMOVSXDQZ128rmk
VPMOVZXDQZ128rmk
VPSLLQZ128rmk
VPMULLQZ128rmk
VPSRLQZ128rmk
VPBLENDMQZ128rmk
VPTESTNMQZ128rmk
VPTESTMQZ128rmk
VPANDNQZ128rmk
VCVTTPD2QQZ128rmk
VCVTPD2QQZ128rmk
VCVTTPS2QQZ128rmk
VCVTPS2QQZ128rmk
VPCMPEQQZ128rmk
VCVTTPD2UQQZ128rmk
VCVTPD2UQQZ128rmk
VCVTTPS2UQQZ128rmk
VCVTPS2UQQZ128rmk
VPORQZ128rmk
VPXORQZ128rmk
VPABSQZ128rmk
VPMINSQZ128rmk
VPMAXSQZ128rmk
VPCONFLICTQZ128rmk
VPCMPGTQZ128rmk
VPOPCNTQZ128rmk
VPLZCNTQZ128rmk
VPMINUQZ128rmk
VPMAXUQZ128rmk
VPSRAVQZ128rmk
VPSLLVQZ128rmk
VPROLVQZ128rmk
VPSRLVQZ128rmk
VPRORVQZ128rmk
VPMOVSXWQZ128rmk
VPMOVZXWQZ128rmk
VCVTPD2PSZ128rmk
VCVTPH2PSZ128rmk
VCVTDQ2PSZ128rmk
VCVTUDQ2PSZ128rmk
VCVTQQ2PSZ128rmk
VCVTUQQ2PSZ128rmk
VMOVAPSZ128rmk
VSUBPSZ128rmk
VMINCPSZ128rmk
VMAXCPSZ128rmk
VADDPSZ128rmk
VEXPANDPSZ128rmk
VANDPSZ128rmk
VSCALEFPSZ128rmk
VUNPCKHPSZ128rmk
VPERMILPSZ128rmk
VUNPCKLPSZ128rmk
VMULPSZ128rmk
VBLENDMPSZ128rmk
VANDNPSZ128rmk
VMINPSZ128rmk
VORPSZ128rmk
VXORPSZ128rmk
VFPCLASSPSZ128rmk
VMOVUPSZ128rmk
VDIVPSZ128rmk
VMAXPSZ128rmk
VPSRAWZ128rmk
VPUNPCKHBWZ128rmk
VPUNPCKLBWZ128rmk
VPSUBWZ128rmk
VPMOVSXBWZ128rmk
VPMOVZXBWZ128rmk
VPADDWZ128rmk
VPEXPANDWZ128rmk
VPACKSSDWZ128rmk
VPACKUSDWZ128rmk
VPAVGWZ128rmk
VPMULHWZ128rmk
VPSLLWZ128rmk
VPMULLWZ128rmk
VPSRLWZ128rmk
VPBLENDMWZ128rmk
VPTESTNMWZ128rmk
VPERMWZ128rmk
VPTESTMWZ128rmk
VPCMPEQWZ128rmk
VPABSWZ128rmk
VPMADDUBSWZ128rmk
VPSUBSWZ128rmk
VPADDSWZ128rmk
VPMINSWZ128rmk
VPMULHRSWZ128rmk
VPSUBUSWZ128rmk
VPADDUSWZ128rmk
VPMAXSWZ128rmk
VPCMPGTWZ128rmk
VPOPCNTWZ128rmk
VPMULHUWZ128rmk
VPMINUWZ128rmk
VPMAXUWZ128rmk
VPSRAVWZ128rmk
VPSLLVWZ128rmk
VPSRLVWZ128rmk
VBROADCASTF32X8rmk
VBROADCASTI32X8rmk
VPERMI2Brmk
VPERMT2Brmk
VPERMI2Drmk
VPERMT2Drmk
VPERMI2PDrmk
VPERMT2PDrmk
VP4DPWSSDrmk
VPERMI2Qrmk
VPERMT2Qrmk
VP4DPWSSDSrmk
VPERMI2PSrmk
VPERMT2PSrmk
V4FMADDPSrmk
V4FNMADDPSrmk
V4FMADDSSrmk
V4FNMADDSSrmk
VPERMI2Wrmk
VPERMT2Wrmk
VMOVDQA32Zrmk
VMOVDQU32Zrmk
VINSERTF64x2Zrmk
VINSERTI64x2Zrmk
VMOVDQA64Zrmk
VMOVDQU64Zrmk
VINSERTF32x4Zrmk
VINSERTI32x4Zrmk
VINSERTF64x4Zrmk
VINSERTI64x4Zrmk
VMOVDQU16Zrmk
VMOVDQU8Zrmk
VINSERTF32x8Zrmk
VINSERTI32x8Zrmk
VPSUBBZrmk
VPADDBZrmk
VPEXPANDBZrmk
VPSHUFBZrmk
VPAVGBZrmk
VGF2P8MULBZrmk
VPBLENDMBZrmk
VPTESTNMBZrmk
VPSHUFBITQMBZrmk
VPERMBZrmk
VPTESTMBZrmk
VPCMPEQBZrmk
VPMULTISHIFTQBZrmk
VPABSBZrmk
VPSUBSBZrmk
VPADDSBZrmk
VPMINSBZrmk
VPSUBUSBZrmk
VPADDUSBZrmk
VPMAXSBZrmk
VPCMPGTBZrmk
VPOPCNTBZrmk
VPMINUBZrmk
VPMAXUBZrmk
VPACKSSWBZrmk
VPACKUSWBZrmk
VPSRADZrmk
VPSUBDZrmk
VPMOVSXBDZrmk
VPMOVZXBDZrmk
VPADDDZrmk
VPANDDZrmk
VPEXPANDDZrmk
VPSLLDZrmk
VPMULLDZrmk
VPSRLDZrmk
VPBLENDMDZrmk
VPTESTNMDZrmk
VPERMDZrmk
VPTESTMDZrmk
VPANDNDZrmk
VCVTDQ2PDZrmk
VCVTUDQ2PDZrmk
VCVTQQ2PDZrmk
VCVTUQQ2PDZrmk
VCVTPS2PDZrmk
VMOVAPDZrmk
VSUBPDZrmk
VMINCPDZrmk
VMAXCPDZrmk
VADDPDZrmk
VEXPANDPDZrmk
VANDPDZrmk
VSCALEFPDZrmk
VUNPCKHPDZrmk
VPERMILPDZrmk
VUNPCKLPDZrmk
VMULPDZrmk
VBLENDMPDZrmk
VPERMPDZrmk
VANDNPDZrmk
VMINPDZrmk
VORPDZrmk
VXORPDZrmk
VFPCLASSPDZrmk
VMOVUPDZrmk
VDIVPDZrmk
VMAXPDZrmk
VPCMPEQDZrmk
VPORDZrmk
VPXORDZrmk
VRCP14SDZrmk
VRSQRT14SDZrmk
VPABSDZrmk
VSCALEFSDZrmk
VPMINSDZrmk
VFPCLASSSDZrmk
VMOVSDZrmk
VPMAXSDZrmk
VPCONFLICTDZrmk
VPCMPGTDZrmk
VPOPCNTDZrmk
VPLZCNTDZrmk
VPMINUDZrmk
VPMAXUDZrmk
VPSRAVDZrmk
VPSLLVDZrmk
VPROLVDZrmk
VPSRLVDZrmk
VPRORVDZrmk
VPMADDWDZrmk
VPUNPCKHWDZrmk
VPUNPCKLWDZrmk
VPMOVSXWDZrmk
VPMOVZXWDZrmk
VMOVDDUPZrmk
VMOVSHDUPZrmk
VMOVSLDUPZrmk
VPSRAQZrmk
VPSUBQZrmk
VPMOVSXBQZrmk
VPMOVZXBQZrmk
VCVTTPD2DQZrmk
VCVTPD2DQZrmk
VCVTTPS2DQZrmk
VCVTPS2DQZrmk
VPADDQZrmk
VPUNPCKHDQZrmk
VPUNPCKLDQZrmk
VPMULDQZrmk
VPANDQZrmk
VPEXPANDQZrmk
VPUNPCKHQDQZrmk
VPUNPCKLQDQZrmk
VCVTTPD2UDQZrmk
VCVTPD2UDQZrmk
VCVTTPS2UDQZrmk
VCVTPS2UDQZrmk
VPMULUDQZrmk
VPMOVSXDQZrmk
VPMOVZXDQZrmk
VPSLLQZrmk
VPMULLQZrmk
VPSRLQZrmk
VPBLENDMQZrmk
VPTESTNMQZrmk
VPERMQZrmk
VPTESTMQZrmk
VPANDNQZrmk
VCVTTPD2QQZrmk
VCVTPD2QQZrmk
VCVTTPS2QQZrmk
VCVTPS2QQZrmk
VPCMPEQQZrmk
VCVTTPD2UQQZrmk
VCVTPD2UQQZrmk
VCVTTPS2UQQZrmk
VCVTPS2UQQZrmk
VPORQZrmk
VPXORQZrmk
VPABSQZrmk
VPMINSQZrmk
VPMAXSQZrmk
VPCONFLICTQZrmk
VPCMPGTQZrmk
VPOPCNTQZrmk
VPLZCNTQZrmk
VPMINUQZrmk
VPMAXUQZrmk
VPSRAVQZrmk
VPSLLVQZrmk
VPROLVQZrmk
VPSRLVQZrmk
VPRORVQZrmk
VPMOVSXWQZrmk
VPMOVZXWQZrmk
VCVTPD2PSZrmk
VCVTPH2PSZrmk
VCVTDQ2PSZrmk
VCVTUDQ2PSZrmk
VCVTQQ2PSZrmk
VCVTUQQ2PSZrmk
VMOVAPSZrmk
VSUBPSZrmk
VMINCPSZrmk
VMAXCPSZrmk
VADDPSZrmk
VEXPANDPSZrmk
VANDPSZrmk
VSCALEFPSZrmk
VUNPCKHPSZrmk
VPERMILPSZrmk
VUNPCKLPSZrmk
VMULPSZrmk
VBLENDMPSZrmk
VPERMPSZrmk
VANDNPSZrmk
VMINPSZrmk
VORPSZrmk
VXORPSZrmk
VFPCLASSPSZrmk
VMOVUPSZrmk
VDIVPSZrmk
VMAXPSZrmk
VRCP14SSZrmk
VRSQRT14SSZrmk
VSCALEFSSZrmk
VFPCLASSSSZrmk
VMOVSSZrmk
VPSRAWZrmk
VPUNPCKHBWZrmk
VPUNPCKLBWZrmk
VPSUBWZrmk
VPMOVSXBWZrmk
VPMOVZXBWZrmk
VPADDWZrmk
VPEXPANDWZrmk
VPACKSSDWZrmk
VPACKUSDWZrmk
VPAVGWZrmk
VPMULHWZrmk
VPSLLWZrmk
VPMULLWZrmk
VPSRLWZrmk
VPBLENDMWZrmk
VPTESTNMWZrmk
VPERMWZrmk
VPTESTMWZrmk
VPCMPEQWZrmk
VPABSWZrmk
VPMADDUBSWZrmk
VPSUBSWZrmk
VPADDSWZrmk
VPMINSWZrmk
VPMULHRSWZrmk
VPSUBUSWZrmk
VPADDUSWZrmk
VPMAXSWZrmk
VPCMPGTWZrmk
VPOPCNTWZrmk
VPMULHUWZrmk
VPMINUWZrmk
VPMAXUWZrmk
VPSRAVWZrmk
VPSLLVWZrmk
VPSRLVWZrmk
VBROADCASTF32X2Z256rk
VBROADCASTI32X2Z256rk
VPBROADCASTBZ256rk
VFMADDSUB231PDZ256rk
VFMSUB231PDZ256rk
VFNMSUB231PDZ256rk
VFMSUBADD231PDZ256rk
VFMADD231PDZ256rk
VFNMADD231PDZ256rk
VFMADDSUB132PDZ256rk
VFMSUB132PDZ256rk
VFNMSUB132PDZ256rk
VFMSUBADD132PDZ256rk
VFMADD132PDZ256rk
VFNMADD132PDZ256rk
VFMADDSUB213PDZ256rk
VFMSUB213PDZ256rk
VFNMSUB213PDZ256rk
VFMSUBADD213PDZ256rk
VFMADD213PDZ256rk
VFNMADD213PDZ256rk
VRCP14PDZ256rk
VRSQRT14PDZ256rk
VGETEXPPDZ256rk
VSQRTPDZ256rk
VPDPWSSDZ256rk
VBROADCASTSDZ256rk
VPDPBUSDZ256rk
VPBROADCASTDZ256rk
VPSHLDVDZ256rk
VPSHRDVDZ256rk
VPBROADCASTQZ256rk
VPMADD52HUQZ256rk
VPMADD52LUQZ256rk
VPSHLDVQZ256rk
VPSHRDVQZ256rk
VPDPWSSDSZ256rk
VPDPBUSDSZ256rk
VFMADDSUB231PSZ256rk
VFMSUB231PSZ256rk
VFNMSUB231PSZ256rk
VFMSUBADD231PSZ256rk
VFMADD231PSZ256rk
VFNMADD231PSZ256rk
VFMADDSUB132PSZ256rk
VFMSUB132PSZ256rk
VFNMSUB132PSZ256rk
VFMSUBADD132PSZ256rk
VFMADD132PSZ256rk
VFNMADD132PSZ256rk
VFMADDSUB213PSZ256rk
VFMSUB213PSZ256rk
VFNMSUB213PSZ256rk
VFMSUBADD213PSZ256rk
VFMADD213PSZ256rk
VFNMADD213PSZ256rk
VRCP14PSZ256rk
VRSQRT14PSZ256rk
VGETEXPPSZ256rk
VSQRTPSZ256rk
VBROADCASTSSZ256rk
VPBROADCASTWZ256rk
VPSHLDVWZ256rk
VPSHRDVWZ256rk
VPBROADCASTBrZ256rk
VPBROADCASTDrZ256rk
VPBROADCASTQrZ256rk
VPBROADCASTWrZ256rk
VBROADCASTI32X2Z128rk
VPBROADCASTBZ128rk
VFMADDSUB231PDZ128rk
VFMSUB231PDZ128rk
VFNMSUB231PDZ128rk
VFMSUBADD231PDZ128rk
VFMADD231PDZ128rk
VFNMADD231PDZ128rk
VFMADDSUB132PDZ128rk
VFMSUB132PDZ128rk
VFNMSUB132PDZ128rk
VFMSUBADD132PDZ128rk
VFMADD132PDZ128rk
VFNMADD132PDZ128rk
VFMADDSUB213PDZ128rk
VFMSUB213PDZ128rk
VFNMSUB213PDZ128rk
VFMSUBADD213PDZ128rk
VFMADD213PDZ128rk
VFNMADD213PDZ128rk
VRCP14PDZ128rk
VRSQRT14PDZ128rk
VGETEXPPDZ128rk
VSQRTPDZ128rk
VPDPWSSDZ128rk
VPDPBUSDZ128rk
VPBROADCASTDZ128rk
VPSHLDVDZ128rk
VPSHRDVDZ128rk
VPBROADCASTQZ128rk
VPMADD52HUQZ128rk
VPMADD52LUQZ128rk
VPSHLDVQZ128rk
VPSHRDVQZ128rk
VPDPWSSDSZ128rk
VPDPBUSDSZ128rk
VFMADDSUB231PSZ128rk
VFMSUB231PSZ128rk
VFNMSUB231PSZ128rk
VFMSUBADD231PSZ128rk
VFMADD231PSZ128rk
VFNMADD231PSZ128rk
VFMADDSUB132PSZ128rk
VFMSUB132PSZ128rk
VFNMSUB132PSZ128rk
VFMSUBADD132PSZ128rk
VFMADD132PSZ128rk
VFNMADD132PSZ128rk
VFMADDSUB213PSZ128rk
VFMSUB213PSZ128rk
VFNMSUB213PSZ128rk
VFMSUBADD213PSZ128rk
VFMADD213PSZ128rk
VFNMADD213PSZ128rk
VRCP14PSZ128rk
VRSQRT14PSZ128rk
VGETEXPPSZ128rk
VSQRTPSZ128rk
VBROADCASTSSZ128rk
VPBROADCASTWZ128rk
VPSHLDVWZ128rk
VPSHRDVWZ128rk
VPBROADCASTBrZ128rk
VPBROADCASTDrZ128rk
VPBROADCASTQrZ128rk
VPBROADCASTWrZ128rk
KMOVBrk
KMOVDrk
KMOVQrk
KMOVWrk
VBROADCASTF32X2Zrk
VBROADCASTI32X2Zrk
VPBROADCASTBZrk
VFMADDSUB231PDZrk
VFMSUB231PDZrk
VFNMSUB231PDZrk
VFMSUBADD231PDZrk
VFMADD231PDZrk
VFNMADD231PDZrk
VFMADDSUB132PDZrk
VFMSUB132PDZrk
VFNMSUB132PDZrk
VFMSUBADD132PDZrk
VFMADD132PDZrk
VFNMADD132PDZrk
VEXP2PDZrk
VFMADDSUB213PDZrk
VFMSUB213PDZrk
VFNMSUB213PDZrk
VFMSUBADD213PDZrk
VFMADD213PDZrk
VFNMADD213PDZrk
VRCP14PDZrk
VRSQRT14PDZrk
VRCP28PDZrk
VRSQRT28PDZrk
VGETEXPPDZrk
VSQRTPDZrk
VRCP28SDZrk
VRSQRT28SDZrk
VGETEXPSDZrk
VPDPWSSDZrk
VBROADCASTSDZrk
VPDPBUSDZrk
VPBROADCASTDZrk
VPSHLDVDZrk
VPSHRDVDZrk
VPBROADCASTQZrk
VPMADD52HUQZrk
VPMADD52LUQZrk
VPSHLDVQZrk
VPSHRDVQZrk
VPDPWSSDSZrk
VPDPBUSDSZrk
VFMADDSUB231PSZrk
VFMSUB231PSZrk
VFNMSUB231PSZrk
VFMSUBADD231PSZrk
VFMADD231PSZrk
VFNMADD231PSZrk
VFMADDSUB132PSZrk
VFMSUB132PSZrk
VFNMSUB132PSZrk
VFMSUBADD132PSZrk
VFMADD132PSZrk
VFNMADD132PSZrk
VEXP2PSZrk
VFMADDSUB213PSZrk
VFMSUB213PSZrk
VFNMSUB213PSZrk
VFMSUBADD213PSZrk
VFMADD213PSZrk
VFNMADD213PSZrk
VRCP14PSZrk
VRSQRT14PSZrk
VRCP28PSZrk
VRSQRT28PSZrk
VGETEXPPSZrk
VSQRTPSZrk
VRCP28SSZrk
VRSQRT28SSZrk
VGETEXPSSZrk
VBROADCASTSSZrk
VPBROADCASTWZrk
VPSHLDVWZrk
VPSHRDVWZrk
VPBROADCASTBrZrk
VPBROADCASTDrZrk
VPBROADCASTQrZrk
VPBROADCASTWrZrk
VMOVDQA32Z256mrk
VMOVDQU32Z256mrk
VEXTRACTF64x2Z256mrk
VEXTRACTI64x2Z256mrk
VMOVDQA64Z256mrk
VMOVDQU64Z256mrk
VEXTRACTF32x4Z256mrk
VEXTRACTI32x4Z256mrk
VMOVDQU16Z256mrk
VMOVDQU8Z256mrk
VPMOVUSDBZ256mrk
VPMOVSDBZ256mrk
VPMOVDBZ256mrk
VPMOVUSQBZ256mrk
VPMOVSQBZ256mrk
VPMOVQBZ256mrk
VPCOMPRESSBZ256mrk
VPMOVUSWBZ256mrk
VPMOVSWBZ256mrk
VPMOVWBZ256mrk
VMOVAPDZ256mrk
VCOMPRESSPDZ256mrk
VMOVUPDZ256mrk
VPMOVUSQDZ256mrk
VPMOVSQDZ256mrk
VPMOVQDZ256mrk
VPCOMPRESSDZ256mrk
VCVTPS2PHZ256mrk
VPCOMPRESSQZ256mrk
VMOVAPSZ256mrk
VCOMPRESSPSZ256mrk
VMOVUPSZ256mrk
VPMOVUSDWZ256mrk
VPMOVSDWZ256mrk
VPMOVDWZ256mrk
VPMOVUSQWZ256mrk
VPMOVSQWZ256mrk
VPMOVQWZ256mrk
VPCOMPRESSWZ256mrk
VMOVDQA32Z128mrk
VMOVDQU32Z128mrk
VMOVDQA64Z128mrk
VMOVDQU64Z128mrk
VMOVDQU16Z128mrk
VMOVDQU8Z128mrk
VPMOVUSDBZ128mrk
VPMOVSDBZ128mrk
VPMOVDBZ128mrk
VPMOVUSQBZ128mrk
VPMOVSQBZ128mrk
VPMOVQBZ128mrk
VPCOMPRESSBZ128mrk
VPMOVUSWBZ128mrk
VPMOVSWBZ128mrk
VPMOVWBZ128mrk
VMOVAPDZ128mrk
VCOMPRESSPDZ128mrk
VMOVUPDZ128mrk
VPMOVUSQDZ128mrk
VPMOVSQDZ128mrk
VPMOVQDZ128mrk
VPCOMPRESSDZ128mrk
VCVTPS2PHZ128mrk
VPCOMPRESSQZ128mrk
VMOVAPSZ128mrk
VCOMPRESSPSZ128mrk
VMOVUPSZ128mrk
VPMOVUSDWZ128mrk
VPMOVSDWZ128mrk
VPMOVDWZ128mrk
VPMOVUSQWZ128mrk
VPMOVSQWZ128mrk
VPMOVQWZ128mrk
VPCOMPRESSWZ128mrk
VMOVDQA32Zmrk
VMOVDQU32Zmrk
VEXTRACTF64x2Zmrk
VEXTRACTI64x2Zmrk
VMOVDQA64Zmrk
VMOVDQU64Zmrk
VEXTRACTF32x4Zmrk
VEXTRACTI32x4Zmrk
VEXTRACTF64x4Zmrk
VEXTRACTI64x4Zmrk
VMOVDQU16Zmrk
VMOVDQU8Zmrk
VEXTRACTF32x8Zmrk
VEXTRACTI32x8Zmrk
VPMOVUSDBZmrk
VPMOVSDBZmrk
VPMOVDBZmrk
VPMOVUSQBZmrk
VPMOVSQBZmrk
VPMOVQBZmrk
VPCOMPRESSBZmrk
VPMOVUSWBZmrk
VPMOVSWBZmrk
VPMOVWBZmrk
VMOVAPDZmrk
VCOMPRESSPDZmrk
VMOVUPDZmrk
VPMOVUSQDZmrk
VPMOVSQDZmrk
VPMOVQDZmrk
VPCOMPRESSDZmrk
VMOVSDZmrk
VCVTPS2PHZmrk
VPCOMPRESSQZmrk
VMOVAPSZmrk
VCOMPRESSPSZmrk
VMOVUPSZmrk
VMOVSSZmrk
VPMOVUSDWZmrk
VPMOVSDWZmrk
VPMOVDWZmrk
VPMOVUSQWZmrk
VPMOVSQWZmrk
VPMOVQWZmrk
VPCOMPRESSWZmrk
VPERMI2B256rrk
VPERMT2B256rrk
VPERMI2D256rrk
VPERMT2D256rrk
VPERMI2PD256rrk
VPERMT2PD256rrk
VPERMI2Q256rrk
VPERMT2Q256rrk
VPERMI2PS256rrk
VPERMT2PS256rrk
VPERMI2W256rrk
VPERMT2W256rrk
VMOVDQA32Z256rrk
VMOVDQU32Z256rrk
VEXTRACTF64x2Z256rrk
VINSERTF64x2Z256rrk
VEXTRACTI64x2Z256rrk
VINSERTI64x2Z256rrk
VMOVDQA64Z256rrk
VMOVDQU64Z256rrk
VEXTRACTF32x4Z256rrk
VINSERTF32x4Z256rrk
VEXTRACTI32x4Z256rrk
VINSERTI32x4Z256rrk
VMOVDQU16Z256rrk
VMOVDQU8Z256rrk
VPSUBBZ256rrk
VPADDBZ256rrk
VPEXPANDBZ256rrk
VPMOVUSDBZ256rrk
VPMOVSDBZ256rrk
VPMOVDBZ256rrk
VPSHUFBZ256rrk
VPAVGBZ256rrk
VGF2P8MULBZ256rrk
VPBLENDMBZ256rrk
VPTESTNMBZ256rrk
VPSHUFBITQMBZ256rrk
VPERMBZ256rrk
VPTESTMBZ256rrk
VPCMPEQBZ256rrk
VPMOVUSQBZ256rrk
VPMOVSQBZ256rrk
VPMULTISHIFTQBZ256rrk
VPMOVQBZ256rrk
VPABSBZ256rrk
VPSUBSBZ256rrk
VPADDSBZ256rrk
VPMINSBZ256rrk
VPCOMPRESSBZ256rrk
VPSUBUSBZ256rrk
VPADDUSBZ256rrk
VPMAXSBZ256rrk
VPCMPGTBZ256rrk
VPOPCNTBZ256rrk
VPMINUBZ256rrk
VPMAXUBZ256rrk
VPACKSSWBZ256rrk
VPACKUSWBZ256rrk
VPMOVUSWBZ256rrk
VPMOVSWBZ256rrk
VPMOVWBZ256rrk
VPSRADZ256rrk
VPSUBDZ256rrk
VPMOVSXBDZ256rrk
VPMOVZXBDZ256rrk
VPADDDZ256rrk
VPANDDZ256rrk
VPEXPANDDZ256rrk
VPSLLDZ256rrk
VPMULLDZ256rrk
VPSRLDZ256rrk
VPBLENDMDZ256rrk
VPTESTNMDZ256rrk
VPERMDZ256rrk
VPTESTMDZ256rrk
VPANDNDZ256rrk
VCVTDQ2PDZ256rrk
VCVTUDQ2PDZ256rrk
VCVTQQ2PDZ256rrk
VCVTUQQ2PDZ256rrk
VCVTPS2PDZ256rrk
VMOVAPDZ256rrk
VSUBPDZ256rrk
VMINCPDZ256rrk
VMAXCPDZ256rrk
VADDPDZ256rrk
VEXPANDPDZ256rrk
VANDPDZ256rrk
VSCALEFPDZ256rrk
VUNPCKHPDZ256rrk
VPERMILPDZ256rrk
VUNPCKLPDZ256rrk
VMULPDZ256rrk
VBLENDMPDZ256rrk
VPERMPDZ256rrk
VANDNPDZ256rrk
VMINPDZ256rrk
VORPDZ256rrk
VXORPDZ256rrk
VFPCLASSPDZ256rrk
VCOMPRESSPDZ256rrk
VMOVUPDZ256rrk
VDIVPDZ256rrk
VMAXPDZ256rrk
VPCMPEQDZ256rrk
VPMOVUSQDZ256rrk
VPMOVSQDZ256rrk
VPMOVQDZ256rrk
VPORDZ256rrk
VPXORDZ256rrk
VPABSDZ256rrk
VPMINSDZ256rrk
VPCOMPRESSDZ256rrk
VPMAXSDZ256rrk
VPCONFLICTDZ256rrk
VPCMPGTDZ256rrk
VPOPCNTDZ256rrk
VPLZCNTDZ256rrk
VPMINUDZ256rrk
VPMAXUDZ256rrk
VPSRAVDZ256rrk
VPSLLVDZ256rrk
VPROLVDZ256rrk
VPSRLVDZ256rrk
VPRORVDZ256rrk
VPMADDWDZ256rrk
VPUNPCKHWDZ256rrk
VPUNPCKLWDZ256rrk
VPMOVSXWDZ256rrk
VPMOVZXWDZ256rrk
VCVTPS2PHZ256rrk
VMOVDDUPZ256rrk
VMOVSHDUPZ256rrk
VMOVSLDUPZ256rrk
VPSRAQZ256rrk
VPSUBQZ256rrk
VPMOVSXBQZ256rrk
VPMOVZXBQZ256rrk
VCVTTPD2DQZ256rrk
VCVTPD2DQZ256rrk
VCVTTPS2DQZ256rrk
VCVTPS2DQZ256rrk
VPADDQZ256rrk
VPUNPCKHDQZ256rrk
VPUNPCKLDQZ256rrk
VPMULDQZ256rrk
VPANDQZ256rrk
VPEXPANDQZ256rrk
VPUNPCKHQDQZ256rrk
VPUNPCKLQDQZ256rrk
VCVTTPD2UDQZ256rrk
VCVTPD2UDQZ256rrk
VCVTTPS2UDQZ256rrk
VCVTPS2UDQZ256rrk
VPMULUDQZ256rrk
VPMOVSXDQZ256rrk
VPMOVZXDQZ256rrk
VPSLLQZ256rrk
VPMULLQZ256rrk
VPSRLQZ256rrk
VPBLENDMQZ256rrk
VPTESTNMQZ256rrk
VPERMQZ256rrk
VPTESTMQZ256rrk
VPANDNQZ256rrk
VCVTTPD2QQZ256rrk
VCVTPD2QQZ256rrk
VCVTTPS2QQZ256rrk
VCVTPS2QQZ256rrk
VPCMPEQQZ256rrk
VCVTTPD2UQQZ256rrk
VCVTPD2UQQZ256rrk
VCVTTPS2UQQZ256rrk
VCVTPS2UQQZ256rrk
VPORQZ256rrk
VPXORQZ256rrk
VPABSQZ256rrk
VPMINSQZ256rrk
VPCOMPRESSQZ256rrk
VPMAXSQZ256rrk
VPCONFLICTQZ256rrk
VPCMPGTQZ256rrk
VPOPCNTQZ256rrk
VPLZCNTQZ256rrk
VPMINUQZ256rrk
VPMAXUQZ256rrk
VPSRAVQZ256rrk
VPSLLVQZ256rrk
VPROLVQZ256rrk
VPSRLVQZ256rrk
VPRORVQZ256rrk
VPMOVSXWQZ256rrk
VPMOVZXWQZ256rrk
VCVTPD2PSZ256rrk
VCVTPH2PSZ256rrk
VCVTDQ2PSZ256rrk
VCVTUDQ2PSZ256rrk
VCVTQQ2PSZ256rrk
VCVTUQQ2PSZ256rrk
VMOVAPSZ256rrk
VSUBPSZ256rrk
VMINCPSZ256rrk
VMAXCPSZ256rrk
VADDPSZ256rrk
VEXPANDPSZ256rrk
VANDPSZ256rrk
VSCALEFPSZ256rrk
VUNPCKHPSZ256rrk
VPERMILPSZ256rrk
VUNPCKLPSZ256rrk
VMULPSZ256rrk
VBLENDMPSZ256rrk
VPERMPSZ256rrk
VANDNPSZ256rrk
VMINPSZ256rrk
VORPSZ256rrk
VXORPSZ256rrk
VFPCLASSPSZ256rrk
VCOMPRESSPSZ256rrk
VMOVUPSZ256rrk
VDIVPSZ256rrk
VMAXPSZ256rrk
VPSRAWZ256rrk
VPUNPCKHBWZ256rrk
VPUNPCKLBWZ256rrk
VPSUBWZ256rrk
VPMOVSXBWZ256rrk
VPMOVZXBWZ256rrk
VPADDWZ256rrk
VPEXPANDWZ256rrk
VPACKSSDWZ256rrk
VPACKUSDWZ256rrk
VPMOVUSDWZ256rrk
VPMOVSDWZ256rrk
VPMOVDWZ256rrk
VPAVGWZ256rrk
VPMULHWZ256rrk
VPSLLWZ256rrk
VPMULLWZ256rrk
VPSRLWZ256rrk
VPBLENDMWZ256rrk
VPTESTNMWZ256rrk
VPERMWZ256rrk
VPTESTMWZ256rrk
VPCMPEQWZ256rrk
VPMOVUSQWZ256rrk
VPMOVSQWZ256rrk
VPMOVQWZ256rrk
VPABSWZ256rrk
VPMADDUBSWZ256rrk
VPSUBSWZ256rrk
VPADDSWZ256rrk
VPMINSWZ256rrk
VPMULHRSWZ256rrk
VPCOMPRESSWZ256rrk
VPSUBUSWZ256rrk
VPADDUSWZ256rrk
VPMAXSWZ256rrk
VPCMPGTWZ256rrk
VPOPCNTWZ256rrk
VPMULHUWZ256rrk
VPMINUWZ256rrk
VPMAXUWZ256rrk
VPSRAVWZ256rrk
VPSLLVWZ256rrk
VPSRLVWZ256rrk
VPERMI2B128rrk
VPERMT2B128rrk
VPERMI2D128rrk
VPERMT2D128rrk
VPERMI2PD128rrk
VPERMT2PD128rrk
VPERMI2Q128rrk
VPERMT2Q128rrk
VPERMI2PS128rrk
VPERMT2PS128rrk
VPERMI2W128rrk
VPERMT2W128rrk
VMOVDQA32Z128rrk
VMOVDQU32Z128rrk
VMOVDQA64Z128rrk
VMOVDQU64Z128rrk
VMOVDQU16Z128rrk
VMOVDQU8Z128rrk
VPSUBBZ128rrk
VPADDBZ128rrk
VPEXPANDBZ128rrk
VPMOVUSDBZ128rrk
VPMOVSDBZ128rrk
VPMOVDBZ128rrk
VPSHUFBZ128rrk
VPAVGBZ128rrk
VGF2P8MULBZ128rrk
VPBLENDMBZ128rrk
VPTESTNMBZ128rrk
VPSHUFBITQMBZ128rrk
VPERMBZ128rrk
VPTESTMBZ128rrk
VPCMPEQBZ128rrk
VPMOVUSQBZ128rrk
VPMOVSQBZ128rrk
VPMULTISHIFTQBZ128rrk
VPMOVQBZ128rrk
VPABSBZ128rrk
VPSUBSBZ128rrk
VPADDSBZ128rrk
VPMINSBZ128rrk
VPCOMPRESSBZ128rrk
VPSUBUSBZ128rrk
VPADDUSBZ128rrk
VPMAXSBZ128rrk
VPCMPGTBZ128rrk
VPOPCNTBZ128rrk
VPMINUBZ128rrk
VPMAXUBZ128rrk
VPACKSSWBZ128rrk
VPACKUSWBZ128rrk
VPMOVUSWBZ128rrk
VPMOVSWBZ128rrk
VPMOVWBZ128rrk
VPSRADZ128rrk
VPSUBDZ128rrk
VPMOVSXBDZ128rrk
VPMOVZXBDZ128rrk
VPADDDZ128rrk
VPANDDZ128rrk
VPEXPANDDZ128rrk
VPSLLDZ128rrk
VPMULLDZ128rrk
VPSRLDZ128rrk
VPBLENDMDZ128rrk
VPTESTNMDZ128rrk
VPTESTMDZ128rrk
VPANDNDZ128rrk
VCVTDQ2PDZ128rrk
VCVTUDQ2PDZ128rrk
VCVTQQ2PDZ128rrk
VCVTUQQ2PDZ128rrk
VCVTPS2PDZ128rrk
VMOVAPDZ128rrk
VSUBPDZ128rrk
VMINCPDZ128rrk
VMAXCPDZ128rrk
VADDPDZ128rrk
VEXPANDPDZ128rrk
VANDPDZ128rrk
VSCALEFPDZ128rrk
VUNPCKHPDZ128rrk
VPERMILPDZ128rrk
VUNPCKLPDZ128rrk
VMULPDZ128rrk
VBLENDMPDZ128rrk
VANDNPDZ128rrk
VMINPDZ128rrk
VORPDZ128rrk
VXORPDZ128rrk
VFPCLASSPDZ128rrk
VCOMPRESSPDZ128rrk
VMOVUPDZ128rrk
VDIVPDZ128rrk
VMAXPDZ128rrk
VPCMPEQDZ128rrk
VPMOVUSQDZ128rrk
VPMOVSQDZ128rrk
VPMOVQDZ128rrk
VPORDZ128rrk
VPXORDZ128rrk
VPABSDZ128rrk
VPMINSDZ128rrk
VPCOMPRESSDZ128rrk
VPMAXSDZ128rrk
VPCONFLICTDZ128rrk
VPCMPGTDZ128rrk
VPOPCNTDZ128rrk
VPLZCNTDZ128rrk
VPMINUDZ128rrk
VPMAXUDZ128rrk
VPSRAVDZ128rrk
VPSLLVDZ128rrk
VPROLVDZ128rrk
VPSRLVDZ128rrk
VPRORVDZ128rrk
VPMADDWDZ128rrk
VPUNPCKHWDZ128rrk
VPUNPCKLWDZ128rrk
VPMOVSXWDZ128rrk
VPMOVZXWDZ128rrk
VCVTPS2PHZ128rrk
VMOVDDUPZ128rrk
VMOVSHDUPZ128rrk
VMOVSLDUPZ128rrk
VPSRAQZ128rrk
VPSUBQZ128rrk
VPMOVSXBQZ128rrk
VPMOVZXBQZ128rrk
VCVTTPD2DQZ128rrk
VCVTPD2DQZ128rrk
VCVTTPS2DQZ128rrk
VCVTPS2DQZ128rrk
VPADDQZ128rrk
VPUNPCKHDQZ128rrk
VPUNPCKLDQZ128rrk
VPMULDQZ128rrk
VPANDQZ128rrk
VPEXPANDQZ128rrk
VPUNPCKHQDQZ128rrk
VPUNPCKLQDQZ128rrk
VCVTTPD2UDQZ128rrk
VCVTPD2UDQZ128rrk
VCVTTPS2UDQZ128rrk
VCVTPS2UDQZ128rrk
VPMULUDQZ128rrk
VPMOVSXDQZ128rrk
VPMOVZXDQZ128rrk
VPSLLQZ128rrk
VPMULLQZ128rrk
VPSRLQZ128rrk
VPBLENDMQZ128rrk
VPTESTNMQZ128rrk
VPTESTMQZ128rrk
VPANDNQZ128rrk
VCVTTPD2QQZ128rrk
VCVTPD2QQZ128rrk
VCVTTPS2QQZ128rrk
VCVTPS2QQZ128rrk
VPCMPEQQZ128rrk
VCVTTPD2UQQZ128rrk
VCVTPD2UQQZ128rrk
VCVTTPS2UQQZ128rrk
VCVTPS2UQQZ128rrk
VPORQZ128rrk
VPXORQZ128rrk
VPABSQZ128rrk
VPMINSQZ128rrk
VPCOMPRESSQZ128rrk
VPMAXSQZ128rrk
VPCONFLICTQZ128rrk
VPCMPGTQZ128rrk
VPOPCNTQZ128rrk
VPLZCNTQZ128rrk
VPMINUQZ128rrk
VPMAXUQZ128rrk
VPSRAVQZ128rrk
VPSLLVQZ128rrk
VPROLVQZ128rrk
VPSRLVQZ128rrk
VPRORVQZ128rrk
VPMOVSXWQZ128rrk
VPMOVZXWQZ128rrk
VCVTPD2PSZ128rrk
VCVTPH2PSZ128rrk
VCVTDQ2PSZ128rrk
VCVTUDQ2PSZ128rrk
VCVTQQ2PSZ128rrk
VCVTUQQ2PSZ128rrk
VMOVAPSZ128rrk
VSUBPSZ128rrk
VMINCPSZ128rrk
VMAXCPSZ128rrk
VADDPSZ128rrk
VEXPANDPSZ128rrk
VANDPSZ128rrk
VSCALEFPSZ128rrk
VUNPCKHPSZ128rrk
VPERMILPSZ128rrk
VUNPCKLPSZ128rrk
VMULPSZ128rrk
VBLENDMPSZ128rrk
VANDNPSZ128rrk
VMINPSZ128rrk
VORPSZ128rrk
VXORPSZ128rrk
VFPCLASSPSZ128rrk
VCOMPRESSPSZ128rrk
VMOVUPSZ128rrk
VDIVPSZ128rrk
VMAXPSZ128rrk
VPSRAWZ128rrk
VPUNPCKHBWZ128rrk
VPUNPCKLBWZ128rrk
VPSUBWZ128rrk
VPMOVSXBWZ128rrk
VPMOVZXBWZ128rrk
VPADDWZ128rrk
VPEXPANDWZ128rrk
VPACKSSDWZ128rrk
VPACKUSDWZ128rrk
VPMOVUSDWZ128rrk
VPMOVSDWZ128rrk
VPMOVDWZ128rrk
VPAVGWZ128rrk
VPMULHWZ128rrk
VPSLLWZ128rrk
VPMULLWZ128rrk
VPSRLWZ128rrk
VPBLENDMWZ128rrk
VPTESTNMWZ128rrk
VPERMWZ128rrk
VPTESTMWZ128rrk
VPCMPEQWZ128rrk
VPMOVUSQWZ128rrk
VPMOVSQWZ128rrk
VPMOVQWZ128rrk
VPABSWZ128rrk
VPMADDUBSWZ128rrk
VPSUBSWZ128rrk
VPADDSWZ128rrk
VPMINSWZ128rrk
VPMULHRSWZ128rrk
VPCOMPRESSWZ128rrk
VPSUBUSWZ128rrk
VPADDUSWZ128rrk
VPMAXSWZ128rrk
VPCMPGTWZ128rrk
VPOPCNTWZ128rrk
VPMULHUWZ128rrk
VPMINUWZ128rrk
VPMAXUWZ128rrk
VPSRAVWZ128rrk
VPSLLVWZ128rrk
VPSRLVWZ128rrk
VPERMI2Brrk
VPERMT2Brrk
VPERMI2Drrk
VPERMT2Drrk
VPERMI2PDrrk
VPERMT2PDrrk
VPERMI2Qrrk
VPERMT2Qrrk
VPERMI2PSrrk
VPERMT2PSrrk
VPERMI2Wrrk
VPERMT2Wrrk
VMOVDQA32Zrrk
VMOVDQU32Zrrk
VEXTRACTF64x2Zrrk
VINSERTF64x2Zrrk
VEXTRACTI64x2Zrrk
VINSERTI64x2Zrrk
VMOVDQA64Zrrk
VMOVDQU64Zrrk
VEXTRACTF32x4Zrrk
VINSERTF32x4Zrrk
VEXTRACTI32x4Zrrk
VINSERTI32x4Zrrk
VEXTRACTF64x4Zrrk
VINSERTF64x4Zrrk
VEXTRACTI64x4Zrrk
VINSERTI64x4Zrrk
VMOVDQU16Zrrk
VMOVDQU8Zrrk
VEXTRACTF32x8Zrrk
VINSERTF32x8Zrrk
VEXTRACTI32x8Zrrk
VINSERTI32x8Zrrk
VPSUBBZrrk
VPADDBZrrk
VPEXPANDBZrrk
VPMOVUSDBZrrk
VPMOVSDBZrrk
VPMOVDBZrrk
VPSHUFBZrrk
VPAVGBZrrk
VGF2P8MULBZrrk
VPBLENDMBZrrk
VPTESTNMBZrrk
VPSHUFBITQMBZrrk
VPERMBZrrk
VPTESTMBZrrk
VPCMPEQBZrrk
VPMOVUSQBZrrk
VPMOVSQBZrrk
VPMULTISHIFTQBZrrk
VPMOVQBZrrk
VPABSBZrrk
VPSUBSBZrrk
VPADDSBZrrk
VPMINSBZrrk
VPCOMPRESSBZrrk
VPSUBUSBZrrk
VPADDUSBZrrk
VPMAXSBZrrk
VPCMPGTBZrrk
VPOPCNTBZrrk
VPMINUBZrrk
VPMAXUBZrrk
VPACKSSWBZrrk
VPACKUSWBZrrk
VPMOVUSWBZrrk
VPMOVSWBZrrk
VPMOVWBZrrk
VPSRADZrrk
VPSUBDZrrk
VPMOVSXBDZrrk
VPMOVZXBDZrrk
VPADDDZrrk
VPANDDZrrk
VPEXPANDDZrrk
VPSLLDZrrk
VPMULLDZrrk
VPSRLDZrrk
VPBLENDMDZrrk
VPTESTNMDZrrk
VPERMDZrrk
VPTESTMDZrrk
VPANDNDZrrk
VCVTDQ2PDZrrk
VCVTUDQ2PDZrrk
VCVTQQ2PDZrrk
VCVTUQQ2PDZrrk
VCVTPS2PDZrrk
VMOVAPDZrrk
VSUBPDZrrk
VMINCPDZrrk
VMAXCPDZrrk
VADDPDZrrk
VEXPANDPDZrrk
VANDPDZrrk
VSCALEFPDZrrk
VUNPCKHPDZrrk
VPERMILPDZrrk
VUNPCKLPDZrrk
VMULPDZrrk
VBLENDMPDZrrk
VPERMPDZrrk
VANDNPDZrrk
VMINPDZrrk
VORPDZrrk
VXORPDZrrk
VFPCLASSPDZrrk
VCOMPRESSPDZrrk
VMOVUPDZrrk
VDIVPDZrrk
VMAXPDZrrk
VPCMPEQDZrrk
VPMOVUSQDZrrk
VPMOVSQDZrrk
VPMOVQDZrrk
VPORDZrrk
VPXORDZrrk
VRCP14SDZrrk
VRSQRT14SDZrrk
VPABSDZrrk
VSCALEFSDZrrk
VPMINSDZrrk
VPCOMPRESSDZrrk
VFPCLASSSDZrrk
VMOVSDZrrk
VPMAXSDZrrk
VPCONFLICTDZrrk
VPCMPGTDZrrk
VPOPCNTDZrrk
VPLZCNTDZrrk
VPMINUDZrrk
VPMAXUDZrrk
VPSRAVDZrrk
VPSLLVDZrrk
VPROLVDZrrk
VPSRLVDZrrk
VPRORVDZrrk
VPMADDWDZrrk
VPUNPCKHWDZrrk
VPUNPCKLWDZrrk
VPMOVSXWDZrrk
VPMOVZXWDZrrk
VCVTPS2PHZrrk
VMOVDDUPZrrk
VMOVSHDUPZrrk
VMOVSLDUPZrrk
VPSRAQZrrk
VPSUBQZrrk
VPMOVSXBQZrrk
VPMOVZXBQZrrk
VCVTTPD2DQZrrk
VCVTPD2DQZrrk
VCVTTPS2DQZrrk
VCVTPS2DQZrrk
VPADDQZrrk
VPUNPCKHDQZrrk
VPUNPCKLDQZrrk
VPMULDQZrrk
VPANDQZrrk
VPEXPANDQZrrk
VPUNPCKHQDQZrrk
VPUNPCKLQDQZrrk
VCVTTPD2UDQZrrk
VCVTPD2UDQZrrk
VCVTTPS2UDQZrrk
VCVTPS2UDQZrrk
VPMULUDQZrrk
VPMOVSXDQZrrk
VPMOVZXDQZrrk
VPSLLQZrrk
VPMULLQZrrk
VPSRLQZrrk
VPBLENDMQZrrk
VPTESTNMQZrrk
VPERMQZrrk
VPTESTMQZrrk
VPANDNQZrrk
VCVTTPD2QQZrrk
VCVTPD2QQZrrk
VCVTTPS2QQZrrk
VCVTPS2QQZrrk
VPCMPEQQZrrk
VCVTTPD2UQQZrrk
VCVTPD2UQQZrrk
VCVTTPS2UQQZrrk
VCVTPS2UQQZrrk
VPORQZrrk
VPXORQZrrk
VPABSQZrrk
VPMINSQZrrk
VPCOMPRESSQZrrk
VPMAXSQZrrk
VPCONFLICTQZrrk
VPCMPGTQZrrk
VPOPCNTQZrrk
VPLZCNTQZrrk
VPMINUQZrrk
VPMAXUQZrrk
VPSRAVQZrrk
VPSLLVQZrrk
VPROLVQZrrk
VPSRLVQZrrk
VPRORVQZrrk
VPMOVSXWQZrrk
VPMOVZXWQZrrk
VCVTPD2PSZrrk
VCVTPH2PSZrrk
VCVTDQ2PSZrrk
VCVTUDQ2PSZrrk
VCVTQQ2PSZrrk
VCVTUQQ2PSZrrk
VMOVAPSZrrk
VSUBPSZrrk
VMINCPSZrrk
VMAXCPSZrrk
VADDPSZrrk
VEXPANDPSZrrk
VANDPSZrrk
VSCALEFPSZrrk
VUNPCKHPSZrrk
VPERMILPSZrrk
VUNPCKLPSZrrk
VMULPSZrrk
VBLENDMPSZrrk
VPERMPSZrrk
VANDNPSZrrk
VMINPSZrrk
VORPSZrrk
VXORPSZrrk
VFPCLASSPSZrrk
VCOMPRESSPSZrrk
VMOVUPSZrrk
VDIVPSZrrk
VMAXPSZrrk
VRCP14SSZrrk
VRSQRT14SSZrrk
VSCALEFSSZrrk
VFPCLASSSSZrrk
VMOVSSZrrk
VPSRAWZrrk
VPUNPCKHBWZrrk
VPUNPCKLBWZrrk
VPSUBWZrrk
VPMOVSXBWZrrk
VPMOVZXBWZrrk
VPADDWZrrk
VPEXPANDWZrrk
VPACKSSDWZrrk
VPACKUSDWZrrk
VPMOVUSDWZrrk
VPMOVSDWZrrk
VPMOVDWZrrk
VPAVGWZrrk
VPMULHWZrrk
VPSLLWZrrk
VPMULLWZrrk
VPSRLWZrrk
VPBLENDMWZrrk
VPTESTNMWZrrk
VPERMWZrrk
VPTESTMWZrrk
VPCMPEQWZrrk
VPMOVUSQWZrrk
VPMOVSQWZrrk
VPMOVQWZrrk
VPABSWZrrk
VPMADDUBSWZrrk
VPSUBSWZrrk
VPADDSWZrrk
VPMINSWZrrk
VPMULHRSWZrrk
VPCOMPRESSWZrrk
VPSUBUSWZrrk
VPADDUSWZrrk
VPMAXSWZrrk
VPCMPGTWZrrk
VPOPCNTWZrrk
VPMULHUWZrrk
VPMINUWZrrk
VPMAXUWZrrk
VPSRAVWZrrk
VPSLLVWZrrk
VPSRLVWZrrk
VCMPPDZrrib_altk
VCMPPSZrrib_altk
VCMPSDZrrb_altk
VCMPSSZrrb_altk
VCMPPDZ256rmbi_altk
VCMPPSZ256rmbi_altk
VCMPPDZ128rmbi_altk
VCMPPSZ128rmbi_altk
VCMPPDZrmbi_altk
VCMPPSZrmbi_altk
VCMPPDZ256rmi_altk
VCMPPSZ256rmi_altk
VCMPPDZ128rmi_altk
VCMPPSZ128rmi_altk
VCMPPDZrmi_altk
VCMPSDZrmi_altk
VCMPPSZrmi_altk
VCMPSSZrmi_altk
VCMPPDZ256rri_altk
VCMPPSZ256rri_altk
VCMPPDZ128rri_altk
VCMPPSZ128rri_altk
VCMPPDZrri_altk
VCMPSDZrri_altk
VCMPPSZrri_altk
VCMPSSZrri_altk
VFMSUB231SDZrb_Intk
VFNMSUB231SDZrb_Intk
VFMADD231SDZrb_Intk
VFNMADD231SDZrb_Intk
VFMSUB132SDZrb_Intk
VFNMSUB132SDZrb_Intk
VFMADD132SDZrb_Intk
VFNMADD132SDZrb_Intk
VFMSUB213SDZrb_Intk
VFNMSUB213SDZrb_Intk
VFMADD213SDZrb_Intk
VFNMADD213SDZrb_Intk
VRNDSCALESDZrb_Intk
VSQRTSDZrb_Intk
VFMSUB231SSZrb_Intk
VFNMSUB231SSZrb_Intk
VFMADD231SSZrb_Intk
VFNMADD231SSZrb_Intk
VFMSUB132SSZrb_Intk
VFNMSUB132SSZrb_Intk
VFMADD132SSZrb_Intk
VFNMADD132SSZrb_Intk
VFMSUB213SSZrb_Intk
VFNMSUB213SSZrb_Intk
VFMADD213SSZrb_Intk
VFNMADD213SSZrb_Intk
VRNDSCALESSZrb_Intk
VSQRTSSZrb_Intk
VCVTSS2SDZrrb_Intk
VSUBSDZrrb_Intk
VADDSDZrrb_Intk
VSCALEFSDZrrb_Intk
VMULSDZrrb_Intk
VMINSDZrrb_Intk
VCMPSDZrrb_Intk
VDIVSDZrrb_Intk
VMAXSDZrrb_Intk
VCVTSD2SSZrrb_Intk
VSUBSSZrrb_Intk
VADDSSZrrb_Intk
VSCALEFSSZrrb_Intk
VMULSSZrrb_Intk
VMINSSZrrb_Intk
VCMPSSZrrb_Intk
VDIVSSZrrb_Intk
VMAXSSZrrb_Intk
VFMSUB231SDZm_Intk
VFNMSUB231SDZm_Intk
VFMADD231SDZm_Intk
VFNMADD231SDZm_Intk
VFMSUB132SDZm_Intk
VFNMSUB132SDZm_Intk
VFMADD132SDZm_Intk
VFNMADD132SDZm_Intk
VFMSUB213SDZm_Intk
VFNMSUB213SDZm_Intk
VFMADD213SDZm_Intk
VFNMADD213SDZm_Intk
VRNDSCALESDZm_Intk
VSQRTSDZm_Intk
VFMSUB231SSZm_Intk
VFNMSUB231SSZm_Intk
VFMADD231SSZm_Intk
VFNMADD231SSZm_Intk
VFMSUB132SSZm_Intk
VFNMSUB132SSZm_Intk
VFMADD132SSZm_Intk
VFNMADD132SSZm_Intk
VFMSUB213SSZm_Intk
VFNMSUB213SSZm_Intk
VFMADD213SSZm_Intk
VFNMADD213SSZm_Intk
VRNDSCALESSZm_Intk
VSQRTSSZm_Intk
VCVTSS2SDZrm_Intk
VSUBSDZrm_Intk
VADDSDZrm_Intk
VMULSDZrm_Intk
VMINSDZrm_Intk
VCMPSDZrm_Intk
VDIVSDZrm_Intk
VMAXSDZrm_Intk
VCVTSD2SSZrm_Intk
VSUBSSZrm_Intk
VADDSSZrm_Intk
VMULSSZrm_Intk
VMINSSZrm_Intk
VCMPSSZrm_Intk
VDIVSSZrm_Intk
VMAXSSZrm_Intk
VFMSUB231SDZr_Intk
VFNMSUB231SDZr_Intk
VFMADD231SDZr_Intk
VFNMADD231SDZr_Intk
VFMSUB132SDZr_Intk
VFNMSUB132SDZr_Intk
VFMADD132SDZr_Intk
VFNMADD132SDZr_Intk
VFMSUB213SDZr_Intk
VFNMSUB213SDZr_Intk
VFMADD213SDZr_Intk
VFNMADD213SDZr_Intk
VRNDSCALESDZr_Intk
VSQRTSDZr_Intk
VFMSUB231SSZr_Intk
VFNMSUB231SSZr_Intk
VFMADD231SSZr_Intk
VFNMADD231SSZr_Intk
VFMSUB132SSZr_Intk
VFNMSUB132SSZr_Intk
VFMADD132SSZr_Intk
VFNMADD132SSZr_Intk
VFMSUB213SSZr_Intk
VFNMSUB213SSZr_Intk
VFMADD213SSZr_Intk
VFNMADD213SSZr_Intk
VRNDSCALESSZr_Intk
VSQRTSSZr_Intk
VCVTSS2SDZrr_Intk
VSUBSDZrr_Intk
VADDSDZrr_Intk
VMULSDZrr_Intk
VMINSDZrr_Intk
VCMPSDZrr_Intk
VDIVSDZrr_Intk
VMAXSDZrr_Intk
VCVTSD2SSZrr_Intk
VSUBSSZrr_Intk
VADDSSZrr_Intk
VMULSSZrr_Intk
VMINSSZrr_Intk
VCMPSSZrr_Intk
VDIVSSZrr_Intk
VMAXSSZrr_Intk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
LOCK_DEC64m
LOCK_INC64m
PTWRITE64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
VBROADCASTF32X2Z256m
VBROADCASTI32X2Z256m
VPBROADCASTBZ256m
VFMADDSUB231PDZ256m
VFMSUB231PDZ256m
VFNMSUB231PDZ256m
VFMSUBADD231PDZ256m
VFMADD231PDZ256m
VFNMADD231PDZ256m
VFMADDSUB132PDZ256m
VFMSUB132PDZ256m
VFNMSUB132PDZ256m
VFMSUBADD132PDZ256m
VFMADD132PDZ256m
VFNMADD132PDZ256m
VFMADDSUB213PDZ256m
VFMSUB213PDZ256m
VFNMSUB213PDZ256m
VFMSUBADD213PDZ256m
VFMADD213PDZ256m
VFNMADD213PDZ256m
VRCP14PDZ256m
VRSQRT14PDZ256m
VGETEXPPDZ256m
VSQRTPDZ256m
VPDPWSSDZ256m
VBROADCASTSDZ256m
VPDPBUSDZ256m
VPBROADCASTDZ256m
VPSHLDVDZ256m
VPSHRDVDZ256m
VPBROADCASTQZ256m
VPMADD52HUQZ256m
VPMADD52LUQZ256m
VPSHLDVQZ256m
VPSHRDVQZ256m
VPDPWSSDSZ256m
VPDPBUSDSZ256m
VFMADDSUB231PSZ256m
VFMSUB231PSZ256m
VFNMSUB231PSZ256m
VFMSUBADD231PSZ256m
VFMADD231PSZ256m
VFNMADD231PSZ256m
VFMADDSUB132PSZ256m
VFMSUB132PSZ256m
VFNMSUB132PSZ256m
VFMSUBADD132PSZ256m
VFMADD132PSZ256m
VFNMADD132PSZ256m
VFMADDSUB213PSZ256m
VFMSUB213PSZ256m
VFNMSUB213PSZ256m
VFMSUBADD213PSZ256m
VFMADD213PSZ256m
VFNMADD213PSZ256m
VRCP14PSZ256m
VRSQRT14PSZ256m
VGETEXPPSZ256m
VSQRTPSZ256m
VBROADCASTSSZ256m
VPBROADCASTWZ256m
VPSHLDVWZ256m
VPSHRDVWZ256m
VBROADCASTI32X2Z128m
VPBROADCASTBZ128m
VFMADDSUB231PDZ128m
VFMSUB231PDZ128m
VFNMSUB231PDZ128m
VFMSUBADD231PDZ128m
VFMADD231PDZ128m
VFNMADD231PDZ128m
VFMADDSUB132PDZ128m
VFMSUB132PDZ128m
VFNMSUB132PDZ128m
VFMSUBADD132PDZ128m
VFMADD132PDZ128m
VFNMADD132PDZ128m
VFMADDSUB213PDZ128m
VFMSUB213PDZ128m
VFNMSUB213PDZ128m
VFMSUBADD213PDZ128m
VFMADD213PDZ128m
VFNMADD213PDZ128m
VRCP14PDZ128m
VRSQRT14PDZ128m
VGETEXPPDZ128m
VSQRTPDZ128m
VPDPWSSDZ128m
VPDPBUSDZ128m
VPBROADCASTDZ128m
VPSHLDVDZ128m
VPSHRDVDZ128m
VPBROADCASTQZ128m
VPMADD52HUQZ128m
VPMADD52LUQZ128m
VPSHLDVQZ128m
VPSHRDVQZ128m
VPDPWSSDSZ128m
VPDPBUSDSZ128m
VFMADDSUB231PSZ128m
VFMSUB231PSZ128m
VFNMSUB231PSZ128m
VFMSUBADD231PSZ128m
VFMADD231PSZ128m
VFNMADD231PSZ128m
VFMADDSUB132PSZ128m
VFMSUB132PSZ128m
VFNMSUB132PSZ128m
VFMSUBADD132PSZ128m
VFMADD132PSZ128m
VFNMADD132PSZ128m
VFMADDSUB213PSZ128m
VFMSUB213PSZ128m
VFNMSUB213PSZ128m
VFMSUBADD213PSZ128m
VFMADD213PSZ128m
VFNMADD213PSZ128m
VRCP14PSZ128m
VRSQRT14PSZ128m
VGETEXPPSZ128m
VSQRTPSZ128m
VBROADCASTSSZ128m
VPBROADCASTWZ128m
VPSHLDVWZ128m
VPSHRDVWZ128m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VFMADDSUB231PDm
VFMSUB231PDm
VFNMSUB231PDm
VFMSUBADD231PDm
VFMADD231PDm
VFNMADD231PDm
VFMADDSUB132PDm
VFMSUB132PDm
VFNMSUB132PDm
VFMSUBADD132PDm
VFMADD132PDm
VFNMADD132PDm
VFMADDSUB213PDm
VFMSUB213PDm
VFNMSUB213PDm
VFMSUBADD213PDm
VFMADD213PDm
VFNMADD213PDm
VGATHERPF0DPDm
VSCATTERPF0DPDm
VGATHERPF1DPDm
VSCATTERPF1DPDm
VROUNDPDm
VGATHERPF0QPDm
VSCATTERPF0QPDm
VGATHERPF1QPDm
VSCATTERPF1QPDm
VSQRTPDm
VFMSUB231SDm
VFNMSUB231SDm
VFMADD231SDm
VFNMADD231SDm
VFMSUB132SDm
VFNMSUB132SDm
VFMADD132SDm
VFNMADD132SDm
VFMSUB213SDm
VFNMSUB213SDm
VFMADD213SDm
VFNMADD213SDm
VROUNDSDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
PTWRITEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VFMADDSUB231PSm
VFMSUB231PSm
VFNMSUB231PSm
VFMSUBADD231PSm
VFMADD231PSm
VFNMADD231PSm
VFMADDSUB132PSm
VFMSUB132PSm
VFNMSUB132PSm
VFMSUBADD132PSm
VFMADD132PSm
VFNMADD132PSm
VFMADDSUB213PSm
VFMSUB213PSm
VFNMSUB213PSm
VFMSUBADD213PSm
VFMADD213PSm
VFNMADD213PSm
VGATHERPF0DPSm
VSCATTERPF0DPSm
VGATHERPF1DPSm
VSCATTERPF1DPSm
VROUNDPSm
VRCPPSm
VGATHERPF0QPSm
VSCATTERPF0QPSm
VGATHERPF1QPSm
VSCATTERPF1QPSm
VRSQRTPSm
VSQRTPSm
VFMSUB231SSm
VFNMSUB231SSm
VFMADD231SSm
VFNMADD231SSm
VFMSUB132SSm
VFNMSUB132SSm
VFMADD132SSm
VFNMADD132SSm
VFMSUB213SSm
VFNMSUB213SSm
VFMADD213SSm
VFNMADD213SSm
VROUNDSSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
SETSm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VFMADDSUB231PDYm
VFMSUB231PDYm
VFNMSUB231PDYm
VFMSUBADD231PDYm
VFMADD231PDYm
VFNMADD231PDYm
VFMADDSUB132PDYm
VFMSUB132PDYm
VFNMSUB132PDYm
VFMSUBADD132PDYm
VFMADD132PDYm
VFNMADD132PDYm
VFMADDSUB213PDYm
VFMSUB213PDYm
VFNMSUB213PDYm
VFMSUBADD213PDYm
VFMADD213PDYm
VFNMADD213PDYm
VROUNDPDYm
VSQRTPDYm
VFMADDSUB231PSYm
VFMSUB231PSYm
VFNMSUB231PSYm
VFMSUBADD231PSYm
VFMADD231PSYm
VFNMADD231PSYm
VFMADDSUB132PSYm
VFMSUB132PSYm
VFNMSUB132PSYm
VFMSUBADD132PSYm
VFMADD132PSYm
VFNMADD132PSYm
VFMADDSUB213PSYm
VFMSUB213PSYm
VFNMSUB213PSYm
VFMSUBADD213PSYm
VFMADD213PSYm
VFNMADD213PSYm
VROUNDPSYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VBROADCASTF32X2Zm
VBROADCASTI32X2Zm
VPBROADCASTBZm
VFMADDSUB231PDZm
VFMSUB231PDZm
VFNMSUB231PDZm
VFMSUBADD231PDZm
VFMADD231PDZm
VFNMADD231PDZm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VEXP2PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VRCP28PDZm
VRSQRT28PDZm
VGETEXPPDZm
VSQRTPDZm
VFMSUB231SDZm
VFNMSUB231SDZm
VFMADD231SDZm
VFNMADD231SDZm
VFMSUB132SDZm
VFNMSUB132SDZm
VFMADD132SDZm
VFNMADD132SDZm
VFMSUB213SDZm
VFNMSUB213SDZm
VFMADD213SDZm
VFNMADD213SDZm
VRCP28SDZm
VRSQRT28SDZm
VRNDSCALESDZm
VGETEXPSDZm
VPDPWSSDZm
VSQRTSDZm
VBROADCASTSDZm
VPDPBUSDZm
VPBROADCASTDZm
VPSHLDVDZm
VPSHRDVDZm
VPBROADCASTQZm
VPMADD52HUQZm
VPMADD52LUQZm
VPSHLDVQZm
VPSHRDVQZm
VPDPWSSDSZm
VPDPBUSDSZm
VFMADDSUB231PSZm
VFMSUB231PSZm
VFNMSUB231PSZm
VFMSUBADD231PSZm
VFMADD231PSZm
VFNMADD231PSZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VEXP2PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VRCP28PSZm
VRSQRT28PSZm
VGETEXPPSZm
VSQRTPSZm
VFMSUB231SSZm
VFNMSUB231SSZm
VFMADD231SSZm
VFNMADD231SSZm
VFMSUB132SSZm
VFNMSUB132SSZm
VFMADD132SSZm
VFNMADD132SSZm
VFMSUB213SSZm
VFNMSUB213SSZm
VFMADD213SSZm
VFNMADD213SSZm
VRCP28SSZm
VRSQRT28SSZm
VRNDSCALESSZm
VGETEXPSSZm
VSQRTSSZm
VBROADCASTSSZm
VPBROADCASTWZm
VPSHLDVWZm
VPSHRDVWZm
KMOVBkm
KMOVDkm
KMOVQkm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BNDMK32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BNDCL32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
CMOVL32rm
BNDCN32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
PEXT32rm
BNDCU32rm
BNDMOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
VBROADCASTF64X2rm
VBROADCASTI64X2rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
XADD64rm
AND64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BLCI64rm
BZHI64rm
VCVTTSD2SI64rm
VCVTTSS2SI64rm
BLSI64rm
BNDMK64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BNDCL64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
CMOVL64rm
BNDCN64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
CMOVNS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
PEXT64rm
BNDCU64rm
BNDMOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
MMX_MOVD64from64rm
MMX_MOVD64to64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VBROADCASTF32X4rm
VBROADCASTI32X4rm
VBROADCASTF64X4rm
VBROADCASTI64X4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
MOV16rm
VPERMI2B256rm
VPERMT2B256rm
VPERMI2D256rm
VPERMT2D256rm
VPERMI2PD256rm
VPERMT2PD256rm
VPERMI2Q256rm
VPERMT2Q256rm
VPERMI2PS256rm
VPERMT2PS256rm
VPERMI2W256rm
VPERMT2W256rm
VMOVDQA32Z256rm
VMOVDQU32Z256rm
VINSERTF64x2Z256rm
VINSERTI64x2Z256rm
VMOVDQA64Z256rm
VMOVDQU64Z256rm
VBROADCASTF32X4Z256rm
VBROADCASTI32X4Z256rm
VINSERTF32x4Z256rm
VINSERTI32x4Z256rm
VMOVDQU16Z256rm
VMOVDQU8Z256rm
VMOVNTDQAZ256rm
VPSUBBZ256rm
VPADDBZ256rm
VPEXPANDBZ256rm
VPSHUFBZ256rm
VPAVGBZ256rm
VGF2P8MULBZ256rm
VPBLENDMBZ256rm
VPTESTNMBZ256rm
VPSHUFBITQMBZ256rm
VPERMBZ256rm
VPTESTMBZ256rm
VPCMPEQBZ256rm
VPMULTISHIFTQBZ256rm
VPABSBZ256rm
VPSUBSBZ256rm
VPADDSBZ256rm
VPMINSBZ256rm
VPSUBUSBZ256rm
VPADDUSBZ256rm
VPMAXSBZ256rm
VPCMPGTBZ256rm
VPOPCNTBZ256rm
VPMINUBZ256rm
VPMAXUBZ256rm
VPACKSSWBZ256rm
VPACKUSWBZ256rm
VAESDECZ256rm
VAESENCZ256rm
VPSRADZ256rm
VPSUBDZ256rm
VPMOVSXBDZ256rm
VPMOVZXBDZ256rm
VPADDDZ256rm
VPANDDZ256rm
VPEXPANDDZ256rm
VPGATHERDDZ256rm
VPSLLDZ256rm
VPMULLDZ256rm
VPSRLDZ256rm
VPBLENDMDZ256rm
VPTESTNMDZ256rm
VPERMDZ256rm
VPTESTMDZ256rm
VPANDNDZ256rm
VCVTDQ2PDZ256rm
VCVTUDQ2PDZ256rm
VCVTQQ2PDZ256rm
VCVTUQQ2PDZ256rm
VCVTPS2PDZ256rm
VMOVAPDZ256rm
VSUBPDZ256rm
VMINCPDZ256rm
VMAXCPDZ256rm
VADDPDZ256rm
VEXPANDPDZ256rm
VANDPDZ256rm
VGATHERDPDZ256rm
VSCALEFPDZ256rm
VUNPCKHPDZ256rm
VPERMILPDZ256rm
VUNPCKLPDZ256rm
VMULPDZ256rm
VBLENDMPDZ256rm
VPERMPDZ256rm
VANDNPDZ256rm
VMINPDZ256rm
VGATHERQPDZ256rm
VORPDZ256rm
VXORPDZ256rm
VFPCLASSPDZ256rm
VMOVUPDZ256rm
VDIVPDZ256rm
VMAXPDZ256rm
VPCMPEQDZ256rm
VPGATHERQDZ256rm
VPORDZ256rm
VPXORDZ256rm
VPABSDZ256rm
VPMINSDZ256rm
VPMAXSDZ256rm
VPCONFLICTDZ256rm
VPCMPGTDZ256rm
VPOPCNTDZ256rm
VPLZCNTDZ256rm
VPMINUDZ256rm
VPMAXUDZ256rm
VPSRAVDZ256rm
VPSLLVDZ256rm
VPROLVDZ256rm
VPSRLVDZ256rm
VPRORVDZ256rm
VPMADDWDZ256rm
VPUNPCKHWDZ256rm
VPUNPCKLWDZ256rm
VPMOVSXWDZ256rm
VPMOVZXWDZ256rm
VMOVDDUPZ256rm
VMOVSHDUPZ256rm
VMOVSLDUPZ256rm
VPSRAQZ256rm
VPSUBQZ256rm
VPMOVSXBQZ256rm
VPMOVZXBQZ256rm
VCVTTPD2DQZ256rm
VCVTPD2DQZ256rm
VCVTTPS2DQZ256rm
VCVTPS2DQZ256rm
VPADDQZ256rm
VPUNPCKHDQZ256rm
VPUNPCKLDQZ256rm
VPSLLDQZ256rm
VPSRLDQZ256rm
VPMULDQZ256rm
VPANDQZ256rm
VPEXPANDQZ256rm
VPUNPCKHQDQZ256rm
VPUNPCKLQDQZ256rm
VPCLMULQDQZ256rm
VPGATHERDQZ256rm
VCVTTPD2UDQZ256rm
VCVTPD2UDQZ256rm
VCVTTPS2UDQZ256rm
VCVTPS2UDQZ256rm
VPMULUDQZ256rm
VPMOVSXDQZ256rm
VPMOVZXDQZ256rm
VPSLLQZ256rm
VPMULLQZ256rm
VPSRLQZ256rm
VPBLENDMQZ256rm
VPTESTNMQZ256rm
VPERMQZ256rm
VPTESTMQZ256rm
VPANDNQZ256rm
VCVTTPD2QQZ256rm
VCVTPD2QQZ256rm
VCVTTPS2QQZ256rm
VCVTPS2QQZ256rm
VPCMPEQQZ256rm
VPGATHERQQZ256rm
VCVTTPD2UQQZ256rm
VCVTPD2UQQZ256rm
VCVTTPS2UQQZ256rm
VCVTPS2UQQZ256rm
VPORQZ256rm
VPXORQZ256rm
VPABSQZ256rm
VPMINSQZ256rm
VPMAXSQZ256rm
VPCONFLICTQZ256rm
VPCMPGTQZ256rm
VPOPCNTQZ256rm
VPLZCNTQZ256rm
VPMINUQZ256rm
VPMAXUQZ256rm
VPSRAVQZ256rm
VPSLLVQZ256rm
VPROLVQZ256rm
VPSRLVQZ256rm
VPRORVQZ256rm
VPMOVSXWQZ256rm
VPMOVZXWQZ256rm
VCVTPD2PSZ256rm
VCVTPH2PSZ256rm
VCVTDQ2PSZ256rm
VCVTUDQ2PSZ256rm
VCVTQQ2PSZ256rm
VCVTUQQ2PSZ256rm
VMOVAPSZ256rm
VSUBPSZ256rm
VMINCPSZ256rm
VMAXCPSZ256rm
VADDPSZ256rm
VEXPANDPSZ256rm
VANDPSZ256rm
VGATHERDPSZ256rm
VSCALEFPSZ256rm
VUNPCKHPSZ256rm
VPERMILPSZ256rm
VUNPCKLPSZ256rm
VMULPSZ256rm
VBLENDMPSZ256rm
VPERMPSZ256rm
VANDNPSZ256rm
VMINPSZ256rm
VGATHERQPSZ256rm
VORPSZ256rm
VXORPSZ256rm
VFPCLASSPSZ256rm
VMOVUPSZ256rm
VDIVPSZ256rm
VMAXPSZ256rm
VAESDECLASTZ256rm
VAESENCLASTZ256rm
VPSRAWZ256rm
VPSADBWZ256rm
VPUNPCKHBWZ256rm
VPUNPCKLBWZ256rm
VPSUBWZ256rm
VPMOVSXBWZ256rm
VPMOVZXBWZ256rm
VPADDWZ256rm
VPEXPANDWZ256rm
VPACKSSDWZ256rm
VPACKUSDWZ256rm
VPAVGWZ256rm
VPMULHWZ256rm
VPSLLWZ256rm
VPMULLWZ256rm
VPSRLWZ256rm
VPBLENDMWZ256rm
VPTESTNMWZ256rm
VPERMWZ256rm
VPTESTMWZ256rm
VPCMPEQWZ256rm
VPABSWZ256rm
VPMADDUBSWZ256rm
VPSUBSWZ256rm
VPADDSWZ256rm
VPMINSWZ256rm
VPMULHRSWZ256rm
VPSUBUSWZ256rm
VPADDUSWZ256rm
VPMAXSWZ256rm
VPCMPGTWZ256rm
VPOPCNTWZ256rm
VPMULHUWZ256rm
VPMINUWZ256rm
VPMAXUWZ256rm
VPSRAVWZ256rm
VPSLLVWZ256rm
VPSRLVWZ256rm
VPERMI2B128rm
VPERMT2B128rm
VPERMI2D128rm
VPERMT2D128rm
VPERMI2PD128rm
VPERMT2PD128rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPERMI2Q128rm
VPERMT2Q128rm
VPERMI2PS128rm
VPERMT2PS128rm
VAESKEYGENASSIST128rm
VPERMI2W128rm
VPERMT2W128rm
VMOVDQA32Z128rm
VMOVDQU32Z128rm
VBROADCASTF64X2Z128rm
VBROADCASTI64X2Z128rm
VMOVDQA64Z128rm
VMOVDQU64Z128rm
VMOVDQU16Z128rm
VMOVDQU8Z128rm
VMOVNTDQAZ128rm
VPSUBBZ128rm
VPADDBZ128rm
VPEXPANDBZ128rm
VPSHUFBZ128rm
VPAVGBZ128rm
VGF2P8MULBZ128rm
VPBLENDMBZ128rm
VPTESTNMBZ128rm
VPSHUFBITQMBZ128rm
VPERMBZ128rm
VPTESTMBZ128rm
VPCMPEQBZ128rm
VPMULTISHIFTQBZ128rm
VPABSBZ128rm
VPSUBSBZ128rm
VPADDSBZ128rm
VPMINSBZ128rm
VPSUBUSBZ128rm
VPADDUSBZ128rm
VPMAXSBZ128rm
VPCMPGTBZ128rm
VPOPCNTBZ128rm
VPMINUBZ128rm
VPMAXUBZ128rm
VPACKSSWBZ128rm
VPACKUSWBZ128rm
VAESDECZ128rm
VAESENCZ128rm
VPSRADZ128rm
VPSUBDZ128rm
VPMOVSXBDZ128rm
VPMOVZXBDZ128rm
VPADDDZ128rm
VPANDDZ128rm
VPEXPANDDZ128rm
VPGATHERDDZ128rm
VPSLLDZ128rm
VPMULLDZ128rm
VPSRLDZ128rm
VPBLENDMDZ128rm
VPTESTNMDZ128rm
VPTESTMDZ128rm
VPANDNDZ128rm
VCVTDQ2PDZ128rm
VCVTUDQ2PDZ128rm
VCVTQQ2PDZ128rm
VCVTUQQ2PDZ128rm
VCVTPS2PDZ128rm
VMOVAPDZ128rm
VSUBPDZ128rm
VMINCPDZ128rm
VMAXCPDZ128rm
VADDPDZ128rm
VEXPANDPDZ128rm
VANDPDZ128rm
VGATHERDPDZ128rm
VSCALEFPDZ128rm
VUNPCKHPDZ128rm
VMOVHPDZ128rm
VPERMILPDZ128rm
VUNPCKLPDZ128rm
VMULPDZ128rm
VMOVLPDZ128rm
VBLENDMPDZ128rm
VANDNPDZ128rm
VMINPDZ128rm
VGATHERQPDZ128rm
VORPDZ128rm
VXORPDZ128rm
VFPCLASSPDZ128rm
VMOVUPDZ128rm
VDIVPDZ128rm
VMAXPDZ128rm
VPCMPEQDZ128rm
VPGATHERQDZ128rm
VPORDZ128rm
VPXORDZ128rm
VPABSDZ128rm
VPMINSDZ128rm
VPMAXSDZ128rm
VPCONFLICTDZ128rm
VPCMPGTDZ128rm
VPOPCNTDZ128rm
VPLZCNTDZ128rm
VPMINUDZ128rm
VPMAXUDZ128rm
VPSRAVDZ128rm
VPSLLVDZ128rm
VPROLVDZ128rm
VPSRLVDZ128rm
VPRORVDZ128rm
VPMADDWDZ128rm
VPUNPCKHWDZ128rm
VPUNPCKLWDZ128rm
VPMOVSXWDZ128rm
VPMOVZXWDZ128rm
VMOVDDUPZ128rm
VMOVSHDUPZ128rm
VMOVSLDUPZ128rm
VPSRAQZ128rm
VPSUBQZ128rm
VPMOVSXBQZ128rm
VPMOVZXBQZ128rm
VCVTTPD2DQZ128rm
VCVTPD2DQZ128rm
VCVTTPS2DQZ128rm
VCVTPS2DQZ128rm
VPADDQZ128rm
VPUNPCKHDQZ128rm
VPUNPCKLDQZ128rm
VPSLLDQZ128rm
VPSRLDQZ128rm
VPMULDQZ128rm
VPANDQZ128rm
VPEXPANDQZ128rm
VPUNPCKHQDQZ128rm
VPUNPCKLQDQZ128rm
VPCLMULQDQZ128rm
VPGATHERDQZ128rm
VCVTTPD2UDQZ128rm
VCVTPD2UDQZ128rm
VCVTTPS2UDQZ128rm
VCVTPS2UDQZ128rm
VPMULUDQZ128rm
VPMOVSXDQZ128rm
VPMOVZXDQZ128rm
VPSLLQZ128rm
VPMULLQZ128rm
VPSRLQZ128rm
VPBLENDMQZ128rm
VPTESTNMQZ128rm
VPTESTMQZ128rm
VPANDNQZ128rm
VCVTTPD2QQZ128rm
VCVTPD2QQZ128rm
VCVTTPS2QQZ128rm
VCVTPS2QQZ128rm
VPCMPEQQZ128rm
VPGATHERQQZ128rm
VCVTTPD2UQQZ128rm
VCVTPD2UQQZ128rm
VCVTTPS2UQQZ128rm
VCVTPS2UQQZ128rm
VPORQZ128rm
VPXORQZ128rm
VPABSQZ128rm
VPMINSQZ128rm
VPMAXSQZ128rm
VPCONFLICTQZ128rm
VPCMPGTQZ128rm
VPOPCNTQZ128rm
VPLZCNTQZ128rm
VPMINUQZ128rm
VPMAXUQZ128rm
VPSRAVQZ128rm
VPSLLVQZ128rm
VPROLVQZ128rm
VPSRLVQZ128rm
VPRORVQZ128rm
VPMOVSXWQZ128rm
VPMOVZXWQZ128rm
VCVTPD2PSZ128rm
VCVTPH2PSZ128rm
VCVTDQ2PSZ128rm
VCVTUDQ2PSZ128rm
VCVTQQ2PSZ128rm
VCVTUQQ2PSZ128rm
VMOVAPSZ128rm
VSUBPSZ128rm
VMINCPSZ128rm
VMAXCPSZ128rm
VADDPSZ128rm
VEXPANDPSZ128rm
VANDPSZ128rm
VGATHERDPSZ128rm
VSCALEFPSZ128rm
VUNPCKHPSZ128rm
VMOVHPSZ128rm
VPERMILPSZ128rm
VUNPCKLPSZ128rm
VMULPSZ128rm
VMOVLPSZ128rm
VBLENDMPSZ128rm
VANDNPSZ128rm
VMINPSZ128rm
VGATHERQPSZ128rm
VORPSZ128rm
VXORPSZ128rm
VFPCLASSPSZ128rm
VMOVUPSZ128rm
VDIVPSZ128rm
VMAXPSZ128rm
VAESDECLASTZ128rm
VAESENCLASTZ128rm
VPSRAWZ128rm
VPSADBWZ128rm
VPUNPCKHBWZ128rm
VPUNPCKLBWZ128rm
VPSUBWZ128rm
VPMOVSXBWZ128rm
VPMOVZXBWZ128rm
VPADDWZ128rm
VPEXPANDWZ128rm
VPACKSSDWZ128rm
VPACKUSDWZ128rm
VPAVGWZ128rm
VPMULHWZ128rm
VPSLLWZ128rm
VPMULLWZ128rm
VPSRLWZ128rm
VPBLENDMWZ128rm
VPTESTNMWZ128rm
VPERMWZ128rm
VPTESTMWZ128rm
VPCMPEQWZ128rm
VPABSWZ128rm
VPMADDUBSWZ128rm
VPSUBSWZ128rm
VPADDSWZ128rm
VPMINSWZ128rm
VPMULHRSWZ128rm
VPSUBUSWZ128rm
VPADDUSWZ128rm
VPMAXSWZ128rm
VPCMPGTWZ128rm
VPOPCNTWZ128rm
VPMULHUWZ128rm
VPMINUWZ128rm
VPMAXUWZ128rm
VPSRAVWZ128rm
VPSLLVWZ128rm
VPSRLVWZ128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
MOV8rm
VBROADCASTF32X8rm
VBROADCASTI32X8rm
VMOVNTDQArm
VMOVDQArm
VPERMI2Brm
VPERMT2Brm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
MMX_PSHUFBrm
VPAVGBrm
VPSHLBrm
VGF2P8MULBrm
VPSIGNBrm
MMX_PSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPABSBrm
MMX_PABSBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPERMT2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
MMX_PHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
MMX_PHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
MMX_PSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
VPERMT2PDrm
VMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
VCVTSI642SDrm
VCVTSI2SDrm
VCVTSS2SDrm
VPABSDrm
MMX_PABSDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
VUCOMISDrm
VCOMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
VCMPSDrm
VP4DPWSSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCMPGTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOV64toPQIrm
VPCMPESTRIrm
VPCMPISTRIrm
VCVTTSD2SIrm
VCVTTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPCMPESTRMrm
VPCMPISTRMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPERMT2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
VCVTTPD2DQrm
VCVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCMPGTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
VP4DPWSSDSrm
VCVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
VPERMT2PSrm
VMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
V4FMADDPSrm
V4FNMADDPSrm
VADDPSrm
VANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
VCVTSI642SSrm
VCVTSD2SSrm
VMOVDI2SSrm
VCVTSI2SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
V4FMADDSSrm
V4FNMADDSSrm
VADDSSrm
VUCOMISSrm
VCOMISSrm
VMULSSrm
VMINSSrm
VCMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPERMI2Wrm
VPERMT2Wrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
MMX_PHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
MMX_PHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
MMX_PSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPINSRWrm
MMX_PINSRWrm
VPABSWrm
MMX_PABSWrm
VPMADDUBSWrm
MMX_PMADDUBSWrm
VPHSUBSWrm
MMX_PHSUBSWrm
VPSUBSWrm
VPHADDSWrm
MMX_PHADDSWrm
VPADDSWrm
VPMINSWrm
VPMULHRSWrm
MMX_PMULHRSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPHMINPOSUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
BNDLDXrm
VFMADDSUBPD4Yrm
VFMSUBPD4Yrm
VFNMSUBPD4Yrm
VFMSUBADDPD4Yrm
VFMADDPD4Yrm
VFNMADDPD4Yrm
VFMADDSUBPS4Yrm
VFMSUBPS4Yrm
VFNMSUBPS4Yrm
VFMSUBADDPS4Yrm
VFMADDPS4Yrm
VFNMADDPS4Yrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VGF2P8MULBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPABSBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VAESDECYrm
VAESENCYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VPERMIL2PDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VFRCZPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPABSDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPCLMULQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VPERMIL2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VFRCZPSYrm
VBROADCASTSSYrm
VAESDECLASTYrm
VAESENCLASTYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPABSWYrm
VPMADDUBSWYrm
VPHSUBSWYrm
VPSUBSWYrm
VPHADDSWYrm
VPADDSWYrm
VPMINSWYrm
VPMULHRSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
VMOVDQA32Zrm
VMOVDQU32Zrm
VINSERTF64x2Zrm
VINSERTI64x2Zrm
VMOVDQA64Zrm
VCVTTSD2SI64Zrm
VCVTTSS2SI64Zrm
VCVTTSD2USI64Zrm
VCVTTSS2USI64Zrm
VMOVDQU64Zrm
VINSERTF32x4Zrm
VINSERTI32x4Zrm
VINSERTF64x4Zrm
VINSERTI64x4Zrm
VMOVDQU16Zrm
VMOVDQU8Zrm
VINSERTF32x8Zrm
VINSERTI32x8Zrm
VMOVNTDQAZrm
VPSUBBZrm
VPADDBZrm
VPEXPANDBZrm
VPSHUFBZrm
VPAVGBZrm
VGF2P8MULBZrm
VPBLENDMBZrm
VPTESTNMBZrm
VPSHUFBITQMBZrm
VPERMBZrm
VPTESTMBZrm
VPCMPEQBZrm
VPMULTISHIFTQBZrm
VPINSRBZrm
VPABSBZrm
VPSUBSBZrm
VPADDSBZrm
VPMINSBZrm
VPSUBUSBZrm
VPADDUSBZrm
VPMAXSBZrm
VPCMPGTBZrm
VPOPCNTBZrm
VPMINUBZrm
VPMAXUBZrm
VPACKSSWBZrm
VPACKUSWBZrm
VAESDECZrm
VAESENCZrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPEXPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPTESTNMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTQQ2PDZrm
VCVTUQQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VMINCPDZrm
VMAXCPDZrm
VADDPDZrm
VEXPANDPDZrm
VANDPDZrm
VGATHERDPDZrm
VSCALEFPDZrm
VUNPCKHPDZrm
VPERMILPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VANDNPDZrm
VMINPDZrm
VGATHERQPDZrm
VORPDZrm
VXORPDZrm
VFPCLASSPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VPINSRDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
VCVTSI2SDZrm
VCVTUSI2SDZrm
VCVTSS2SDZrm
VRCP14SDZrm
VRSQRT14SDZrm
VPABSDZrm
VSUBSDZrm
VMINCSDZrm
VMAXCSDZrm
VADDSDZrm
VSCALEFSDZrm
VUCOMISDZrm
VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VFPCLASSSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VMOV64toSDZrm
VPCONFLICTDZrm
VPCMPGTDZrm
VPOPCNTDZrm
VPLZCNTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPROLVDZrm
VPSRLVDZrm
VPRORVDZrm
VPMADDWDZrm
VPUNPCKHWDZrm
VPUNPCKLWDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOV64toPQIZrm
VCVTTSD2SIZrm
VCVTTSS2SIZrm
VCVTTSD2USIZrm
VCVTTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPSLLDQZrm
VPSRLDQZrm
VPMULDQZrm
VPANDQZrm
VPEXPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPCLMULQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPMULLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPTESTNMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VCVTTPD2QQZrm
VCVTPD2QQZrm
VCVTTPS2QQZrm
VCVTPS2QQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VCVTTPD2UQQZrm
VCVTPD2UQQZrm
VCVTTPS2UQQZrm
VCVTPS2UQQZrm
VPORQZrm
VPXORQZrm
VPINSRQZrm
VPABSQZrm
VPMINSQZrm
VPMAXSQZrm
VPCONFLICTQZrm
VPCMPGTQZrm
VPOPCNTQZrm
VPLZCNTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPROLVQZrm
VPSRLVQZrm
VPRORVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VCVTQQ2PSZrm
VCVTUQQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VMINCPSZrm
VMAXCPSZrm
VADDPSZrm
VEXPANDPSZrm
VANDPSZrm
VGATHERDPSZrm
VSCALEFPSZrm
VUNPCKHPSZrm
VPERMILPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VANDNPSZrm
VMINPSZrm
VGATHERQPSZrm
VORPSZrm
VXORPSZrm
VFPCLASSPSZrm
VINSERTPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VMOVDI2SSZrm
VCVTSI2SSZrm
VCVTUSI2SSZrm
VRCP14SSZrm
VRSQRT14SSZrm
VSUBSSZrm
VMINCSSZrm
VMAXCSSZrm
VADDSSZrm
VSCALEFSSZrm
VUCOMISSZrm
VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VFPCLASSSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
VAESDECLASTZrm
VAESENCLASTZrm
VPSRAWZrm
VPSADBWZrm
VPUNPCKHBWZrm
VPUNPCKLBWZrm
VPSUBWZrm
VPMOVSXBWZrm
VPMOVZXBWZrm
VPADDWZrm
VPEXPANDWZrm
VPACKSSDWZrm
VPACKUSDWZrm
VPAVGWZrm
VPMULHWZrm
VPSLLWZrm
VPMULLWZrm
VPSRLWZrm
VPBLENDMWZrm
VPTESTNMWZrm
VPERMWZrm
VPTESTMWZrm
VPCMPEQWZrm
VPINSRWZrm
VPABSWZrm
VPMADDUBSWZrm
VPSUBSWZrm
VPADDSWZrm
VPMINSWZrm
VPMULHRSWZrm
VPSUBUSWZrm
VPADDUSWZrm
VPMAXSWZrm
VPCMPGTWZrm
VPOPCNTWZrm
VPMULHUWZrm
VPMINUWZrm
VPMAXUWZrm
VPSRAVWZrm
VPSLLVWZrm
VPSRLVWZrm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VPPERMrrm
VPCMOVrrm
VPCMOVYrrm
MOV16sm
SEH_StackAlign
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
LEA64_32r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
PTWRITE64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
VBROADCASTF32X2Z256r
VBROADCASTI32X2Z256r
VPBROADCASTBZ256r
VFMADDSUB231PDZ256r
VFMSUB231PDZ256r
VFNMSUB231PDZ256r
VFMSUBADD231PDZ256r
VFMADD231PDZ256r
VFNMADD231PDZ256r
VFMADDSUB132PDZ256r
VFMSUB132PDZ256r
VFNMSUB132PDZ256r
VFMSUBADD132PDZ256r
VFMADD132PDZ256r
VFNMADD132PDZ256r
VFMADDSUB213PDZ256r
VFMSUB213PDZ256r
VFNMSUB213PDZ256r
VFMSUBADD213PDZ256r
VFMADD213PDZ256r
VFNMADD213PDZ256r
VRCP14PDZ256r
VRSQRT14PDZ256r
VGETEXPPDZ256r
VSQRTPDZ256r
VPDPWSSDZ256r
VBROADCASTSDZ256r
VPDPBUSDZ256r
VPBROADCASTDZ256r
VPSHLDVDZ256r
VPSHRDVDZ256r
VPBROADCASTQZ256r
VPMADD52HUQZ256r
VPMADD52LUQZ256r
VPSHLDVQZ256r
VPSHRDVQZ256r
VPDPWSSDSZ256r
VPDPBUSDSZ256r
VFMADDSUB231PSZ256r
VFMSUB231PSZ256r
VFNMSUB231PSZ256r
VFMSUBADD231PSZ256r
VFMADD231PSZ256r
VFNMADD231PSZ256r
VFMADDSUB132PSZ256r
VFMSUB132PSZ256r
VFNMSUB132PSZ256r
VFMSUBADD132PSZ256r
VFMADD132PSZ256r
VFNMADD132PSZ256r
VFMADDSUB213PSZ256r
VFMSUB213PSZ256r
VFNMSUB213PSZ256r
VFMSUBADD213PSZ256r
VFMADD213PSZ256r
VFNMADD213PSZ256r
VRCP14PSZ256r
VRSQRT14PSZ256r
VGETEXPPSZ256r
VSQRTPSZ256r
VBROADCASTSSZ256r
VPBROADCASTWZ256r
VPSHLDVWZ256r
VPSHRDVWZ256r
VPBROADCASTBrZ256r
VPBROADCASTDrZ256r
VPBROADCASTQrZ256r
VPBROADCASTWrZ256r
VBROADCASTI32X2Z128r
VPBROADCASTBZ128r
VFMADDSUB231PDZ128r
VFMSUB231PDZ128r
VFNMSUB231PDZ128r
VFMSUBADD231PDZ128r
VFMADD231PDZ128r
VFNMADD231PDZ128r
VFMADDSUB132PDZ128r
VFMSUB132PDZ128r
VFNMSUB132PDZ128r
VFMSUBADD132PDZ128r
VFMADD132PDZ128r
VFNMADD132PDZ128r
VFMADDSUB213PDZ128r
VFMSUB213PDZ128r
VFNMSUB213PDZ128r
VFMSUBADD213PDZ128r
VFMADD213PDZ128r
VFNMADD213PDZ128r
VRCP14PDZ128r
VRSQRT14PDZ128r
VGETEXPPDZ128r
VSQRTPDZ128r
VPDPWSSDZ128r
VPDPBUSDZ128r
VPBROADCASTDZ128r
VPSHLDVDZ128r
VPSHRDVDZ128r
VPBROADCASTQZ128r
VPMADD52HUQZ128r
VPMADD52LUQZ128r
VPSHLDVQZ128r
VPSHRDVQZ128r
VPDPWSSDSZ128r
VPDPBUSDSZ128r
VFMADDSUB231PSZ128r
VFMSUB231PSZ128r
VFNMSUB231PSZ128r
VFMSUBADD231PSZ128r
VFMADD231PSZ128r
VFNMADD231PSZ128r
VFMADDSUB132PSZ128r
VFMSUB132PSZ128r
VFNMSUB132PSZ128r
VFMSUBADD132PSZ128r
VFMADD132PSZ128r
VFNMADD132PSZ128r
VFMADDSUB213PSZ128r
VFMSUB213PSZ128r
VFNMSUB213PSZ128r
VFMSUBADD213PSZ128r
VFMADD213PSZ128r
VFNMADD213PSZ128r
VRCP14PSZ128r
VRSQRT14PSZ128r
VGETEXPPSZ128r
VSQRTPSZ128r
VBROADCASTSSZ128r
VPBROADCASTWZ128r
VPSHLDVWZ128r
VPSHRDVWZ128r
VPBROADCASTBrZ128r
VPBROADCASTDrZ128r
VPBROADCASTQrZ128r
VPBROADCASTWrZ128r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VFMADDSUB231PDr
VFMSUB231PDr
VFNMSUB231PDr
VFMSUBADD231PDr
VFMADD231PDr
VFNMADD231PDr
VFMADDSUB132PDr
VFMSUB132PDr
VFNMSUB132PDr
VFMSUBADD132PDr
VFMADD132PDr
VFNMADD132PDr
VFMADDSUB213PDr
VFMSUB213PDr
VFNMSUB213PDr
VFMSUBADD213PDr
VFMADD213PDr
VFNMADD213PDr
VROUNDPDr
VSQRTPDr
VFMSUB231SDr
VFNMSUB231SDr
VFMADD231SDr
VFNMADD231SDr
VFMSUB132SDr
VFNMSUB132SDr
VFMADD132SDr
VFNMADD132SDr
VFMSUB213SDr
VFNMSUB213SDr
VFMADD213SDr
VFNMADD213SDr
VROUNDSDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
PTWRITEr
UCOM_Fr
SETGr
UCOM_FIr
NOOPLr
SETLr
SETNOr
CLZEROr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
NOOPQr
VERRr
LTRr
SETNSr
VFMADDSUB231PSr
VFMSUB231PSr
VFNMSUB231PSr
VFMSUBADD231PSr
VFMADD231PSr
VFNMADD231PSr
VFMADDSUB132PSr
VFMSUB132PSr
VFNMSUB132PSr
VFMSUBADD132PSr
VFMADD132PSr
VFNMADD132PSr
VFMADDSUB213PSr
VFMSUB213PSr
VFNMSUB213PSr
VFMSUBADD213PSr
VFMADD213PSr
VFNMADD213PSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VFMSUB231SSr
VFNMSUB231SSr
VFMADD231SSr
VFNMADD231SSr
VFMSUB132SSr
VFNMSUB132SSr
VFMADD132SSr
VFNMADD132SSr
VFMSUB213SSr
VFNMSUB213SSr
VFMADD213SSr
VFNMADD213SSr
VROUNDSSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
SETSr
RDPKRUr
WRPKRUr
NOOPWr
VERWr
VFMADDSUB231PDYr
VFMSUB231PDYr
VFNMSUB231PDYr
VFMSUBADD231PDYr
VFMADD231PDYr
VFNMADD231PDYr
VFMADDSUB132PDYr
VFMSUB132PDYr
VFNMSUB132PDYr
VFMSUBADD132PDYr
VFMADD132PDYr
VFNMADD132PDYr
VFMADDSUB213PDYr
VFMSUB213PDYr
VFNMSUB213PDYr
VFMSUBADD213PDYr
VFMADD213PDYr
VFNMADD213PDYr
VROUNDPDYr
VSQRTPDYr
VFMADDSUB231PSYr
VFMSUB231PSYr
VFNMSUB231PSYr
VFMSUBADD231PSYr
VFMADD231PSYr
VFNMADD231PSYr
VFMADDSUB132PSYr
VFMSUB132PSYr
VFNMSUB132PSYr
VFMSUBADD132PSYr
VFMADD132PSYr
VFNMADD132PSYr
VFMADDSUB213PSYr
VFMSUB213PSYr
VFNMSUB213PSYr
VFMSUBADD213PSYr
VFMADD213PSYr
VFNMADD213PSYr
VROUNDPSYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VBROADCASTF32X2Zr
VBROADCASTI32X2Zr
VPBROADCASTBZr
VFMADDSUB231PDZr
VFMSUB231PDZr
VFNMSUB231PDZr
VFMSUBADD231PDZr
VFMADD231PDZr
VFNMADD231PDZr
VFMADDSUB132PDZr
VFMSUB132PDZr
VFNMSUB132PDZr
VFMSUBADD132PDZr
VFMADD132PDZr
VFNMADD132PDZr
VEXP2PDZr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VRCP28PDZr
VRSQRT28PDZr
VGETEXPPDZr
VSQRTPDZr
VFMSUB231SDZr
VFNMSUB231SDZr
VFMADD231SDZr
VFNMADD231SDZr
VFMSUB132SDZr
VFNMSUB132SDZr
VFMADD132SDZr
VFNMADD132SDZr
VFMSUB213SDZr
VFNMSUB213SDZr
VFMADD213SDZr
VFNMADD213SDZr
VRCP28SDZr
VRSQRT28SDZr
VRNDSCALESDZr
VGETEXPSDZr
VPDPWSSDZr
VSQRTSDZr
VBROADCASTSDZr
VPDPBUSDZr
VPBROADCASTDZr
VPSHLDVDZr
VPSHRDVDZr
VPBROADCASTQZr
VPMADD52HUQZr
VPMADD52LUQZr
VPSHLDVQZr
VPSHRDVQZr
VPDPWSSDSZr
VPDPBUSDSZr
VFMADDSUB231PSZr
VFMSUB231PSZr
VFNMSUB231PSZr
VFMSUBADD231PSZr
VFMADD231PSZr
VFNMADD231PSZr
VFMADDSUB132PSZr
VFMSUB132PSZr
VFNMSUB132PSZr
VFMSUBADD132PSZr
VFMADD132PSZr
VFNMADD132PSZr
VEXP2PSZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VRCP28PSZr
VRSQRT28PSZr
VGETEXPPSZr
VSQRTPSZr
VFMSUB231SSZr
VFNMSUB231SSZr
VFMADD231SSZr
VFNMADD231SSZr
VFMSUB132SSZr
VFNMSUB132SSZr
VFMADD132SSZr
VFNMADD132SSZr
VFMSUB213SSZr
VFNMSUB213SSZr
VFMADD213SSZr
VFNMADD213SSZr
VRCP28SSZr
VRSQRT28SSZr
VRNDSCALESSZr
VGETEXPSSZr
VSQRTSSZr
VBROADCASTSSZr
VPBROADCASTWZr
VPSHLDVWZr
VPSHRDVWZr
VPBROADCASTBrZr
VPBROADCASTDrZr
VPBROADCASTQrZr
VPBROADCASTWrZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVBkr
KMOVDkr
KMOVQkr
KMOVWkr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
VMREAD32mr
RELEASE_FADD32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
TEST32mr
BNDMOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
VMREAD64mr
RELEASE_FADD64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
TEST64mr
BNDMOV64mr
MOVNTI_64mr
VMOVSDto64mr
VMOVPQIto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
TEST16mr
MOV16mr
VMOVDQA32Z256mr
VMOVDQU32Z256mr
VEXTRACTF64x2Z256mr
VEXTRACTI64x2Z256mr
VMOVDQA64Z256mr
VMOVDQU64Z256mr
VEXTRACTF32x4Z256mr
VEXTRACTI32x4Z256mr
VMOVDQU16Z256mr
VMOVDQU8Z256mr
VPMOVUSDBZ256mr
VPMOVSDBZ256mr
VPMOVDBZ256mr
VPMOVUSQBZ256mr
VPMOVSQBZ256mr
VPMOVQBZ256mr
VPCOMPRESSBZ256mr
VPMOVUSWBZ256mr
VPMOVSWBZ256mr
VPMOVWBZ256mr
VPSCATTERDDZ256mr
VMOVAPDZ256mr
VSCATTERDPDZ256mr
VSCATTERQPDZ256mr
VCOMPRESSPDZ256mr
VMOVNTPDZ256mr
VMOVUPDZ256mr
VPSCATTERQDZ256mr
VPMOVUSQDZ256mr
VPMOVSQDZ256mr
VPMOVQDZ256mr
VPCOMPRESSDZ256mr
VCVTPS2PHZ256mr
VPSCATTERDQZ256mr
VMOVNTDQZ256mr
VPSCATTERQQZ256mr
VPCOMPRESSQZ256mr
VMOVAPSZ256mr
VSCATTERDPSZ256mr
VSCATTERQPSZ256mr
VCOMPRESSPSZ256mr
VMOVNTPSZ256mr
VMOVUPSZ256mr
VPMOVUSDWZ256mr
VPMOVSDWZ256mr
VPMOVDWZ256mr
VPMOVUSQWZ256mr
VPMOVSQWZ256mr
VPMOVQWZ256mr
VPCOMPRESSWZ256mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVDQA32Z128mr
VMOVDQU32Z128mr
VMOVDQA64Z128mr
VMOVDQU64Z128mr
VMOVDQU16Z128mr
VMOVDQU8Z128mr
VPMOVUSDBZ128mr
VPMOVSDBZ128mr
VPMOVDBZ128mr
VPMOVUSQBZ128mr
VPMOVSQBZ128mr
VPMOVQBZ128mr
VPCOMPRESSBZ128mr
VPMOVUSWBZ128mr
VPMOVSWBZ128mr
VPMOVWBZ128mr
VPSCATTERDDZ128mr
VMOVAPDZ128mr
VSCATTERDPDZ128mr
VMOVHPDZ128mr
VMOVLPDZ128mr
VSCATTERQPDZ128mr
VCOMPRESSPDZ128mr
VMOVNTPDZ128mr
VMOVUPDZ128mr
VPSCATTERQDZ128mr
VPMOVUSQDZ128mr
VPMOVSQDZ128mr
VPMOVQDZ128mr
VPCOMPRESSDZ128mr
VCVTPS2PHZ128mr
VPSCATTERDQZ128mr
VMOVNTDQZ128mr
VPSCATTERQQZ128mr
VPCOMPRESSQZ128mr
VMOVAPSZ128mr
VSCATTERDPSZ128mr
VMOVHPSZ128mr
VMOVLPSZ128mr
VSCATTERQPSZ128mr
VCOMPRESSPSZ128mr
VMOVNTPSZ128mr
VMOVUPSZ128mr
VPMOVUSDWZ128mr
VPMOVSDWZ128mr
VPMOVDWZ128mr
VPMOVUSQWZ128mr
VPMOVSQWZ128mr
VPMOVQWZ128mr
VPCOMPRESSWZ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
TEST8mr
MOV8mr
VMOVDQAmr
VPSHABmr
VPSHLBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPSHAWmr
VPSHLWmr
VPEXTRWmr
VPROTWmr
BNDSTXmr
VFMADDSUBPD4Ymr
VFMSUBPD4Ymr
VFNMSUBPD4Ymr
VFMSUBADDPD4Ymr
VFMADDPD4Ymr
VFNMADDPD4Ymr
VFMADDSUBPS4Ymr
VFMSUBPS4Ymr
VFNMSUBPS4Ymr
VFMSUBADDPS4Ymr
VFMADDPS4Ymr
VFNMADDPS4Ymr
VMOVDQAYmr
VPERMIL2PDYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VPERMIL2PSYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVDQA32Zmr
VMOVDQU32Zmr
VEXTRACTF64x2Zmr
VEXTRACTI64x2Zmr
VMOVDQA64Zmr
VMOVDQU64Zmr
VMOVSDto64Zmr
VMOVPQIto64Zmr
VEXTRACTF32x4Zmr
VEXTRACTI32x4Zmr
VEXTRACTF64x4Zmr
VEXTRACTI64x4Zmr
VMOVDQU16Zmr
VMOVDQU8Zmr
VEXTRACTF32x8Zmr
VEXTRACTI32x8Zmr
VPMOVUSDBZmr
VPMOVSDBZmr
VPMOVDBZmr
VPMOVUSQBZmr
VPMOVSQBZmr
VPMOVQBZmr
VPEXTRBZmr
VPCOMPRESSBZmr
VPMOVUSWBZmr
VPMOVSWBZmr
VPMOVWBZmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VCOMPRESSPDZmr
VMOVNTPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VPMOVUSQDZmr
VPMOVSQDZmr
VPMOVQDZmr
VPEXTRDZmr
VPCOMPRESSDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVSS2DIZmr
VMOVPQI2QIZmr
VPSCATTERDQZmr
VMOVNTDQZmr
VPSCATTERQQZmr
VPEXTRQZmr
VPCOMPRESSQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VCOMPRESSPSZmr
VEXTRACTPSZmr
VMOVNTPSZmr
VMOVUPSZmr
VMOVSSZmr
VPMOVUSDWZmr
VPMOVSDWZmr
VPMOVDWZmr
VPMOVUSQWZmr
VPMOVSQWZmr
VPMOVQWZmr
VPEXTRWZmr
VPCOMPRESSWZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VPPERMrmr
VPCMOVrmr
VPCMOVYrmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BNDCL32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
CMOVL32rr
BNDCN32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
BNDCU32rr
MOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BLCI64rr
BZHI64rr
VCVTTSD2SI64rr
VCVTTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BNDCL64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
CMOVL64rr
BNDCN64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
CMOVNS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
BNDCU64rr
MOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPERMI2B256rr
VPERMT2B256rr
VPERMI2D256rr
VPERMT2D256rr
VPERMI2PD256rr
VPERMT2PD256rr
VPERMI2Q256rr
VPERMT2Q256rr
VPERMI2PS256rr
VPERMT2PS256rr
VPERMI2W256rr
VPERMT2W256rr
VMOVDQA32Z256rr
VMOVDQU32Z256rr
VEXTRACTF64x2Z256rr
VINSERTF64x2Z256rr
VEXTRACTI64x2Z256rr
VINSERTI64x2Z256rr
VMOVDQA64Z256rr
VMOVDQU64Z256rr
VEXTRACTF32x4Z256rr
VINSERTF32x4Z256rr
VEXTRACTI32x4Z256rr
VINSERTI32x4Z256rr
VMOVDQU16Z256rr
VMOVDQU8Z256rr
VPMOVM2BZ256rr
VPSUBBZ256rr
VPADDBZ256rr
VPEXPANDBZ256rr
VPMOVUSDBZ256rr
VPMOVSDBZ256rr
VPMOVDBZ256rr
VPSHUFBZ256rr
VPAVGBZ256rr
VGF2P8MULBZ256rr
VPBLENDMBZ256rr
VPTESTNMBZ256rr
VPSHUFBITQMBZ256rr
VPERMBZ256rr
VPTESTMBZ256rr
VPCMPEQBZ256rr
VPMOVUSQBZ256rr
VPMOVSQBZ256rr
VPMULTISHIFTQBZ256rr
VPMOVQBZ256rr
VPABSBZ256rr
VPSUBSBZ256rr
VPADDSBZ256rr
VPMINSBZ256rr
VPCOMPRESSBZ256rr
VPSUBUSBZ256rr
VPADDUSBZ256rr
VPMAXSBZ256rr
VPCMPGTBZ256rr
VPOPCNTBZ256rr
VPMINUBZ256rr
VPMAXUBZ256rr
VPACKSSWBZ256rr
VPACKUSWBZ256rr
VPMOVUSWBZ256rr
VPMOVSWBZ256rr
VPMOVWBZ256rr
VAESDECZ256rr
VAESENCZ256rr
VPMOVM2DZ256rr
VPBROADCASTMW2DZ256rr
VPSRADZ256rr
VPSUBDZ256rr
VPMOVSXBDZ256rr
VPMOVZXBDZ256rr
VPADDDZ256rr
VPANDDZ256rr
VPEXPANDDZ256rr
VPSLLDZ256rr
VPMULLDZ256rr
VPSRLDZ256rr
VPBLENDMDZ256rr
VPTESTNMDZ256rr
VPERMDZ256rr
VPTESTMDZ256rr
VPANDNDZ256rr
VCVTDQ2PDZ256rr
VCVTUDQ2PDZ256rr
VCVTQQ2PDZ256rr
VCVTUQQ2PDZ256rr
VCVTPS2PDZ256rr
VMOVAPDZ256rr
VSUBPDZ256rr
VMINCPDZ256rr
VMAXCPDZ256rr
VADDPDZ256rr
VEXPANDPDZ256rr
VANDPDZ256rr
VSCALEFPDZ256rr
VUNPCKHPDZ256rr
VPERMILPDZ256rr
VUNPCKLPDZ256rr
VMULPDZ256rr
VBLENDMPDZ256rr
VPERMPDZ256rr
VANDNPDZ256rr
VMINPDZ256rr
VORPDZ256rr
VXORPDZ256rr
VFPCLASSPDZ256rr
VCOMPRESSPDZ256rr
VMOVUPDZ256rr
VDIVPDZ256rr
VMAXPDZ256rr
VPCMPEQDZ256rr
VPMOVUSQDZ256rr
VPMOVSQDZ256rr
VPMOVQDZ256rr
VPORDZ256rr
VPXORDZ256rr
VPABSDZ256rr
VPMINSDZ256rr
VPCOMPRESSDZ256rr
VPMAXSDZ256rr
VPCONFLICTDZ256rr
VPCMPGTDZ256rr
VPOPCNTDZ256rr
VPLZCNTDZ256rr
VPMINUDZ256rr
VPMAXUDZ256rr
VPSRAVDZ256rr
VPSLLVDZ256rr
VPROLVDZ256rr
VPSRLVDZ256rr
VPRORVDZ256rr
VPMADDWDZ256rr
VPUNPCKHWDZ256rr
VPUNPCKLWDZ256rr
VPMOVSXWDZ256rr
VPMOVZXWDZ256rr
VCVTPS2PHZ256rr
VPMOVB2MZ256rr
VPMOVD2MZ256rr
VPMOVQ2MZ256rr
VPMOVW2MZ256rr
VMOVDDUPZ256rr
VMOVSHDUPZ256rr
VMOVSLDUPZ256rr
VPBROADCASTMB2QZ256rr
VPMOVM2QZ256rr
VPSRAQZ256rr
VPSUBQZ256rr
VPMOVSXBQZ256rr
VPMOVZXBQZ256rr
VCVTTPD2DQZ256rr
VCVTPD2DQZ256rr
VCVTTPS2DQZ256rr
VCVTPS2DQZ256rr
VPADDQZ256rr
VPUNPCKHDQZ256rr
VPUNPCKLDQZ256rr
VPSLLDQZ256rr
VPSRLDQZ256rr
VPMULDQZ256rr
VPANDQZ256rr
VPEXPANDQZ256rr
VPUNPCKHQDQZ256rr
VPUNPCKLQDQZ256rr
VPCLMULQDQZ256rr
VCVTTPD2UDQZ256rr
VCVTPD2UDQZ256rr
VCVTTPS2UDQZ256rr
VCVTPS2UDQZ256rr
VPMULUDQZ256rr
VPMOVSXDQZ256rr
VPMOVZXDQZ256rr
VPSLLQZ256rr
VPMULLQZ256rr
VPSRLQZ256rr
VPBLENDMQZ256rr
VPTESTNMQZ256rr
VPERMQZ256rr
VPTESTMQZ256rr
VPANDNQZ256rr
VCVTTPD2QQZ256rr
VCVTPD2QQZ256rr
VCVTTPS2QQZ256rr
VCVTPS2QQZ256rr
VPCMPEQQZ256rr
VCVTTPD2UQQZ256rr
VCVTPD2UQQZ256rr
VCVTTPS2UQQZ256rr
VCVTPS2UQQZ256rr
VPORQZ256rr
VPXORQZ256rr
VPABSQZ256rr
VPMINSQZ256rr
VPCOMPRESSQZ256rr
VPMAXSQZ256rr
VPCONFLICTQZ256rr
VPCMPGTQZ256rr
VPOPCNTQZ256rr
VPLZCNTQZ256rr
VPMINUQZ256rr
VPMAXUQZ256rr
VPSRAVQZ256rr
VPSLLVQZ256rr
VPROLVQZ256rr
VPSRLVQZ256rr
VPRORVQZ256rr
VPMOVSXWQZ256rr
VPMOVZXWQZ256rr
VCVTPD2PSZ256rr
VCVTPH2PSZ256rr
VCVTDQ2PSZ256rr
VCVTUDQ2PSZ256rr
VCVTQQ2PSZ256rr
VCVTUQQ2PSZ256rr
VMOVAPSZ256rr
VSUBPSZ256rr
VMINCPSZ256rr
VMAXCPSZ256rr
VADDPSZ256rr
VEXPANDPSZ256rr
VANDPSZ256rr
VSCALEFPSZ256rr
VUNPCKHPSZ256rr
VPERMILPSZ256rr
VUNPCKLPSZ256rr
VMULPSZ256rr
VBLENDMPSZ256rr
VPERMPSZ256rr
VANDNPSZ256rr
VMINPSZ256rr
VORPSZ256rr
VXORPSZ256rr
VFPCLASSPSZ256rr
VCOMPRESSPSZ256rr
VMOVUPSZ256rr
VDIVPSZ256rr
VMAXPSZ256rr
VAESDECLASTZ256rr
VAESENCLASTZ256rr
VPMOVM2WZ256rr
VPSRAWZ256rr
VPSADBWZ256rr
VPUNPCKHBWZ256rr
VPUNPCKLBWZ256rr
VPSUBWZ256rr
VPMOVSXBWZ256rr
VPMOVZXBWZ256rr
VPADDWZ256rr
VPEXPANDWZ256rr
VPACKSSDWZ256rr
VPACKUSDWZ256rr
VPMOVUSDWZ256rr
VPMOVSDWZ256rr
VPMOVDWZ256rr
VPAVGWZ256rr
VPMULHWZ256rr
VPSLLWZ256rr
VPMULLWZ256rr
VPSRLWZ256rr
VPBLENDMWZ256rr
VPTESTNMWZ256rr
VPERMWZ256rr
VPTESTMWZ256rr
VPCMPEQWZ256rr
VPMOVUSQWZ256rr
VPMOVSQWZ256rr
VPMOVQWZ256rr
VPABSWZ256rr
VPMADDUBSWZ256rr
VPSUBSWZ256rr
VPADDSWZ256rr
VPMINSWZ256rr
VPMULHRSWZ256rr
VPCOMPRESSWZ256rr
VPSUBUSWZ256rr
VPADDUSWZ256rr
VPMAXSWZ256rr
VPCMPGTWZ256rr
VPOPCNTWZ256rr
VPMULHUWZ256rr
VPMINUWZ256rr
VPMAXUWZ256rr
VPSRAVWZ256rr
VPSLLVWZ256rr
VPSRLVWZ256rr
VPERMI2B128rr
VPERMT2B128rr
VPERMI2D128rr
VPERMT2D128rr
VPERMI2PD128rr
VPERMT2PD128rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPERMI2Q128rr
VPERMT2Q128rr
VPERMI2PS128rr
VPERMT2PS128rr
VAESKEYGENASSIST128rr
VPERMI2W128rr
VPERMT2W128rr
VMOVDQA32Z128rr
VMOVDQU32Z128rr
VMOVDQA64Z128rr
VMOVDQU64Z128rr
VMOVDQU16Z128rr
VMOVDQU8Z128rr
VPMOVM2BZ128rr
VPSUBBZ128rr
VPADDBZ128rr
VPEXPANDBZ128rr
VPMOVUSDBZ128rr
VPMOVSDBZ128rr
VPMOVDBZ128rr
VPSHUFBZ128rr
VPAVGBZ128rr
VGF2P8MULBZ128rr
VPBLENDMBZ128rr
VPTESTNMBZ128rr
VPSHUFBITQMBZ128rr
VPERMBZ128rr
VPTESTMBZ128rr
VPCMPEQBZ128rr
VPMOVUSQBZ128rr
VPMOVSQBZ128rr
VPMULTISHIFTQBZ128rr
VPMOVQBZ128rr
VPABSBZ128rr
VPSUBSBZ128rr
VPADDSBZ128rr
VPMINSBZ128rr
VPCOMPRESSBZ128rr
VPSUBUSBZ128rr
VPADDUSBZ128rr
VPMAXSBZ128rr
VPCMPGTBZ128rr
VPOPCNTBZ128rr
VPMINUBZ128rr
VPMAXUBZ128rr
VPACKSSWBZ128rr
VPACKUSWBZ128rr
VPMOVUSWBZ128rr
VPMOVSWBZ128rr
VPMOVWBZ128rr
VAESDECZ128rr
VAESENCZ128rr
VPMOVM2DZ128rr
VPBROADCASTMW2DZ128rr
VPSRADZ128rr
VPSUBDZ128rr
VPMOVSXBDZ128rr
VPMOVZXBDZ128rr
VPADDDZ128rr
VPANDDZ128rr
VPEXPANDDZ128rr
VPSLLDZ128rr
VPMULLDZ128rr
VPSRLDZ128rr
VPBLENDMDZ128rr
VPTESTNMDZ128rr
VPTESTMDZ128rr
VPANDNDZ128rr
VCVTDQ2PDZ128rr
VCVTUDQ2PDZ128rr
VCVTQQ2PDZ128rr
VCVTUQQ2PDZ128rr
VCVTPS2PDZ128rr
VMOVAPDZ128rr
VSUBPDZ128rr
VMINCPDZ128rr
VMAXCPDZ128rr
VADDPDZ128rr
VEXPANDPDZ128rr
VANDPDZ128rr
VSCALEFPDZ128rr
VUNPCKHPDZ128rr
VPERMILPDZ128rr
VUNPCKLPDZ128rr
VMULPDZ128rr
VBLENDMPDZ128rr
VANDNPDZ128rr
VMINPDZ128rr
VORPDZ128rr
VXORPDZ128rr
VFPCLASSPDZ128rr
VCOMPRESSPDZ128rr
VMOVUPDZ128rr
VDIVPDZ128rr
VMAXPDZ128rr
VPCMPEQDZ128rr
VPMOVUSQDZ128rr
VPMOVSQDZ128rr
VPMOVQDZ128rr
VPORDZ128rr
VPXORDZ128rr
VPABSDZ128rr
VPMINSDZ128rr
VPCOMPRESSDZ128rr
VPMAXSDZ128rr
VPCONFLICTDZ128rr
VPCMPGTDZ128rr
VPOPCNTDZ128rr
VPLZCNTDZ128rr
VPMINUDZ128rr
VPMAXUDZ128rr
VPSRAVDZ128rr
VPSLLVDZ128rr
VPROLVDZ128rr
VPSRLVDZ128rr
VPRORVDZ128rr
VPMADDWDZ128rr
VPUNPCKHWDZ128rr
VPUNPCKLWDZ128rr
VPMOVSXWDZ128rr
VPMOVZXWDZ128rr
VCVTPS2PHZ128rr
VPMOVB2MZ128rr
VPMOVD2MZ128rr
VPMOVQ2MZ128rr
VPMOVW2MZ128rr
VMOVDDUPZ128rr
VMOVSHDUPZ128rr
VMOVSLDUPZ128rr
VPBROADCASTMB2QZ128rr
VPMOVM2QZ128rr
VPSRAQZ128rr
VPSUBQZ128rr
VPMOVSXBQZ128rr
VPMOVZXBQZ128rr
VCVTTPD2DQZ128rr
VCVTPD2DQZ128rr
VCVTTPS2DQZ128rr
VCVTPS2DQZ128rr
VPADDQZ128rr
VPUNPCKHDQZ128rr
VPUNPCKLDQZ128rr
VPSLLDQZ128rr
VPSRLDQZ128rr
VPMULDQZ128rr
VPANDQZ128rr
VPEXPANDQZ128rr
VPUNPCKHQDQZ128rr
VPUNPCKLQDQZ128rr
VPCLMULQDQZ128rr
VCVTTPD2UDQZ128rr
VCVTPD2UDQZ128rr
VCVTTPS2UDQZ128rr
VCVTPS2UDQZ128rr
VPMULUDQZ128rr
VPMOVSXDQZ128rr
VPMOVZXDQZ128rr
VPSLLQZ128rr
VPMULLQZ128rr
VPSRLQZ128rr
VPBLENDMQZ128rr
VPTESTNMQZ128rr
VPTESTMQZ128rr
VPANDNQZ128rr
VCVTTPD2QQZ128rr
VCVTPD2QQZ128rr
VCVTTPS2QQZ128rr
VCVTPS2QQZ128rr
VPCMPEQQZ128rr
VCVTTPD2UQQZ128rr
VCVTPD2UQQZ128rr
VCVTTPS2UQQZ128rr
VCVTPS2UQQZ128rr
VPORQZ128rr
VPXORQZ128rr
VPABSQZ128rr
VPMINSQZ128rr
VPCOMPRESSQZ128rr
VPMAXSQZ128rr
VPCONFLICTQZ128rr
VPCMPGTQZ128rr
VPOPCNTQZ128rr
VPLZCNTQZ128rr
VPMINUQZ128rr
VPMAXUQZ128rr
VPSRAVQZ128rr
VPSLLVQZ128rr
VPROLVQZ128rr
VPSRLVQZ128rr
VPRORVQZ128rr
VPMOVSXWQZ128rr
VPMOVZXWQZ128rr
VCVTPD2PSZ128rr
VCVTPH2PSZ128rr
VCVTDQ2PSZ128rr
VCVTUDQ2PSZ128rr
VCVTQQ2PSZ128rr
VCVTUQQ2PSZ128rr
VMOVAPSZ128rr
VSUBPSZ128rr
VMINCPSZ128rr
VMAXCPSZ128rr
VADDPSZ128rr
VEXPANDPSZ128rr
VANDPSZ128rr
VSCALEFPSZ128rr
VUNPCKHPSZ128rr
VPERMILPSZ128rr
VUNPCKLPSZ128rr
VMULPSZ128rr
VBLENDMPSZ128rr
VANDNPSZ128rr
VMINPSZ128rr
VORPSZ128rr
VXORPSZ128rr
VFPCLASSPSZ128rr
VCOMPRESSPSZ128rr
VMOVUPSZ128rr
VDIVPSZ128rr
VMAXPSZ128rr
VAESDECLASTZ128rr
VAESENCLASTZ128rr
VPMOVM2WZ128rr
VPSRAWZ128rr
VPSADBWZ128rr
VPUNPCKHBWZ128rr
VPUNPCKLBWZ128rr
VPSUBWZ128rr
VPMOVSXBWZ128rr
VPMOVZXBWZ128rr
VPADDWZ128rr
VPEXPANDWZ128rr
VPACKSSDWZ128rr
VPACKUSDWZ128rr
VPMOVUSDWZ128rr
VPMOVSDWZ128rr
VPMOVDWZ128rr
VPAVGWZ128rr
VPMULHWZ128rr
VPSLLWZ128rr
VPMULLWZ128rr
VPSRLWZ128rr
VPBLENDMWZ128rr
VPTESTNMWZ128rr
VPERMWZ128rr
VPTESTMWZ128rr
VPCMPEQWZ128rr
VPMOVUSQWZ128rr
VPMOVSQWZ128rr
VPMOVQWZ128rr
VPABSWZ128rr
VPMADDUBSWZ128rr
VPSUBSWZ128rr
VPADDSWZ128rr
VPMINSWZ128rr
VPMULHRSWZ128rr
VPCOMPRESSWZ128rr
VPSUBUSWZ128rr
VPADDUSWZ128rr
VPMAXSWZ128rr
VPCMPGTWZ128rr
VPOPCNTWZ128rr
VPMULHUWZ128rr
VPMINUWZ128rr
VPMAXUWZ128rr
VPSRAVWZ128rr
VPSLLVWZ128rr
VPSRLVWZ128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPERMI2Brr
VPERMT2Brr
VPSHABrr
VPSUBBrr
KADDBrr
VPADDBrr
KANDBrr
VPSHUFBrr
MMX_PSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
VGF2P8MULBrr
KANDNBrr
VPSIGNBrr
MMX_PSIGNBrr
VPCMPEQBrr
KORBrr
KXNORBrr
KXORBrr
VPINSRBrr
VPEXTRBrr
VPABSBrr
MMX_PABSBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
KNOTBrr
VPROTBrr
VPBROADCASTBrr
KTESTBrr
KORTESTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPERMT2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
MMX_PHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
MMX_PHADDDrr
KADDDrr
VPADDDrr
KANDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
KANDNDrr
VPSIGNDrr
MMX_PSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VPERMT2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
KORDrr
KXNORDrr
KXORDrr
VPINSRDrr
VPEXTRDrr
VCVTSI642SDrr
VCVTSI2SDrr
VCVTSS2SDrr
VPABSDrr
MMX_PABSDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
VUCOMISDrr
VCOMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
VCMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCMPGTDrr
KNOTDrr
VPROTDrr
VPBROADCASTDrr
KTESTDrr
KORTESTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
KUNPCKWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
VCVTTSD2SIrr
VCVTTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPCMPESTRMrr
VPCMPISTRMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPERMT2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
KADDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
KUNPCKDQrr
VPUNPCKLDQrr
VPMULDQrr
KANDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
KANDNQrr
VPCMPEQQrr
KORQrr
KXNORQrr
KXORQrr
VPINSRQrr
VPEXTRQrr
VPCMPGTQrr
KNOTQrr
VPROTQrr
VPBROADCASTQrr
KTESTQrr
KORTESTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VPERMT2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
VCVTSI642SSrr
VCVTSD2SSrr
VMOVDI2SSrr
VCVTSI2SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
VUCOMISSrr
VCOMISSrr
VMULSSrr
VMINSSrr
VCMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
BNDMOVrr
VPERMI2Wrr
VPERMT2Wrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
MMX_PHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
MMX_PHADDWrr
KADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
MMX_PSIGNWrr
VPCMPEQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPINSRWrr
MMX_PINSRWrr
VPEXTRWrr
MMX_PEXTRWrr
VPABSWrr
MMX_PABSWrr
VPMADDUBSWrr
MMX_PMADDUBSWrr
VPHSUBSWrr
MMX_PHSUBSWrr
VPSUBSWrr
VPHADDSWrr
MMX_PHADDSWrr
VPADDSWrr
VPMINSWrr
VPMULHRSWrr
MMX_PMULHRSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KTESTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPHMINPOSUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VFMADDSUBPD4Yrr
VFMSUBPD4Yrr
VFNMSUBPD4Yrr
VFMSUBADDPD4Yrr
VFMADDPD4Yrr
VFNMADDPD4Yrr
VFMADDSUBPS4Yrr
VFMSUBPS4Yrr
VFNMSUBPS4Yrr
VFMSUBADDPS4Yrr
VFMADDPS4Yrr
VFNMADDPS4Yrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VGF2P8MULBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPABSBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VAESDECYrr
VAESENCYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VPERMIL2PDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VFRCZPDYrr
VPCMPEQDYrr
VPABSDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPCLMULQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VPERMIL2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VFRCZPSYrr
VBROADCASTSSYrr
VAESDECLASTYrr
VAESENCLASTYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPABSWYrr
VPMADDUBSWYrr
VPHSUBSWYrr
VPSUBSWYrr
VPHADDSWYrr
VPADDSWYrr
VPMINSWYrr
VPMULHRSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
VMOVDQA32Zrr
VMOVDQU32Zrr
VEXTRACTF64x2Zrr
VINSERTF64x2Zrr
VEXTRACTI64x2Zrr
VINSERTI64x2Zrr
VMOVDQA64Zrr
VCVTTSD2SI64Zrr
VCVTTSS2SI64Zrr
VCVTTSD2USI64Zrr
VCVTTSS2USI64Zrr
VMOVDQU64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VEXTRACTF32x4Zrr
VINSERTF32x4Zrr
VEXTRACTI32x4Zrr
VINSERTI32x4Zrr
VEXTRACTF64x4Zrr
VINSERTF64x4Zrr
VEXTRACTI64x4Zrr
VINSERTI64x4Zrr
VMOVDQU16Zrr
VMOVDQU8Zrr
VEXTRACTF32x8Zrr
VINSERTF32x8Zrr
VEXTRACTI32x8Zrr
VINSERTI32x8Zrr
VPMOVM2BZrr
VPSUBBZrr
VPADDBZrr
VPEXPANDBZrr
VPMOVUSDBZrr
VPMOVSDBZrr
VPMOVDBZrr
VPSHUFBZrr
VPAVGBZrr
VGF2P8MULBZrr
VPBLENDMBZrr
VPTESTNMBZrr
VPSHUFBITQMBZrr
VPERMBZrr
VPTESTMBZrr
VPCMPEQBZrr
VPMOVUSQBZrr
VPMOVSQBZrr
VPMULTISHIFTQBZrr
VPMOVQBZrr
VPINSRBZrr
VPEXTRBZrr
VPABSBZrr
VPSUBSBZrr
VPADDSBZrr
VPMINSBZrr
VPCOMPRESSBZrr
VPSUBUSBZrr
VPADDUSBZrr
VPMAXSBZrr
VPCMPGTBZrr
VPOPCNTBZrr
VPMINUBZrr
VPMAXUBZrr
VPACKSSWBZrr
VPACKUSWBZrr
VPMOVUSWBZrr
VPMOVSWBZrr
VPMOVWBZrr
VAESDECZrr
VAESENCZrr
VPMOVM2DZrr
VPBROADCASTMW2DZrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPEXPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPTESTNMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTQQ2PDZrr
VCVTUQQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VMINCPDZrr
VMAXCPDZrr
VADDPDZrr
VEXPANDPDZrr
VANDPDZrr
VSCALEFPDZrr
VUNPCKHPDZrr
VPERMILPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VANDNPDZrr
VMINPDZrr
VORPDZrr
VXORPDZrr
VFPCLASSPDZrr
VCOMPRESSPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPMOVUSQDZrr
VPMOVSQDZrr
VPMOVQDZrr
VPORDZrr
VPXORDZrr
VPINSRDZrr
VPEXTRDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
VCVTSI2SDZrr
VCVTUSI2SDZrr
VCVTSS2SDZrr
VRCP14SDZrr
VRSQRT14SDZrr
VPABSDZrr
VSUBSDZrr
VMINCSDZrr
VMAXCSDZrr
VADDSDZrr
VSCALEFSDZrr
VUCOMISDZrr
VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VPCOMPRESSDZrr
VFPCLASSSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VPCONFLICTDZrr
VPCMPGTDZrr
VPOPCNTDZrr
VPLZCNTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPROLVDZrr
VPSRLVDZrr
VPRORVDZrr
VPMADDWDZrr
VPUNPCKHWDZrr
VPUNPCKLWDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVPQI2QIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
VCVTTSD2SIZrr
VCVTTSS2SIZrr
VCVTTSD2USIZrr
VCVTTSS2USIZrr
VPMOVB2MZrr
VPMOVD2MZrr
VPMOVQ2MZrr
VPMOVW2MZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPBROADCASTMB2QZrr
VPMOVM2QZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPSLLDQZrr
VPSRLDQZrr
VPMULDQZrr
VPANDQZrr
VPEXPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VPCLMULQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPMULLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPTESTNMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VCVTTPD2QQZrr
VCVTPD2QQZrr
VCVTTPS2QQZrr
VCVTPS2QQZrr
VPCMPEQQZrr
VCVTTPD2UQQZrr
VCVTPD2UQQZrr
VCVTTPS2UQQZrr
VCVTPS2UQQZrr
VPORQZrr
VPXORQZrr
VPINSRQZrr
VPEXTRQZrr
VPABSQZrr
VPMINSQZrr
VPCOMPRESSQZrr
VPMAXSQZrr
VPCONFLICTQZrr
VPCMPGTQZrr
VPOPCNTQZrr
VPLZCNTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPROLVQZrr
VPSRLVQZrr
VPRORVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VCVTQQ2PSZrr
VCVTUQQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VMINCPSZrr
VMAXCPSZrr
VADDPSZrr
VEXPANDPSZrr
VANDPSZrr
VSCALEFPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VPERMILPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VANDNPSZrr
VMINPSZrr
VORPSZrr
VXORPSZrr
VFPCLASSPSZrr
VCOMPRESSPSZrr
VEXTRACTPSZrr
VINSERTPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
VCVTSI2SSZrr
VCVTUSI2SSZrr
VRCP14SSZrr
VRSQRT14SSZrr
VSUBSSZrr
VMINCSSZrr
VMAXCSSZrr
VADDSSZrr
VSCALEFSSZrr
VUCOMISSZrr
VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VFPCLASSSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VAESDECLASTZrr
VAESENCLASTZrr
VPMOVM2WZrr
VPSRAWZrr
VPSADBWZrr
VPUNPCKHBWZrr
VPUNPCKLBWZrr
VPSUBWZrr
VPMOVSXBWZrr
VPMOVZXBWZrr
VPADDWZrr
VPEXPANDWZrr
VPACKSSDWZrr
VPACKUSDWZrr
VPMOVUSDWZrr
VPMOVSDWZrr
VPMOVDWZrr
VPAVGWZrr
VPMULHWZrr
VPSLLWZrr
VPMULLWZrr
VPSRLWZrr
VPBLENDMWZrr
VPTESTNMWZrr
VPERMWZrr
VPTESTMWZrr
VPCMPEQWZrr
VPMOVUSQWZrr
VPMOVSQWZrr
VPMOVQWZrr
VPINSRWZrr
VPEXTRWZrr
VPABSWZrr
VPMADDUBSWZrr
VPSUBSWZrr
VPADDSWZrr
VPMINSWZrr
VPMULHRSWZrr
VPCOMPRESSWZrr
VPSUBUSWZrr
VPADDUSWZrr
VPMAXSWZrr
VPCMPGTWZrr
VPOPCNTWZrr
VPMULHUWZrr
VPMINUWZrr
VPMAXUWZrr
VPSRAVWZrr
VPSLLVWZrr
VPSRLVWZrr
MMX_MOVD64grr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
VPPERMrrr
MONITORrrr
VPCMOVrrr
MONITORXrrr
MWAITXrrr
VPCMOVYrrr
MOV32sr
MOV64sr
MOV16sr
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VPCMPDZ256rmib_alt
VPCMPUDZ256rmib_alt
VPCMPQZ256rmib_alt
VPCMPUQZ256rmib_alt
VPCMPDZ128rmib_alt
VPCMPUDZ128rmib_alt
VPCMPQZ128rmib_alt
VPCMPUQZ128rmib_alt
VPCMPDZrmib_alt
VPCMPUDZrmib_alt
VPCMPQZrmib_alt
VPCMPUQZrmib_alt
VCMPPDZrrib_alt
VCMPPSZrrib_alt
VCMPSDZrrb_alt
VCMPSSZrrb_alt
VCMPPDZ256rmbi_alt
VCMPPSZ256rmbi_alt
VCMPPDZ128rmbi_alt
VCMPPSZ128rmbi_alt
VCMPPDZrmbi_alt
VCMPPSZrmbi_alt
VPCOMBmi_alt
VPCOMUBmi_alt
VPCOMDmi_alt
VPCOMUDmi_alt
VPCOMQmi_alt
VPCOMUQmi_alt
VPCOMWmi_alt
VPCOMUWmi_alt
VPCMPBZ256rmi_alt
VPCMPUBZ256rmi_alt
VPCMPDZ256rmi_alt
VCMPPDZ256rmi_alt
VPCMPUDZ256rmi_alt
VPCMPQZ256rmi_alt
VPCMPUQZ256rmi_alt
VCMPPSZ256rmi_alt
VPCMPWZ256rmi_alt
VPCMPUWZ256rmi_alt
VPCMPBZ128rmi_alt
VPCMPUBZ128rmi_alt
VPCMPDZ128rmi_alt
VCMPPDZ128rmi_alt
VPCMPUDZ128rmi_alt
VPCMPQZ128rmi_alt
VPCMPUQZ128rmi_alt
VCMPPSZ128rmi_alt
VPCMPWZ128rmi_alt
VPCMPUWZ128rmi_alt
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VPCMPBZrmi_alt
VPCMPUBZrmi_alt
VPCMPDZrmi_alt
VCMPPDZrmi_alt
VCMPSDZrmi_alt
VPCMPUDZrmi_alt
VPCMPQZrmi_alt
VPCMPUQZrmi_alt
VCMPPSZrmi_alt
VCMPSSZrmi_alt
VPCMPWZrmi_alt
VPCMPUWZrmi_alt
MOV32ri_alt
MOV16ri_alt
MOV8ri_alt
VPCOMBri_alt
VPCOMUBri_alt
VPCOMDri_alt
VPCOMUDri_alt
VPCOMQri_alt
VPCOMUQri_alt
VPCOMWri_alt
VPCOMUWri_alt
VPCMPBZ256rri_alt
VPCMPUBZ256rri_alt
VPCMPDZ256rri_alt
VCMPPDZ256rri_alt
VPCMPUDZ256rri_alt
VPCMPQZ256rri_alt
VPCMPUQZ256rri_alt
VCMPPSZ256rri_alt
VPCMPWZ256rri_alt
VPCMPUWZ256rri_alt
VPCMPBZ128rri_alt
VPCMPUBZ128rri_alt
VPCMPDZ128rri_alt
VCMPPDZ128rri_alt
VPCMPUDZ128rri_alt
VPCMPQZ128rri_alt
VPCMPUQZ128rri_alt
VCMPPSZ128rri_alt
VPCMPWZ128rri_alt
VPCMPUWZ128rri_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VPCMPBZrri_alt
VPCMPUBZrri_alt
VPCMPDZrri_alt
VCMPPDZrri_alt
VCMPSDZrri_alt
VPCMPUDZrri_alt
VPCMPQZrri_alt
VPCMPUQZrri_alt
VCMPPSZrri_alt
VCMPSSZrri_alt
VPCMPWZrri_alt
VPCMPUWZrri_alt
VPCMPDZ256rmibk_alt
VPCMPUDZ256rmibk_alt
VPCMPQZ256rmibk_alt
VPCMPUQZ256rmibk_alt
VPCMPDZ128rmibk_alt
VPCMPUDZ128rmibk_alt
VPCMPQZ128rmibk_alt
VPCMPUQZ128rmibk_alt
VPCMPDZrmibk_alt
VPCMPUDZrmibk_alt
VPCMPQZrmibk_alt
VPCMPUQZrmibk_alt
VPCMPBZ256rmik_alt
VPCMPUBZ256rmik_alt
VPCMPDZ256rmik_alt
VPCMPUDZ256rmik_alt
VPCMPQZ256rmik_alt
VPCMPUQZ256rmik_alt
VPCMPWZ256rmik_alt
VPCMPUWZ256rmik_alt
VPCMPBZ128rmik_alt
VPCMPUBZ128rmik_alt
VPCMPDZ128rmik_alt
VPCMPUDZ128rmik_alt
VPCMPQZ128rmik_alt
VPCMPUQZ128rmik_alt
VPCMPWZ128rmik_alt
VPCMPUWZ128rmik_alt
VPCMPBZrmik_alt
VPCMPUBZrmik_alt
VPCMPDZrmik_alt
VPCMPUDZrmik_alt
VPCMPQZrmik_alt
VPCMPUQZrmik_alt
VPCMPWZrmik_alt
VPCMPUWZrmik_alt
VPCMPBZ256rrik_alt
VPCMPUBZ256rrik_alt
VPCMPDZ256rrik_alt
VPCMPUDZ256rrik_alt
VPCMPQZ256rrik_alt
VPCMPUQZ256rrik_alt
VPCMPWZ256rrik_alt
VPCMPUWZ256rrik_alt
VPCMPBZ128rrik_alt
VPCMPUBZ128rrik_alt
VPCMPDZ128rrik_alt
VPCMPUDZ128rrik_alt
VPCMPQZ128rrik_alt
VPCMPUQZ128rrik_alt
VPCMPWZ128rrik_alt
VPCMPUWZ128rrik_alt
VPCMPBZrrik_alt
VPCMPUBZrrik_alt
VPCMPDZrrik_alt
VPCMPUDZrrik_alt
VPCMPQZrrik_alt
VPCMPUQZrrik_alt
VPCMPWZrrik_alt
VPCMPUWZrrik_alt
VCMPSDrm_alt
VCMPSSrm_alt
DEC32r_alt
INC32r_alt
DEC16r_alt
INC16r_alt
VCMPSDrr_alt
VCMPSSrr_alt
VFMSUB231SDZrb_Int
VFNMSUB231SDZrb_Int
VFMADD231SDZrb_Int
VFNMADD231SDZrb_Int
VFMSUB132SDZrb_Int
VFNMSUB132SDZrb_Int
VFMADD132SDZrb_Int
VFNMADD132SDZrb_Int
VFMSUB213SDZrb_Int
VFNMSUB213SDZrb_Int
VFMADD213SDZrb_Int
VFNMADD213SDZrb_Int
VRNDSCALESDZrb_Int
VSQRTSDZrb_Int
VFMSUB231SSZrb_Int
VFNMSUB231SSZrb_Int
VFMADD231SSZrb_Int
VFNMADD231SSZrb_Int
VFMSUB132SSZrb_Int
VFNMSUB132SSZrb_Int
VFMADD132SSZrb_Int
VFNMADD132SSZrb_Int
VFMSUB213SSZrb_Int
VFNMSUB213SSZrb_Int
VFMADD213SSZrb_Int
VFNMADD213SSZrb_Int
VRNDSCALESSZrb_Int
VSQRTSSZrb_Int
VCVTTSD2SI64Zrrb_Int
VCVTSD2SI64Zrrb_Int
VCVTTSS2SI64Zrrb_Int
VCVTSS2SI64Zrrb_Int
VCVTTSD2USI64Zrrb_Int
VCVTSD2USI64Zrrb_Int
VCVTTSS2USI64Zrrb_Int
VCVTSS2USI64Zrrb_Int
VCVTSI642SDZrrb_Int
VCVTUSI642SDZrrb_Int
VCVTSI2SDZrrb_Int
VCVTSS2SDZrrb_Int
VSUBSDZrrb_Int
VADDSDZrrb_Int
VSCALEFSDZrrb_Int
VMULSDZrrb_Int
VMINSDZrrb_Int
VCMPSDZrrb_Int
VDIVSDZrrb_Int
VMAXSDZrrb_Int
VCVTTSD2SIZrrb_Int
VCVTSD2SIZrrb_Int
VCVTTSS2SIZrrb_Int
VCVTSS2SIZrrb_Int
VCVTTSD2USIZrrb_Int
VCVTSD2USIZrrb_Int
VCVTTSS2USIZrrb_Int
VCVTSS2USIZrrb_Int
VCVTSI642SSZrrb_Int
VCVTUSI642SSZrrb_Int
VCVTSD2SSZrrb_Int
VCVTSI2SSZrrb_Int
VCVTUSI2SSZrrb_Int
VSUBSSZrrb_Int
VADDSSZrrb_Int
VSCALEFSSZrrb_Int
VMULSSZrrb_Int
VMINSSZrrb_Int
VCMPSSZrrb_Int
VDIVSSZrrb_Int
VMAXSSZrrb_Int
VFMSUB231SDm_Int
VFNMSUB231SDm_Int
VFMADD231SDm_Int
VFNMADD231SDm_Int
VFMSUB132SDm_Int
VFNMSUB132SDm_Int
VFMADD132SDm_Int
VFNMADD132SDm_Int
VFMSUB213SDm_Int
VFNMSUB213SDm_Int
VFMADD213SDm_Int
VFNMADD213SDm_Int
VROUNDSDm_Int
VSQRTSDm_Int
VFMSUB231SSm_Int
VFNMSUB231SSm_Int
VFMADD231SSm_Int
VFNMADD231SSm_Int
VFMSUB132SSm_Int
VFNMSUB132SSm_Int
VFMADD132SSm_Int
VFNMADD132SSm_Int
VFMSUB213SSm_Int
VFNMSUB213SSm_Int
VFMADD213SSm_Int
VFNMADD213SSm_Int
VROUNDSSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VFMSUB231SDZm_Int
VFNMSUB231SDZm_Int
VFMADD231SDZm_Int
VFNMADD231SDZm_Int
VFMSUB132SDZm_Int
VFNMSUB132SDZm_Int
VFMADD132SDZm_Int
VFNMADD132SDZm_Int
VFMSUB213SDZm_Int
VFNMSUB213SDZm_Int
VFMADD213SDZm_Int
VFNMADD213SDZm_Int
VRNDSCALESDZm_Int
VSQRTSDZm_Int
VFMSUB231SSZm_Int
VFNMSUB231SSZm_Int
VFMADD231SSZm_Int
VFNMADD231SSZm_Int
VFMSUB132SSZm_Int
VFNMSUB132SSZm_Int
VFMADD132SSZm_Int
VFNMADD132SSZm_Int
VFMSUB213SSZm_Int
VFNMSUB213SSZm_Int
VFMADD213SSZm_Int
VFNMADD213SSZm_Int
VRNDSCALESSZm_Int
VSQRTSSZm_Int
VCVTTSD2SI64rm_Int
VCVTSD2SI64rm_Int
VCVTTSS2SI64rm_Int
VCVTSS2SI64rm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VCVTSI642SDrm_Int
VCVTSI2SDrm_Int
VCVTSS2SDrm_Int
VSUBSDrm_Int
VADDSDrm_Int
VUCOMISDrm_Int
VCOMISDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VCMPSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VCVTTSD2SIrm_Int
VCVTSD2SIrm_Int
VCVTTSS2SIrm_Int
VCVTSS2SIrm_Int
VCVTSI642SSrm_Int
VCVTSD2SSrm_Int
VCVTSI2SSrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VUCOMISSrm_Int
VCOMISSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VCMPSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VCVTTSD2SI64Zrm_Int
VCVTSD2SI64Zrm_Int
VCVTTSS2SI64Zrm_Int
VCVTSS2SI64Zrm_Int
VCVTTSD2USI64Zrm_Int
VCVTSD2USI64Zrm_Int
VCVTTSS2USI64Zrm_Int
VCVTSS2USI64Zrm_Int
VCVTSI642SDZrm_Int
VCVTUSI642SDZrm_Int
VCVTSI2SDZrm_Int
VCVTUSI2SDZrm_Int
VCVTSS2SDZrm_Int
VSUBSDZrm_Int
VADDSDZrm_Int
VUCOMISDZrm_Int
VCOMISDZrm_Int
VMULSDZrm_Int
VMINSDZrm_Int
VCMPSDZrm_Int
VDIVSDZrm_Int
VMAXSDZrm_Int
VCVTTSD2SIZrm_Int
VCVTSD2SIZrm_Int
VCVTTSS2SIZrm_Int
VCVTSS2SIZrm_Int
VCVTTSD2USIZrm_Int
VCVTSD2USIZrm_Int
VCVTTSS2USIZrm_Int
VCVTSS2USIZrm_Int
VCVTSI642SSZrm_Int
VCVTUSI642SSZrm_Int
VCVTSD2SSZrm_Int
VCVTSI2SSZrm_Int
VCVTUSI2SSZrm_Int
VSUBSSZrm_Int
VADDSSZrm_Int
VUCOMISSZrm_Int
VCOMISSZrm_Int
VMULSSZrm_Int
VMINSSZrm_Int
VCMPSSZrm_Int
VDIVSSZrm_Int
VMAXSSZrm_Int
VFMSUB231SDr_Int
VFNMSUB231SDr_Int
VFMADD231SDr_Int
VFNMADD231SDr_Int
VFMSUB132SDr_Int
VFNMSUB132SDr_Int
VFMADD132SDr_Int
VFNMADD132SDr_Int
VFMSUB213SDr_Int
VFNMSUB213SDr_Int
VFMADD213SDr_Int
VFNMADD213SDr_Int
VROUNDSDr_Int
VSQRTSDr_Int
VFMSUB231SSr_Int
VFNMSUB231SSr_Int
VFMADD231SSr_Int
VFNMADD231SSr_Int
VFMSUB132SSr_Int
VFNMSUB132SSr_Int
VFMADD132SSr_Int
VFNMADD132SSr_Int
VFMSUB213SSr_Int
VFNMSUB213SSr_Int
VFMADD213SSr_Int
VFNMADD213SSr_Int
VROUNDSSr_Int
VRCPSSr_Int
VRSQRTSSr_Int
VSQRTSSr_Int
VFMSUB231SDZr_Int
VFNMSUB231SDZr_Int
VFMADD231SDZr_Int
VFNMADD231SDZr_Int
VFMSUB132SDZr_Int
VFNMSUB132SDZr_Int
VFMADD132SDZr_Int
VFNMADD132SDZr_Int
VFMSUB213SDZr_Int
VFNMSUB213SDZr_Int
VFMADD213SDZr_Int
VFNMADD213SDZr_Int
VRNDSCALESDZr_Int
VSQRTSDZr_Int
VFMSUB231SSZr_Int
VFNMSUB231SSZr_Int
VFMADD231SSZr_Int
VFNMADD231SSZr_Int
VFMSUB132SSZr_Int
VFNMSUB132SSZr_Int
VFMADD132SSZr_Int
VFNMADD132SSZr_Int
VFMSUB213SSZr_Int
VFNMSUB213SSZr_Int
VFMADD213SSZr_Int
VFNMADD213SSZr_Int
VRNDSCALESSZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VCVTTSD2SI64rr_Int
VCVTSD2SI64rr_Int
VCVTTSS2SI64rr_Int
VCVTSS2SI64rr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VCVTSI642SDrr_Int
VCVTSI2SDrr_Int
VCVTSS2SDrr_Int
VSUBSDrr_Int
VADDSDrr_Int
VUCOMISDrr_Int
VCOMISDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VCMPSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VCVTTSD2SIrr_Int
VCVTSD2SIrr_Int
VCVTTSS2SIrr_Int
VCVTSS2SIrr_Int
VCVTSI642SSrr_Int
VCVTSD2SSrr_Int
VCVTSI2SSrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VUCOMISSrr_Int
VCOMISSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VCMPSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VCVTTSD2SI64Zrr_Int
VCVTSD2SI64Zrr_Int
VCVTTSS2SI64Zrr_Int
VCVTSS2SI64Zrr_Int
VCVTTSD2USI64Zrr_Int
VCVTSD2USI64Zrr_Int
VCVTTSS2USI64Zrr_Int
VCVTSS2USI64Zrr_Int
VCVTSI642SDZrr_Int
VCVTUSI642SDZrr_Int
VCVTSI2SDZrr_Int
VCVTUSI2SDZrr_Int
VCVTSS2SDZrr_Int
VSUBSDZrr_Int
VADDSDZrr_Int
VUCOMISDZrr_Int
VCOMISDZrr_Int
VMULSDZrr_Int
VMINSDZrr_Int
VCMPSDZrr_Int
VDIVSDZrr_Int
VMAXSDZrr_Int
VCVTTSD2SIZrr_Int
VCVTSD2SIZrr_Int
VCVTTSS2SIZrr_Int
VCVTSS2SIZrr_Int
VCVTTSD2USIZrr_Int
VCVTSD2USIZrr_Int
VCVTTSS2USIZrr_Int
VCVTSS2USIZrr_Int
VCVTSI642SSZrr_Int
VCVTUSI642SSZrr_Int
VCVTSD2SSZrr_Int
VCVTSI2SSZrr_Int
VCVTUSI2SSZrr_Int
VSUBSSZrr_Int
VADDSSZrr_Int
VUCOMISSZrr_Int
VCOMISSZrr_Int
VMULSSZrr_Int
VMINSSZrr_Int
VCMPSSZrr_Int
VDIVSSZrr_Int
VMAXSSZrr_Int
VREDUCEPDZrribkz
VRANGEPDZrribkz
VRNDSCALEPDZrribkz
VFIXUPIMMPDZrribkz
VGETMANTPDZrribkz
VREDUCESDZrribkz
VRANGESDZrribkz
VFIXUPIMMSDZrribkz
VGETMANTSDZrribkz
VREDUCEPSZrribkz
VRANGEPSZrribkz
VRNDSCALEPSZrribkz
VFIXUPIMMPSZrribkz
VGETMANTPSZrribkz
VREDUCESSZrribkz
VRANGESSZrribkz
VFIXUPIMMSSZrribkz
VGETMANTSSZrribkz
VFMADDSUB231PDZ256mbkz
VFMSUB231PDZ256mbkz
VFNMSUB231PDZ256mbkz
VFMSUBADD231PDZ256mbkz
VFMADD231PDZ256mbkz
VFNMADD231PDZ256mbkz
VFMADDSUB132PDZ256mbkz
VFMSUB132PDZ256mbkz
VFNMSUB132PDZ256mbkz
VFMSUBADD132PDZ256mbkz
VFMADD132PDZ256mbkz
VFNMADD132PDZ256mbkz
VFMADDSUB213PDZ256mbkz
VFMSUB213PDZ256mbkz
VFNMSUB213PDZ256mbkz
VFMSUBADD213PDZ256mbkz
VFMADD213PDZ256mbkz
VFNMADD213PDZ256mbkz
VRCP14PDZ256mbkz
VRSQRT14PDZ256mbkz
VGETEXPPDZ256mbkz
VSQRTPDZ256mbkz
VPDPWSSDZ256mbkz
VPDPBUSDZ256mbkz
VPSHLDVDZ256mbkz
VPSHRDVDZ256mbkz
VPMADD52HUQZ256mbkz
VPMADD52LUQZ256mbkz
VPSHLDVQZ256mbkz
VPSHRDVQZ256mbkz
VPDPWSSDSZ256mbkz
VPDPBUSDSZ256mbkz
VFMADDSUB231PSZ256mbkz
VFMSUB231PSZ256mbkz
VFNMSUB231PSZ256mbkz
VFMSUBADD231PSZ256mbkz
VFMADD231PSZ256mbkz
VFNMADD231PSZ256mbkz
VFMADDSUB132PSZ256mbkz
VFMSUB132PSZ256mbkz
VFNMSUB132PSZ256mbkz
VFMSUBADD132PSZ256mbkz
VFMADD132PSZ256mbkz
VFNMADD132PSZ256mbkz
VFMADDSUB213PSZ256mbkz
VFMSUB213PSZ256mbkz
VFNMSUB213PSZ256mbkz
VFMSUBADD213PSZ256mbkz
VFMADD213PSZ256mbkz
VFNMADD213PSZ256mbkz
VRCP14PSZ256mbkz
VRSQRT14PSZ256mbkz
VGETEXPPSZ256mbkz
VSQRTPSZ256mbkz
VFMADDSUB231PDZ128mbkz
VFMSUB231PDZ128mbkz
VFNMSUB231PDZ128mbkz
VFMSUBADD231PDZ128mbkz
VFMADD231PDZ128mbkz
VFNMADD231PDZ128mbkz
VFMADDSUB132PDZ128mbkz
VFMSUB132PDZ128mbkz
VFNMSUB132PDZ128mbkz
VFMSUBADD132PDZ128mbkz
VFMADD132PDZ128mbkz
VFNMADD132PDZ128mbkz
VFMADDSUB213PDZ128mbkz
VFMSUB213PDZ128mbkz
VFNMSUB213PDZ128mbkz
VFMSUBADD213PDZ128mbkz
VFMADD213PDZ128mbkz
VFNMADD213PDZ128mbkz
VRCP14PDZ128mbkz
VRSQRT14PDZ128mbkz
VGETEXPPDZ128mbkz
VSQRTPDZ128mbkz
VPDPWSSDZ128mbkz
VPDPBUSDZ128mbkz
VPSHLDVDZ128mbkz
VPSHRDVDZ128mbkz
VPMADD52HUQZ128mbkz
VPMADD52LUQZ128mbkz
VPSHLDVQZ128mbkz
VPSHRDVQZ128mbkz
VPDPWSSDSZ128mbkz
VPDPBUSDSZ128mbkz
VFMADDSUB231PSZ128mbkz
VFMSUB231PSZ128mbkz
VFNMSUB231PSZ128mbkz
VFMSUBADD231PSZ128mbkz
VFMADD231PSZ128mbkz
VFNMADD231PSZ128mbkz
VFMADDSUB132PSZ128mbkz
VFMSUB132PSZ128mbkz
VFNMSUB132PSZ128mbkz
VFMSUBADD132PSZ128mbkz
VFMADD132PSZ128mbkz
VFNMADD132PSZ128mbkz
VFMADDSUB213PSZ128mbkz
VFMSUB213PSZ128mbkz
VFNMSUB213PSZ128mbkz
VFMSUBADD213PSZ128mbkz
VFMADD213PSZ128mbkz
VFNMADD213PSZ128mbkz
VRCP14PSZ128mbkz
VRSQRT14PSZ128mbkz
VGETEXPPSZ128mbkz
VSQRTPSZ128mbkz
VFMADDSUB231PDZmbkz
VFMSUB231PDZmbkz
VFNMSUB231PDZmbkz
VFMSUBADD231PDZmbkz
VFMADD231PDZmbkz
VFNMADD231PDZmbkz
VFMADDSUB132PDZmbkz
VFMSUB132PDZmbkz
VFNMSUB132PDZmbkz
VFMSUBADD132PDZmbkz
VFMADD132PDZmbkz
VFNMADD132PDZmbkz
VEXP2PDZmbkz
VFMADDSUB213PDZmbkz
VFMSUB213PDZmbkz
VFNMSUB213PDZmbkz
VFMSUBADD213PDZmbkz
VFMADD213PDZmbkz
VFNMADD213PDZmbkz
VRCP14PDZmbkz
VRSQRT14PDZmbkz
VRCP28PDZmbkz
VRSQRT28PDZmbkz
VGETEXPPDZmbkz
VSQRTPDZmbkz
VPDPWSSDZmbkz
VPDPBUSDZmbkz
VPSHLDVDZmbkz
VPSHRDVDZmbkz
VPMADD52HUQZmbkz
VPMADD52LUQZmbkz
VPSHLDVQZmbkz
VPSHRDVQZmbkz
VPDPWSSDSZmbkz
VPDPBUSDSZmbkz
VFMADDSUB231PSZmbkz
VFMSUB231PSZmbkz
VFNMSUB231PSZmbkz
VFMSUBADD231PSZmbkz
VFMADD231PSZmbkz
VFNMADD231PSZmbkz
VFMADDSUB132PSZmbkz
VFMSUB132PSZmbkz
VFNMSUB132PSZmbkz
VFMSUBADD132PSZmbkz
VFMADD132PSZmbkz
VFNMADD132PSZmbkz
VEXP2PSZmbkz
VFMADDSUB213PSZmbkz
VFMSUB213PSZmbkz
VFNMSUB213PSZmbkz
VFMSUBADD213PSZmbkz
VFMADD213PSZmbkz
VFNMADD213PSZmbkz
VRCP14PSZmbkz
VRSQRT14PSZmbkz
VRCP28PSZmbkz
VRSQRT28PSZmbkz
VGETEXPPSZmbkz
VSQRTPSZmbkz
VPERMI2D256rmbkz
VPERMT2D256rmbkz
VPERMI2PD256rmbkz
VPERMT2PD256rmbkz
VPERMI2Q256rmbkz
VPERMT2Q256rmbkz
VPERMI2PS256rmbkz
VPERMT2PS256rmbkz
VPMULTISHIFTQBZ256rmbkz
VPSUBDZ256rmbkz
VPADDDZ256rmbkz
VPANDDZ256rmbkz
VPMULLDZ256rmbkz
VPBLENDMDZ256rmbkz
VPERMDZ256rmbkz
VPANDNDZ256rmbkz
VCVTDQ2PDZ256rmbkz
VCVTUDQ2PDZ256rmbkz
VCVTQQ2PDZ256rmbkz
VCVTUQQ2PDZ256rmbkz
VCVTPS2PDZ256rmbkz
VSUBPDZ256rmbkz
VMINCPDZ256rmbkz
VMAXCPDZ256rmbkz
VADDPDZ256rmbkz
VANDPDZ256rmbkz
VSCALEFPDZ256rmbkz
VUNPCKHPDZ256rmbkz
VPERMILPDZ256rmbkz
VUNPCKLPDZ256rmbkz
VMULPDZ256rmbkz
VBLENDMPDZ256rmbkz
VPERMPDZ256rmbkz
VANDNPDZ256rmbkz
VMINPDZ256rmbkz
VORPDZ256rmbkz
VXORPDZ256rmbkz
VDIVPDZ256rmbkz
VMAXPDZ256rmbkz
VPORDZ256rmbkz
VPXORDZ256rmbkz
VPABSDZ256rmbkz
VPMINSDZ256rmbkz
VPMAXSDZ256rmbkz
VPCONFLICTDZ256rmbkz
VPOPCNTDZ256rmbkz
VPLZCNTDZ256rmbkz
VPMINUDZ256rmbkz
VPMAXUDZ256rmbkz
VPSRAVDZ256rmbkz
VPSLLVDZ256rmbkz
VPROLVDZ256rmbkz
VPSRLVDZ256rmbkz
VPRORVDZ256rmbkz
VPSUBQZ256rmbkz
VCVTTPD2DQZ256rmbkz
VCVTPD2DQZ256rmbkz
VCVTTPS2DQZ256rmbkz
VCVTPS2DQZ256rmbkz
VPADDQZ256rmbkz
VPUNPCKHDQZ256rmbkz
VPUNPCKLDQZ256rmbkz
VPMULDQZ256rmbkz
VPANDQZ256rmbkz
VPUNPCKHQDQZ256rmbkz
VPUNPCKLQDQZ256rmbkz
VCVTTPD2UDQZ256rmbkz
VCVTPD2UDQZ256rmbkz
VCVTTPS2UDQZ256rmbkz
VCVTPS2UDQZ256rmbkz
VPMULUDQZ256rmbkz
VPMULLQZ256rmbkz
VPBLENDMQZ256rmbkz
VPERMQZ256rmbkz
VPANDNQZ256rmbkz
VCVTTPD2QQZ256rmbkz
VCVTPD2QQZ256rmbkz
VCVTTPS2QQZ256rmbkz
VCVTPS2QQZ256rmbkz
VCVTTPD2UQQZ256rmbkz
VCVTPD2UQQZ256rmbkz
VCVTTPS2UQQZ256rmbkz
VCVTPS2UQQZ256rmbkz
VPORQZ256rmbkz
VPXORQZ256rmbkz
VPABSQZ256rmbkz
VPMINSQZ256rmbkz
VPMAXSQZ256rmbkz
VPCONFLICTQZ256rmbkz
VPOPCNTQZ256rmbkz
VPLZCNTQZ256rmbkz
VPMINUQZ256rmbkz
VPMAXUQZ256rmbkz
VPSRAVQZ256rmbkz
VPSLLVQZ256rmbkz
VPROLVQZ256rmbkz
VPSRLVQZ256rmbkz
VPRORVQZ256rmbkz
VCVTPD2PSZ256rmbkz
VCVTDQ2PSZ256rmbkz
VCVTUDQ2PSZ256rmbkz
VCVTQQ2PSZ256rmbkz
VCVTUQQ2PSZ256rmbkz
VSUBPSZ256rmbkz
VMINCPSZ256rmbkz
VMAXCPSZ256rmbkz
VADDPSZ256rmbkz
VANDPSZ256rmbkz
VSCALEFPSZ256rmbkz
VUNPCKHPSZ256rmbkz
VPERMILPSZ256rmbkz
VUNPCKLPSZ256rmbkz
VMULPSZ256rmbkz
VBLENDMPSZ256rmbkz
VPERMPSZ256rmbkz
VANDNPSZ256rmbkz
VMINPSZ256rmbkz
VORPSZ256rmbkz
VXORPSZ256rmbkz
VDIVPSZ256rmbkz
VMAXPSZ256rmbkz
VPACKSSDWZ256rmbkz
VPACKUSDWZ256rmbkz
VPERMI2D128rmbkz
VPERMT2D128rmbkz
VPERMI2PD128rmbkz
VPERMT2PD128rmbkz
VPERMI2Q128rmbkz
VPERMT2Q128rmbkz
VPERMI2PS128rmbkz
VPERMT2PS128rmbkz
VPMULTISHIFTQBZ128rmbkz
VPSUBDZ128rmbkz
VPADDDZ128rmbkz
VPANDDZ128rmbkz
VPMULLDZ128rmbkz
VPBLENDMDZ128rmbkz
VPANDNDZ128rmbkz
VCVTDQ2PDZ128rmbkz
VCVTUDQ2PDZ128rmbkz
VCVTQQ2PDZ128rmbkz
VCVTUQQ2PDZ128rmbkz
VCVTPS2PDZ128rmbkz
VSUBPDZ128rmbkz
VMINCPDZ128rmbkz
VMAXCPDZ128rmbkz
VADDPDZ128rmbkz
VANDPDZ128rmbkz
VSCALEFPDZ128rmbkz
VUNPCKHPDZ128rmbkz
VPERMILPDZ128rmbkz
VUNPCKLPDZ128rmbkz
VMULPDZ128rmbkz
VBLENDMPDZ128rmbkz
VANDNPDZ128rmbkz
VMINPDZ128rmbkz
VORPDZ128rmbkz
VXORPDZ128rmbkz
VDIVPDZ128rmbkz
VMAXPDZ128rmbkz
VPORDZ128rmbkz
VPXORDZ128rmbkz
VPABSDZ128rmbkz
VPMINSDZ128rmbkz
VPMAXSDZ128rmbkz
VPCONFLICTDZ128rmbkz
VPOPCNTDZ128rmbkz
VPLZCNTDZ128rmbkz
VPMINUDZ128rmbkz
VPMAXUDZ128rmbkz
VPSRAVDZ128rmbkz
VPSLLVDZ128rmbkz
VPROLVDZ128rmbkz
VPSRLVDZ128rmbkz
VPRORVDZ128rmbkz
VPSUBQZ128rmbkz
VCVTTPD2DQZ128rmbkz
VCVTPD2DQZ128rmbkz
VCVTTPS2DQZ128rmbkz
VCVTPS2DQZ128rmbkz
VPADDQZ128rmbkz
VPUNPCKHDQZ128rmbkz
VPUNPCKLDQZ128rmbkz
VPMULDQZ128rmbkz
VPANDQZ128rmbkz
VPUNPCKHQDQZ128rmbkz
VPUNPCKLQDQZ128rmbkz
VCVTTPD2UDQZ128rmbkz
VCVTPD2UDQZ128rmbkz
VCVTTPS2UDQZ128rmbkz
VCVTPS2UDQZ128rmbkz
VPMULUDQZ128rmbkz
VPMULLQZ128rmbkz
VPBLENDMQZ128rmbkz
VPANDNQZ128rmbkz
VCVTTPD2QQZ128rmbkz
VCVTPD2QQZ128rmbkz
VCVTTPS2QQZ128rmbkz
VCVTPS2QQZ128rmbkz
VCVTTPD2UQQZ128rmbkz
VCVTPD2UQQZ128rmbkz
VCVTTPS2UQQZ128rmbkz
VCVTPS2UQQZ128rmbkz
VPORQZ128rmbkz
VPXORQZ128rmbkz
VPABSQZ128rmbkz
VPMINSQZ128rmbkz
VPMAXSQZ128rmbkz
VPCONFLICTQZ128rmbkz
VPOPCNTQZ128rmbkz
VPLZCNTQZ128rmbkz
VPMINUQZ128rmbkz
VPMAXUQZ128rmbkz
VPSRAVQZ128rmbkz
VPSLLVQZ128rmbkz
VPROLVQZ128rmbkz
VPSRLVQZ128rmbkz
VPRORVQZ128rmbkz
VCVTPD2PSZ128rmbkz
VCVTDQ2PSZ128rmbkz
VCVTUDQ2PSZ128rmbkz
VCVTQQ2PSZ128rmbkz
VCVTUQQ2PSZ128rmbkz
VSUBPSZ128rmbkz
VMINCPSZ128rmbkz
VMAXCPSZ128rmbkz
VADDPSZ128rmbkz
VANDPSZ128rmbkz
VSCALEFPSZ128rmbkz
VUNPCKHPSZ128rmbkz
VPERMILPSZ128rmbkz
VUNPCKLPSZ128rmbkz
VMULPSZ128rmbkz
VBLENDMPSZ128rmbkz
VANDNPSZ128rmbkz
VMINPSZ128rmbkz
VORPSZ128rmbkz
VXORPSZ128rmbkz
VDIVPSZ128rmbkz
VMAXPSZ128rmbkz
VPACKSSDWZ128rmbkz
VPACKUSDWZ128rmbkz
VPERMI2Drmbkz
VPERMT2Drmbkz
VPERMI2PDrmbkz
VPERMT2PDrmbkz
VPERMI2Qrmbkz
VPERMT2Qrmbkz
VPERMI2PSrmbkz
VPERMT2PSrmbkz
VPMULTISHIFTQBZrmbkz
VPSUBDZrmbkz
VPADDDZrmbkz
VPANDDZrmbkz
VPMULLDZrmbkz
VPBLENDMDZrmbkz
VPERMDZrmbkz
VPANDNDZrmbkz
VCVTDQ2PDZrmbkz
VCVTUDQ2PDZrmbkz
VCVTQQ2PDZrmbkz
VCVTUQQ2PDZrmbkz
VCVTPS2PDZrmbkz
VSUBPDZrmbkz
VMINCPDZrmbkz
VMAXCPDZrmbkz
VADDPDZrmbkz
VANDPDZrmbkz
VSCALEFPDZrmbkz
VUNPCKHPDZrmbkz
VPERMILPDZrmbkz
VUNPCKLPDZrmbkz
VMULPDZrmbkz
VBLENDMPDZrmbkz
VPERMPDZrmbkz
VANDNPDZrmbkz
VMINPDZrmbkz
VORPDZrmbkz
VXORPDZrmbkz
VDIVPDZrmbkz
VMAXPDZrmbkz
VPORDZrmbkz
VPXORDZrmbkz
VPABSDZrmbkz
VPMINSDZrmbkz
VPMAXSDZrmbkz
VPCONFLICTDZrmbkz
VPOPCNTDZrmbkz
VPLZCNTDZrmbkz
VPMINUDZrmbkz
VPMAXUDZrmbkz
VPSRAVDZrmbkz
VPSLLVDZrmbkz
VPROLVDZrmbkz
VPSRLVDZrmbkz
VPRORVDZrmbkz
VPSUBQZrmbkz
VCVTTPD2DQZrmbkz
VCVTPD2DQZrmbkz
VCVTTPS2DQZrmbkz
VCVTPS2DQZrmbkz
VPADDQZrmbkz
VPUNPCKHDQZrmbkz
VPUNPCKLDQZrmbkz
VPMULDQZrmbkz
VPANDQZrmbkz
VPUNPCKHQDQZrmbkz
VPUNPCKLQDQZrmbkz
VCVTTPD2UDQZrmbkz
VCVTPD2UDQZrmbkz
VCVTTPS2UDQZrmbkz
VCVTPS2UDQZrmbkz
VPMULUDQZrmbkz
VPMULLQZrmbkz
VPBLENDMQZrmbkz
VPERMQZrmbkz
VPANDNQZrmbkz
VCVTTPD2QQZrmbkz
VCVTPD2QQZrmbkz
VCVTTPS2QQZrmbkz
VCVTPS2QQZrmbkz
VCVTTPD2UQQZrmbkz
VCVTPD2UQQZrmbkz
VCVTTPS2UQQZrmbkz
VCVTPS2UQQZrmbkz
VPORQZrmbkz
VPXORQZrmbkz
VPABSQZrmbkz
VPMINSQZrmbkz
VPMAXSQZrmbkz
VPCONFLICTQZrmbkz
VPOPCNTQZrmbkz
VPLZCNTQZrmbkz
VPMINUQZrmbkz
VPMAXUQZrmbkz
VPSRAVQZrmbkz
VPSLLVQZrmbkz
VPROLVQZrmbkz
VPSRLVQZrmbkz
VPRORVQZrmbkz
VCVTPD2PSZrmbkz
VCVTDQ2PSZrmbkz
VCVTUDQ2PSZrmbkz
VCVTQQ2PSZrmbkz
VCVTUQQ2PSZrmbkz
VSUBPSZrmbkz
VMINCPSZrmbkz
VMAXCPSZrmbkz
VADDPSZrmbkz
VANDPSZrmbkz
VSCALEFPSZrmbkz
VUNPCKHPSZrmbkz
VPERMILPSZrmbkz
VUNPCKLPSZrmbkz
VMULPSZrmbkz
VBLENDMPSZrmbkz
VPERMPSZrmbkz
VANDNPSZrmbkz
VMINPSZrmbkz
VORPSZrmbkz
VXORPSZrmbkz
VDIVPSZrmbkz
VMAXPSZrmbkz
VPACKSSDWZrmbkz
VPACKUSDWZrmbkz
VFMADDSUB231PDZrbkz
VFMSUB231PDZrbkz
VFNMSUB231PDZrbkz
VFMSUBADD231PDZrbkz
VFMADD231PDZrbkz
VFNMADD231PDZrbkz
VFMADDSUB132PDZrbkz
VFMSUB132PDZrbkz
VFNMSUB132PDZrbkz
VFMSUBADD132PDZrbkz
VFMADD132PDZrbkz
VFNMADD132PDZrbkz
VEXP2PDZrbkz
VFMADDSUB213PDZrbkz
VFMSUB213PDZrbkz
VFNMSUB213PDZrbkz
VFMSUBADD213PDZrbkz
VFMADD213PDZrbkz
VFNMADD213PDZrbkz
VRCP28PDZrbkz
VRSQRT28PDZrbkz
VGETEXPPDZrbkz
VSQRTPDZrbkz
VRCP28SDZrbkz
VRSQRT28SDZrbkz
VGETEXPSDZrbkz
VFMADDSUB231PSZrbkz
VFMSUB231PSZrbkz
VFNMSUB231PSZrbkz
VFMSUBADD231PSZrbkz
VFMADD231PSZrbkz
VFNMADD231PSZrbkz
VFMADDSUB132PSZrbkz
VFMSUB132PSZrbkz
VFNMSUB132PSZrbkz
VFMSUBADD132PSZrbkz
VFMADD132PSZrbkz
VFNMADD132PSZrbkz
VEXP2PSZrbkz
VFMADDSUB213PSZrbkz
VFMSUB213PSZrbkz
VFNMSUB213PSZrbkz
VFMSUBADD213PSZrbkz
VFMADD213PSZrbkz
VFNMADD213PSZrbkz
VRCP28PSZrbkz
VRSQRT28PSZrbkz
VGETEXPPSZrbkz
VSQRTPSZrbkz
VRCP28SSZrbkz
VRSQRT28SSZrbkz
VGETEXPSSZrbkz
VCVTQQ2PDZrrbkz
VCVTUQQ2PDZrrbkz
VCVTPS2PDZrrbkz
VSUBPDZrrbkz
VADDPDZrrbkz
VSCALEFPDZrrbkz
VMULPDZrrbkz
VMINPDZrrbkz
VDIVPDZrrbkz
VMAXPDZrrbkz
VCVTPS2PHZrrbkz
VCVTTPD2DQZrrbkz
VCVTPD2DQZrrbkz
VCVTTPS2DQZrrbkz
VCVTPS2DQZrrbkz
VCVTTPD2UDQZrrbkz
VCVTPD2UDQZrrbkz
VCVTTPS2UDQZrrbkz
VCVTPS2UDQZrrbkz
VCVTTPD2QQZrrbkz
VCVTPD2QQZrrbkz
VCVTTPS2QQZrrbkz
VCVTPS2QQZrrbkz
VCVTTPD2UQQZrrbkz
VCVTPD2UQQZrrbkz
VCVTTPS2UQQZrrbkz
VCVTPS2UQQZrrbkz
VCVTPD2PSZrrbkz
VCVTPH2PSZrrbkz
VCVTDQ2PSZrrbkz
VCVTUDQ2PSZrrbkz
VCVTQQ2PSZrrbkz
VCVTUQQ2PSZrrbkz
VSUBPSZrrbkz
VADDPSZrrbkz
VSCALEFPSZrrbkz
VMULPSZrrbkz
VMINPSZrrbkz
VDIVPSZrrbkz
VMAXPSZrrbkz
VPSRADZ256mbikz
VPSHUFDZ256mbikz
VPSLLDZ256mbikz
VPROLDZ256mbikz
VPSRLDZ256mbikz
VPERMILPDZ256mbikz
VPERMPDZ256mbikz
VPRORDZ256mbikz
VPSRAQZ256mbikz
VPSLLQZ256mbikz
VPROLQZ256mbikz
VPSRLQZ256mbikz
VPERMQZ256mbikz
VPRORQZ256mbikz
VPERMILPSZ256mbikz
VPSRADZ128mbikz
VPSHUFDZ128mbikz
VPSLLDZ128mbikz
VPROLDZ128mbikz
VPSRLDZ128mbikz
VPERMILPDZ128mbikz
VPRORDZ128mbikz
VPSRAQZ128mbikz
VPSLLQZ128mbikz
VPROLQZ128mbikz
VPSRLQZ128mbikz
VPRORQZ128mbikz
VPERMILPSZ128mbikz
VPSRADZmbikz
VPSHUFDZmbikz
VPSLLDZmbikz
VPROLDZmbikz
VPSRLDZmbikz
VPERMILPDZmbikz
VPERMPDZmbikz
VPRORDZmbikz
VPSRAQZmbikz
VPSLLQZmbikz
VPROLQZmbikz
VPSRLQZmbikz
VPERMQZmbikz
VPRORQZmbikz
VPERMILPSZmbikz
VSHUFF64X2Z256rmbikz
VSHUFI64X2Z256rmbikz
VSHUFF32X4Z256rmbikz
VSHUFI32X4Z256rmbikz
VGF2P8AFFINEQBZ256rmbikz
VGF2P8AFFINEINVQBZ256rmbikz
VPSHLDDZ256rmbikz
VPSHRDDZ256rmbikz
VPTERNLOGDZ256rmbikz
VALIGNDZ256rmbikz
VREDUCEPDZ256rmbikz
VRANGEPDZ256rmbikz
VRNDSCALEPDZ256rmbikz
VSHUFPDZ256rmbikz
VFIXUPIMMPDZ256rmbikz
VGETMANTPDZ256rmbikz
VPSHLDQZ256rmbikz
VPSHRDQZ256rmbikz
VPTERNLOGQZ256rmbikz
VALIGNQZ256rmbikz
VREDUCEPSZ256rmbikz
VRANGEPSZ256rmbikz
VRNDSCALEPSZ256rmbikz
VSHUFPSZ256rmbikz
VFIXUPIMMPSZ256rmbikz
VGETMANTPSZ256rmbikz
VGF2P8AFFINEQBZ128rmbikz
VGF2P8AFFINEINVQBZ128rmbikz
VPSHLDDZ128rmbikz
VPSHRDDZ128rmbikz
VPTERNLOGDZ128rmbikz
VALIGNDZ128rmbikz
VREDUCEPDZ128rmbikz
VRANGEPDZ128rmbikz
VRNDSCALEPDZ128rmbikz
VSHUFPDZ128rmbikz
VFIXUPIMMPDZ128rmbikz
VGETMANTPDZ128rmbikz
VPSHLDQZ128rmbikz
VPSHRDQZ128rmbikz
VPTERNLOGQZ128rmbikz
VALIGNQZ128rmbikz
VREDUCEPSZ128rmbikz
VRANGEPSZ128rmbikz
VRNDSCALEPSZ128rmbikz
VSHUFPSZ128rmbikz
VFIXUPIMMPSZ128rmbikz
VGETMANTPSZ128rmbikz
VSHUFF64X2Zrmbikz
VSHUFI64X2Zrmbikz
VSHUFF32X4Zrmbikz
VSHUFI32X4Zrmbikz
VGF2P8AFFINEQBZrmbikz
VGF2P8AFFINEINVQBZrmbikz
VPSHLDDZrmbikz
VPSHRDDZrmbikz
VPTERNLOGDZrmbikz
VALIGNDZrmbikz
VREDUCEPDZrmbikz
VRANGEPDZrmbikz
VRNDSCALEPDZrmbikz
VSHUFPDZrmbikz
VFIXUPIMMPDZrmbikz
VGETMANTPDZrmbikz
VPSHLDQZrmbikz
VPSHRDQZrmbikz
VPTERNLOGQZrmbikz
VALIGNQZrmbikz
VREDUCEPSZrmbikz
VRANGEPSZrmbikz
VRNDSCALEPSZrmbikz
VSHUFPSZrmbikz
VFIXUPIMMPSZrmbikz
VGETMANTPSZrmbikz
VPSRADZ256mikz
VPSHUFDZ256mikz
VPSLLDZ256mikz
VPROLDZ256mikz
VPSRLDZ256mikz
VPERMILPDZ256mikz
VPERMPDZ256mikz
VPRORDZ256mikz
VPSRAQZ256mikz
VPSLLQZ256mikz
VPROLQZ256mikz
VPSRLQZ256mikz
VPERMQZ256mikz
VPRORQZ256mikz
VPERMILPSZ256mikz
VPSRAWZ256mikz
VPSHUFHWZ256mikz
VPSHUFLWZ256mikz
VPSLLWZ256mikz
VPSRLWZ256mikz
VPSRADZ128mikz
VPSHUFDZ128mikz
VPSLLDZ128mikz
VPROLDZ128mikz
VPSRLDZ128mikz
VPERMILPDZ128mikz
VPRORDZ128mikz
VPSRAQZ128mikz
VPSLLQZ128mikz
VPROLQZ128mikz
VPSRLQZ128mikz
VPRORQZ128mikz
VPERMILPSZ128mikz
VPSRAWZ128mikz
VPSHUFHWZ128mikz
VPSHUFLWZ128mikz
VPSLLWZ128mikz
VPSRLWZ128mikz
VPSRADZmikz
VPSHUFDZmikz
VPSLLDZmikz
VPROLDZmikz
VPSRLDZmikz
VPERMILPDZmikz
VPERMPDZmikz
VPRORDZmikz
VPSRAQZmikz
VPSLLQZmikz
VPROLQZmikz
VPSRLQZmikz
VPERMQZmikz
VPRORQZmikz
VPERMILPSZmikz
VPSRAWZmikz
VPSHUFHWZmikz
VPSHUFLWZmikz
VPSLLWZmikz
VPSRLWZmikz
VSHUFF64X2Z256rmikz
VSHUFI64X2Z256rmikz
VSHUFF32X4Z256rmikz
VSHUFI32X4Z256rmikz
VGF2P8AFFINEQBZ256rmikz
VGF2P8AFFINEINVQBZ256rmikz
VPSHLDDZ256rmikz
VPSHRDDZ256rmikz
VPTERNLOGDZ256rmikz
VALIGNDZ256rmikz
VREDUCEPDZ256rmikz
VRANGEPDZ256rmikz
VRNDSCALEPDZ256rmikz
VSHUFPDZ256rmikz
VFIXUPIMMPDZ256rmikz
VGETMANTPDZ256rmikz
VPSHLDQZ256rmikz
VPSHRDQZ256rmikz
VPTERNLOGQZ256rmikz
VALIGNQZ256rmikz
VPALIGNRZ256rmikz
VREDUCEPSZ256rmikz
VRANGEPSZ256rmikz
VRNDSCALEPSZ256rmikz
VSHUFPSZ256rmikz
VFIXUPIMMPSZ256rmikz
VGETMANTPSZ256rmikz
VDBPSADBWZ256rmikz
VPSHLDWZ256rmikz
VPSHRDWZ256rmikz
VGF2P8AFFINEQBZ128rmikz
VGF2P8AFFINEINVQBZ128rmikz
VPSHLDDZ128rmikz
VPSHRDDZ128rmikz
VPTERNLOGDZ128rmikz
VALIGNDZ128rmikz
VREDUCEPDZ128rmikz
VRANGEPDZ128rmikz
VRNDSCALEPDZ128rmikz
VSHUFPDZ128rmikz
VFIXUPIMMPDZ128rmikz
VGETMANTPDZ128rmikz
VPSHLDQZ128rmikz
VPSHRDQZ128rmikz
VPTERNLOGQZ128rmikz
VALIGNQZ128rmikz
VPALIGNRZ128rmikz
VREDUCEPSZ128rmikz
VRANGEPSZ128rmikz
VRNDSCALEPSZ128rmikz
VSHUFPSZ128rmikz
VFIXUPIMMPSZ128rmikz
VGETMANTPSZ128rmikz
VDBPSADBWZ128rmikz
VPSHLDWZ128rmikz
VPSHRDWZ128rmikz
VSHUFF64X2Zrmikz
VSHUFI64X2Zrmikz
VSHUFF32X4Zrmikz
VSHUFI32X4Zrmikz
VGF2P8AFFINEQBZrmikz
VGF2P8AFFINEINVQBZrmikz
VPSHLDDZrmikz
VPSHRDDZrmikz
VPTERNLOGDZrmikz
VALIGNDZrmikz
VREDUCEPDZrmikz
VRANGEPDZrmikz
VRNDSCALEPDZrmikz
VSHUFPDZrmikz
VFIXUPIMMPDZrmikz
VGETMANTPDZrmikz
VREDUCESDZrmikz
VRANGESDZrmikz
VFIXUPIMMSDZrmikz
VGETMANTSDZrmikz
VPSHLDQZrmikz
VPSHRDQZrmikz
VPTERNLOGQZrmikz
VALIGNQZrmikz
VPALIGNRZrmikz
VREDUCEPSZrmikz
VRANGEPSZrmikz
VRNDSCALEPSZrmikz
VSHUFPSZrmikz
VFIXUPIMMPSZrmikz
VGETMANTPSZrmikz
VREDUCESSZrmikz
VRANGESSZrmikz
VFIXUPIMMSSZrmikz
VGETMANTSSZrmikz
VDBPSADBWZrmikz
VPSHLDWZrmikz
VPSHRDWZrmikz
VPSRADZ256rikz
VPSHUFDZ256rikz
VPSLLDZ256rikz
VPROLDZ256rikz
VPSRLDZ256rikz
VPERMILPDZ256rikz
VPERMPDZ256rikz
VPRORDZ256rikz
VPSRAQZ256rikz
VPSLLQZ256rikz
VPROLQZ256rikz
VPSRLQZ256rikz
VPERMQZ256rikz
VPRORQZ256rikz
VPERMILPSZ256rikz
VPSRAWZ256rikz
VPSHUFHWZ256rikz
VPSHUFLWZ256rikz
VPSLLWZ256rikz
VPSRLWZ256rikz
VPSRADZ128rikz
VPSHUFDZ128rikz
VPSLLDZ128rikz
VPROLDZ128rikz
VPSRLDZ128rikz
VPERMILPDZ128rikz
VPRORDZ128rikz
VPSRAQZ128rikz
VPSLLQZ128rikz
VPROLQZ128rikz
VPSRLQZ128rikz
VPRORQZ128rikz
VPERMILPSZ128rikz
VPSRAWZ128rikz
VPSHUFHWZ128rikz
VPSHUFLWZ128rikz
VPSLLWZ128rikz
VPSRLWZ128rikz
VPSRADZrikz
VPSHUFDZrikz
VPSLLDZrikz
VPROLDZrikz
VPSRLDZrikz
VPERMILPDZrikz
VPERMPDZrikz
VPRORDZrikz
VPSRAQZrikz
VPSLLQZrikz
VPROLQZrikz
VPSRLQZrikz
VPERMQZrikz
VPRORQZrikz
VPERMILPSZrikz
VPSRAWZrikz
VPSHUFHWZrikz
VPSHUFLWZrikz
VPSLLWZrikz
VPSRLWZrikz
VSHUFF64X2Z256rrikz
VSHUFI64X2Z256rrikz
VSHUFF32X4Z256rrikz
VSHUFI32X4Z256rrikz
VGF2P8AFFINEQBZ256rrikz
VGF2P8AFFINEINVQBZ256rrikz
VPSHLDDZ256rrikz
VPSHRDDZ256rrikz
VPTERNLOGDZ256rrikz
VALIGNDZ256rrikz
VREDUCEPDZ256rrikz
VRANGEPDZ256rrikz
VRNDSCALEPDZ256rrikz
VSHUFPDZ256rrikz
VFIXUPIMMPDZ256rrikz
VGETMANTPDZ256rrikz
VPSHLDQZ256rrikz
VPSHRDQZ256rrikz
VPTERNLOGQZ256rrikz
VALIGNQZ256rrikz
VPALIGNRZ256rrikz
VREDUCEPSZ256rrikz
VRANGEPSZ256rrikz
VRNDSCALEPSZ256rrikz
VSHUFPSZ256rrikz
VFIXUPIMMPSZ256rrikz
VGETMANTPSZ256rrikz
VDBPSADBWZ256rrikz
VPSHLDWZ256rrikz
VPSHRDWZ256rrikz
VGF2P8AFFINEQBZ128rrikz
VGF2P8AFFINEINVQBZ128rrikz
VPSHLDDZ128rrikz
VPSHRDDZ128rrikz
VPTERNLOGDZ128rrikz
VALIGNDZ128rrikz
VREDUCEPDZ128rrikz
VRANGEPDZ128rrikz
VRNDSCALEPDZ128rrikz
VSHUFPDZ128rrikz
VFIXUPIMMPDZ128rrikz
VGETMANTPDZ128rrikz
VPSHLDQZ128rrikz
VPSHRDQZ128rrikz
VPTERNLOGQZ128rrikz
VALIGNQZ128rrikz
VPALIGNRZ128rrikz
VREDUCEPSZ128rrikz
VRANGEPSZ128rrikz
VRNDSCALEPSZ128rrikz
VSHUFPSZ128rrikz
VFIXUPIMMPSZ128rrikz
VGETMANTPSZ128rrikz
VDBPSADBWZ128rrikz
VPSHLDWZ128rrikz
VPSHRDWZ128rrikz
VSHUFF64X2Zrrikz
VSHUFI64X2Zrrikz
VSHUFF32X4Zrrikz
VSHUFI32X4Zrrikz
VGF2P8AFFINEQBZrrikz
VGF2P8AFFINEINVQBZrrikz
VPSHLDDZrrikz
VPSHRDDZrrikz
VPTERNLOGDZrrikz
VALIGNDZrrikz
VREDUCEPDZrrikz
VRANGEPDZrrikz
VRNDSCALEPDZrrikz
VSHUFPDZrrikz
VFIXUPIMMPDZrrikz
VGETMANTPDZrrikz
VREDUCESDZrrikz
VRANGESDZrrikz
VFIXUPIMMSDZrrikz
VGETMANTSDZrrikz
VPSHLDQZrrikz
VPSHRDQZrrikz
VPTERNLOGQZrrikz
VALIGNQZrrikz
VPALIGNRZrrikz
VREDUCEPSZrrikz
VRANGEPSZrrikz
VRNDSCALEPSZrrikz
VSHUFPSZrrikz
VFIXUPIMMPSZrrikz
VGETMANTPSZrrikz
VREDUCESSZrrikz
VRANGESSZrrikz
VFIXUPIMMSSZrrikz
VGETMANTSSZrrikz
VDBPSADBWZrrikz
VPSHLDWZrrikz
VPSHRDWZrrikz
VBROADCASTF32X2Z256mkz
VBROADCASTI32X2Z256mkz
VPBROADCASTBZ256mkz
VFMADDSUB231PDZ256mkz
VFMSUB231PDZ256mkz
VFNMSUB231PDZ256mkz
VFMSUBADD231PDZ256mkz
VFMADD231PDZ256mkz
VFNMADD231PDZ256mkz
VFMADDSUB132PDZ256mkz
VFMSUB132PDZ256mkz
VFNMSUB132PDZ256mkz
VFMSUBADD132PDZ256mkz
VFMADD132PDZ256mkz
VFNMADD132PDZ256mkz
VFMADDSUB213PDZ256mkz
VFMSUB213PDZ256mkz
VFNMSUB213PDZ256mkz
VFMSUBADD213PDZ256mkz
VFMADD213PDZ256mkz
VFNMADD213PDZ256mkz
VRCP14PDZ256mkz
VRSQRT14PDZ256mkz
VGETEXPPDZ256mkz
VSQRTPDZ256mkz
VPDPWSSDZ256mkz
VBROADCASTSDZ256mkz
VPDPBUSDZ256mkz
VPBROADCASTDZ256mkz
VPSHLDVDZ256mkz
VPSHRDVDZ256mkz
VPBROADCASTQZ256mkz
VPMADD52HUQZ256mkz
VPMADD52LUQZ256mkz
VPSHLDVQZ256mkz
VPSHRDVQZ256mkz
VPDPWSSDSZ256mkz
VPDPBUSDSZ256mkz
VFMADDSUB231PSZ256mkz
VFMSUB231PSZ256mkz
VFNMSUB231PSZ256mkz
VFMSUBADD231PSZ256mkz
VFMADD231PSZ256mkz
VFNMADD231PSZ256mkz
VFMADDSUB132PSZ256mkz
VFMSUB132PSZ256mkz
VFNMSUB132PSZ256mkz
VFMSUBADD132PSZ256mkz
VFMADD132PSZ256mkz
VFNMADD132PSZ256mkz
VFMADDSUB213PSZ256mkz
VFMSUB213PSZ256mkz
VFNMSUB213PSZ256mkz
VFMSUBADD213PSZ256mkz
VFMADD213PSZ256mkz
VFNMADD213PSZ256mkz
VRCP14PSZ256mkz
VRSQRT14PSZ256mkz
VGETEXPPSZ256mkz
VSQRTPSZ256mkz
VBROADCASTSSZ256mkz
VPBROADCASTWZ256mkz
VPSHLDVWZ256mkz
VPSHRDVWZ256mkz
VBROADCASTI32X2Z128mkz
VPBROADCASTBZ128mkz
VFMADDSUB231PDZ128mkz
VFMSUB231PDZ128mkz
VFNMSUB231PDZ128mkz
VFMSUBADD231PDZ128mkz
VFMADD231PDZ128mkz
VFNMADD231PDZ128mkz
VFMADDSUB132PDZ128mkz
VFMSUB132PDZ128mkz
VFNMSUB132PDZ128mkz
VFMSUBADD132PDZ128mkz
VFMADD132PDZ128mkz
VFNMADD132PDZ128mkz
VFMADDSUB213PDZ128mkz
VFMSUB213PDZ128mkz
VFNMSUB213PDZ128mkz
VFMSUBADD213PDZ128mkz
VFMADD213PDZ128mkz
VFNMADD213PDZ128mkz
VRCP14PDZ128mkz
VRSQRT14PDZ128mkz
VGETEXPPDZ128mkz
VSQRTPDZ128mkz
VPDPWSSDZ128mkz
VPDPBUSDZ128mkz
VPBROADCASTDZ128mkz
VPSHLDVDZ128mkz
VPSHRDVDZ128mkz
VPBROADCASTQZ128mkz
VPMADD52HUQZ128mkz
VPMADD52LUQZ128mkz
VPSHLDVQZ128mkz
VPSHRDVQZ128mkz
VPDPWSSDSZ128mkz
VPDPBUSDSZ128mkz
VFMADDSUB231PSZ128mkz
VFMSUB231PSZ128mkz
VFNMSUB231PSZ128mkz
VFMSUBADD231PSZ128mkz
VFMADD231PSZ128mkz
VFNMADD231PSZ128mkz
VFMADDSUB132PSZ128mkz
VFMSUB132PSZ128mkz
VFNMSUB132PSZ128mkz
VFMSUBADD132PSZ128mkz
VFMADD132PSZ128mkz
VFNMADD132PSZ128mkz
VFMADDSUB213PSZ128mkz
VFMSUB213PSZ128mkz
VFNMSUB213PSZ128mkz
VFMSUBADD213PSZ128mkz
VFMADD213PSZ128mkz
VFNMADD213PSZ128mkz
VRCP14PSZ128mkz
VRSQRT14PSZ128mkz
VGETEXPPSZ128mkz
VSQRTPSZ128mkz
VBROADCASTSSZ128mkz
VPBROADCASTWZ128mkz
VPSHLDVWZ128mkz
VPSHRDVWZ128mkz
VBROADCASTF32X2Zmkz
VBROADCASTI32X2Zmkz
VPBROADCASTBZmkz
VFMADDSUB231PDZmkz
VFMSUB231PDZmkz
VFNMSUB231PDZmkz
VFMSUBADD231PDZmkz
VFMADD231PDZmkz
VFNMADD231PDZmkz
VFMADDSUB132PDZmkz
VFMSUB132PDZmkz
VFNMSUB132PDZmkz
VFMSUBADD132PDZmkz
VFMADD132PDZmkz
VFNMADD132PDZmkz
VEXP2PDZmkz
VFMADDSUB213PDZmkz
VFMSUB213PDZmkz
VFNMSUB213PDZmkz
VFMSUBADD213PDZmkz
VFMADD213PDZmkz
VFNMADD213PDZmkz
VRCP14PDZmkz
VRSQRT14PDZmkz
VRCP28PDZmkz
VRSQRT28PDZmkz
VGETEXPPDZmkz
VSQRTPDZmkz
VRCP28SDZmkz
VRSQRT28SDZmkz
VGETEXPSDZmkz
VPDPWSSDZmkz
VBROADCASTSDZmkz
VPDPBUSDZmkz
VPBROADCASTDZmkz
VPSHLDVDZmkz
VPSHRDVDZmkz
VPBROADCASTQZmkz
VPMADD52HUQZmkz
VPMADD52LUQZmkz
VPSHLDVQZmkz
VPSHRDVQZmkz
VPDPWSSDSZmkz
VPDPBUSDSZmkz
VFMADDSUB231PSZmkz
VFMSUB231PSZmkz
VFNMSUB231PSZmkz
VFMSUBADD231PSZmkz
VFMADD231PSZmkz
VFNMADD231PSZmkz
VFMADDSUB132PSZmkz
VFMSUB132PSZmkz
VFNMSUB132PSZmkz
VFMSUBADD132PSZmkz
VFMADD132PSZmkz
VFNMADD132PSZmkz
VEXP2PSZmkz
VFMADDSUB213PSZmkz
VFMSUB213PSZmkz
VFNMSUB213PSZmkz
VFMSUBADD213PSZmkz
VFMADD213PSZmkz
VFNMADD213PSZmkz
VRCP14PSZmkz
VRSQRT14PSZmkz
VRCP28PSZmkz
VRSQRT28PSZmkz
VGETEXPPSZmkz
VSQRTPSZmkz
VRCP28SSZmkz
VRSQRT28SSZmkz
VGETEXPSSZmkz
VBROADCASTSSZmkz
VPBROADCASTWZmkz
VPSHLDVWZmkz
VPSHRDVWZmkz
VBROADCASTF64X2rmkz
VBROADCASTI64X2rmkz
VBROADCASTF32X4rmkz
VBROADCASTI32X4rmkz
VBROADCASTF64X4rmkz
VBROADCASTI64X4rmkz
VPERMI2B256rmkz
VPERMT2B256rmkz
VPERMI2D256rmkz
VPERMT2D256rmkz
VPERMI2PD256rmkz
VPERMT2PD256rmkz
VPERMI2Q256rmkz
VPERMT2Q256rmkz
VPERMI2PS256rmkz
VPERMT2PS256rmkz
VPERMI2W256rmkz
VPERMT2W256rmkz
VMOVDQA32Z256rmkz
VMOVDQU32Z256rmkz
VINSERTF64x2Z256rmkz
VINSERTI64x2Z256rmkz
VMOVDQA64Z256rmkz
VMOVDQU64Z256rmkz
VBROADCASTF32X4Z256rmkz
VBROADCASTI32X4Z256rmkz
VINSERTF32x4Z256rmkz
VINSERTI32x4Z256rmkz
VMOVDQU16Z256rmkz
VMOVDQU8Z256rmkz
VPSUBBZ256rmkz
VPADDBZ256rmkz
VPEXPANDBZ256rmkz
VPSHUFBZ256rmkz
VPAVGBZ256rmkz
VGF2P8MULBZ256rmkz
VPBLENDMBZ256rmkz
VPERMBZ256rmkz
VPMULTISHIFTQBZ256rmkz
VPABSBZ256rmkz
VPSUBSBZ256rmkz
VPADDSBZ256rmkz
VPMINSBZ256rmkz
VPSUBUSBZ256rmkz
VPADDUSBZ256rmkz
VPMAXSBZ256rmkz
VPOPCNTBZ256rmkz
VPMINUBZ256rmkz
VPMAXUBZ256rmkz
VPACKSSWBZ256rmkz
VPACKUSWBZ256rmkz
VPSRADZ256rmkz
VPSUBDZ256rmkz
VPMOVSXBDZ256rmkz
VPMOVZXBDZ256rmkz
VPADDDZ256rmkz
VPANDDZ256rmkz
VPEXPANDDZ256rmkz
VPSLLDZ256rmkz
VPMULLDZ256rmkz
VPSRLDZ256rmkz
VPBLENDMDZ256rmkz
VPERMDZ256rmkz
VPANDNDZ256rmkz
VCVTDQ2PDZ256rmkz
VCVTUDQ2PDZ256rmkz
VCVTQQ2PDZ256rmkz
VCVTUQQ2PDZ256rmkz
VCVTPS2PDZ256rmkz
VMOVAPDZ256rmkz
VSUBPDZ256rmkz
VMINCPDZ256rmkz
VMAXCPDZ256rmkz
VADDPDZ256rmkz
VEXPANDPDZ256rmkz
VANDPDZ256rmkz
VSCALEFPDZ256rmkz
VUNPCKHPDZ256rmkz
VPERMILPDZ256rmkz
VUNPCKLPDZ256rmkz
VMULPDZ256rmkz
VBLENDMPDZ256rmkz
VPERMPDZ256rmkz
VANDNPDZ256rmkz
VMINPDZ256rmkz
VORPDZ256rmkz
VXORPDZ256rmkz
VMOVUPDZ256rmkz
VDIVPDZ256rmkz
VMAXPDZ256rmkz
VPORDZ256rmkz
VPXORDZ256rmkz
VPABSDZ256rmkz
VPMINSDZ256rmkz
VPMAXSDZ256rmkz
VPCONFLICTDZ256rmkz
VPOPCNTDZ256rmkz
VPLZCNTDZ256rmkz
VPMINUDZ256rmkz
VPMAXUDZ256rmkz
VPSRAVDZ256rmkz
VPSLLVDZ256rmkz
VPROLVDZ256rmkz
VPSRLVDZ256rmkz
VPRORVDZ256rmkz
VPMADDWDZ256rmkz
VPUNPCKHWDZ256rmkz
VPUNPCKLWDZ256rmkz
VPMOVSXWDZ256rmkz
VPMOVZXWDZ256rmkz
VMOVDDUPZ256rmkz
VMOVSHDUPZ256rmkz
VMOVSLDUPZ256rmkz
VPSRAQZ256rmkz
VPSUBQZ256rmkz
VPMOVSXBQZ256rmkz
VPMOVZXBQZ256rmkz
VCVTTPD2DQZ256rmkz
VCVTPD2DQZ256rmkz
VCVTTPS2DQZ256rmkz
VCVTPS2DQZ256rmkz
VPADDQZ256rmkz
VPUNPCKHDQZ256rmkz
VPUNPCKLDQZ256rmkz
VPMULDQZ256rmkz
VPANDQZ256rmkz
VPEXPANDQZ256rmkz
VPUNPCKHQDQZ256rmkz
VPUNPCKLQDQZ256rmkz
VCVTTPD2UDQZ256rmkz
VCVTPD2UDQZ256rmkz
VCVTTPS2UDQZ256rmkz
VCVTPS2UDQZ256rmkz
VPMULUDQZ256rmkz
VPMOVSXDQZ256rmkz
VPMOVZXDQZ256rmkz
VPSLLQZ256rmkz
VPMULLQZ256rmkz
VPSRLQZ256rmkz
VPBLENDMQZ256rmkz
VPERMQZ256rmkz
VPANDNQZ256rmkz
VCVTTPD2QQZ256rmkz
VCVTPD2QQZ256rmkz
VCVTTPS2QQZ256rmkz
VCVTPS2QQZ256rmkz
VCVTTPD2UQQZ256rmkz
VCVTPD2UQQZ256rmkz
VCVTTPS2UQQZ256rmkz
VCVTPS2UQQZ256rmkz
VPORQZ256rmkz
VPXORQZ256rmkz
VPABSQZ256rmkz
VPMINSQZ256rmkz
VPMAXSQZ256rmkz
VPCONFLICTQZ256rmkz
VPOPCNTQZ256rmkz
VPLZCNTQZ256rmkz
VPMINUQZ256rmkz
VPMAXUQZ256rmkz
VPSRAVQZ256rmkz
VPSLLVQZ256rmkz
VPROLVQZ256rmkz
VPSRLVQZ256rmkz
VPRORVQZ256rmkz
VPMOVSXWQZ256rmkz
VPMOVZXWQZ256rmkz
VCVTPD2PSZ256rmkz
VCVTPH2PSZ256rmkz
VCVTDQ2PSZ256rmkz
VCVTUDQ2PSZ256rmkz
VCVTQQ2PSZ256rmkz
VCVTUQQ2PSZ256rmkz
VMOVAPSZ256rmkz
VSUBPSZ256rmkz
VMINCPSZ256rmkz
VMAXCPSZ256rmkz
VADDPSZ256rmkz
VEXPANDPSZ256rmkz
VANDPSZ256rmkz
VSCALEFPSZ256rmkz
VUNPCKHPSZ256rmkz
VPERMILPSZ256rmkz
VUNPCKLPSZ256rmkz
VMULPSZ256rmkz
VBLENDMPSZ256rmkz
VPERMPSZ256rmkz
VANDNPSZ256rmkz
VMINPSZ256rmkz
VORPSZ256rmkz
VXORPSZ256rmkz
VMOVUPSZ256rmkz
VDIVPSZ256rmkz
VMAXPSZ256rmkz
VPSRAWZ256rmkz
VPUNPCKHBWZ256rmkz
VPUNPCKLBWZ256rmkz
VPSUBWZ256rmkz
VPMOVSXBWZ256rmkz
VPMOVZXBWZ256rmkz
VPADDWZ256rmkz
VPEXPANDWZ256rmkz
VPACKSSDWZ256rmkz
VPACKUSDWZ256rmkz
VPAVGWZ256rmkz
VPMULHWZ256rmkz
VPSLLWZ256rmkz
VPMULLWZ256rmkz
VPSRLWZ256rmkz
VPBLENDMWZ256rmkz
VPERMWZ256rmkz
VPABSWZ256rmkz
VPMADDUBSWZ256rmkz
VPSUBSWZ256rmkz
VPADDSWZ256rmkz
VPMINSWZ256rmkz
VPMULHRSWZ256rmkz
VPSUBUSWZ256rmkz
VPADDUSWZ256rmkz
VPMAXSWZ256rmkz
VPOPCNTWZ256rmkz
VPMULHUWZ256rmkz
VPMINUWZ256rmkz
VPMAXUWZ256rmkz
VPSRAVWZ256rmkz
VPSLLVWZ256rmkz
VPSRLVWZ256rmkz
VPERMI2B128rmkz
VPERMT2B128rmkz
VPERMI2D128rmkz
VPERMT2D128rmkz
VPERMI2PD128rmkz
VPERMT2PD128rmkz
VPERMI2Q128rmkz
VPERMT2Q128rmkz
VPERMI2PS128rmkz
VPERMT2PS128rmkz
VPERMI2W128rmkz
VPERMT2W128rmkz
VMOVDQA32Z128rmkz
VMOVDQU32Z128rmkz
VBROADCASTF64X2Z128rmkz
VBROADCASTI64X2Z128rmkz
VMOVDQA64Z128rmkz
VMOVDQU64Z128rmkz
VMOVDQU16Z128rmkz
VMOVDQU8Z128rmkz
VPSUBBZ128rmkz
VPADDBZ128rmkz
VPEXPANDBZ128rmkz
VPSHUFBZ128rmkz
VPAVGBZ128rmkz
VGF2P8MULBZ128rmkz
VPBLENDMBZ128rmkz
VPERMBZ128rmkz
VPMULTISHIFTQBZ128rmkz
VPABSBZ128rmkz
VPSUBSBZ128rmkz
VPADDSBZ128rmkz
VPMINSBZ128rmkz
VPSUBUSBZ128rmkz
VPADDUSBZ128rmkz
VPMAXSBZ128rmkz
VPOPCNTBZ128rmkz
VPMINUBZ128rmkz
VPMAXUBZ128rmkz
VPACKSSWBZ128rmkz
VPACKUSWBZ128rmkz
VPSRADZ128rmkz
VPSUBDZ128rmkz
VPMOVSXBDZ128rmkz
VPMOVZXBDZ128rmkz
VPADDDZ128rmkz
VPANDDZ128rmkz
VPEXPANDDZ128rmkz
VPSLLDZ128rmkz
VPMULLDZ128rmkz
VPSRLDZ128rmkz
VPBLENDMDZ128rmkz
VPANDNDZ128rmkz
VCVTDQ2PDZ128rmkz
VCVTUDQ2PDZ128rmkz
VCVTQQ2PDZ128rmkz
VCVTUQQ2PDZ128rmkz
VCVTPS2PDZ128rmkz
VMOVAPDZ128rmkz
VSUBPDZ128rmkz
VMINCPDZ128rmkz
VMAXCPDZ128rmkz
VADDPDZ128rmkz
VEXPANDPDZ128rmkz
VANDPDZ128rmkz
VSCALEFPDZ128rmkz
VUNPCKHPDZ128rmkz
VPERMILPDZ128rmkz
VUNPCKLPDZ128rmkz
VMULPDZ128rmkz
VBLENDMPDZ128rmkz
VANDNPDZ128rmkz
VMINPDZ128rmkz
VORPDZ128rmkz
VXORPDZ128rmkz
VMOVUPDZ128rmkz
VDIVPDZ128rmkz
VMAXPDZ128rmkz
VPORDZ128rmkz
VPXORDZ128rmkz
VPABSDZ128rmkz
VPMINSDZ128rmkz
VPMAXSDZ128rmkz
VPCONFLICTDZ128rmkz
VPOPCNTDZ128rmkz
VPLZCNTDZ128rmkz
VPMINUDZ128rmkz
VPMAXUDZ128rmkz
VPSRAVDZ128rmkz
VPSLLVDZ128rmkz
VPROLVDZ128rmkz
VPSRLVDZ128rmkz
VPRORVDZ128rmkz
VPMADDWDZ128rmkz
VPUNPCKHWDZ128rmkz
VPUNPCKLWDZ128rmkz
VPMOVSXWDZ128rmkz
VPMOVZXWDZ128rmkz
VMOVDDUPZ128rmkz
VMOVSHDUPZ128rmkz
VMOVSLDUPZ128rmkz
VPSRAQZ128rmkz
VPSUBQZ128rmkz
VPMOVSXBQZ128rmkz
VPMOVZXBQZ128rmkz
VCVTTPD2DQZ128rmkz
VCVTPD2DQZ128rmkz
VCVTTPS2DQZ128rmkz
VCVTPS2DQZ128rmkz
VPADDQZ128rmkz
VPUNPCKHDQZ128rmkz
VPUNPCKLDQZ128rmkz
VPMULDQZ128rmkz
VPANDQZ128rmkz
VPEXPANDQZ128rmkz
VPUNPCKHQDQZ128rmkz
VPUNPCKLQDQZ128rmkz
VCVTTPD2UDQZ128rmkz
VCVTPD2UDQZ128rmkz
VCVTTPS2UDQZ128rmkz
VCVTPS2UDQZ128rmkz
VPMULUDQZ128rmkz
VPMOVSXDQZ128rmkz
VPMOVZXDQZ128rmkz
VPSLLQZ128rmkz
VPMULLQZ128rmkz
VPSRLQZ128rmkz
VPBLENDMQZ128rmkz
VPANDNQZ128rmkz
VCVTTPD2QQZ128rmkz
VCVTPD2QQZ128rmkz
VCVTTPS2QQZ128rmkz
VCVTPS2QQZ128rmkz
VCVTTPD2UQQZ128rmkz
VCVTPD2UQQZ128rmkz
VCVTTPS2UQQZ128rmkz
VCVTPS2UQQZ128rmkz
VPORQZ128rmkz
VPXORQZ128rmkz
VPABSQZ128rmkz
VPMINSQZ128rmkz
VPMAXSQZ128rmkz
VPCONFLICTQZ128rmkz
VPOPCNTQZ128rmkz
VPLZCNTQZ128rmkz
VPMINUQZ128rmkz
VPMAXUQZ128rmkz
VPSRAVQZ128rmkz
VPSLLVQZ128rmkz
VPROLVQZ128rmkz
VPSRLVQZ128rmkz
VPRORVQZ128rmkz
VPMOVSXWQZ128rmkz
VPMOVZXWQZ128rmkz
VCVTPD2PSZ128rmkz
VCVTPH2PSZ128rmkz
VCVTDQ2PSZ128rmkz
VCVTUDQ2PSZ128rmkz
VCVTQQ2PSZ128rmkz
VCVTUQQ2PSZ128rmkz
VMOVAPSZ128rmkz
VSUBPSZ128rmkz
VMINCPSZ128rmkz
VMAXCPSZ128rmkz
VADDPSZ128rmkz
VEXPANDPSZ128rmkz
VANDPSZ128rmkz
VSCALEFPSZ128rmkz
VUNPCKHPSZ128rmkz
VPERMILPSZ128rmkz
VUNPCKLPSZ128rmkz
VMULPSZ128rmkz
VBLENDMPSZ128rmkz
VANDNPSZ128rmkz
VMINPSZ128rmkz
VORPSZ128rmkz
VXORPSZ128rmkz
VMOVUPSZ128rmkz
VDIVPSZ128rmkz
VMAXPSZ128rmkz
VPSRAWZ128rmkz
VPUNPCKHBWZ128rmkz
VPUNPCKLBWZ128rmkz
VPSUBWZ128rmkz
VPMOVSXBWZ128rmkz
VPMOVZXBWZ128rmkz
VPADDWZ128rmkz
VPEXPANDWZ128rmkz
VPACKSSDWZ128rmkz
VPACKUSDWZ128rmkz
VPAVGWZ128rmkz
VPMULHWZ128rmkz
VPSLLWZ128rmkz
VPMULLWZ128rmkz
VPSRLWZ128rmkz
VPBLENDMWZ128rmkz
VPERMWZ128rmkz
VPABSWZ128rmkz
VPMADDUBSWZ128rmkz
VPSUBSWZ128rmkz
VPADDSWZ128rmkz
VPMINSWZ128rmkz
VPMULHRSWZ128rmkz
VPSUBUSWZ128rmkz
VPADDUSWZ128rmkz
VPMAXSWZ128rmkz
VPOPCNTWZ128rmkz
VPMULHUWZ128rmkz
VPMINUWZ128rmkz
VPMAXUWZ128rmkz
VPSRAVWZ128rmkz
VPSLLVWZ128rmkz
VPSRLVWZ128rmkz
VBROADCASTF32X8rmkz
VBROADCASTI32X8rmkz
VPERMI2Brmkz
VPERMT2Brmkz
VPERMI2Drmkz
VPERMT2Drmkz
VPERMI2PDrmkz
VPERMT2PDrmkz
VP4DPWSSDrmkz
VPERMI2Qrmkz
VPERMT2Qrmkz
VP4DPWSSDSrmkz
VPERMI2PSrmkz
VPERMT2PSrmkz
V4FMADDPSrmkz
V4FNMADDPSrmkz
V4FMADDSSrmkz
V4FNMADDSSrmkz
VPERMI2Wrmkz
VPERMT2Wrmkz
VMOVDQA32Zrmkz
VMOVDQU32Zrmkz
VINSERTF64x2Zrmkz
VINSERTI64x2Zrmkz
VMOVDQA64Zrmkz
VMOVDQU64Zrmkz
VINSERTF32x4Zrmkz
VINSERTI32x4Zrmkz
VINSERTF64x4Zrmkz
VINSERTI64x4Zrmkz
VMOVDQU16Zrmkz
VMOVDQU8Zrmkz
VINSERTF32x8Zrmkz
VINSERTI32x8Zrmkz
VPSUBBZrmkz
VPADDBZrmkz
VPEXPANDBZrmkz
VPSHUFBZrmkz
VPAVGBZrmkz
VGF2P8MULBZrmkz
VPBLENDMBZrmkz
VPERMBZrmkz
VPMULTISHIFTQBZrmkz
VPABSBZrmkz
VPSUBSBZrmkz
VPADDSBZrmkz
VPMINSBZrmkz
VPSUBUSBZrmkz
VPADDUSBZrmkz
VPMAXSBZrmkz
VPOPCNTBZrmkz
VPMINUBZrmkz
VPMAXUBZrmkz
VPACKSSWBZrmkz
VPACKUSWBZrmkz
VPSRADZrmkz
VPSUBDZrmkz
VPMOVSXBDZrmkz
VPMOVZXBDZrmkz
VPADDDZrmkz
VPANDDZrmkz
VPEXPANDDZrmkz
VPSLLDZrmkz
VPMULLDZrmkz
VPSRLDZrmkz
VPBLENDMDZrmkz
VPERMDZrmkz
VPANDNDZrmkz
VCVTDQ2PDZrmkz
VCVTUDQ2PDZrmkz
VCVTQQ2PDZrmkz
VCVTUQQ2PDZrmkz
VCVTPS2PDZrmkz
VMOVAPDZrmkz
VSUBPDZrmkz
VMINCPDZrmkz
VMAXCPDZrmkz
VADDPDZrmkz
VEXPANDPDZrmkz
VANDPDZrmkz
VSCALEFPDZrmkz
VUNPCKHPDZrmkz
VPERMILPDZrmkz
VUNPCKLPDZrmkz
VMULPDZrmkz
VBLENDMPDZrmkz
VPERMPDZrmkz
VANDNPDZrmkz
VMINPDZrmkz
VORPDZrmkz
VXORPDZrmkz
VMOVUPDZrmkz
VDIVPDZrmkz
VMAXPDZrmkz
VPORDZrmkz
VPXORDZrmkz
VRCP14SDZrmkz
VRSQRT14SDZrmkz
VPABSDZrmkz
VSCALEFSDZrmkz
VPMINSDZrmkz
VMOVSDZrmkz
VPMAXSDZrmkz
VPCONFLICTDZrmkz
VPOPCNTDZrmkz
VPLZCNTDZrmkz
VPMINUDZrmkz
VPMAXUDZrmkz
VPSRAVDZrmkz
VPSLLVDZrmkz
VPROLVDZrmkz
VPSRLVDZrmkz
VPRORVDZrmkz
VPMADDWDZrmkz
VPUNPCKHWDZrmkz
VPUNPCKLWDZrmkz
VPMOVSXWDZrmkz
VPMOVZXWDZrmkz
VMOVDDUPZrmkz
VMOVSHDUPZrmkz
VMOVSLDUPZrmkz
VPSRAQZrmkz
VPSUBQZrmkz
VPMOVSXBQZrmkz
VPMOVZXBQZrmkz
VCVTTPD2DQZrmkz
VCVTPD2DQZrmkz
VCVTTPS2DQZrmkz
VCVTPS2DQZrmkz
VPADDQZrmkz
VPUNPCKHDQZrmkz
VPUNPCKLDQZrmkz
VPMULDQZrmkz
VPANDQZrmkz
VPEXPANDQZrmkz
VPUNPCKHQDQZrmkz
VPUNPCKLQDQZrmkz
VCVTTPD2UDQZrmkz
VCVTPD2UDQZrmkz
VCVTTPS2UDQZrmkz
VCVTPS2UDQZrmkz
VPMULUDQZrmkz
VPMOVSXDQZrmkz
VPMOVZXDQZrmkz
VPSLLQZrmkz
VPMULLQZrmkz
VPSRLQZrmkz
VPBLENDMQZrmkz
VPERMQZrmkz
VPANDNQZrmkz
VCVTTPD2QQZrmkz
VCVTPD2QQZrmkz
VCVTTPS2QQZrmkz
VCVTPS2QQZrmkz
VCVTTPD2UQQZrmkz
VCVTPD2UQQZrmkz
VCVTTPS2UQQZrmkz
VCVTPS2UQQZrmkz
VPORQZrmkz
VPXORQZrmkz
VPABSQZrmkz
VPMINSQZrmkz
VPMAXSQZrmkz
VPCONFLICTQZrmkz
VPOPCNTQZrmkz
VPLZCNTQZrmkz
VPMINUQZrmkz
VPMAXUQZrmkz
VPSRAVQZrmkz
VPSLLVQZrmkz
VPROLVQZrmkz
VPSRLVQZrmkz
VPRORVQZrmkz
VPMOVSXWQZrmkz
VPMOVZXWQZrmkz
VCVTPD2PSZrmkz
VCVTPH2PSZrmkz
VCVTDQ2PSZrmkz
VCVTUDQ2PSZrmkz
VCVTQQ2PSZrmkz
VCVTUQQ2PSZrmkz
VMOVAPSZrmkz
VSUBPSZrmkz
VMINCPSZrmkz
VMAXCPSZrmkz
VADDPSZrmkz
VEXPANDPSZrmkz
VANDPSZrmkz
VSCALEFPSZrmkz
VUNPCKHPSZrmkz
VPERMILPSZrmkz
VUNPCKLPSZrmkz
VMULPSZrmkz
VBLENDMPSZrmkz
VPERMPSZrmkz
VANDNPSZrmkz
VMINPSZrmkz
VORPSZrmkz
VXORPSZrmkz
VMOVUPSZrmkz
VDIVPSZrmkz
VMAXPSZrmkz
VRCP14SSZrmkz
VRSQRT14SSZrmkz
VSCALEFSSZrmkz
VMOVSSZrmkz
VPSRAWZrmkz
VPUNPCKHBWZrmkz
VPUNPCKLBWZrmkz
VPSUBWZrmkz
VPMOVSXBWZrmkz
VPMOVZXBWZrmkz
VPADDWZrmkz
VPEXPANDWZrmkz
VPACKSSDWZrmkz
VPACKUSDWZrmkz
VPAVGWZrmkz
VPMULHWZrmkz
VPSLLWZrmkz
VPMULLWZrmkz
VPSRLWZrmkz
VPBLENDMWZrmkz
VPERMWZrmkz
VPABSWZrmkz
VPMADDUBSWZrmkz
VPSUBSWZrmkz
VPADDSWZrmkz
VPMINSWZrmkz
VPMULHRSWZrmkz
VPSUBUSWZrmkz
VPADDUSWZrmkz
VPMAXSWZrmkz
VPOPCNTWZrmkz
VPMULHUWZrmkz
VPMINUWZrmkz
VPMAXUWZrmkz
VPSRAVWZrmkz
VPSLLVWZrmkz
VPSRLVWZrmkz
VBROADCASTF32X2Z256rkz
VBROADCASTI32X2Z256rkz
VPBROADCASTBZ256rkz
VFMADDSUB231PDZ256rkz
VFMSUB231PDZ256rkz
VFNMSUB231PDZ256rkz
VFMSUBADD231PDZ256rkz
VFMADD231PDZ256rkz
VFNMADD231PDZ256rkz
VFMADDSUB132PDZ256rkz
VFMSUB132PDZ256rkz
VFNMSUB132PDZ256rkz
VFMSUBADD132PDZ256rkz
VFMADD132PDZ256rkz
VFNMADD132PDZ256rkz
VFMADDSUB213PDZ256rkz
VFMSUB213PDZ256rkz
VFNMSUB213PDZ256rkz
VFMSUBADD213PDZ256rkz
VFMADD213PDZ256rkz
VFNMADD213PDZ256rkz
VRCP14PDZ256rkz
VRSQRT14PDZ256rkz
VGETEXPPDZ256rkz
VSQRTPDZ256rkz
VPDPWSSDZ256rkz
VBROADCASTSDZ256rkz
VPDPBUSDZ256rkz
VPBROADCASTDZ256rkz
VPSHLDVDZ256rkz
VPSHRDVDZ256rkz
VPBROADCASTQZ256rkz
VPMADD52HUQZ256rkz
VPMADD52LUQZ256rkz
VPSHLDVQZ256rkz
VPSHRDVQZ256rkz
VPDPWSSDSZ256rkz
VPDPBUSDSZ256rkz
VFMADDSUB231PSZ256rkz
VFMSUB231PSZ256rkz
VFNMSUB231PSZ256rkz
VFMSUBADD231PSZ256rkz
VFMADD231PSZ256rkz
VFNMADD231PSZ256rkz
VFMADDSUB132PSZ256rkz
VFMSUB132PSZ256rkz
VFNMSUB132PSZ256rkz
VFMSUBADD132PSZ256rkz
VFMADD132PSZ256rkz
VFNMADD132PSZ256rkz
VFMADDSUB213PSZ256rkz
VFMSUB213PSZ256rkz
VFNMSUB213PSZ256rkz
VFMSUBADD213PSZ256rkz
VFMADD213PSZ256rkz
VFNMADD213PSZ256rkz
VRCP14PSZ256rkz
VRSQRT14PSZ256rkz
VGETEXPPSZ256rkz
VSQRTPSZ256rkz
VBROADCASTSSZ256rkz
VPBROADCASTWZ256rkz
VPSHLDVWZ256rkz
VPSHRDVWZ256rkz
VPBROADCASTBrZ256rkz
VPBROADCASTDrZ256rkz
VPBROADCASTQrZ256rkz
VPBROADCASTWrZ256rkz
VBROADCASTI32X2Z128rkz
VPBROADCASTBZ128rkz
VFMADDSUB231PDZ128rkz
VFMSUB231PDZ128rkz
VFNMSUB231PDZ128rkz
VFMSUBADD231PDZ128rkz
VFMADD231PDZ128rkz
VFNMADD231PDZ128rkz
VFMADDSUB132PDZ128rkz
VFMSUB132PDZ128rkz
VFNMSUB132PDZ128rkz
VFMSUBADD132PDZ128rkz
VFMADD132PDZ128rkz
VFNMADD132PDZ128rkz
VFMADDSUB213PDZ128rkz
VFMSUB213PDZ128rkz
VFNMSUB213PDZ128rkz
VFMSUBADD213PDZ128rkz
VFMADD213PDZ128rkz
VFNMADD213PDZ128rkz
VRCP14PDZ128rkz
VRSQRT14PDZ128rkz
VGETEXPPDZ128rkz
VSQRTPDZ128rkz
VPDPWSSDZ128rkz
VPDPBUSDZ128rkz
VPBROADCASTDZ128rkz
VPSHLDVDZ128rkz
VPSHRDVDZ128rkz
VPBROADCASTQZ128rkz
VPMADD52HUQZ128rkz
VPMADD52LUQZ128rkz
VPSHLDVQZ128rkz
VPSHRDVQZ128rkz
VPDPWSSDSZ128rkz
VPDPBUSDSZ128rkz
VFMADDSUB231PSZ128rkz
VFMSUB231PSZ128rkz
VFNMSUB231PSZ128rkz
VFMSUBADD231PSZ128rkz
VFMADD231PSZ128rkz
VFNMADD231PSZ128rkz
VFMADDSUB132PSZ128rkz
VFMSUB132PSZ128rkz
VFNMSUB132PSZ128rkz
VFMSUBADD132PSZ128rkz
VFMADD132PSZ128rkz
VFNMADD132PSZ128rkz
VFMADDSUB213PSZ128rkz
VFMSUB213PSZ128rkz
VFNMSUB213PSZ128rkz
VFMSUBADD213PSZ128rkz
VFMADD213PSZ128rkz
VFNMADD213PSZ128rkz
VRCP14PSZ128rkz
VRSQRT14PSZ128rkz
VGETEXPPSZ128rkz
VSQRTPSZ128rkz
VBROADCASTSSZ128rkz
VPBROADCASTWZ128rkz
VPSHLDVWZ128rkz
VPSHRDVWZ128rkz
VPBROADCASTBrZ128rkz
VPBROADCASTDrZ128rkz
VPBROADCASTQrZ128rkz
VPBROADCASTWrZ128rkz
VBROADCASTF32X2Zrkz
VBROADCASTI32X2Zrkz
VPBROADCASTBZrkz
VFMADDSUB231PDZrkz
VFMSUB231PDZrkz
VFNMSUB231PDZrkz
VFMSUBADD231PDZrkz
VFMADD231PDZrkz
VFNMADD231PDZrkz
VFMADDSUB132PDZrkz
VFMSUB132PDZrkz
VFNMSUB132PDZrkz
VFMSUBADD132PDZrkz
VFMADD132PDZrkz
VFNMADD132PDZrkz
VEXP2PDZrkz
VFMADDSUB213PDZrkz
VFMSUB213PDZrkz
VFNMSUB213PDZrkz
VFMSUBADD213PDZrkz
VFMADD213PDZrkz
VFNMADD213PDZrkz
VRCP14PDZrkz
VRSQRT14PDZrkz
VRCP28PDZrkz
VRSQRT28PDZrkz
VGETEXPPDZrkz
VSQRTPDZrkz
VRCP28SDZrkz
VRSQRT28SDZrkz
VGETEXPSDZrkz
VPDPWSSDZrkz
VBROADCASTSDZrkz
VPDPBUSDZrkz
VPBROADCASTDZrkz
VPSHLDVDZrkz
VPSHRDVDZrkz
VPBROADCASTQZrkz
VPMADD52HUQZrkz
VPMADD52LUQZrkz
VPSHLDVQZrkz
VPSHRDVQZrkz
VPDPWSSDSZrkz
VPDPBUSDSZrkz
VFMADDSUB231PSZrkz
VFMSUB231PSZrkz
VFNMSUB231PSZrkz
VFMSUBADD231PSZrkz
VFMADD231PSZrkz
VFNMADD231PSZrkz
VFMADDSUB132PSZrkz
VFMSUB132PSZrkz
VFNMSUB132PSZrkz
VFMSUBADD132PSZrkz
VFMADD132PSZrkz
VFNMADD132PSZrkz
VEXP2PSZrkz
VFMADDSUB213PSZrkz
VFMSUB213PSZrkz
VFNMSUB213PSZrkz
VFMSUBADD213PSZrkz
VFMADD213PSZrkz
VFNMADD213PSZrkz
VRCP14PSZrkz
VRSQRT14PSZrkz
VRCP28PSZrkz
VRSQRT28PSZrkz
VGETEXPPSZrkz
VSQRTPSZrkz
VRCP28SSZrkz
VRSQRT28SSZrkz
VGETEXPSSZrkz
VBROADCASTSSZrkz
VPBROADCASTWZrkz
VPSHLDVWZrkz
VPSHRDVWZrkz
VPBROADCASTBrZrkz
VPBROADCASTDrZrkz
VPBROADCASTQrZrkz
VPBROADCASTWrZrkz
VPERMI2B256rrkz
VPERMT2B256rrkz
VPERMI2D256rrkz
VPERMT2D256rrkz
VPERMI2PD256rrkz
VPERMT2PD256rrkz
VPERMI2Q256rrkz
VPERMT2Q256rrkz
VPERMI2PS256rrkz
VPERMT2PS256rrkz
VPERMI2W256rrkz
VPERMT2W256rrkz
VMOVDQA32Z256rrkz
VMOVDQU32Z256rrkz
VEXTRACTF64x2Z256rrkz
VINSERTF64x2Z256rrkz
VEXTRACTI64x2Z256rrkz
VINSERTI64x2Z256rrkz
VMOVDQA64Z256rrkz
VMOVDQU64Z256rrkz
VEXTRACTF32x4Z256rrkz
VINSERTF32x4Z256rrkz
VEXTRACTI32x4Z256rrkz
VINSERTI32x4Z256rrkz
VMOVDQU16Z256rrkz
VMOVDQU8Z256rrkz
VPSUBBZ256rrkz
VPADDBZ256rrkz
VPEXPANDBZ256rrkz
VPMOVUSDBZ256rrkz
VPMOVSDBZ256rrkz
VPMOVDBZ256rrkz
VPSHUFBZ256rrkz
VPAVGBZ256rrkz
VGF2P8MULBZ256rrkz
VPBLENDMBZ256rrkz
VPERMBZ256rrkz
VPMOVUSQBZ256rrkz
VPMOVSQBZ256rrkz
VPMULTISHIFTQBZ256rrkz
VPMOVQBZ256rrkz
VPABSBZ256rrkz
VPSUBSBZ256rrkz
VPADDSBZ256rrkz
VPMINSBZ256rrkz
VPCOMPRESSBZ256rrkz
VPSUBUSBZ256rrkz
VPADDUSBZ256rrkz
VPMAXSBZ256rrkz
VPOPCNTBZ256rrkz
VPMINUBZ256rrkz
VPMAXUBZ256rrkz
VPACKSSWBZ256rrkz
VPACKUSWBZ256rrkz
VPMOVUSWBZ256rrkz
VPMOVSWBZ256rrkz
VPMOVWBZ256rrkz
VPSRADZ256rrkz
VPSUBDZ256rrkz
VPMOVSXBDZ256rrkz
VPMOVZXBDZ256rrkz
VPADDDZ256rrkz
VPANDDZ256rrkz
VPEXPANDDZ256rrkz
VPSLLDZ256rrkz
VPMULLDZ256rrkz
VPSRLDZ256rrkz
VPBLENDMDZ256rrkz
VPERMDZ256rrkz
VPANDNDZ256rrkz
VCVTDQ2PDZ256rrkz
VCVTUDQ2PDZ256rrkz
VCVTQQ2PDZ256rrkz
VCVTUQQ2PDZ256rrkz
VCVTPS2PDZ256rrkz
VMOVAPDZ256rrkz
VSUBPDZ256rrkz
VMINCPDZ256rrkz
VMAXCPDZ256rrkz
VADDPDZ256rrkz
VEXPANDPDZ256rrkz
VANDPDZ256rrkz
VSCALEFPDZ256rrkz
VUNPCKHPDZ256rrkz
VPERMILPDZ256rrkz
VUNPCKLPDZ256rrkz
VMULPDZ256rrkz
VBLENDMPDZ256rrkz
VPERMPDZ256rrkz
VANDNPDZ256rrkz
VMINPDZ256rrkz
VORPDZ256rrkz
VXORPDZ256rrkz
VCOMPRESSPDZ256rrkz
VMOVUPDZ256rrkz
VDIVPDZ256rrkz
VMAXPDZ256rrkz
VPMOVUSQDZ256rrkz
VPMOVSQDZ256rrkz
VPMOVQDZ256rrkz
VPORDZ256rrkz
VPXORDZ256rrkz
VPABSDZ256rrkz
VPMINSDZ256rrkz
VPCOMPRESSDZ256rrkz
VPMAXSDZ256rrkz
VPCONFLICTDZ256rrkz
VPOPCNTDZ256rrkz
VPLZCNTDZ256rrkz
VPMINUDZ256rrkz
VPMAXUDZ256rrkz
VPSRAVDZ256rrkz
VPSLLVDZ256rrkz
VPROLVDZ256rrkz
VPSRLVDZ256rrkz
VPRORVDZ256rrkz
VPMADDWDZ256rrkz
VPUNPCKHWDZ256rrkz
VPUNPCKLWDZ256rrkz
VPMOVSXWDZ256rrkz
VPMOVZXWDZ256rrkz
VCVTPS2PHZ256rrkz
VMOVDDUPZ256rrkz
VMOVSHDUPZ256rrkz
VMOVSLDUPZ256rrkz
VPSRAQZ256rrkz
VPSUBQZ256rrkz
VPMOVSXBQZ256rrkz
VPMOVZXBQZ256rrkz
VCVTTPD2DQZ256rrkz
VCVTPD2DQZ256rrkz
VCVTTPS2DQZ256rrkz
VCVTPS2DQZ256rrkz
VPADDQZ256rrkz
VPUNPCKHDQZ256rrkz
VPUNPCKLDQZ256rrkz
VPMULDQZ256rrkz
VPANDQZ256rrkz
VPEXPANDQZ256rrkz
VPUNPCKHQDQZ256rrkz
VPUNPCKLQDQZ256rrkz
VCVTTPD2UDQZ256rrkz
VCVTPD2UDQZ256rrkz
VCVTTPS2UDQZ256rrkz
VCVTPS2UDQZ256rrkz
VPMULUDQZ256rrkz
VPMOVSXDQZ256rrkz
VPMOVZXDQZ256rrkz
VPSLLQZ256rrkz
VPMULLQZ256rrkz
VPSRLQZ256rrkz
VPBLENDMQZ256rrkz
VPERMQZ256rrkz
VPANDNQZ256rrkz
VCVTTPD2QQZ256rrkz
VCVTPD2QQZ256rrkz
VCVTTPS2QQZ256rrkz
VCVTPS2QQZ256rrkz
VCVTTPD2UQQZ256rrkz
VCVTPD2UQQZ256rrkz
VCVTTPS2UQQZ256rrkz
VCVTPS2UQQZ256rrkz
VPORQZ256rrkz
VPXORQZ256rrkz
VPABSQZ256rrkz
VPMINSQZ256rrkz
VPCOMPRESSQZ256rrkz
VPMAXSQZ256rrkz
VPCONFLICTQZ256rrkz
VPOPCNTQZ256rrkz
VPLZCNTQZ256rrkz
VPMINUQZ256rrkz
VPMAXUQZ256rrkz
VPSRAVQZ256rrkz
VPSLLVQZ256rrkz
VPROLVQZ256rrkz
VPSRLVQZ256rrkz
VPRORVQZ256rrkz
VPMOVSXWQZ256rrkz
VPMOVZXWQZ256rrkz
VCVTPD2PSZ256rrkz
VCVTPH2PSZ256rrkz
VCVTDQ2PSZ256rrkz
VCVTUDQ2PSZ256rrkz
VCVTQQ2PSZ256rrkz
VCVTUQQ2PSZ256rrkz
VMOVAPSZ256rrkz
VSUBPSZ256rrkz
VMINCPSZ256rrkz
VMAXCPSZ256rrkz
VADDPSZ256rrkz
VEXPANDPSZ256rrkz
VANDPSZ256rrkz
VSCALEFPSZ256rrkz
VUNPCKHPSZ256rrkz
VPERMILPSZ256rrkz
VUNPCKLPSZ256rrkz
VMULPSZ256rrkz
VBLENDMPSZ256rrkz
VPERMPSZ256rrkz
VANDNPSZ256rrkz
VMINPSZ256rrkz
VORPSZ256rrkz
VXORPSZ256rrkz
VCOMPRESSPSZ256rrkz
VMOVUPSZ256rrkz
VDIVPSZ256rrkz
VMAXPSZ256rrkz
VPSRAWZ256rrkz
VPUNPCKHBWZ256rrkz
VPUNPCKLBWZ256rrkz
VPSUBWZ256rrkz
VPMOVSXBWZ256rrkz
VPMOVZXBWZ256rrkz
VPADDWZ256rrkz
VPEXPANDWZ256rrkz
VPACKSSDWZ256rrkz
VPACKUSDWZ256rrkz
VPMOVUSDWZ256rrkz
VPMOVSDWZ256rrkz
VPMOVDWZ256rrkz
VPAVGWZ256rrkz
VPMULHWZ256rrkz
VPSLLWZ256rrkz
VPMULLWZ256rrkz
VPSRLWZ256rrkz
VPBLENDMWZ256rrkz
VPERMWZ256rrkz
VPMOVUSQWZ256rrkz
VPMOVSQWZ256rrkz
VPMOVQWZ256rrkz
VPABSWZ256rrkz
VPMADDUBSWZ256rrkz
VPSUBSWZ256rrkz
VPADDSWZ256rrkz
VPMINSWZ256rrkz
VPMULHRSWZ256rrkz
VPCOMPRESSWZ256rrkz
VPSUBUSWZ256rrkz
VPADDUSWZ256rrkz
VPMAXSWZ256rrkz
VPOPCNTWZ256rrkz
VPMULHUWZ256rrkz
VPMINUWZ256rrkz
VPMAXUWZ256rrkz
VPSRAVWZ256rrkz
VPSLLVWZ256rrkz
VPSRLVWZ256rrkz
VPERMI2B128rrkz
VPERMT2B128rrkz
VPERMI2D128rrkz
VPERMT2D128rrkz
VPERMI2PD128rrkz
VPERMT2PD128rrkz
VPERMI2Q128rrkz
VPERMT2Q128rrkz
VPERMI2PS128rrkz
VPERMT2PS128rrkz
VPERMI2W128rrkz
VPERMT2W128rrkz
VMOVDQA32Z128rrkz
VMOVDQU32Z128rrkz
VMOVDQA64Z128rrkz
VMOVDQU64Z128rrkz
VMOVDQU16Z128rrkz
VMOVDQU8Z128rrkz
VPSUBBZ128rrkz
VPADDBZ128rrkz
VPEXPANDBZ128rrkz
VPMOVUSDBZ128rrkz
VPMOVSDBZ128rrkz
VPMOVDBZ128rrkz
VPSHUFBZ128rrkz
VPAVGBZ128rrkz
VGF2P8MULBZ128rrkz
VPBLENDMBZ128rrkz
VPERMBZ128rrkz
VPMOVUSQBZ128rrkz
VPMOVSQBZ128rrkz
VPMULTISHIFTQBZ128rrkz
VPMOVQBZ128rrkz
VPABSBZ128rrkz
VPSUBSBZ128rrkz
VPADDSBZ128rrkz
VPMINSBZ128rrkz
VPCOMPRESSBZ128rrkz
VPSUBUSBZ128rrkz
VPADDUSBZ128rrkz
VPMAXSBZ128rrkz
VPOPCNTBZ128rrkz
VPMINUBZ128rrkz
VPMAXUBZ128rrkz
VPACKSSWBZ128rrkz
VPACKUSWBZ128rrkz
VPMOVUSWBZ128rrkz
VPMOVSWBZ128rrkz
VPMOVWBZ128rrkz
VPSRADZ128rrkz
VPSUBDZ128rrkz
VPMOVSXBDZ128rrkz
VPMOVZXBDZ128rrkz
VPADDDZ128rrkz
VPANDDZ128rrkz
VPEXPANDDZ128rrkz
VPSLLDZ128rrkz
VPMULLDZ128rrkz
VPSRLDZ128rrkz
VPBLENDMDZ128rrkz
VPANDNDZ128rrkz
VCVTDQ2PDZ128rrkz
VCVTUDQ2PDZ128rrkz
VCVTQQ2PDZ128rrkz
VCVTUQQ2PDZ128rrkz
VCVTPS2PDZ128rrkz
VMOVAPDZ128rrkz
VSUBPDZ128rrkz
VMINCPDZ128rrkz
VMAXCPDZ128rrkz
VADDPDZ128rrkz
VEXPANDPDZ128rrkz
VANDPDZ128rrkz
VSCALEFPDZ128rrkz
VUNPCKHPDZ128rrkz
VPERMILPDZ128rrkz
VUNPCKLPDZ128rrkz
VMULPDZ128rrkz
VBLENDMPDZ128rrkz
VANDNPDZ128rrkz
VMINPDZ128rrkz
VORPDZ128rrkz
VXORPDZ128rrkz
VCOMPRESSPDZ128rrkz
VMOVUPDZ128rrkz
VDIVPDZ128rrkz
VMAXPDZ128rrkz
VPMOVUSQDZ128rrkz
VPMOVSQDZ128rrkz
VPMOVQDZ128rrkz
VPORDZ128rrkz
VPXORDZ128rrkz
VPABSDZ128rrkz
VPMINSDZ128rrkz
VPCOMPRESSDZ128rrkz
VPMAXSDZ128rrkz
VPCONFLICTDZ128rrkz
VPOPCNTDZ128rrkz
VPLZCNTDZ128rrkz
VPMINUDZ128rrkz
VPMAXUDZ128rrkz
VPSRAVDZ128rrkz
VPSLLVDZ128rrkz
VPROLVDZ128rrkz
VPSRLVDZ128rrkz
VPRORVDZ128rrkz
VPMADDWDZ128rrkz
VPUNPCKHWDZ128rrkz
VPUNPCKLWDZ128rrkz
VPMOVSXWDZ128rrkz
VPMOVZXWDZ128rrkz
VCVTPS2PHZ128rrkz
VMOVDDUPZ128rrkz
VMOVSHDUPZ128rrkz
VMOVSLDUPZ128rrkz
VPSRAQZ128rrkz
VPSUBQZ128rrkz
VPMOVSXBQZ128rrkz
VPMOVZXBQZ128rrkz
VCVTTPD2DQZ128rrkz
VCVTPD2DQZ128rrkz
VCVTTPS2DQZ128rrkz
VCVTPS2DQZ128rrkz
VPADDQZ128rrkz
VPUNPCKHDQZ128rrkz
VPUNPCKLDQZ128rrkz
VPMULDQZ128rrkz
VPANDQZ128rrkz
VPEXPANDQZ128rrkz
VPUNPCKHQDQZ128rrkz
VPUNPCKLQDQZ128rrkz
VCVTTPD2UDQZ128rrkz
VCVTPD2UDQZ128rrkz
VCVTTPS2UDQZ128rrkz
VCVTPS2UDQZ128rrkz
VPMULUDQZ128rrkz
VPMOVSXDQZ128rrkz
VPMOVZXDQZ128rrkz
VPSLLQZ128rrkz
VPMULLQZ128rrkz
VPSRLQZ128rrkz
VPBLENDMQZ128rrkz
VPANDNQZ128rrkz
VCVTTPD2QQZ128rrkz
VCVTPD2QQZ128rrkz
VCVTTPS2QQZ128rrkz
VCVTPS2QQZ128rrkz
VCVTTPD2UQQZ128rrkz
VCVTPD2UQQZ128rrkz
VCVTTPS2UQQZ128rrkz
VCVTPS2UQQZ128rrkz
VPORQZ128rrkz
VPXORQZ128rrkz
VPABSQZ128rrkz
VPMINSQZ128rrkz
VPCOMPRESSQZ128rrkz
VPMAXSQZ128rrkz
VPCONFLICTQZ128rrkz
VPOPCNTQZ128rrkz
VPLZCNTQZ128rrkz
VPMINUQZ128rrkz
VPMAXUQZ128rrkz
VPSRAVQZ128rrkz
VPSLLVQZ128rrkz
VPROLVQZ128rrkz
VPSRLVQZ128rrkz
VPRORVQZ128rrkz
VPMOVSXWQZ128rrkz
VPMOVZXWQZ128rrkz
VCVTPD2PSZ128rrkz
VCVTPH2PSZ128rrkz
VCVTDQ2PSZ128rrkz
VCVTUDQ2PSZ128rrkz
VCVTQQ2PSZ128rrkz
VCVTUQQ2PSZ128rrkz
VMOVAPSZ128rrkz
VSUBPSZ128rrkz
VMINCPSZ128rrkz
VMAXCPSZ128rrkz
VADDPSZ128rrkz
VEXPANDPSZ128rrkz
VANDPSZ128rrkz
VSCALEFPSZ128rrkz
VUNPCKHPSZ128rrkz
VPERMILPSZ128rrkz
VUNPCKLPSZ128rrkz
VMULPSZ128rrkz
VBLENDMPSZ128rrkz
VANDNPSZ128rrkz
VMINPSZ128rrkz
VORPSZ128rrkz
VXORPSZ128rrkz
VCOMPRESSPSZ128rrkz
VMOVUPSZ128rrkz
VDIVPSZ128rrkz
VMAXPSZ128rrkz
VPSRAWZ128rrkz
VPUNPCKHBWZ128rrkz
VPUNPCKLBWZ128rrkz
VPSUBWZ128rrkz
VPMOVSXBWZ128rrkz
VPMOVZXBWZ128rrkz
VPADDWZ128rrkz
VPEXPANDWZ128rrkz
VPACKSSDWZ128rrkz
VPACKUSDWZ128rrkz
VPMOVUSDWZ128rrkz
VPMOVSDWZ128rrkz
VPMOVDWZ128rrkz
VPAVGWZ128rrkz
VPMULHWZ128rrkz
VPSLLWZ128rrkz
VPMULLWZ128rrkz
VPSRLWZ128rrkz
VPBLENDMWZ128rrkz
VPERMWZ128rrkz
VPMOVUSQWZ128rrkz
VPMOVSQWZ128rrkz
VPMOVQWZ128rrkz
VPABSWZ128rrkz
VPMADDUBSWZ128rrkz
VPSUBSWZ128rrkz
VPADDSWZ128rrkz
VPMINSWZ128rrkz
VPMULHRSWZ128rrkz
VPCOMPRESSWZ128rrkz
VPSUBUSWZ128rrkz
VPADDUSWZ128rrkz
VPMAXSWZ128rrkz
VPOPCNTWZ128rrkz
VPMULHUWZ128rrkz
VPMINUWZ128rrkz
VPMAXUWZ128rrkz
VPSRAVWZ128rrkz
VPSLLVWZ128rrkz
VPSRLVWZ128rrkz
VPERMI2Brrkz
VPERMT2Brrkz
VPERMI2Drrkz
VPERMT2Drrkz
VPERMI2PDrrkz
VPERMT2PDrrkz
VPERMI2Qrrkz
VPERMT2Qrrkz
VPERMI2PSrrkz
VPERMT2PSrrkz
VPERMI2Wrrkz
VPERMT2Wrrkz
VMOVDQA32Zrrkz
VMOVDQU32Zrrkz
VEXTRACTF64x2Zrrkz
VINSERTF64x2Zrrkz
VEXTRACTI64x2Zrrkz
VINSERTI64x2Zrrkz
VMOVDQA64Zrrkz
VMOVDQU64Zrrkz
VEXTRACTF32x4Zrrkz
VINSERTF32x4Zrrkz
VEXTRACTI32x4Zrrkz
VINSERTI32x4Zrrkz
VEXTRACTF64x4Zrrkz
VINSERTF64x4Zrrkz
VEXTRACTI64x4Zrrkz
VINSERTI64x4Zrrkz
VMOVDQU16Zrrkz
VMOVDQU8Zrrkz
VEXTRACTF32x8Zrrkz
VINSERTF32x8Zrrkz
VEXTRACTI32x8Zrrkz
VINSERTI32x8Zrrkz
VPSUBBZrrkz
VPADDBZrrkz
VPEXPANDBZrrkz
VPMOVUSDBZrrkz
VPMOVSDBZrrkz
VPMOVDBZrrkz
VPSHUFBZrrkz
VPAVGBZrrkz
VGF2P8MULBZrrkz
VPBLENDMBZrrkz
VPERMBZrrkz
VPMOVUSQBZrrkz
VPMOVSQBZrrkz
VPMULTISHIFTQBZrrkz
VPMOVQBZrrkz
VPABSBZrrkz
VPSUBSBZrrkz
VPADDSBZrrkz
VPMINSBZrrkz
VPCOMPRESSBZrrkz
VPSUBUSBZrrkz
VPADDUSBZrrkz
VPMAXSBZrrkz
VPOPCNTBZrrkz
VPMINUBZrrkz
VPMAXUBZrrkz
VPACKSSWBZrrkz
VPACKUSWBZrrkz
VPMOVUSWBZrrkz
VPMOVSWBZrrkz
VPMOVWBZrrkz
VPSRADZrrkz
VPSUBDZrrkz
VPMOVSXBDZrrkz
VPMOVZXBDZrrkz
VPADDDZrrkz
VPANDDZrrkz
VPEXPANDDZrrkz
VPSLLDZrrkz
VPMULLDZrrkz
VPSRLDZrrkz
VPBLENDMDZrrkz
VPERMDZrrkz
VPANDNDZrrkz
VCVTDQ2PDZrrkz
VCVTUDQ2PDZrrkz
VCVTQQ2PDZrrkz
VCVTUQQ2PDZrrkz
VCVTPS2PDZrrkz
VMOVAPDZrrkz
VSUBPDZrrkz
VMINCPDZrrkz
VMAXCPDZrrkz
VADDPDZrrkz
VEXPANDPDZrrkz
VANDPDZrrkz
VSCALEFPDZrrkz
VUNPCKHPDZrrkz
VPERMILPDZrrkz
VUNPCKLPDZrrkz
VMULPDZrrkz
VBLENDMPDZrrkz
VPERMPDZrrkz
VANDNPDZrrkz
VMINPDZrrkz
VORPDZrrkz
VXORPDZrrkz
VCOMPRESSPDZrrkz
VMOVUPDZrrkz
VDIVPDZrrkz
VMAXPDZrrkz
VPMOVUSQDZrrkz
VPMOVSQDZrrkz
VPMOVQDZrrkz
VPORDZrrkz
VPXORDZrrkz
VRCP14SDZrrkz
VRSQRT14SDZrrkz
VPABSDZrrkz
VSCALEFSDZrrkz
VPMINSDZrrkz
VPCOMPRESSDZrrkz
VMOVSDZrrkz
VPMAXSDZrrkz
VPCONFLICTDZrrkz
VPOPCNTDZrrkz
VPLZCNTDZrrkz
VPMINUDZrrkz
VPMAXUDZrrkz
VPSRAVDZrrkz
VPSLLVDZrrkz
VPROLVDZrrkz
VPSRLVDZrrkz
VPRORVDZrrkz
VPMADDWDZrrkz
VPUNPCKHWDZrrkz
VPUNPCKLWDZrrkz
VPMOVSXWDZrrkz
VPMOVZXWDZrrkz
VCVTPS2PHZrrkz
VMOVDDUPZrrkz
VMOVSHDUPZrrkz
VMOVSLDUPZrrkz
VPSRAQZrrkz
VPSUBQZrrkz
VPMOVSXBQZrrkz
VPMOVZXBQZrrkz
VCVTTPD2DQZrrkz
VCVTPD2DQZrrkz
VCVTTPS2DQZrrkz
VCVTPS2DQZrrkz
VPADDQZrrkz
VPUNPCKHDQZrrkz
VPUNPCKLDQZrrkz
VPMULDQZrrkz
VPANDQZrrkz
VPEXPANDQZrrkz
VPUNPCKHQDQZrrkz
VPUNPCKLQDQZrrkz
VCVTTPD2UDQZrrkz
VCVTPD2UDQZrrkz
VCVTTPS2UDQZrrkz
VCVTPS2UDQZrrkz
VPMULUDQZrrkz
VPMOVSXDQZrrkz
VPMOVZXDQZrrkz
VPSLLQZrrkz
VPMULLQZrrkz
VPSRLQZrrkz
VPBLENDMQZrrkz
VPERMQZrrkz
VPANDNQZrrkz
VCVTTPD2QQZrrkz
VCVTPD2QQZrrkz
VCVTTPS2QQZrrkz
VCVTPS2QQZrrkz
VCVTTPD2UQQZrrkz
VCVTPD2UQQZrrkz
VCVTTPS2UQQZrrkz
VCVTPS2UQQZrrkz
VPORQZrrkz
VPXORQZrrkz
VPABSQZrrkz
VPMINSQZrrkz
VPCOMPRESSQZrrkz
VPMAXSQZrrkz
VPCONFLICTQZrrkz
VPOPCNTQZrrkz
VPLZCNTQZrrkz
VPMINUQZrrkz
VPMAXUQZrrkz
VPSRAVQZrrkz
VPSLLVQZrrkz
VPROLVQZrrkz
VPSRLVQZrrkz
VPRORVQZrrkz
VPMOVSXWQZrrkz
VPMOVZXWQZrrkz
VCVTPD2PSZrrkz
VCVTPH2PSZrrkz
VCVTDQ2PSZrrkz
VCVTUDQ2PSZrrkz
VCVTQQ2PSZrrkz
VCVTUQQ2PSZrrkz
VMOVAPSZrrkz
VSUBPSZrrkz
VMINCPSZrrkz
VMAXCPSZrrkz
VADDPSZrrkz
VEXPANDPSZrrkz
VANDPSZrrkz
VSCALEFPSZrrkz
VUNPCKHPSZrrkz
VPERMILPSZrrkz
VUNPCKLPSZrrkz
VMULPSZrrkz
VBLENDMPSZrrkz
VPERMPSZrrkz
VANDNPSZrrkz
VMINPSZrrkz
VORPSZrrkz
VXORPSZrrkz
VCOMPRESSPSZrrkz
VMOVUPSZrrkz
VDIVPSZrrkz
VMAXPSZrrkz
VRCP14SSZrrkz
VRSQRT14SSZrrkz
VSCALEFSSZrrkz
VMOVSSZrrkz
VPSRAWZrrkz
VPUNPCKHBWZrrkz
VPUNPCKLBWZrrkz
VPSUBWZrrkz
VPMOVSXBWZrrkz
VPMOVZXBWZrrkz
VPADDWZrrkz
VPEXPANDWZrrkz
VPACKSSDWZrrkz
VPACKUSDWZrrkz
VPMOVUSDWZrrkz
VPMOVSDWZrrkz
VPMOVDWZrrkz
VPAVGWZrrkz
VPMULHWZrrkz
VPSLLWZrrkz
VPMULLWZrrkz
VPSRLWZrrkz
VPBLENDMWZrrkz
VPERMWZrrkz
VPMOVUSQWZrrkz
VPMOVSQWZrrkz
VPMOVQWZrrkz
VPABSWZrrkz
VPMADDUBSWZrrkz
VPSUBSWZrrkz
VPADDSWZrrkz
VPMINSWZrrkz
VPMULHRSWZrrkz
VPCOMPRESSWZrrkz
VPSUBUSWZrrkz
VPADDUSWZrrkz
VPMAXSWZrrkz
VPOPCNTWZrrkz
VPMULHUWZrrkz
VPMINUWZrrkz
VPMAXUWZrrkz
VPSRAVWZrrkz
VPSLLVWZrrkz
VPSRLVWZrrkz
VFMSUB231SDZrb_Intkz
VFNMSUB231SDZrb_Intkz
VFMADD231SDZrb_Intkz
VFNMADD231SDZrb_Intkz
VFMSUB132SDZrb_Intkz
VFNMSUB132SDZrb_Intkz
VFMADD132SDZrb_Intkz
VFNMADD132SDZrb_Intkz
VFMSUB213SDZrb_Intkz
VFNMSUB213SDZrb_Intkz
VFMADD213SDZrb_Intkz
VFNMADD213SDZrb_Intkz
VRNDSCALESDZrb_Intkz
VSQRTSDZrb_Intkz
VFMSUB231SSZrb_Intkz
VFNMSUB231SSZrb_Intkz
VFMADD231SSZrb_Intkz
VFNMADD231SSZrb_Intkz
VFMSUB132SSZrb_Intkz
VFNMSUB132SSZrb_Intkz
VFMADD132SSZrb_Intkz
VFNMADD132SSZrb_Intkz
VFMSUB213SSZrb_Intkz
VFNMSUB213SSZrb_Intkz
VFMADD213SSZrb_Intkz
VFNMADD213SSZrb_Intkz
VRNDSCALESSZrb_Intkz
VSQRTSSZrb_Intkz
VCVTSS2SDZrrb_Intkz
VSUBSDZrrb_Intkz
VADDSDZrrb_Intkz
VSCALEFSDZrrb_Intkz
VMULSDZrrb_Intkz
VMINSDZrrb_Intkz
VDIVSDZrrb_Intkz
VMAXSDZrrb_Intkz
VCVTSD2SSZrrb_Intkz
VSUBSSZrrb_Intkz
VADDSSZrrb_Intkz
VSCALEFSSZrrb_Intkz
VMULSSZrrb_Intkz
VMINSSZrrb_Intkz
VDIVSSZrrb_Intkz
VMAXSSZrrb_Intkz
VFMSUB231SDZm_Intkz
VFNMSUB231SDZm_Intkz
VFMADD231SDZm_Intkz
VFNMADD231SDZm_Intkz
VFMSUB132SDZm_Intkz
VFNMSUB132SDZm_Intkz
VFMADD132SDZm_Intkz
VFNMADD132SDZm_Intkz
VFMSUB213SDZm_Intkz
VFNMSUB213SDZm_Intkz
VFMADD213SDZm_Intkz
VFNMADD213SDZm_Intkz
VRNDSCALESDZm_Intkz
VSQRTSDZm_Intkz
VFMSUB231SSZm_Intkz
VFNMSUB231SSZm_Intkz
VFMADD231SSZm_Intkz
VFNMADD231SSZm_Intkz
VFMSUB132SSZm_Intkz
VFNMSUB132SSZm_Intkz
VFMADD132SSZm_Intkz
VFNMADD132SSZm_Intkz
VFMSUB213SSZm_Intkz
VFNMSUB213SSZm_Intkz
VFMADD213SSZm_Intkz
VFNMADD213SSZm_Intkz
VRNDSCALESSZm_Intkz
VSQRTSSZm_Intkz
VCVTSS2SDZrm_Intkz
VSUBSDZrm_Intkz
VADDSDZrm_Intkz
VMULSDZrm_Intkz
VMINSDZrm_Intkz
VDIVSDZrm_Intkz
VMAXSDZrm_Intkz
VCVTSD2SSZrm_Intkz
VSUBSSZrm_Intkz
VADDSSZrm_Intkz
VMULSSZrm_Intkz
VMINSSZrm_Intkz
VDIVSSZrm_Intkz
VMAXSSZrm_Intkz
VFMSUB231SDZr_Intkz
VFNMSUB231SDZr_Intkz
VFMADD231SDZr_Intkz
VFNMADD231SDZr_Intkz
VFMSUB132SDZr_Intkz
VFNMSUB132SDZr_Intkz
VFMADD132SDZr_Intkz
VFNMADD132SDZr_Intkz
VFMSUB213SDZr_Intkz
VFNMSUB213SDZr_Intkz
VFMADD213SDZr_Intkz
VFNMADD213SDZr_Intkz
VRNDSCALESDZr_Intkz
VSQRTSDZr_Intkz
VFMSUB231SSZr_Intkz
VFNMSUB231SSZr_Intkz
VFMADD231SSZr_Intkz
VFNMADD231SSZr_Intkz
VFMSUB132SSZr_Intkz
VFNMSUB132SSZr_Intkz
VFMADD132SSZr_Intkz
VFNMADD132SSZr_Intkz
VFMSUB213SSZr_Intkz
VFNMSUB213SSZr_Intkz
VFMADD213SSZr_Intkz
VFNMADD213SSZr_Intkz
VRNDSCALESSZr_Intkz
VSQRTSSZr_Intkz
VCVTSS2SDZrr_Intkz
VSUBSDZrr_Intkz
VADDSDZrr_Intkz
VMULSDZrr_Intkz
VMINSDZrr_Intkz
VDIVSDZrr_Intkz
VMAXSDZrr_Intkz
VCVTSD2SSZrr_Intkz
VSUBSSZrr_Intkz
VADDSSZrr_Intkz
VMULSSZrr_Intkz
VMINSSZrr_Intkz
VDIVSSZrr_Intkz
VMAXSSZrr_Intkz
AL_OFFSET_TABLE__GLOBAL_OFFSET_T
!"#$%&
#$+,
+,./1
./34
34567
$$&&
$$&&
((((
&&&&
''''
((((
))))
****
..0033
..0033
7777;;
000033
88::::
333333
666666
7777;;
88::::
999999
::::::
;;;;;;
======
??????
@@@@@@
AAAAAA
BBBBBB
JJJJ
KKLLOOPP
JJJJJ
KKKK
KKLLOOPP
KKKKK
LLLL
LLLLOOPP
LLLLL
MMMM
RRRRUUUU
MMMMM
NNNN
SSVVVVXX
NNNNN
OOOO
OOOOOOPP
OOOOO
PPPP
PPPPPPPP
PPPPP
QQQQ
QQQQQQQQ
QQQQQ
RRRR
RRRRUUUU
RRRRR
SSSS
SSVVVVXX
SSSSS
TTTT
TTTTTTTT
TTTTT
UUUU
UUUUUUUU
UUUUU
VVVV
VVVVVVXX
VVVVV
WWWW
WWWWWWWW
WWWWW
XXXX
XXXXXXXX
XXXXX
YYYY
YYYYYYYY
YYYYY
ZZZZ
ZZZZZZZZ
ZZZZZ
[[[[
[[[[[[[[
[[[[[
\\\\
\\\\\\\\
\\\\\
]]]]
]]]]]]]]
]]]]]
^^^^
^^^^^^^^
^^^^^
________
______````aaaabbbbcccc________________________````````
``````````aaaabbbbcccc````````````````````````aaaaaaaa
aaaaaaaaaaaaaabbbbccccaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbb
bbbbbbbbbbbbbbbbbbccccbbbbbbbbbbbbbbbbbbbbbbbbcccccccc
ccccccccccccccccccccccccccccccccccccccccccccccdddddddd
ddddddddddddddddddddddddddddddddddddddddddddddeeeeeeee
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffff
ffffffffffffffffffffffffffffffffffffffffffffffgggggggg
gggggggggggggggggggggggggggggggggggggggggggggg
  ""$$&(,<>>@
GGGGGGGGGGGGGGGGGGGGGGHHHHHHHH:/&())*********
#*0YV
$+1Z^W
$+1Z^
%# #
%# #
%# #
%# #
%* *
%* *
%* *
%* *
%# +
%+ +:
%# +
%+ +:
%* 1
%1 1:
%* 1
%1 1:
%$ $
%$ $
%$ $
%$ $
%+ +
%+ +
%+ +
%+ +
%# #
%* *
%$ $
%* 1
%# #
%* *
%$ $
%+ +
%+ +7
%1 17
%# #
%# #
%# #
%* *
%* *
%* *
%# +
%# +
%+ +
%+ +
%+ +
%* 1
%* 1
%1 1
%$ $
%$ $
%$ $
%0 0
%# #
%$ $
%* *
%+ +
%$ $:
%+ +:
%# #
%$ $
%* *
%+ +
%$ $:
%+ +:
%# +
%* 1
)<FG
(."
C $3
C $3
C $3
D +3
D +3
D +3
E 13
E 13
E 13
-? 1
-? 1
-? 1
O"Q*
Ge'
Ge'
3<G<
Gh'
9<F@
P<Gw
#<Gv
y#0"
y#*"
y#Y"
y#+"
y#Z"
y#1"
3#W"
<Gx
V"*Y
V"*Y
V"*Y
"&YC
"&VC
"&YC
"&VC
1$:
"%VC
"%YC
-  17
-  17
1- 7
 " " " " " " " "C
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
WX
[V
WX
.personalityinde
sha1su0.32
sha256su0.32
sha1su1.32
sha256su1.32
sha256h2.32
sha1c.32
sha1h.32
sha256h.32
sha1m.32
sha1p.32
vcvta.s32.f32
vcvtm.s32.f32
vcvtn.s32.f32
vcvtp.s32.f32
vcvta.u32.f32
vcvtm.u32.f32
vcvtn.u32.f32
vcvtp.u32.f32
vcmla.f32
vrinta.f32
vcadd.f32
vselge.f32
vminnm.f32
vmaxnm.f32
vrintm.f32
vrintn.f32
vrintp.f32
vseleq.f32
vselvs.f32
vselgt.f32
vrintx.f32
vrintz.f32
ldc2
mrc2
mrrc2
stc2
cdp2
mcr2
mcrr2
vcvta.s32.f64
vcvtm.s32.f64
vcvtn.s32.f64
vcvtp.s32.f64
vcvta.u32.f64
vcvtm.u32.f64
vcvtn.u32.f64
vcvtp.u32.f64
vrinta.f64
vselge.f64
vminnm.f64
vmaxnm.f64
vrintm.f64
vrintn.f64
vrintp.f64
vseleq.f64
vselvs.f64
vselgt.f64
vmull.p64
vcvta.s32.f16
vcvtm.s32.f16
vcvtn.s32.f16
vcvtp.s32.f16
vcvta.u32.f16
vcvtm.u32.f16
vcvtn.u32.f16
vcvtp.u32.f16
vcvta.s16.f16
vcvtm.s16.f16
vcvtn.s16.f16
vcvtp.s16.f16
vcvta.u16.f16
vcvtm.u16.f16
vcvtn.u16.f16
vcvtp.u16.f16
vcmla.f16
vrinta.f16
vcadd.f16
vselge.f16
vfmal.f16
vfmsl.f16
vminnm.f16
vmaxnm.f16
vrintm.f16
vrintn.f16
vrintp.f16
vseleq.f16
vins.f16
vselvs.f16
vselgt.f16
vrintx.f16
vmovx.f16
vrintz.f16
aesimc.8
aesmc.8
aesd.8
aese.8
vsdot.s8
vudot.u8
rfeda
rfeia
crc32b
crc32cb
rfedb
rfeib
setend
crc32h
crc32ch
ldc2l
stc2l
setpan
movs
bkpt
hvc.w
udf.w
crc32w
crc32cw
pldw
cbnz
srsda
sp!, 
srsia
sp!, 
srsdb
sp!, 
srsib
sp!, 
srsda
sp, 
srsia
sp, 
srsdb
sp, 
srsib
sp, 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
__brkdiv0
vld1
dcps1
vst1
vrev32
ldc2
mrc2
mrrc2
stc2
vld2
cdp2
mcr2
mcrr2
dcps2
vst2
vld3
dcps3
vst3
vrev64
vld4
vst4
sxtab16
uxtab16
sxtb16
uxtb16
shsub16
uhsub16
uqsub16
ssub16
usub16
shadd16
uhadd16
uqadd16
sadd16
uadd16
ssat16
usat16
vrev16
usada8
shsub8
uhsub8
uqsub8
ssub8
usub8
usad8
shadd8
uhadd8
uqadd8
sadd8
uadd8
LIFETIME_END
BUNDLE
DBG_VALUE
DBG_LABEL
@ COMPILER BARRIER
LIFETIME_START
vaba
ldmda
stmda
rfeia
vldmia
vstmia
srsia
smmla
vnmla
vmla
vfma
vfnma
vrsra
vsra
ldab
sxtab
uxtab
smlabb
smlalbb
smulbb
rfedb
vldmdb
vstmdb
srsdb
ldmib
stmib
stlb
swpb
ldrb
strb
ldrsb
smlatb
pkhtb
smlaltb
smultb
vcvtb
sxtb
uxtb
qdsub
vhsub
vqsub
vsub
smlawb
smulwb
ldaexb
stlexb
ldrexb
strexb
vbic
mrrc
smlad
smuad
vabd
qdadd
vrhadd
vhadd
vpadd
vqadd
vadd
smlald
smlsld
vand
ldrd
strd
smlsd
smusd
ldaexd
stlexd
ldrexd
strexd
vacge
vcge
vcle
vrecpe
vcmpe
vrsqrte
vbif
vqneg
vneg
ldah
vqrdmlah
sxtah
uxtah
stlh
vqdmulh
vqrdmulh
ldrh
strh
vqrdmlsh
ldrsh
push
revsh
sxth
uxth
ldaexh
stlexh
ldrexh
strexh
vsli
vsri
ldc2l
stc2l
umaal
vabal
vpadal
vqdmlal
smlal
umlal
vmlal
vtbl
vsubl
ldcl
stcl
vabdl
vpaddl
vaddl
vqshl
vqrshl
vrshl
vshl
# FEntry call
vshll
vqdmull
smull
umull
vmull
vbsl
vqdmlsl
vmlsl
smmul
vnmul
vmul
vmovl
vlldm
vlstm
vrsubhn
vsubhn
vraddhn
vaddhn
vpmin
vmin
vqshrn
vqrshrn
vrshrn
vshrn
vorn
vtrn
vqshrun
vqrshrun
vqmovun
vmvn
vqmovn
vmovn
trap
vzip
vcmp
vdup
vswp
vuzp
vceq
smmlar
vldr
vrshr
vshr
smmulr
veor
mcrr
vorr
smmlsr
vmsr
vrintr
vstr
vcvtr
vqabs
vabs
subs
vcls
smmls
vnmls
vmls
vfms
vfnms
bxns
blxns
vrecps
vmrs
asrs
lsrs
vrsqrts
movs
ssat
usat
ttat
smlabt
pkhbt
smlalbt
smulbt
ldrbt
strbt
ldrsbt
eret
vacgt
vcgt
ldrht
strht
ldrsht
rbit
vbit
vclt
vcnt
hint
ldrt
vsqrt
strt
vtst
smlatt
smlaltt
smultt
vcvtt
vjcvt
vcvt
movt
smlawt
smulwt
vext
vqshlu
sdiv
udiv
vdiv
vmov
vsubw
vaddw
pldw
movw
fldmiax
fstmiax
vpmax
vmax
shsax
uhsax
uqsax
ssax
usax
fldmdbx
fstmdbx
vtbx
smladx
smuadx
smlaldx
smlsldx
smlsdx
smusdx
ldaex
stlex
ldrex
clrex
strex
sbfx
ubfx
shasx
uhasx
uqasx
sasx
uasx
vrintx
vclz
vrintz
P<2KP<
P<.KP<
P<0KP<.KP<
P<0KP<2K
9$K\}
\=$K\=
\= K\=
\="K\= K\=
\="K\=$K
<$K~=$K~=
~= K~=
~="K~= K~=
~="K~=$K
;*K$<,K$<.K$<0K
+:"K+:"K+: K+: K+:$K+:$K>X
<(K%:$K%: K%:"K%: K%:"K%:$K8j 
}LOK\
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
mvfr0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
R10_R11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
R0_R1
mvfr1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
mvfr2
fpinst2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
R2_R3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
R4_R5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
R6_R7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
R8_R9
R12_SP
fpexc
fpsid
itstate
fpscr
apsr
cpsr
spsr
fpinst
fpscr_nzcv
apsr_nzcv
D4_D6_D8_D10
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D14_D16_D18_D20
D17_D18_D19_D20
D24_D26_D28_D30
D27_D28_D29_D30
MVFR0
D9_D10_D11
D5_D7_D9_D11
Q8_Q9_Q10_Q11
R10_R11
D19_D20_D21
D15_D17_D19_D21
D29_D30_D31
D25_D27_D29_D31
Q0_Q1
MVFR1
R0_R1
D6_D8_D10_D12
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D16_D18_D20_D22
D19_D20_D21_D22
D0_D2
D0_D1_D2
Q1_Q2
MVFR2
FPINST2
D7_D9_D11_D13
D11_D12_D13
Q10_Q11_Q12_Q13
D17_D19_D21_D23
D21_D22_D23
D1_D3
D1_D2_D3
Q0_Q1_Q2_Q3
R2_R3
D8_D10_D12_D14
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D18_D20_D22_D24
D21_D22_D23_D24
D0_D2_D4
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D9_D11_D13_D15
D13_D14_D15
Q12_Q13_Q14_Q15
D19_D21_D23_D25
D23_D24_D25
D1_D3_D5
D3_D4_D5
Q2_Q3_Q4_Q5
R4_R5
D10_D12_D14_D16
D13_D14_D15_D16
D20_D22_D24_D26
D23_D24_D25_D26
D0_D2_D4_D6
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D11_D13_D15_D17
D15_D16_D17
D21_D23_D25_D27
D25_D26_D27
D1_D3_D5_D7
D5_D6_D7
Q4_Q5_Q6_Q7
R6_R7
D12_D14_D16_D18
D15_D16_D17_D18
D22_D24_D26_D28
D25_D26_D27_D28
D2_D4_D6_D8
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D13_D15_D17_D19
D17_D18_D19
D23_D25_D27_D29
D27_D28_D29
D3_D5_D7_D9
D7_D8_D9
Q6_Q7_Q8_Q9
R8_R9
FPEXC
FPSID
ITSTATE
R12_SP
FPSCR
APSR
CPSR
SPSR
FPINST
FPSCR_NZCV
APSR_NZCV
QQQQPR_with_ssub_0
DQuadSpc_with_ssub_0
DTripleSpc_with_ssub_0
DPairSpc_with_ssub_0
DQuad_with_ssub_0
DTriple_with_ssub_0
DPair_with_ssub_0
QQQQPR_with_ssub_12
DPR_VFP2
DQuad_with_qsub_0_in_QPR_VFP2
DTriple_with_qsub_0_in_QPR_VFP2
DQuad_with_qsub_1_in_QPR_VFP2
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_VFP2
DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_VFP2
DQuad_with_ssub_2
DTriple_with_ssub_2
DPair_with_ssub_2
QQQQPR_with_ssub_4
DQuadSpc_with_ssub_4
DTripleSpc_with_ssub_4
DPairSpc_with_ssub_4
DQuad_with_ssub_4
DTriple_with_ssub_4
DQuad_with_ssub_6
QQQQPR_with_dsub_0_in_DPR_8
DQuadSpc_with_dsub_0_in_DPR_8
DTripleSpc_with_dsub_0_in_DPR_8
DPairSpc_with_dsub_0_in_DPR_8
DQuad_with_dsub_0_in_DPR_8
DTriple_with_dsub_0_in_DPR_8
DPair_with_dsub_0_in_DPR_8
DQuad_with_dsub_1_in_DPR_8
DTriple_with_dsub_1_in_DPR_8
DPair_with_dsub_1_in_DPR_8
QQQQPR_with_dsub_2_in_DPR_8
DQuadSpc_with_dsub_2_in_DPR_8
DTripleSpc_with_dsub_2_in_DPR_8
DPairSpc_with_dsub_2_in_DPR_8
DQuad_with_dsub_2_in_DPR_8
DTriple_with_dsub_2_in_DPR_8
DQuad_with_dsub_3_in_DPR_8
QQQQPR_with_dsub_4_in_DPR_8
DQuadSpc_with_dsub_4_in_DPR_8
DTripleSpc_with_dsub_4_in_DPR_8
QQQQPR_with_dsub_6_in_DPR_8
DQuad_with_qsub_0_in_QPR_8
DTriple_with_qsub_0_in_QPR_8
DQuad_with_qsub_1_in_QPR_8
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_8
DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_8
SPR_8
QQQQPR_with_ssub_8
DQuadSpc_with_ssub_8
DTripleSpc_with_ssub_8
hGPR_and_tcGPR
tGPR_and_tcGPR
GPRPair_with_gsub_0_in_tcGPR
GPRPair_with_gsub_1_in_tcGPR
GPRnopc_and_hGPR
GPRPair_with_gsub_0_in_hGPR
GPRPair_with_gsub_1_in_hGPR_and_rGPR
GPRPair_with_gsub_1_in_rGPR
GPRPair_with_gsub_0_in_tGPR
QQQQPR
DTriple_with_ssub_4_and_DTriple_with_qsub_0_in_QPR
DTriple_with_dsub_2_in_DPR_8_and_DTriple_with_qsub_0_in_QPR
DQuad_with_ssub_0_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DQuad_with_ssub_6_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DQuad_with_dsub_0_in_DPR_8_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DQuad_with_dsub_3_in_DPR_8_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_ssub_0_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_dsub_0_in_DPR_8_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
GPRwithAPSR
DQuadSpc
DTripleSpc
DPairSpc
hGPR_and_tGPRwithpc
GPRnopc
DQuad
DTriple
GPRPair_with_gsub_1_in_GPRsp
DPair
GPRPair
G_FLOG10
VMOVD0
VMOVQ0
VMRS_MVFR0
SHA1SU0
SHA256SU0
t__brkdiv0
VTBL1
VMRS_MVFR1
t2DCPS1
SHA1SU1
SHA256SU1
VTBX1
t2LDRBi12
t2STRBi12
t2LDRSBi12
t2PLDi12
t2LDRHi12
t2STRHi12
t2LDRSHi12
t2PLIi12
t2LDRi12
t2STRi12
t2PLDWi12
BR_JTm_i12
t2SUBri12
t2ADDri12
COPY_STRUCT_BYVAL_I32
CMP_SWAP_32
VLD3dWB_fixed_Asm_32
VST3dWB_fixed_Asm_32
VLD4dWB_fixed_Asm_32
VST4dWB_fixed_Asm_32
VLD1LNdWB_fixed_Asm_32
VST1LNdWB_fixed_Asm_32
VLD2LNdWB_fixed_Asm_32
VST2LNdWB_fixed_Asm_32
VLD3LNdWB_fixed_Asm_32
VST3LNdWB_fixed_Asm_32
VLD4LNdWB_fixed_Asm_32
VST4LNdWB_fixed_Asm_32
VLD3DUPdWB_fixed_Asm_32
VLD4DUPdWB_fixed_Asm_32
VLD3qWB_fixed_Asm_32
VST3qWB_fixed_Asm_32
VLD4qWB_fixed_Asm_32
VST4qWB_fixed_Asm_32
VLD2LNqWB_fixed_Asm_32
VST2LNqWB_fixed_Asm_32
VLD3LNqWB_fixed_Asm_32
VST3LNqWB_fixed_Asm_32
VLD4LNqWB_fixed_Asm_32
VST4LNqWB_fixed_Asm_32
VLD3DUPqWB_fixed_Asm_32
VLD4DUPqWB_fixed_Asm_32
VLD3dWB_register_Asm_32
VST3dWB_register_Asm_32
VLD4dWB_register_Asm_32
VST4dWB_register_Asm_32
VLD1LNdWB_register_Asm_32
VST1LNdWB_register_Asm_32
VLD2LNdWB_register_Asm_32
VST2LNdWB_register_Asm_32
VLD3LNdWB_register_Asm_32
VST3LNdWB_register_Asm_32
VLD4LNdWB_register_Asm_32
VST4LNdWB_register_Asm_32
VLD3DUPdWB_register_Asm_32
VLD4DUPdWB_register_Asm_32
VLD3qWB_register_Asm_32
VST3qWB_register_Asm_32
VLD4qWB_register_Asm_32
VST4qWB_register_Asm_32
VLD2LNqWB_register_Asm_32
VST2LNqWB_register_Asm_32
VLD3LNqWB_register_Asm_32
VST3LNqWB_register_Asm_32
VLD4LNqWB_register_Asm_32
VST4LNqWB_register_Asm_32
VLD3DUPqWB_register_Asm_32
VLD4DUPqWB_register_Asm_32
VLD3dAsm_32
VST3dAsm_32
VLD4dAsm_32
VST4dAsm_32
VLD1LNdAsm_32
VST1LNdAsm_32
VLD2LNdAsm_32
VST2LNdAsm_32
VLD3LNdAsm_32
VST3LNdAsm_32
VLD4LNdAsm_32
VST4LNdAsm_32
VLD3DUPdAsm_32
VLD4DUPdAsm_32
VLD3qAsm_32
VST3qAsm_32
VLD4qAsm_32
VST4qAsm_32
VLD2LNqAsm_32
VST2LNqAsm_32
VLD3LNqAsm_32
VST3LNqAsm_32
VLD4LNqAsm_32
VST4LNqAsm_32
VLD3DUPqAsm_32
VLD4DUPqAsm_32
VLD2b32
VST2b32
VLD1d32
VST1d32
VLD2d32
VST2d32
VLD3d32
VST3d32
VREV64d32
VLD4d32
VST4d32
VLD1LNd32
VST1LNd32
VLD2LNd32
VST2LNd32
VLD3LNd32
VST3LNd32
VLD4LNd32
VST4LNd32
VTRNd32
VLD1DUPd32
VLD2DUPd32
VLD3DUPd32
VLD4DUPd32
VEXTd32
VCMLAv2f32
VCADDv2f32
VMOVv2f32
VCGEzv2f32
VCLEzv2f32
VCEQzv2f32
VCGTzv2f32
VCLTzv2f32
VCMLAv4f32
VCADDv4f32
VMOVv4f32
VCGEzv4f32
VCLEzv4f32
VCEQzv4f32
VCGTzv4f32
VCLTzv4f32
VMLAv2i32
VSUBv2i32
VADDv2i32
VQNEGv2i32
VQRDMLAHv2i32
VQDMULHv2i32
VQRDMULHv2i32
VQRDMLSHv2i32
VSLIv2i32
VSRIv2i32
VMULv2i32
VRSUBHNv2i32
VSUBHNv2i32
VRADDHNv2i32
VADDHNv2i32
VRSHRNv2i32
VSHRNv2i32
VQSHRUNv2i32
VQRSHRUNv2i32
VMVNv2i32
VMOVNv2i32
VCEQv2i32
VQABSv2i32
VABSv2i32
VCLSv2i32
VMLSv2i32
VTSTv2i32
VMOVv2i32
VCLZv2i32
VBICiv2i32
VSHLiv2i32
VORRiv2i32
VQSHLsiv2i32
VQSHLuiv2i32
VMLAslv2i32
VQRDMLAHslv2i32
VQDMULHslv2i32
VQRDMULHslv2i32
VQRDMLSHslv2i32
VQDMLALslv2i32
VQDMULLslv2i32
VQDMLSLslv2i32
VMULslv2i32
VMLSslv2i32
VABAsv2i32
VRSRAsv2i32
VSRAsv2i32
VHSUBsv2i32
VQSUBsv2i32
VABDsv2i32
VRHADDsv2i32
VHADDsv2i32
VQADDsv2i32
VCGEsv2i32
VPADALsv2i32
VPADDLsv2i32
VQSHLsv2i32
VQRSHLsv2i32
VRSHLsv2i32
VSHLsv2i32
VMINsv2i32
VQSHRNsv2i32
VQRSHRNsv2i32
VQMOVNsv2i32
VRSHRsv2i32
VSHRsv2i32
VCGTsv2i32
VMAXsv2i32
VMLALslsv2i32
VMULLslsv2i32
VMLSLslsv2i32
VABAuv2i32
VRSRAuv2i32
VSRAuv2i32
VHSUBuv2i32
VQSUBuv2i32
VABDuv2i32
VRHADDuv2i32
VHADDuv2i32
VQADDuv2i32
VCGEuv2i32
VPADALuv2i32
VPADDLuv2i32
VQSHLuv2i32
VQRSHLuv2i32
VRSHLuv2i32
VSHLuv2i32
VMINuv2i32
VQSHRNuv2i32
VQRSHRNuv2i32
VQMOVNuv2i32
VRSHRuv2i32
VSHRuv2i32
VCGTuv2i32
VMAXuv2i32
VMLALsluv2i32
VMULLsluv2i32
VMLSLsluv2i32
VQSHLsuv2i32
VQMOVNsuv2i32
VCGEzv2i32
VCLEzv2i32
VCEQzv2i32
VCGTzv2i32
VCLTzv2i32
VMLAv4i32
VSUBv4i32
VADDv4i32
VQNEGv4i32
VQRDMLAHv4i32
VQDMULHv4i32
VQRDMULHv4i32
VQRDMLSHv4i32
VSLIv4i32
VSRIv4i32
VQDMLALv4i32
VQDMULLv4i32
VQDMLSLv4i32
VMULv4i32
VMVNv4i32
VCEQv4i32
VQABSv4i32
VABSv4i32
VCLSv4i32
VMLSv4i32
VTSTv4i32
VMOVv4i32
VCLZv4i32
VBICiv4i32
VSHLiv4i32
VORRiv4i32
VQSHLsiv4i32
VQSHLuiv4i32
VMLAslv4i32
VQRDMLAHslv4i32
VQDMULHslv4i32
VQRDMULHslv4i32
VQRDMLSHslv4i32
VMULslv4i32
VMLSslv4i32
VABAsv4i32
VRSRAsv4i32
VSRAsv4i32
VHSUBsv4i32
VQSUBsv4i32
VABDsv4i32
VRHADDsv4i32
VHADDsv4i32
VQADDsv4i32
VCGEsv4i32
VABALsv4i32
VPADALsv4i32
VMLALsv4i32
VSUBLsv4i32
VABDLsv4i32
VPADDLsv4i32
VADDLsv4i32
VQSHLsv4i32
VQRSHLsv4i32
VRSHLsv4i32
VSHLsv4i32
VSHLLsv4i32
VMULLsv4i32
VMLSLsv4i32
VMOVLsv4i32
VMINsv4i32
VRSHRsv4i32
VSHRsv4i32
VCGTsv4i32
VSUBWsv4i32
VADDWsv4i32
VMAXsv4i32
VABAuv4i32
VRSRAuv4i32
VSRAuv4i32
VHSUBuv4i32
VQSUBuv4i32
VABDuv4i32
VRHADDuv4i32
VHADDuv4i32
VQADDuv4i32
VCGEuv4i32
VABALuv4i32
VPADALuv4i32
VMLALuv4i32
VSUBLuv4i32
VABDLuv4i32
VPADDLuv4i32
VADDLuv4i32
VQSHLuv4i32
VQRSHLuv4i32
VRSHLuv4i32
VSHLuv4i32
VSHLLuv4i32
VMULLuv4i32
VMLSLuv4i32
VMOVLuv4i32
VMINuv4i32
VRSHRuv4i32
VSHRuv4i32
VCGTuv4i32
VSUBWuv4i32
VADDWuv4i32
VMAXuv4i32
VQSHLsuv4i32
VCGEzv4i32
VCLEzv4i32
VCEQzv4i32
VCGTzv4i32
VCLTzv4i32
VPADDi32
VSHLLi32
VGETLNi32
VSETLNi32
VLD1q32
VST1q32
VLD2q32
VST2q32
VLD3q32
VST3q32
VREV64q32
VLD4q32
VST4q32
VLD2LNq32
VST2LNq32
VLD3LNq32
VST3LNq32
VLD4LNq32
VST4LNq32
VTRNq32
VZIPq32
VLD1DUPq32
VLD3DUPq32
VLD4DUPq32
VUZPq32
VEXTq32
VPMINs32
VPMAXs32
VPMINu32
VPMAXu32
t2MRC2
t2MRRC2
G_FLOG2
SHA256H2
VTBL2
t2CDP2
G_FEXP2
t2MCR2
VMRS_MVFR2
t2MCRR2
t2DCPS2
VMSR_FPINST2
VMRS_FPINST2
VTBX2
VLD2DUPd32x2
VLD2DUPd16x2
VLD2DUPd8x2
VTBL3
t2DCPS3
VTBX3
tSUBi3
tADDi3
tSUBSi3
tADDSi3
CMP_SWAP_64
VLD1d64
VST1d64
VSUBv1i64
VADDv1i64
VSLIv1i64
VSRIv1i64
VMOVv1i64
VSHLiv1i64
VQSHLsiv1i64
VQSHLuiv1i64
VRSRAsv1i64
VSRAsv1i64
VQSUBsv1i64
VQADDsv1i64
VQSHLsv1i64
VQRSHLsv1i64
VRSHLsv1i64
VSHLsv1i64
VRSHRsv1i64
VSHRsv1i64
VRSRAuv1i64
VSRAuv1i64
VQSUBuv1i64
VQADDuv1i64
VQSHLuv1i64
VQRSHLuv1i64
VRSHLuv1i64
VSHLuv1i64
VRSHRuv1i64
VSHRuv1i64
VQSHLsuv1i64
VSUBv2i64
VADDv2i64
VSLIv2i64
VSRIv2i64
VQDMLALv2i64
VQDMULLv2i64
VQDMLSLv2i64
VMOVv2i64
VSHLiv2i64
VQSHLsiv2i64
VQSHLuiv2i64
VRSRAsv2i64
VSRAsv2i64
VQSUBsv2i64
VQADDsv2i64
VABALsv2i64
VMLALsv2i64
VSUBLsv2i64
VABDLsv2i64
VADDLsv2i64
VQSHLsv2i64
VQRSHLsv2i64
VRSHLsv2i64
VSHLsv2i64
VSHLLsv2i64
VMULLsv2i64
VMLSLsv2i64
VMOVLsv2i64
VRSHRsv2i64
VSHRsv2i64
VSUBWsv2i64
VADDWsv2i64
VRSRAuv2i64
VSRAuv2i64
VQSUBuv2i64
VQADDuv2i64
VABALuv2i64
VMLALuv2i64
VSUBLuv2i64
VABDLuv2i64
VADDLuv2i64
VQSHLuv2i64
VQRSHLuv2i64
VRSHLuv2i64
VSHLuv2i64
VSHLLuv2i64
VMULLuv2i64
VMLSLuv2i64
VMOVLuv2i64
VRSHRuv2i64
VSHRuv2i64
VSUBWuv2i64
VADDWuv2i64
VQSHLsuv2i64
BCCi64
BCCZi64
VMULLp64
VLD1q64
VST1q64
VEXTq64
VTBL4
VTBX4
TAILJMPr4
MLAv5
SMLALv5
UMLALv5
SMULLv5
UMULLv5
MULv5
t2SXTAB16
t2UXTAB16
t2SXTB16
t2UXTB16
t2SHSUB16
t2UHSUB16
t2QSUB16
t2UQSUB16
t2SSUB16
t2USUB16
t2SHADD16
t2UHADD16
t2QADD16
t2UQADD16
t2SADD16
t2UADD16
t2SSAT16
t2USAT16
t2REV16
tREV16
CMP_SWAP_16
VLD3dWB_fixed_Asm_16
VST3dWB_fixed_Asm_16
VLD4dWB_fixed_Asm_16
VST4dWB_fixed_Asm_16
VLD1LNdWB_fixed_Asm_16
VST1LNdWB_fixed_Asm_16
VLD2LNdWB_fixed_Asm_16
VST2LNdWB_fixed_Asm_16
VLD3LNdWB_fixed_Asm_16
VST3LNdWB_fixed_Asm_16
VLD4LNdWB_fixed_Asm_16
VST4LNdWB_fixed_Asm_16
VLD3DUPdWB_fixed_Asm_16
VLD4DUPdWB_fixed_Asm_16
VLD3qWB_fixed_Asm_16
VST3qWB_fixed_Asm_16
VLD4qWB_fixed_Asm_16
VST4qWB_fixed_Asm_16
VLD2LNqWB_fixed_Asm_16
VST2LNqWB_fixed_Asm_16
VLD3LNqWB_fixed_Asm_16
VST3LNqWB_fixed_Asm_16
VLD4LNqWB_fixed_Asm_16
VST4LNqWB_fixed_Asm_16
VLD3DUPqWB_fixed_Asm_16
VLD4DUPqWB_fixed_Asm_16
VLD3dWB_register_Asm_16
VST3dWB_register_Asm_16
VLD4dWB_register_Asm_16
VST4dWB_register_Asm_16
VLD1LNdWB_register_Asm_16
VST1LNdWB_register_Asm_16
VLD2LNdWB_register_Asm_16
VST2LNdWB_register_Asm_16
VLD3LNdWB_register_Asm_16
VST3LNdWB_register_Asm_16
VLD4LNdWB_register_Asm_16
VST4LNdWB_register_Asm_16
VLD3DUPdWB_register_Asm_16
VLD4DUPdWB_register_Asm_16
VLD3qWB_register_Asm_16
VST3qWB_register_Asm_16
VLD4qWB_register_Asm_16
VST4qWB_register_Asm_16
VLD2LNqWB_register_Asm_16
VST2LNqWB_register_Asm_16
VLD3LNqWB_register_Asm_16
VST3LNqWB_register_Asm_16
VLD4LNqWB_register_Asm_16
VST4LNqWB_register_Asm_16
VLD3DUPqWB_register_Asm_16
VLD4DUPqWB_register_Asm_16
VLD3dAsm_16
VST3dAsm_16
VLD4dAsm_16
VST4dAsm_16
VLD1LNdAsm_16
VST1LNdAsm_16
VLD2LNdAsm_16
VST2LNdAsm_16
VLD3LNdAsm_16
VST3LNdAsm_16
VLD4LNdAsm_16
VST4LNdAsm_16
VLD3DUPdAsm_16
VLD4DUPdAsm_16
VLD3qAsm_16
VST3qAsm_16
VLD4qAsm_16
VST4qAsm_16
VLD2LNqAsm_16
VST2LNqAsm_16
VLD3LNqAsm_16
VST3LNqAsm_16
VLD4LNqAsm_16
VST4LNqAsm_16
VLD3DUPqAsm_16
VLD4DUPqAsm_16
VLD2b16
VST2b16
VLD1d16
VST1d16
VREV32d16
VLD2d16
VST2d16
VLD3d16
VST3d16
VREV64d16
VLD4d16
VST4d16
VLD1LNd16
VST1LNd16
VLD2LNd16
VST2LNd16
VLD3LNd16
VST3LNd16
VLD4LNd16
VST4LNd16
VTRNd16
VZIPd16
VLD1DUPd16
VLD2DUPd16
VLD3DUPd16
VLD4DUPd16
VUZPd16
VEXTd16
VCMLAv4f16
VCADDv4f16
VCGEzv4f16
VCLEzv4f16
VCEQzv4f16
VCGTzv4f16
VCLTzv4f16
VCMLAv8f16
VCADDv8f16
VCGEzv8f16
VCLEzv8f16
VCEQzv8f16
VCGTzv8f16
VCLTzv8f16
VMLAv4i16
VSUBv4i16
VADDv4i16
VQNEGv4i16
VQRDMLAHv4i16
VQDMULHv4i16
VQRDMULHv4i16
VQRDMLSHv4i16
VSLIv4i16
VSRIv4i16
VMULv4i16
VRSUBHNv4i16
VSUBHNv4i16
VRADDHNv4i16
VADDHNv4i16
VRSHRNv4i16
VSHRNv4i16
VQSHRUNv4i16
VQRSHRUNv4i16
VMVNv4i16
VMOVNv4i16
VCEQv4i16
VQABSv4i16
VABSv4i16
VCLSv4i16
VMLSv4i16
VTSTv4i16
VMOVv4i16
VCLZv4i16
VBICiv4i16
VSHLiv4i16
VORRiv4i16
VQSHLsiv4i16
VQSHLuiv4i16
VMLAslv4i16
VQRDMLAHslv4i16
VQDMULHslv4i16
VQRDMULHslv4i16
VQRDMLSHslv4i16
VQDMLALslv4i16
VQDMULLslv4i16
VQDMLSLslv4i16
VMULslv4i16
VMLSslv4i16
VABAsv4i16
VRSRAsv4i16
VSRAsv4i16
VHSUBsv4i16
VQSUBsv4i16
VABDsv4i16
VRHADDsv4i16
VHADDsv4i16
VQADDsv4i16
VCGEsv4i16
VPADALsv4i16
VPADDLsv4i16
VQSHLsv4i16
VQRSHLsv4i16
VRSHLsv4i16
VSHLsv4i16
VMINsv4i16
VQSHRNsv4i16
VQRSHRNsv4i16
VQMOVNsv4i16
VRSHRsv4i16
VSHRsv4i16
VCGTsv4i16
VMAXsv4i16
VMLALslsv4i16
VMULLslsv4i16
VMLSLslsv4i16
VABAuv4i16
VRSRAuv4i16
VSRAuv4i16
VHSUBuv4i16
VQSUBuv4i16
VABDuv4i16
VRHADDuv4i16
VHADDuv4i16
VQADDuv4i16
VCGEuv4i16
VPADALuv4i16
VPADDLuv4i16
VQSHLuv4i16
VQRSHLuv4i16
VRSHLuv4i16
VSHLuv4i16
VMINuv4i16
VQSHRNuv4i16
VQRSHRNuv4i16
VQMOVNuv4i16
VRSHRuv4i16
VSHRuv4i16
VCGTuv4i16
VMAXuv4i16
VMLALsluv4i16
VMULLsluv4i16
VMLSLsluv4i16
VQSHLsuv4i16
VQMOVNsuv4i16
VCGEzv4i16
VCLEzv4i16
VCEQzv4i16
VCGTzv4i16
VCLTzv4i16
VMLAv8i16
VSUBv8i16
VADDv8i16
VQNEGv8i16
VQRDMLAHv8i16
VQDMULHv8i16
VQRDMULHv8i16
VQRDMLSHv8i16
VSLIv8i16
VSRIv8i16
VMULv8i16
VMVNv8i16
VCEQv8i16
VQABSv8i16
VABSv8i16
VCLSv8i16
VMLSv8i16
VTSTv8i16
VMOVv8i16
VCLZv8i16
VBICiv8i16
VSHLiv8i16
VORRiv8i16
VQSHLsiv8i16
VQSHLuiv8i16
VMLAslv8i16
VQRDMLAHslv8i16
VQDMULHslv8i16
VQRDMULHslv8i16
VQRDMLSHslv8i16
VMULslv8i16
VMLSslv8i16
VABAsv8i16
VRSRAsv8i16
VSRAsv8i16
VHSUBsv8i16
VQSUBsv8i16
VABDsv8i16
VRHADDsv8i16
VHADDsv8i16
VQADDsv8i16
VCGEsv8i16
VABALsv8i16
VPADALsv8i16
VMLALsv8i16
VSUBLsv8i16
VABDLsv8i16
VPADDLsv8i16
VADDLsv8i16
VQSHLsv8i16
VQRSHLsv8i16
VRSHLsv8i16
VSHLsv8i16
VSHLLsv8i16
VMULLsv8i16
VMLSLsv8i16
VMOVLsv8i16
VMINsv8i16
VRSHRsv8i16
VSHRsv8i16
VCGTsv8i16
VSUBWsv8i16
VADDWsv8i16
VMAXsv8i16
VABAuv8i16
VRSRAuv8i16
VSRAuv8i16
VHSUBuv8i16
VQSUBuv8i16
VABDuv8i16
VRHADDuv8i16
VHADDuv8i16
VQADDuv8i16
VCGEuv8i16
VABALuv8i16
VPADALuv8i16
VMLALuv8i16
VSUBLuv8i16
VABDLuv8i16
VPADDLuv8i16
VADDLuv8i16
VQSHLuv8i16
VQRSHLuv8i16
VRSHLuv8i16
VSHLuv8i16
VSHLLuv8i16
VMULLuv8i16
VMLSLuv8i16
VMOVLuv8i16
VMINuv8i16
VRSHRuv8i16
VSHRuv8i16
VCGTuv8i16
VSUBWuv8i16
VADDWuv8i16
VMAXuv8i16
VQSHLsuv8i16
VCGEzv8i16
VCLEzv8i16
VCEQzv8i16
VCGTzv8i16
VCLTzv8i16
t2MOVCCi16
VPADDi16
VSHLLi16
VSETLNi16
t2MOVTi16
t2MOVi16
VLD1q16
VST1q16
VREV32q16
VLD2q16
VST2q16
VLD3q16
VST3q16
VREV64q16
VLD4q16
VST4q16
VLD2LNq16
VST2LNq16
VLD3LNq16
VST3LNq16
VLD4LNq16
VST4LNq16
VTRNq16
VZIPq16
VLD1DUPq16
VLD3DUPq16
VLD4DUPq16
VUZPq16
VEXTq16
VPMINs16
VGETLNs16
VPMAXs16
VPMINu16
VGETLNu16
VPMAXu16
t2USADA8
t2SHSUB8
t2UHSUB8
t2QSUB8
t2UQSUB8
t2SSUB8
t2USUB8
t2USAD8
t2SHADD8
t2UHADD8
t2QADD8
t2UQADD8
t2SADD8
t2UADD8
CMP_SWAP_8
VLD3dWB_fixed_Asm_8
VST3dWB_fixed_Asm_8
VLD4dWB_fixed_Asm_8
VST4dWB_fixed_Asm_8
VLD1LNdWB_fixed_Asm_8
VST1LNdWB_fixed_Asm_8
VLD2LNdWB_fixed_Asm_8
VST2LNdWB_fixed_Asm_8
VLD3LNdWB_fixed_Asm_8
VST3LNdWB_fixed_Asm_8
VLD4LNdWB_fixed_Asm_8
VST4LNdWB_fixed_Asm_8
VLD3DUPdWB_fixed_Asm_8
VLD4DUPdWB_fixed_Asm_8
VLD3qWB_fixed_Asm_8
VST3qWB_fixed_Asm_8
VLD4qWB_fixed_Asm_8
VST4qWB_fixed_Asm_8
VLD3DUPqWB_fixed_Asm_8
VLD4DUPqWB_fixed_Asm_8
VLD3dWB_register_Asm_8
VST3dWB_register_Asm_8
VLD4dWB_register_Asm_8
VST4dWB_register_Asm_8
VLD1LNdWB_register_Asm_8
VST1LNdWB_register_Asm_8
VLD2LNdWB_register_Asm_8
VST2LNdWB_register_Asm_8
VLD3LNdWB_register_Asm_8
VST3LNdWB_register_Asm_8
VLD4LNdWB_register_Asm_8
VST4LNdWB_register_Asm_8
VLD3DUPdWB_register_Asm_8
VLD4DUPdWB_register_Asm_8
VLD3qWB_register_Asm_8
VST3qWB_register_Asm_8
VLD4qWB_register_Asm_8
VST4qWB_register_Asm_8
VLD3DUPqWB_register_Asm_8
VLD4DUPqWB_register_Asm_8
VLD3dAsm_8
VST3dAsm_8
VLD4dAsm_8
VST4dAsm_8
VLD1LNdAsm_8
VST1LNdAsm_8
VLD2LNdAsm_8
VST2LNdAsm_8
VLD3LNdAsm_8
VST3LNdAsm_8
VLD4LNdAsm_8
VST4LNdAsm_8
VLD3DUPdAsm_8
VLD4DUPdAsm_8
VLD3qAsm_8
VST3qAsm_8
VLD4qAsm_8
VST4qAsm_8
VLD3DUPqAsm_8
VLD4DUPqAsm_8
VLD2b8
VST2b8
VLD1d8
VST1d8
VREV32d8
VLD2d8
VST2d8
VLD3d8
VST3d8
VREV64d8
VLD4d8
VST4d8
VREV16d8
VLD1LNd8
VST1LNd8
VLD2LNd8
VST2LNd8
VLD3LNd8
VST3LNd8
VLD4LNd8
VST4LNd8
VTRNd8
VZIPd8
VLD1DUPd8
VLD2DUPd8
VLD3DUPd8
VLD4DUPd8
VUZPd8
VEXTd8
VMLAv16i8
VSUBv16i8
VADDv16i8
VQNEGv16i8
VSLIv16i8
VSRIv16i8
VMULv16i8
VCEQv16i8
VQABSv16i8
VABSv16i8
VCLSv16i8
VMLSv16i8
VTSTv16i8
VMOVv16i8
VCLZv16i8
VSHLiv16i8
VQSHLsiv16i8
VQSHLuiv16i8
VABAsv16i8
VRSRAsv16i8
VSRAsv16i8
VHSUBsv16i8
VQSUBsv16i8
VABDsv16i8
VRHADDsv16i8
VHADDsv16i8
VQADDsv16i8
VCGEsv16i8
VPADALsv16i8
VPADDLsv16i8
VQSHLsv16i8
VQRSHLsv16i8
VRSHLsv16i8
VSHLsv16i8
VMINsv16i8
VRSHRsv16i8
VSHRsv16i8
VCGTsv16i8
VMAXsv16i8
VABAuv16i8
VRSRAuv16i8
VSRAuv16i8
VHSUBuv16i8
VQSUBuv16i8
VABDuv16i8
VRHADDuv16i8
VHADDuv16i8
VQADDuv16i8
VCGEuv16i8
VPADALuv16i8
VPADDLuv16i8
VQSHLuv16i8
VQRSHLuv16i8
VRSHLuv16i8
VSHLuv16i8
VMINuv16i8
VRSHRuv16i8
VSHRuv16i8
VCGTuv16i8
VMAXuv16i8
VQSHLsuv16i8
VCGEzv16i8
VCLEzv16i8
VCEQzv16i8
VCGTzv16i8
VCLTzv16i8
VMLAv8i8
VSUBv8i8
VADDv8i8
VQNEGv8i8
VSLIv8i8
VSRIv8i8
VMULv8i8
VRSUBHNv8i8
VSUBHNv8i8
VRADDHNv8i8
VADDHNv8i8
VRSHRNv8i8
VSHRNv8i8
VQSHRUNv8i8
VQRSHRUNv8i8
VMOVNv8i8
VCEQv8i8
VQABSv8i8
VABSv8i8
VCLSv8i8
VMLSv8i8
VTSTv8i8
VMOVv8i8
VCLZv8i8
VSHLiv8i8
VQSHLsiv8i8
VQSHLuiv8i8
VABAsv8i8
VRSRAsv8i8
VSRAsv8i8
VHSUBsv8i8
VQSUBsv8i8
VABDsv8i8
VRHADDsv8i8
VHADDsv8i8
VQADDsv8i8
VCGEsv8i8
VPADALsv8i8
VPADDLsv8i8
VQSHLsv8i8
VQRSHLsv8i8
VRSHLsv8i8
VSHLsv8i8
VMINsv8i8
VQSHRNsv8i8
VQRSHRNsv8i8
VQMOVNsv8i8
VRSHRsv8i8
VSHRsv8i8
VCGTsv8i8
VMAXsv8i8
VABAuv8i8
VRSRAuv8i8
VSRAuv8i8
VHSUBuv8i8
VQSUBuv8i8
VABDuv8i8
VRHADDuv8i8
VHADDuv8i8
VQADDuv8i8
VCGEuv8i8
VPADALuv8i8
VPADDLuv8i8
VQSHLuv8i8
VQRSHLuv8i8
VRSHLuv8i8
VSHLuv8i8
VMINuv8i8
VQSHRNuv8i8
VQRSHRNuv8i8
VQMOVNuv8i8
VRSHRuv8i8
VSHRuv8i8
VCGTuv8i8
VMAXuv8i8
VQSHLsuv8i8
VQMOVNsuv8i8
VCGEzv8i8
VCLEzv8i8
VCEQzv8i8
VCGTzv8i8
VCLTzv8i8
t2LDRBi8
t2STRBi8
t2LDRSBi8
tSUBi8
VPADDi8
tADDi8
t2PLDi8
t2LDRDi8
t2STRDi8
t2LDRHi8
t2STRHi8
t2LDRSHi8
t2PLIi8
VSHLLi8
VSETLNi8
tCMPi8
t2LDRi8
t2STRi8
tSUBSi8
tADDSi8
tMOVi8
t2PLDWi8
VMULLp8
VLD1q8
VST1q8
VREV32q8
VLD2q8
VST2q8
VLD3q8
VST3q8
VREV64q8
VLD4q8
VST4q8
VREV16q8
VTRNq8
VZIPq8
VLD1DUPq8
VLD3DUPq8
VLD4DUPq8
VUZPq8
VEXTq8
VPMINs8
VGETLNs8
VPMAXs8
VPMINu8
VGETLNu8
VPMAXu8
RFEDA
t2LDA
sysLDMDA
sysSTMDA
SRSDA
VLDMDIA
VSTMDIA
t2RFEIA
t2LDMIA
sysLDMIA
tLDMIA
t2STMIA
sysSTMIA
VLDMQIA
VSTMQIA
VLDMSIA
VSTMSIA
t2SRSIA
FLDMXIA
FSTMXIA
t2MLA
t2SMMLA
G_FMA
t2TTA
t2CRC32B
t2LDAB
t2SXTAB
t2UXTAB
t2SMLABB
t2SMLALBB
t2SMULBB
t2TBB
JUMPTABLE_TBB
t2CRC32CB
t2RFEDB
t2LDMDB
sysLDMDB
t2STMDB
sysSTMDB
t2SRSDB
RFEIB
sysLDMIB
sysSTMIB
SRSIB
t2STLB
t2DMB
SWPB
PICLDRB
PICSTRB
t2SB
t2DSB
t2ISB
PICLDRSB
tLDRSB
tRSB
t2TSB
t2SMLATB
t2PKHTB
t2SMLALTB
t2SMULTB
t2SXTB
tSXTB
t2UXTB
tUXTB
t2QDSUB
G_FSUB
t2QSUB
G_SUB
G_ATOMICRMW_SUB
t2SMLAWB
t2SMULWB
t2LDAEXB
t2STLEXB
t2LDREXB
t2STREXB
SHA1C
tSBC
tADC
t2BFC
tBIC
G_INTRINSIC
AESIMC
t2SMC
AESMC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
t2MRC
t2MRRC
MOVr_TC
t2HVC
tSVC
VMSR_FPEXC
VMRS_FPEXC
VNMLAD
t2SMLAD
VMLAD
VFMAD
VFNMAD
G_SEXTLOAD
G_ZEXTLOAD
G_LOAD
VRINTAD
t2SMUAD
VSUBD
tPICADD
t2QDADD
G_FADD
t2QADD
G_ADD
G_ATOMICRMW_ADD
VADDD
VSELGED
VCMPED
VNEGD
VCVTBHD
VTOSHD
VCVTTHD
VTOUHD
VMSR_FPSID
VMRS_FPSID
t2SMLALD
VFMALD
t2SMLSLD
VFMSLD
VTOSLD
VNMULD
VMULD
VTOULD
VMINNMD
VMAXNMD
VRINTMD
G_ATOMICRMW_NAND
G_AND
G_ATOMICRMW_AND
tAND
tSETEND
LIFETIME_END
tBRIND
G_BRCOND
VRINTND
G_INTRINSIC_ROUND
tTAILJMPdND
VSHTOD
VUHTOD
VSITOD
VUITOD
VSLTOD
VULTOD
VCMPD
VRINTPD
VLD3d32_UPD
VST3d32_UPD
VLD4d32_UPD
VST4d32_UPD
VLD1LNd32_UPD
VST1LNd32_UPD
VLD2LNd32_UPD
VST2LNd32_UPD
VLD3LNd32_UPD
VST3LNd32_UPD
VLD4LNd32_UPD
VST4LNd32_UPD
VLD3DUPd32_UPD
VLD4DUPd32_UPD
VLD3q32_UPD
VST3q32_UPD
VLD4q32_UPD
VST4q32_UPD
VLD2LNq32_UPD
VST2LNq32_UPD
VLD3LNq32_UPD
VST3LNq32_UPD
VLD4LNq32_UPD
VST4LNq32_UPD
VLD3DUPq32_UPD
VLD4DUPq32_UPD
VLD3d16_UPD
VST3d16_UPD
VLD4d16_UPD
VST4d16_UPD
VLD1LNd16_UPD
VST1LNd16_UPD
VLD2LNd16_UPD
VST2LNd16_UPD
VLD3LNd16_UPD
VST3LNd16_UPD
VLD4LNd16_UPD
VST4LNd16_UPD
VLD3DUPd16_UPD
VLD4DUPd16_UPD
VLD3q16_UPD
VST3q16_UPD
VLD4q16_UPD
VST4q16_UPD
VLD2LNq16_UPD
VST2LNq16_UPD
VLD3LNq16_UPD
VST3LNq16_UPD
VLD4LNq16_UPD
VST4LNq16_UPD
VLD3DUPq16_UPD
VLD4DUPq16_UPD
VLD3d8_UPD
VST3d8_UPD
VLD4d8_UPD
VST4d8_UPD
VLD1LNd8_UPD
VST1LNd8_UPD
VLD2LNd8_UPD
VST2LNd8_UPD
VLD3LNd8_UPD
VST3LNd8_UPD
VLD4LNd8_UPD
VST4LNd8_UPD
VLD3DUPd8_UPD
VLD4DUPd8_UPD
VLD3q8_UPD
VST3q8_UPD
VLD4q8_UPD
VST4q8_UPD
VLD3DUPq8_UPD
VLD4DUPq8_UPD
RFEDA_UPD
sysLDMDA_UPD
sysSTMDA_UPD
SRSDA_UPD
VLDMDIA_UPD
VSTMDIA_UPD
RFEIA_UPD
t2LDMIA_UPD
sysLDMIA_UPD
tLDMIA_UPD
t2STMIA_UPD
sysSTMIA_UPD
tSTMIA_UPD
VLDMSIA_UPD
VSTMSIA_UPD
t2SRSIA_UPD
FLDMXIA_UPD
FSTMXIA_UPD
VLDMDDB_UPD
VSTMDDB_UPD
RFEDB_UPD
t2LDMDB_UPD
sysLDMDB_UPD
t2STMDB_UPD
sysSTMDB_UPD
VLDMSDB_UPD
VSTMSDB_UPD
t2SRSDB_UPD
FLDMXDB_UPD
FSTMXDB_UPD
RFEIB_UPD
sysLDMIB_UPD
sysSTMIB_UPD
SRSIB_UPD
VLD3d32Pseudo_UPD
VST3d32Pseudo_UPD
VLD4d32Pseudo_UPD
VST4d32Pseudo_UPD
VLD2LNd32Pseudo_UPD
VST2LNd32Pseudo_UPD
VLD3LNd32Pseudo_UPD
VST3LNd32Pseudo_UPD
VLD4LNd32Pseudo_UPD
VST4LNd32Pseudo_UPD
VLD3DUPd32Pseudo_UPD
VLD4DUPd32Pseudo_UPD
VLD3q32Pseudo_UPD
VST3q32Pseudo_UPD
VLD4q32Pseudo_UPD
VST4q32Pseudo_UPD
VLD1LNq32Pseudo_UPD
VST1LNq32Pseudo_UPD
VLD2LNq32Pseudo_UPD
VST2LNq32Pseudo_UPD
VLD3LNq32Pseudo_UPD
VST3LNq32Pseudo_UPD
VLD4LNq32Pseudo_UPD
VST4LNq32Pseudo_UPD
VLD3d16Pseudo_UPD
VST3d16Pseudo_UPD
VLD4d16Pseudo_UPD
VST4d16Pseudo_UPD
VLD2LNd16Pseudo_UPD
VST2LNd16Pseudo_UPD
VLD3LNd16Pseudo_UPD
VST3LNd16Pseudo_UPD
VLD4LNd16Pseudo_UPD
VST4LNd16Pseudo_UPD
VLD3DUPd16Pseudo_UPD
VLD4DUPd16Pseudo_UPD
VLD3q16Pseudo_UPD
VST3q16Pseudo_UPD
VLD4q16Pseudo_UPD
VST4q16Pseudo_UPD
VLD1LNq16Pseudo_UPD
VST1LNq16Pseudo_UPD
VLD2LNq16Pseudo_UPD
VST2LNq16Pseudo_UPD
VLD3LNq16Pseudo_UPD
VST3LNq16Pseudo_UPD
VLD4LNq16Pseudo_UPD
VST4LNq16Pseudo_UPD
VLD3d8Pseudo_UPD
VST3d8Pseudo_UPD
VLD4d8Pseudo_UPD
VST4d8Pseudo_UPD
VLD2LNd8Pseudo_UPD
VST2LNd8Pseudo_UPD
VLD3LNd8Pseudo_UPD
VST3LNd8Pseudo_UPD
VLD4LNd8Pseudo_UPD
VST4LNd8Pseudo_UPD
VLD3DUPd8Pseudo_UPD
VLD4DUPd8Pseudo_UPD
VLD3q8Pseudo_UPD
VST3q8Pseudo_UPD
VLD4q8Pseudo_UPD
VST4q8Pseudo_UPD
VLD1LNq8Pseudo_UPD
VST1LNq8Pseudo_UPD
VLD1q32LowQPseudo_UPD
VST1q32LowQPseudo_UPD
VLD1q64LowQPseudo_UPD
VST1q64LowQPseudo_UPD
VLD1q16LowQPseudo_UPD
VST1q16LowQPseudo_UPD
VLD1q8LowQPseudo_UPD
VST1q8LowQPseudo_UPD
VLD1q32LowTPseudo_UPD
VST1q32LowTPseudo_UPD
VLD1q64LowTPseudo_UPD
VST1q64LowTPseudo_UPD
VLD1q16LowTPseudo_UPD
VST1q16LowTPseudo_UPD
VLD1q8LowTPseudo_UPD
VST1q8LowTPseudo_UPD
VLD3q32oddPseudo_UPD
VST3q32oddPseudo_UPD
VLD4q32oddPseudo_UPD
VST4q32oddPseudo_UPD
VLD3q16oddPseudo_UPD
VST3q16oddPseudo_UPD
VLD4q16oddPseudo_UPD
VST4q16oddPseudo_UPD
VLD3q8oddPseudo_UPD
VST3q8oddPseudo_UPD
VLD4q8oddPseudo_UPD
VST4q8oddPseudo_UPD
VSELEQD
LOAD_STACK_GUARD
VLDRD
VTOSIRD
VTOUIRD
VMOVRRD
VRINTRD
VSTRD
VCVTASD
VABSD
AESD
VNMLSD
t2SMLSD
VMLSD
VFMSD
VFNMSD
VCVTMSD
VCVTNSD
VCVTPSD
VCVTSD
t2SMUSD
VSELVSD
VSELGTD
VSDOTD
VUDOTD
VSQRTD
FCONSTD
VCVTAUD
VCVTMUD
VCVTNUD
VCVTPUD
VDIVD
VMOVD
t2LDAEXD
t2STLEXD
t2LDREXD
t2STREXD
VRINTXD
VCMPEZD
VTOSIZD
VTOUIZD
VCMPZD
VRINTZD
G_SSUBE
G_USUBE
SPACE
REG_SEQUENCE
G_SADDE
G_UADDE
BUNDLE
LOCAL_ESCAPE
G_STORE
t2LDC2_PRE
t2STC2_PRE
t2LDRB_PRE
t2STRB_PRE
t2LDRSB_PRE
t2LDC_PRE
t2STC_PRE
t2LDRD_PRE
t2STRD_PRE
t2LDRH_PRE
t2STRH_PRE
t2LDRSH_PRE
t2LDC2L_PRE
t2STC2L_PRE
t2LDCL_PRE
t2STCL_PRE
t2LDR_PRE
t2STR_PRE
AESE
DBG_VALUE
G_GLOBAL_VALUE
t2UDF
tUDF
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
t2DBG
G_FNEG
EXTRACT_SUBREG
INSERT_SUBREG
LDRB_PRE_REG
STRB_PRE_REG
LDR_PRE_REG
STR_PRE_REG
SUBREG_TO_REG
LDRB_POST_REG
STRB_POST_REG
LDR_POST_REG
STR_POST_REG
LDRBT_POST_REG
STRBT_POST_REG
LDRT_POST_REG
STRT_POST_REG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
G_FLOG
G_VAARG
t2SG
SHA1H
t2CRC32H
SHA256H
t2LDAH
VNMLAH
VMLAH
VFMAH
VFNMAH
VRINTAH
t2SXTAH
t2UXTAH
t2TBH
JUMPTABLE_TBH
VSUBH
t2CRC32CH
VCVTBDH
VADDH
VCVTTDH
VSELGEH
VCMPEH
VNEGH
VTOSHH
VTOUHH
VTOSLH
t2STLH
VNMULH
G_SMULH
G_UMULH
VMULH
VTOULH
VMINNMH
VMAXNMH
VRINTMH
VRINTNH
VSHTOH
VUHTOH
VSITOH
VUITOH
VSLTOH
VULTOH
VCMPH
VRINTPH
VSELEQH
PICLDRH
VLDRH
VTOSIRH
VTOUIRH
VRINTRH
PICSTRH
VSTRH
VMOVRH
VCVTASH
VABSH
VCVTBSH
VNMLSH
VMLSH
VFMSH
VFNMSH
VCVTMSH
VINSH
VCVTNSH
VCVTPSH
PICLDRSH
tLDRSH
VCVTTSH
tPUSH
t2REVSH
tREVSH
VSELVSH
VSELGTH
VSQRTH
FCONSTH
t2SXTH
tSXTH
t2UXTH
tUXTH
VCVTAUH
VCVTMUH
VCVTNUH
VCVTPUH
VDIVH
VMOVH
t2LDAEXH
t2STLEXH
t2LDREXH
t2STREXH
VRINTXH
VCMPEZH
VTOSIZH
VTOUIZH
VCMPZH
VRINTZH
VFMALDI
VFMSLDI
VSDOTDI
VUDOTDI
t2BFI
G_PHI
VFMALQI
VFMSLQI
VSDOTQI
VUDOTQI
G_FPTOSI
G_FPTOUI
t2BXJ
WIN__DBZCHK
G_PTR_MASK
WIN__CHKSTK
t2UMAAL
t2SMLAL
t2UMLAL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
ICALL_BRANCH_FUNNEL
t2SEL
G_SHL
G_FCEIL
BMOVPCB_CALL
PATCHABLE_TAIL_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
tBX_CALL
BMOVPCRX_CALL
FENTRY_CALL
KILL
t2SMULL
t2UMULL
t2STL
t2MUL
G_FMUL
t2SMMUL
G_MUL
tMUL
SHA1M
VLLDM
G_FREM
G_SREM
G_UREM
LDRB_PRE_IMM
STRB_PRE_IMM
LDR_PRE_IMM
STR_PRE_IMM
LDRB_POST_IMM
STRB_POST_IMM
LDR_POST_IMM
STR_POST_IMM
LDRBT_POST_IMM
STRBT_POST_IMM
LDRT_POST_IMM
STRT_POST_IMM
INLINEASM
VLSTM
t2MSR_M
t2MRS_M
t2SETPAN
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
CFI_INSTRUCTION
t2LDC2_OPTION
t2STC2_OPTION
t2LDC_OPTION
t2STC_OPTION
t2LDC2L_OPTION
t2STC2L_OPTION
t2LDCL_OPTION
t2STCL_OPTION
tMVN
tADJCALLSTACKDOWN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
SHA1P
STACKMAP
tTRAP
G_BSWAP
t2CDP
G_GEP
G_SITOFP
G_UITOFP
G_FCMP
G_ICMP
VNOP
G_CTPOP
tPOP
PATCHABLE_OP
FAULTING_OP
tADDrSP
tADJCALLSTACKUP
G_FEXP
VLD1d32Q
VST1d32Q
VLD1d64Q
VST1d64Q
VLD1d16Q
VST1d16Q
VLD1d8Q
VST1d8Q
VFMALQ
VFMSLQ
VSDOTQ
VUDOTQ
t2SMMLAR
t2MSR_AR
t2MRS_AR
t2MRSsys_AR
G_BR
t2MCR
t2ADR
tADR
G_BLOCK_ADDR
PICLDR
PATCHABLE_FUNCTION_ENTER
G_ASHR
G_LSHR
VMOVHR
MOVPCLR
t2SMMULR
t2SUBS_PC_LR
tEOR
tROR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
G_XOR
G_ATOMICRMW_XOR
G_OR
G_ATOMICRMW_OR
t2MCRR
VMOVDRR
tORR
VMOVSRR
t2SMMLSR
VMSR
VMOVSR
G_INTTOPTR
PICSTR
VNMLAS
VMLAS
VFMAS
VFNMAS
VRINTAS
t2ABS
G_FABS
tRSBS
VSUBS
tSBCS
tADCS
VADDS
VCVTDS
VSELGES
VCMPES
G_UNMERGE_VALUES
G_MERGE_VALUES
VNEGS
VCVTBHS
VTOSHS
VCVTTHS
VTOUHS
t2MLS
t2SMMLS
VTOSLS
VNMULS
VMULS
VTOULS
VMINNMS
VMAXNMS
VRINTMS
VRINTNS
tBXNS
VSHTOS
VUHTOS
VSITOS
VUITOS
VSLTOS
VULTOS
tCPS
VCMPS
VRINTPS
VSELEQS
JUMPTABLE_ADDRS
VLDRS
VTOSIRS
VTOUIRS
VMRS
G_CONCAT_VECTORS
VMOVRRS
VRINTRS
VSTRS
VMOVRS
COPY_TO_REGCLASS
VCVTASS
VABSS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
VNMLSS
VMLSS
VFMSS
VFNMSS
VCVTMSS
VCVTNSS
VCVTPSS
VSELVSS
G_INTRINSIC_W_SIDE_EFFECTS
VSELGTS
VSQRTS
JUMPTABLE_INSTS
FCONSTS
VCVTAUS
VCVTMUS
VCVTNUS
VCVTPUS
VDIVS
VMOVS
VRINTXS
VCMPEZS
VTOSIZS
VTOUIZS
VCMPZS
VRINTZS
VLD1d32T
VST1d32T
VLD1d64T
VST1d64T
VLD1d16T
VST1d16T
VLD1d8T
VST1d8T
t2SSAT
t2USAT
FMSTAT
t2TTAT
t2SMLABT
t2PKHBT
t2SMLALBT
t2SMULBT
t2LDRBT
t2STRBT
t2LDRSBT
G_EXTRACT
G_SELECT
G_BRINDIRECT
ERET
t2LDMIA_RET
PATCHABLE_RET
tPOP_RET
tBX_RET
t2LDC2_OFFSET
t2STC2_OFFSET
t2LDC_OFFSET
t2STC_OFFSET
t2LDC2L_OFFSET
t2STC2L_OFFSET
t2LDCL_OFFSET
t2STCL_OFFSET
t2LDRHT
t2STRHT
t2LDRSHT
t2IT
t2RBIT
PATCHABLE_FUNCTION_EXIT
t2TBB_JT
tTBB_JT
t2TBH_JT
tTBH_JT
t2BR_JT
t2LEApcrelJT
tLEApcrelJT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
tHLT
G_FCONSTANT
G_CONSTANT
t2HINT
tHINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
tBKPT
G_VASTART
LIFETIME_START
t2LDRT
G_INSERT
t2STRT
G_BITCAST
G_ADDRSPACE_CAST
VMSR_FPINST
VMRS_FPINST
t2LDC2_POST
t2STC2_POST
t2LDRB_POST
t2STRB_POST
t2LDRSB_POST
t2LDC_POST
t2STC_POST
t2LDRD_POST
t2STRD_POST
t2LDRH_POST
t2STRH_POST
t2LDRSH_POST
t2LDC2L_POST
t2STC2L_POST
t2LDCL_POST
t2STCL_POST
t2LDR_POST
t2STR_POST
LDRBT_POST
STRBT_POST
LDRT_POST
STRT_POST
tTST
t2TT
t2SMLATT
t2SMLALTT
t2SMULTT
t2TTT
VJCVT
t2SMLAWT
t2SMULWT
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
t2REV
tREV
G_FDIV
t2SDIV
G_SDIV
t2UDIV
G_UDIV
t2CRC32W
t2RFEIAW
t2RFEDBW
t2CRC32CW
G_FPOW
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
t2SHSAX
t2UHSAX
t2QSAX
t2UQSAX
t2SSAX
t2USAX
t2SMLADX
t2SMUADX
t2SMLALDX
t2SMLSLDX
t2SMLSDX
t2SMUSDX
t2LDAEX
G_FRAME_INDEX
t2STLEX
t2LDREX
t2CLREX
t2STREX
t2SBFX
t2UBFX
MOVPCRX
t2RRX
t2SHASX
t2UHASX
t2QASX
t2UQASX
t2SASX
t2UASX
MEMCPY
COPY
CONSTPOOL_ENTRY
tCBZ
t2CLZ
G_CTLZ
tCBNZ
G_CTTZ
t2Bcc
tBcc
VMOVDcc
VMOVScc
t2LDRpci_pic
tLDRpci_pic
VDUPLN32d
VDUP32d
VNEGs32d
VDUPLN16d
VDUP16d
VNEGs16d
VDUPLN8d
VDUP8d
VNEGs8d
VBICd
VANDd
VRECPEd
VRSQRTEd
VBIFd
VBSLd
VORNd
VMVNd
tTAILJMPd
VSWPd
VEORd
VORRd
VBITd
VCNTd
BR_JTadd
t2MSRbanked
t2MRSbanked
BL_pred
BX_pred
BLX_pred
VCMLAv2f32_indexed
VCMLAv4f32_indexed
VCMLAv4f16_indexed
VCMLAv8f16_indexed
VLD2q32PseudoWB_fixed
VST2q32PseudoWB_fixed
VLD2q16PseudoWB_fixed
VST2q16PseudoWB_fixed
VLD2q8PseudoWB_fixed
VST2q8PseudoWB_fixed
VLD1d64QPseudoWB_fixed
VST1d64QPseudoWB_fixed
VLD1d64TPseudoWB_fixed
VST1d64TPseudoWB_fixed
VLD2b32wb_fixed
VST2b32wb_fixed
VLD1d32wb_fixed
VST1d32wb_fixed
VLD2d32wb_fixed
VST2d32wb_fixed
VLD1DUPd32wb_fixed
VLD2DUPd32wb_fixed
VLD1q32wb_fixed
VST1q32wb_fixed
VLD2q32wb_fixed
VST2q32wb_fixed
VLD1DUPq32wb_fixed
VLD2DUPd32x2wb_fixed
VLD2DUPd16x2wb_fixed
VLD2DUPd8x2wb_fixed
VLD1d64wb_fixed
VST1d64wb_fixed
VLD1q64wb_fixed
VST1q64wb_fixed
VLD2b16wb_fixed
VST2b16wb_fixed
VLD1d16wb_fixed
VST1d16wb_fixed
VLD2d16wb_fixed
VST2d16wb_fixed
VLD1DUPd16wb_fixed
VLD2DUPd16wb_fixed
VLD1q16wb_fixed
VST1q16wb_fixed
VLD2q16wb_fixed
VST2q16wb_fixed
VLD1DUPq16wb_fixed
VLD2b8wb_fixed
VST2b8wb_fixed
VLD1d8wb_fixed
VST1d8wb_fixed
VLD2d8wb_fixed
VST2d8wb_fixed
VLD1DUPd8wb_fixed
VLD2DUPd8wb_fixed
VLD1q8wb_fixed
VST1q8wb_fixed
VLD2q8wb_fixed
VST2q8wb_fixed
VLD1DUPq8wb_fixed
VLD1d32Qwb_fixed
VST1d32Qwb_fixed
VLD1d64Qwb_fixed
VST1d64Qwb_fixed
VLD1d16Qwb_fixed
VST1d16Qwb_fixed
VLD1d8Qwb_fixed
VST1d8Qwb_fixed
VLD1d32Twb_fixed
VST1d32Twb_fixed
VLD1d64Twb_fixed
VST1d64Twb_fixed
VLD1d16Twb_fixed
VST1d16Twb_fixed
VLD1d8Twb_fixed
VST1d8Twb_fixed
VCVTs2fd
VCVTxs2fd
VCVTu2fd
VCVTxu2fd
VMLAfd
VFMAfd
VSUBfd
VABDfd
VADDfd
VACGEfd
VCGEfd
VRECPEfd
VRSQRTEfd
VNEGfd
VMULfd
VMINfd
VCEQfd
VABSfd
VMLSfd
VFMSfd
VRECPSfd
VRSQRTSfd
VACGTfd
VCGTfd
VMAXfd
VMLAslfd
VMULslfd
VMLSslfd
VCVTs2hd
VCVTxs2hd
VCVTu2hd
VCVTxu2hd
VMLAhd
VFMAhd
VSUBhd
VABDhd
VADDhd
VACGEhd
VCGEhd
VRECPEhd
VRSQRTEhd
VNEGhd
VMULhd
VMINhd
VCEQhd
VABShd
VMLShd
VFMShd
VRECPShd
VRSQRTShd
VACGThd
VCGThd
VMAXhd
VMLAslhd
VMULslhd
VMLSslhd
VMULpd
VCVTf2sd
VCVTh2sd
VCVTf2xsd
VCVTh2xsd
VCVTf2ud
VCVTh2ud
VCVTf2xud
VCVTh2xud
tADDframe
VCVTh2f
VPADDf
VRINTANDf
VMINNMNDf
VMAXNMNDf
VRINTMNDf
VRINTNNDf
VRINTPNDf
VRINTXNDf
VRINTZNDf
VCVTANSDf
VCVTMNSDf
VCVTNNSDf
VCVTPNSDf
VCVTANUDf
VCVTMNUDf
VCVTNNUDf
VCVTPNUDf
VPMINf
VRINTANQf
VMINNMNQf
VMAXNMNQf
VRINTMNQf
VRINTNNQf
VRINTPNQf
VRINTXNQf
VRINTZNQf
VCVTANSQf
VCVTMNSQf
VCVTNNSQf
VCVTPNSQf
VCVTANUQf
VCVTMNUQf
VCVTNNUQf
VCVTPNUQf
VPMAXf
t2MOVsra_flag
t2MOVsrl_flag
tBX_RET_vararg
VCVTf2h
VPADDh
VRINTANDh
VMINNMNDh
VMAXNMNDh
VRINTMNDh
VRINTNNDh
VRINTPNDh
VRINTXNDh
VRINTZNDh
VCVTANSDh
VCVTMNSDh
VCVTNNSDh
VCVTPNSDh
VCVTANUDh
VCVTMNUDh
VCVTNNUDh
VCVTPNUDh
VPMINh
VRINTANQh
VMINNMNQh
VMAXNMNQh
VRINTMNQh
VRINTNNQh
VRINTPNQh
VRINTXNQh
VRINTZNQh
VCVTANSQh
VCVTMNSQh
VCVTNNSQh
VCVTPNSQh
VCVTANUQh
VCVTMNUQh
VCVTNNUQh
VCVTPNUQh
VPMAXh
Int_eh_sjlj_setup_dispatch
tLDRBi
tSTRBi
t2MVNCCi
t2MOVCCi
tLDRHi
tSTRHi
LSLi
t2MVNi
tADDrSPi
tLDRi
RORi
ASRi
LSRi
MSRi
tSTRi
LDRSBTi
LDRHTi
STRHTi
LDRSHTi
t2MOVi
tBLXi
RRXi
t2LDRBpci
t2LDRSBpci
t2PLDpci
t2LDRHpci
t2LDRSHpci
t2PLIpci
t2LDRpci
tLDRpci
TCRETURNdi
tSUBspi
tADDspi
tLDRspi
tSTRspi
t2RSBri
t2SUBri
t2SBCri
t2ADCri
t2BICri
RSCri
t2ADDri
t2ANDri
t2LSLri
tLSLri
t2CMNri
t2ORNri
TCRETURNri
t2CMPri
t2TEQri
t2EORri
t2RORri
t2ORRri
t2ASRri
tASRri
t2LSRri
tLSRri
t2RSBSri
t2SUBSri
t2ADDSri
t2TSTri
MOVCCsi
MVNsi
t2MOVSsi
t2MOVsi
RSBrsi
SUBrsi
SBCrsi
ADCrsi
BICrsi
RSCrsi
ADDrsi
ANDrsi
CMPrsi
TEQrsi
EORrsi
ORRrsi
RSBSrsi
SUBSrsi
ADDSrsi
TSTrsi
CMNzrsi
TRAPNaCl
t2LEApcrel
tLEApcrel
t2LDRBpcrel
t2LDRSBpcrel
t2LDRHpcrel
t2LDRSHpcrel
t2LDRpcrel
t2MOVTi16_ga_pcrel
t2MOVi16_ga_pcrel
tLDRLIT_ga_pcrel
t2MOV_ga_pcrel
t2LDRConstPool
tLDRConstPool
t2MOVCClsl
t2MOVCCi32imm
t2MOVi32imm
ITasm
VLD3d32Pseudo
VST3d32Pseudo
VLD4d32Pseudo
VST4d32Pseudo
VLD2LNd32Pseudo
VST2LNd32Pseudo
VLD3LNd32Pseudo
VST3LNd32Pseudo
VLD4LNd32Pseudo
VST4LNd32Pseudo
VLD3DUPd32Pseudo
VLD4DUPd32Pseudo
VLD2q32Pseudo
VST2q32Pseudo
VLD1LNq32Pseudo
VST1LNq32Pseudo
VLD2LNq32Pseudo
VST2LNq32Pseudo
VLD3LNq32Pseudo
VST3LNq32Pseudo
VLD4LNq32Pseudo
VST4LNq32Pseudo
VTBL3Pseudo
VTBX3Pseudo
VTBL4Pseudo
VTBX4Pseudo
VLD3d16Pseudo
VST3d16Pseudo
VLD4d16Pseudo
VST4d16Pseudo
VLD2LNd16Pseudo
VST2LNd16Pseudo
VLD3LNd16Pseudo
VST3LNd16Pseudo
VLD4LNd16Pseudo
VST4LNd16Pseudo
VLD3DUPd16Pseudo
VLD4DUPd16Pseudo
VLD2q16Pseudo
VST2q16Pseudo
VLD1LNq16Pseudo
VST1LNq16Pseudo
VLD2LNq16Pseudo
VST2LNq16Pseudo
VLD3LNq16Pseudo
VST3LNq16Pseudo
VLD4LNq16Pseudo
VST4LNq16Pseudo
VLD3d8Pseudo
VST3d8Pseudo
VLD4d8Pseudo
VST4d8Pseudo
VLD2LNd8Pseudo
VST2LNd8Pseudo
VLD3LNd8Pseudo
VST3LNd8Pseudo
VLD4LNd8Pseudo
VST4LNd8Pseudo
VLD3DUPd8Pseudo
VLD4DUPd8Pseudo
VLD2q8Pseudo
VST2q8Pseudo
VLD1LNq8Pseudo
VST1LNq8Pseudo
VLD1d32QPseudo
VST1d32QPseudo
VLD1d64QPseudo
VST1d64QPseudo
VLD1d16QPseudo
VST1d16QPseudo
VLD1d8QPseudo
VST1d8QPseudo
VLD1q32HighQPseudo
VST1q32HighQPseudo
VLD1q64HighQPseudo
VST1q64HighQPseudo
VLD1q16HighQPseudo
VST1q16HighQPseudo
VLD1q8HighQPseudo
VST1q8HighQPseudo
VLD1d32TPseudo
VST1d32TPseudo
VLD1d64TPseudo
VST1d64TPseudo
VLD1d16TPseudo
VST1d16TPseudo
VLD1d8TPseudo
VST1d8TPseudo
VLD1q32HighTPseudo
VST1q32HighTPseudo
VLD1q64HighTPseudo
VST1q64HighTPseudo
VLD1q16HighTPseudo
VST1q16HighTPseudo
VLD1q8HighTPseudo
VST1q8HighTPseudo
VLD2DUPq32OddPseudo
VLD3DUPq32OddPseudo
VLD4DUPq32OddPseudo
VLD2DUPq16OddPseudo
VLD3DUPq16OddPseudo
VLD4DUPq16OddPseudo
VLD2DUPq8OddPseudo
VLD3DUPq8OddPseudo
VLD4DUPq8OddPseudo
VLD3q32oddPseudo
VST3q32oddPseudo
VLD4q32oddPseudo
VST4q32oddPseudo
VLD3q16oddPseudo
VST3q16oddPseudo
VLD4q16oddPseudo
VST4q16oddPseudo
VLD3q8oddPseudo
VST3q8oddPseudo
VLD4q8oddPseudo
VST4q8oddPseudo
VLD2DUPq32EvenPseudo
VLD3DUPq32EvenPseudo
VLD4DUPq32EvenPseudo
VLD2DUPq16EvenPseudo
VLD3DUPq16EvenPseudo
VLD4DUPq16EvenPseudo
VLD2DUPq8EvenPseudo
VLD3DUPq8EvenPseudo
VLD4DUPq8EvenPseudo
tMOVCCr_pseudo
t2CPS1p
t2CPS2p
t2CPS3p
LDRcp
t2Int_eh_sjlj_setjmp_nofp
tInt_WIN_eh_sjlj_longjmp
tInt_eh_sjlj_longjmp
t2Int_eh_sjlj_setjmp
tInt_eh_sjlj_setjmp
Int_eh_sjlj_dispatchsetup
VDUPLN32q
VDUP32q
VNEGf32q
VNEGs32q
VDUPLN16q
VDUP16q
VNEGs16q
VDUPLN8q
VDUP8q
VNEGs8q
VBICq
VANDq
VRECPEq
VRSQRTEq
VBIFq
VBSLq
VORNq
VMVNq
VSWPq
VEORq
VORRq
VBITq
VCNTq
VCVTs2fq
VCVTxs2fq
VCVTu2fq
VCVTxu2fq
VMLAfq
VFMAfq
VSUBfq
VABDfq
VADDfq
VACGEfq
VCGEfq
VRECPEfq
VRSQRTEfq
VMULfq
VMINfq
VCEQfq
VABSfq
VMLSfq
VFMSfq
VRECPSfq
VRSQRTSfq
VACGTfq
VCGTfq
VMAXfq
VMLAslfq
VMULslfq
VMLSslfq
VCVTs2hq
VCVTxs2hq
VCVTu2hq
VCVTxu2hq
VMLAhq
VFMAhq
VSUBhq
VABDhq
VADDhq
VACGEhq
VCGEhq
VRECPEhq
VRSQRTEhq
VNEGhq
VMULhq
VMINhq
VCEQhq
VABShq
VMLShq
VFMShq
VRECPShq
VRSQRTShq
VACGThq
VCGThq
VMAXhq
VMLAslhq
VMULslhq
VMLSslhq
VMULpq
VCVTf2sq
VCVTh2sq
VCVTf2xsq
VCVTh2xsq
VCVTf2uq
VCVTh2uq
VCVTf2xuq
VCVTh2xuq
tLDRBr
tSTRBr
t2MOVCCr
tLDRHr
tSTRHr
LSLr
t2MVNr
tCMPr
tTAILJMPr
tLDRr
RORr
ASRr
LSRr
tSTRr
tBLXNSr
tMOVSr
LDRSBTr
LDRHTr
STRHTr
LDRSHTr
tBR_JTr
t2MOVr
tMOVr
tBLXr
tBfar
LDRLIT_ga_pcrel_ldr
MOV_ga_pcrel_ldr
CompilerBarrier
VLD2q32PseudoWB_register
VST2q32PseudoWB_register
VLD2q16PseudoWB_register
VST2q16PseudoWB_register
VLD2q8PseudoWB_register
VST2q8PseudoWB_register
VLD1d64QPseudoWB_register
VST1d64QPseudoWB_register
VLD1d64TPseudoWB_register
VST1d64TPseudoWB_register
VLD2b32wb_register
VST2b32wb_register
VLD1d32wb_register
VST1d32wb_register
VLD2d32wb_register
VST2d32wb_register
VLD1DUPd32wb_register
VLD2DUPd32wb_register
VLD1q32wb_register
VST1q32wb_register
VLD2q32wb_register
VST2q32wb_register
VLD1DUPq32wb_register
VLD2DUPd32x2wb_register
VLD2DUPd16x2wb_register
VLD2DUPd8x2wb_register
VLD1d64wb_register
VST1d64wb_register
VLD1q64wb_register
VST1q64wb_register
VLD2b16wb_register
VST2b16wb_register
VLD1d16wb_register
VST1d16wb_register
VLD2d16wb_register
VST2d16wb_register
VLD1DUPd16wb_register
VLD2DUPd16wb_register
VLD1q16wb_register
VST1q16wb_register
VLD2q16wb_register
VST2q16wb_register
VLD1DUPq16wb_register
VLD2b8wb_register
VST2b8wb_register
VLD1d8wb_register
VST1d8wb_register
VLD2d8wb_register
VST2d8wb_register
VLD1DUPd8wb_register
VLD2DUPd8wb_register
VLD1q8wb_register
VST1q8wb_register
VLD2q8wb_register
VST2q8wb_register
VLD1DUPq8wb_register
VLD1d32Qwb_register
VST1d32Qwb_register
VLD1d64Qwb_register
VST1d64Qwb_register
VLD1d16Qwb_register
VST1d16Qwb_register
VLD1d8Qwb_register
VST1d8Qwb_register
VLD1d32Twb_register
VST1d32Twb_register
VLD1d64Twb_register
VST1d64Twb_register
VLD1d16Twb_register
VST1d16Twb_register
VLD1d8Twb_register
VST1d8Twb_register
tCMPhir
t2MOVCCror
tADDspr
t2RSBrr
t2SUBrr
tSUBrr
t2SBCrr
t2ADCrr
t2BICrr
RSCrr
t2ADDrr
tADDrr
t2ANDrr
t2LSLrr
tLSLrr
t2ORNrr
t2CMPrr
t2TEQrr
t2EORrr
t2RORrr
t2ORRrr
t2ASRrr
tASRrr
t2LSRrr
tLSRrr
t2SUBSrr
tSUBSrr
t2ADDSrr
tADDSrr
t2TSTrr
tADDhirr
t2CMNzrr
MOVCCsr
MVNsr
t2MOVSsr
t2MOVsr
t2MOVCCasr
t2MOVCClsr
RSBrsr
SUBrsr
SBCrsr
ADCrsr
BICrsr
RSCrsr
ADDrsr
ANDrsr
CMPrsr
TEQrsr
EORrsr
ORRrsr
RSBSrsr
SUBSrsr
ADDSrsr
TSTrsr
CMNzrsr
t2LDRBs
t2STRBs
t2LDRSBs
t2PLDs
t2LDRHs
t2STRHs
t2LDRSHs
t2PLIs
t2MVNs
t2LDRs
t2STRs
t2PLDWs
tLDRLIT_ga_abs
LDRBrs
STRBrs
t2RSBrs
t2SUBrs
t2SBCrs
t2ADCrs
t2BICrs
t2ADDrs
PLDrs
t2ANDrs
PLIrs
t2ORNrs
t2CMPrs
t2TEQrs
LDRrs
t2EORrs
t2ORRrs
STRrs
t2RSBSrs
t2SUBSrs
t2ADDSrs
t2TSTrs
PLDWrs
BR_JTm_rs
t2CMNzrs
MRSsys
tTPsoft
t2STRB_preidx
t2STRH_preidx
t2STR_preidx
STRBi_preidx
STRi_preidx
STRBr_preidx
STRr_preidx
tLDR_postidx
tCMNz
 ,
,/
/3
36
6:
:?
?D
DK
KQ
QW
W_
_c
cg
gj
jp
ps
s{
@ marker for mov
r7, r7
@ ma
rget-enforcementbranch-target-en
n-return-addresssign-return-addrturn-address-key
%# +
%+ +
%+ +
%* 1
%1 1
%# #
%# #
%$ $
%$ $
%* *
%* *
%0 0
%# +
%+ +
%+ +
%* 1
%1 1
%# #
%# #
%$ $
%$ $
%* *
%* *
%0 0
$V #G
$W $G
$Y *G
$Z +G
$^ 1G
$V #G
$W $G
$Y *G
$Z +G
$^ 1G
%# #
%$ $
%* *
%+ +
%# #
%$ $
%* *
%+ +
$V #
$W $
$Y *
$Z +
$^ 1
$] 0G
$V #
$W $
$Y *
$Z +
$^ 1
$] 0G
$V #
$W $
$Y *
$Z +
$^ 1
$] 0G0
$V #
$W $
$Y *
$Z +
$^ 1
$] 0G>
$V #
$W $
$Y *
$Z +
$^ 1
$] 0GL
$V #
$W $
$Y *
$Z +
$^ 1
$] 0GZ
$V #
$W $
$Y *
$Z +
$^ 1
$] 0Gl
$V #
$W $
$Y *
$Z +
$^ 1
$] 0Gz
&$#C
&$$C
&$+C
&$*C
&$#C
&$$C
&$+C
&$*C
%V V
%W W
%Y Y
%Z Z
%^ ^
]$]GP
]$]G
]$]G
$YG_
$ZCb
$^G`
$YG+
$^G,
$YGE
$^GF
"I#-
%# +
%* 1
"I#-
%# +
%* 1
"I#-
%# +
%* 1
&V Y
&W Z
&V Y
&W Z
&V Y
&W Z
&V Y
&W Z
$^ Y
%]G-
p3
<GK
"M#-
"M#-
 $GV
 +GQ
 1GO
'<G1
(<G2
)<G3
0<G4
"3#-
"3#-
"4#-
"4#-
 $GL
 +GG
 1GE
 $GL
 +GG
 1GE
#V #
#W $
#Y *
#Z +
#^ 1
#V #
#W $
#Y *
#Z +
#^ 1
+##7
1#*7
+##7
1#*7
1- $
 #G>
1- $
 *G<
##"%
#*"%
#V"%
#Y"%
#+"%
#$"%
#Z"%
#W"%
+##7
1#*7
"Y:
"Y:
## V
#$ W
#* Y
#+ Z
#1 ^
## V
#$ W
#* Y
#+ Z
#1 ^
#^ YG`
#Z VGa
 ^G&
 ZG'
^#YG$
Z#VG%
" $-
 1- $
" $-
 1- $
"41C
"4^C
 $=:
 +=:
 1=:
 #=7
 *=7
"Z=:
&Y=7
 ^=:
"W=:
&V=7
"!Z:
"*:
"*:
"#*"
'#+"
'#$"
'#1"
'#Z"
'#^"
*G'
h-indirect-gotosptrauth-indirectjump-table-harde-stack-protectorptrauth-stack-pr
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
#@ (7
 !"#$%&
+,-.
012345
<=>?@AB
#$$,(
')*+,-.
'()*
+,,(
'()*
011=7
5<>?
689<=>?
6789
<=>?@A
6789:;^
<==7
A689
6789
6789:;
#%&')*+-.01236789<=>?
GIOPQSUVTX`ac^_b
023689<>?
SV^_b
"""""
"""""""""
"""""
####
$$$$$$
%%%%
&&&&
''''''
((((((
))))
******
++++++
,,,,,,
------
....
....
////
//////
//////
0000
0000
1111
1111
2222
2222
3333
333333
333333
4444
444444
444444
5555
555555
555555
6666
6666
7777
7777
8888
888888
888888
9999
999999
999999
::::
::::
;;;;
;;;;;;
;;;;;;
<<<<
<<<<<<
<<<<<<
====
======
======
>>>>
>>>>>>
>>>>>>
????
??????
??????
@@@@
@@@@@@
@@@@@@
AAAA
AAAAAA
AAAAAA
BBBBB
BBBBBBBBBBBB
BBBBBBBBBBB
CCCCCC
CCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCDD
DDDDD
DDDDDDDDDDDD
DDDDDDDDDDD
EEEEE
EEEEEEEEEEEE
EEEEEEEEEEE
FFFFF
FFFFFFFFFFFF
FFFFFFFFFFF
GGGGG
GGGGGGGGGGGG
GGGGGGGGGGG
HHHHHH
HHHHHHHHHHHHHHHHHH
HHHHHHHHHHHHHHHHHII
IIIIII
IIIIIIIIIIIIIIIIII
IIIIIIIIIIIIIIIIIJJ
JJJJJJ
JJJJJJJJJJJJJJJJJJ
JJJJJJJJJJJJJJJJJKK
KKKKKK
KKKKKKKKKKKKKKKKKK
KKKKKKKKKKKKKKKKKLL
LLLLL
LLLLLLLLLLLL
LLLLLLLLLLL
MMMMM
MMMMMMMMMMMM
MMMMMMMMMMM
NNNNN
NNNNNNNNNNNN
NNNNNNNNNNN
OOOOOO
OOOOOOOOOOOOOOOOOO
OOOOOOOOOOOOOOOOOPP
PPPPPP
PPPPPPPPPPPPPPPPPP
PPPPPPPPPPPPPPPPPQQ
QQQQQQ
QQQQQQQQQQQQQQQQQQ
QQQQQQQQQQQQQQQQQRR
RRRRR
RRRRRRRRRRRR
RRRRRRRRRRR
SSSSS
SSSSSSSSSSSS
SSSSSSSSSSS
TTTTTT
TTTTTTTTTTTTTTTTTT
TTTTTTTTTTTTTTTTTUU
UUUUUU
UUUUUUUUUUUUUUUUUU
UUUUUUUUUUUUUUUUUVV
VVVVV
VVVVVVVVVVVV
VVVVVVVVVVV
WWWWWW
WWWWWWWWWWWWWWWWWW
WWWWWWWWWWWWWWWWWXX
XXXXXX
XXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXYY
YYYYYY
YYYYYYYYYYYYYYYYYY
YYYYYYYYYYYYYYYYYZZ
ZZZZZZ
ZZZZZZZZZZZZZZZZZZ
ZZZZZZZZZZZZZZZZZ[[
[[[[[[
[[[[[[[[[[[[[[[[[[
[[[[[[[[[[[[[[[[[\\
\\\\\\
\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\]]
]]]]]]
]]]]]]]]]]]]]]]]]]
]]]]]]]]]]]]]]]]]^^
^^^^^^
^^^^^^^^^^^^^^^^^^
^^^^^^^^^^^^^^^^^__
______
__________________
_________________``
``````
``````````````````
`````````````````aa
aaaaaa
aaaaaaaaaaaaaaaaaa
aaaaaaaaaaaaaaaaa
  !!))++++,3333@
;:98
#*0V
$+1Z^W
$+1Z^W
AFKPabcdefij
.cfi_b_key_frame.cfi_negate_ra_s|
sha1su0
sha512su0
sha256su0
trn1
zip1
uzp1
dcps1
sm3ss1
sha1su1
sha512su1
sha256su1
sm3partw1
rax1
rev32
sha512h2
sha256h2
sabal2
uabal2
sqdmlal2
fmlal2
smlal2
umlal2
ssubl2
usubl2
sabdl2
uabdl2
saddl2
uaddl2
sshll2
ushll2
sqdmull2
pmull2
smull2
umull2
sqdmlsl2
fmlsl2
smlsl2
umlsl2
fcvtl2
rsubhn2
raddhn2
sqshrn2
uqshrn2
sqrshrn2
uqrshrn2
trn2
fcvtn2
sqxtn2
uqxtn2
sqshrun2
sqrshrun2
sqxtun2
fcvtxn2
zip2
uzp2
dcps2
ssubw2
usubw2
saddw2
uaddw2
sm3partw2
eor3
dcps3
rev64
setf16
rev16
setf8
sm3tt1a
sm3tt2a
braa
ldraa
blraa
saba
uaba
pacda
ldadda
fadda
autda
pacga
pacia
autia
brka
fcmla
fmla
fnmla
ldsmina
ldumina
brkpa
caspa
swpa
fexpa
ldclra
ldeora
srsra
ursra
ssra
usra
casa
ldseta
frinta
clasta
ldsmaxa
ldumaxa
pacdza
autdza
paciza
autiza
ld1b
ldff1b
ldnf1b
ldnt1b
stnt1b
st1b
sm3tt1b
crc32b
ld2b
st2b
sm3tt2b
ld3b
st3b
ld4b
st4b
ldaddab
ldsminab
lduminab
swpab
brab
ldrab
blrab
ldclrab
ldeorab
casab
ldsetab
ldsmaxab
ldumaxab
crc32cb
sqdecb
uqdecb
sqincb
uqincb
pacdb
ldaddb
autdb
prfb
pacib
autib
brkb
ldaddalb
ldsminalb
lduminalb
swpalb
ldclralb
ldeoralb
casalb
ldsetalb
ldsmaxalb
ldumaxalb
ldaddlb
ldsminlb
lduminlb
swplb
ldclrlb
ldeorlb
caslb
ldsetlb
ldsmaxlb
ldumaxlb
ldsminb
lduminb
brkpb
swpb
ld1rqb
ld1rb
ldarb
ldlarb
ldrb
ldclrb
stllrb
stlrb
ldeorb
ldaprb
ldtrb
strb
sttrb
ldurb
stlurb
ldapurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ld1sb
ldff1sb
ldnf1sb
casb
fmsb
fnmsb
ld1rsb
ldrsb
ldtrsb
ldursb
ldapursb
ldsetb
cntb
clastb
sxtb
uxtb
fsub
shsub
uhsub
fmsub
fnmsub
sqsub
uqsub
revb
ldsmaxb
ldumaxb
pacdzb
autdzb
pacizb
autizb
sha1c
aesimc
aesmc
csinc
ld1d
ldff1d
ldnf1d
ldnt1d
stnt1d
st1d
ld2d
st2d
ld3d
st3d
ld4d
st4d
fmad
fnmad
ftmad
fabd
sabd
uabd
xpacd
sqdecd
uqdecd
sqincd
uqincd
fcadd
ldadd
fadd
srhadd
urhadd
shadd
uhadd
fmadd
fnmadd
usqadd
suqadd
prfd
nand
ld1rqd
ld1rd
asrd
aesd
cntd
sm4e
splice
facge
fcmge
cmpge
fscale
whilele
fcmle
cmple
fcmne
ctermne
cmpne
frecpe
urecpe
fccmpe
fcmpe
aese
pfalse
frsqrte
ursqrte
ptrue
rmif
scvtf
ucvtf
subg
addg
fneg
sqneg
csneg
sha1h
ld1h
ldff1h
ldnf1h
ldnt1h
stnt1h
st1h
sha512h
crc32h
ld2h
st2h
ld3h
st3h
ld4h
st4h
sha256h
ldaddah
sqrdmlah
ldsminah
lduminah
swpah
ldclrah
ldeorah
casah
ldsetah
ldsmaxah
ldumaxah
crc32ch
sqdech
uqdech
sqinch
uqinch
ldaddh
prfh
ldaddalh
ldsminalh
lduminalh
swpalh
ldclralh
ldeoralh
casalh
ldsetalh
ldsmaxalh
ldumaxalh
ldaddlh
ldsminlh
lduminlh
swplh
ldclrlh
ldeorlh
caslh
ldsetlh
sqdmulh
sqrdmulh
smulh
umulh
ldsmaxlh
ldumaxlh
ldsminh
lduminh
swph
ld1rqh
ld1rh
ldarh
ldlarh
ldrh
ldclrh
stllrh
stlrh
ldeorh
ldaprh
ldtrh
strh
sttrh
ldurh
stlurh
ldapurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ld1sh
ldff1sh
ldnf1sh
cash
sqrdmlsh
ld1rsh
ldrsh
ldtrsh
ldursh
ldapursh
ldseth
cnth
sxth
uxth
revh
ldsmaxh
ldumaxh
xpaci
punpkhi
sunpkhi
uunpkhi
cmhi
cmphi
mvni
frinti
movi
movk
sabal
uabal
ldaddal
sqdmlal
fmlal
smlal
umlal
ldsminal
lduminal
caspal
swpal
ldclral
ldeoral
casal
ldsetal
ldsmaxal
ldumaxal
smsubl
umsubl
ssubl
usubl
sabdl
uabdl
ldaddl
smaddl
umaddl
saddl
uaddl
fcsel
ftssel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sshll
ushll
sqdmull
pmull
smull
umull
ldsminl
lduminl
addpl
caspl
swpl
ldclrl
ldeorl
casl
sqdmlsl
fmlsl
smlsl
umlsl
sysl
ldsetl
fcvtl
fmul
fnmul
pmul
ftsmul
addvl
rdvl
ldsmaxl
ldumaxl
sha1m
sbfm
ubfm
prfm
fminnm
fmaxnm
dupm
frintm
prfum
rsubhn
raddhn
fmin
ldsmin
ldumin
brkn
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
whilelo
punpklo
sunpklo
uunpklo
cmplo
fcmuo
sha1p
subp
sqdecp
uqdecp
sqincp
uqincp
faddp
stgp
sadalp
uadalp
saddlp
uaddlp
fccmp
fcmp
fminnmp
fmaxnmp
ldnp
fminp
sminp
uminp
stnp
adrp
casp
cntp
frintp
fdup
ldaxp
fmaxp
smaxp
umaxp
ldxp
stlxp
stxp
fcmeq
ctermeq
cmpeq
ld1r
ld2r
ld3r
ld4r
ldar
ldlar
fsubr
rdffr
wrffr
srshr
urshr
sshr
ushr
ldclr
stllr
lslr
stlr
ldeor
ldapr
asrr
lsrr
insr
ldtr
sttr
extr
ldur
stlur
ldapur
stur
fdivr
sdivr
udivr
ldaxr
ldxr
stlxr
stxr
brkas
brkpas
fcvtas
fabs
sqabs
brkbs
brkpbs
subs
sbcs
adcs
bics
adds
nands
ptrues
cmhs
cmphs
whilels
fmls
fnmls
cmpls
fcvtms
brkns
orns
fcvtns
subps
frecps
fcvtps
rdffrs
eors
nors
orrs
frsqrts
fcvtzs
fjcvtzs
compact
ldset
facgt
fcmgt
cmpgt
rbit
whilelt
fcmlt
cmplt
hint
sdot
udot
cnot
fsqrt
ptest
pfirst
cmtst
fcvt
pnext
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
faddv
saddv
uaddv
andv
ldgv
stgv
fdiv
sdiv
udiv
saddlv
uaddlv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
smov
umov
eorv
fmaxv
smaxv
umaxv
ld1w
ldff1w
ldnf1w
ldnt1w
stnt1w
st1w
crc32w
ld2w
st2w
ld3w
st3w
ld4w
st4w
ssubw
usubw
crc32cw
sqdecw
uqdecw
sqincw
uqincw
saddw
uaddw
prfw
ld1rqw
ld1rw
ld1sw
ldff1sw
ldnf1sw
ldpsw
ld1rsw
ldrsw
ldtrsw
ldursw
ldapursw
cntw
sxtw
uxtw
revw
crc32x
frint32x
frint64x
bcax
fmax
ldsmax
ldumax
crc32cx
index
clrex
movprfx
fmulx
frecpx
frintx
sm4ekey
fcpy
frint32z
frint64z
braaz
blraaz
brabz
blrabz
cbnz
tbnz
frintz
movz
.tlsdesccall 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
pacia1716
autia1716
pacib1716
autib1716
LIFETIME_END
BUNDLE
DBG_VALUE
DBG_LABEL
LIFETIME_START
st2g
stz2g
stzg
eretaa
eretab
xaflag
axflag
xpaclri
# FEntry call
paciasp
autiasp
pacibsp
autibsp
setffr
drps
eret
cfinv
paciaz
autiaz
pacibz
autibz
,QX,QX,QX,QX,
,QX,QX,QX,QX,QX,QX,QX,QX_
 2jh
82TF
 Bjh
onH
.oH
/hH
/hH
P0jh
P@jh
&qH
%`H
%`H
6oH
7hH
7hH
 8jh
 Hjh
1`H
1`H
+`H
+`H
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X8_X9
Z6_Z7_Z8_Z9
X28_FP
W30_WZR
LR_XZR
z10_hi
z20_hi
z30_hi
z0_hi
z11_hi
z21_hi
z31_hi
z1_hi
z12_hi
z22_hi
z2_hi
z13_hi
z23_hi
z3_hi
z14_hi
z24_hi
z4_hi
z15_hi
z25_hi
z5_hi
z16_hi
z26_hi
z6_hi
z17_hi
z27_hi
z7_hi
z18_hi
z28_hi
z8_hi
z19_hi
z29_hi
z9_hi
nzcv
trn1
zip1
uzp1
dcps1
rev32
fmlal2
fmlsl2
fcvtl2
trn2
fcvtn2
fcvtxn2
zip2
uzp2
dcps2
dcps3
rev16
braa
ldraa
blraa
pacda
ldadda
fadda
autda
pacga
pacia
autia
brka
fcmla
fmla
fnmla
ldsmina
ldumina
brkpa
caspa
swpa
fexpa
ldclra
ldeora
srsra
ursra
ssra
usra
casa
ldseta
frinta
clasta
ldsmaxa
ldumaxa
pacdza
autdza
paciza
autiza
ins.b
smov.b
umov.b
ld1b
ldff1b
ldnf1b
ldnt1b
stnt1b
st1b
crc32b
ld2b
st2b
ld3b
st3b
ld4b
st4b
trn1.16b
zip1.16b
uzp1.16b
rev32.16b
rsubhn2.16b
raddhn2.16b
sqshrn2.16b
uqshrn2.16b
sqrshrn2.16b
uqrshrn2.16b
trn2.16b
sqxtn2.16b
uqxtn2.16b
sqshrun2.16b
sqrshrun2.16b
sqxtun2.16b
zip2.16b
uzp2.16b
rev64.16b
rev16.16b
saba.16b
uaba.16b
mla.16b
srsra.16b
ursra.16b
ssra.16b
usra.16b
shsub.16b
uhsub.16b
sqsub.16b
uqsub.16b
bic.16b
aesimc.16b
aesmc.16b
sabd.16b
uabd.16b
srhadd.16b
urhadd.16b
shadd.16b
uhadd.16b
usqadd.16b
suqadd.16b
and.16b
aesd.16b
cmge.16b
cmle.16b
aese.16b
bif.16b
sqneg.16b
cmhi.16b
sli.16b
sri.16b
movi.16b
sqshl.16b
uqshl.16b
sqrshl.16b
uqrshl.16b
srshl.16b
urshl.16b
sshl.16b
ushl.16b
bsl.16b
pmul.16b
smin.16b
umin.16b
orn.16b
addp.16b
sminp.16b
uminp.16b
dup.16b
smaxp.16b
umaxp.16b
cmeq.16b
srshr.16b
urshr.16b
sshr.16b
ushr.16b
eor.16b
orr.16b
sqabs.16b
cmhs.16b
cls.16b
mls.16b
cmgt.16b
rbit.16b
cmlt.16b
cnt.16b
not.16b
cmtst.16b
ext.16b
sqshlu.16b
addv.16b
saddlv.16b
uaddlv.16b
sminv.16b
uminv.16b
smaxv.16b
umaxv.16b
smax.16b
umax.16b
clz.16b
trn1.8b
zip1.8b
uzp1.8b
rev32.8b
trn2.8b
zip2.8b
uzp2.8b
rev64.8b
rev16.8b
saba.8b
uaba.8b
mla.8b
srsra.8b
ursra.8b
ssra.8b
usra.8b
shsub.8b
uhsub.8b
sqsub.8b
uqsub.8b
bic.8b
sabd.8b
uabd.8b
srhadd.8b
urhadd.8b
shadd.8b
uhadd.8b
usqadd.8b
suqadd.8b
and.8b
cmge.8b
cmle.8b
bif.8b
sqneg.8b
cmhi.8b
sli.8b
sri.8b
movi.8b
sqshl.8b
uqshl.8b
sqrshl.8b
uqrshl.8b
srshl.8b
urshl.8b
sshl.8b
ushl.8b
bsl.8b
pmul.8b
rsubhn.8b
raddhn.8b
smin.8b
umin.8b
sqshrn.8b
uqshrn.8b
sqrshrn.8b
uqrshrn.8b
orn.8b
sqxtn.8b
uqxtn.8b
sqshrun.8b
sqrshrun.8b
sqxtun.8b
addp.8b
sminp.8b
uminp.8b
dup.8b
smaxp.8b
umaxp.8b
cmeq.8b
srshr.8b
urshr.8b
sshr.8b
ushr.8b
eor.8b
orr.8b
sqabs.8b
cmhs.8b
cls.8b
mls.8b
cmgt.8b
rbit.8b
cmlt.8b
cnt.8b
not.8b
cmtst.8b
ext.8b
sqshlu.8b
addv.8b
saddlv.8b
uaddlv.8b
sminv.8b
uminv.8b
smaxv.8b
umaxv.8b
smax.8b
umax.8b
clz.8b
ldaddab
ldsminab
lduminab
swpab
brab
ldrab
blrab
ldclrab
ldeorab
casab
ldsetab
ldsmaxab
ldumaxab
crc32cb
sqdecb
uqdecb
sqincb
uqincb
pacdb
ldaddb
autdb
prfb
pacib
autib
brkb
ldaddalb
ldsminalb
lduminalb
swpalb
ldclralb
ldeoralb
casalb
ldsetalb
ldsmaxalb
ldumaxalb
ldaddlb
ldsminlb
lduminlb
swplb
ldclrlb
ldeorlb
caslb
ldsetlb
ldsmaxlb
ldumaxlb
ldsminb
lduminb
brkpb
swpb
ld1rqb
ld1rb
ldarb
ldlarb
ldrb
ldclrb
stllrb
stlrb
ldeorb
ldaprb
ldtrb
strb
sttrb
ldurb
stlurb
ldapurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ld1sb
ldff1sb
ldnf1sb
casb
fmsb
fnmsb
ld1rsb
ldrsb
ldtrsb
ldursb
ldapursb
ldsetb
cntb
clastb
sxtb
uxtb
fsub
fmsub
fnmsub
sqsub
uqsub
revb
ldsmaxb
ldumaxb
pacdzb
autdzb
pacizb
autizb
csinc
fmla.d
fmul.d
fmls.d
ins.d
fmov.d
umov.d
fmulx.d
sadalp.1d
uadalp.1d
saddlp.1d
uaddlp.1d
ld1d
ldff1d
ldnf1d
ldnt1d
stnt1d
st1d
trn1.2d
zip1.2d
uzp1.2d
sabal2.2d
uabal2.2d
sqdmlal2.2d
smlal2.2d
umlal2.2d
ssubl2.2d
usubl2.2d
sabdl2.2d
uabdl2.2d
saddl2.2d
uaddl2.2d
sshll2.2d
ushll2.2d
sqdmull2.2d
smull2.2d
umull2.2d
sqdmlsl2.2d
smlsl2.2d
umlsl2.2d
trn2.2d
zip2.2d
uzp2.2d
ssubw2.2d
usubw2.2d
saddw2.2d
uaddw2.2d
fcmla.2d
fmla.2d
srsra.2d
ursra.2d
ssra.2d
usra.2d
frinta.2d
fsub.2d
sqsub.2d
uqsub.2d
fabd.2d
fcadd.2d
fadd.2d
usqadd.2d
suqadd.2d
facge.2d
fcmge.2d
fcmle.2d
frecpe.2d
frsqrte.2d
scvtf.2d
ucvtf.2d
fneg.2d
sqneg.2d
cmhi.2d
sli.2d
sri.2d
frinti.2d
movi.2d
sabal.2d
uabal.2d
sqdmlal.2d
smlal.2d
umlal.2d
ssubl.2d
usubl.2d
sabdl.2d
uabdl.2d
saddl.2d
uaddl.2d
sqshl.2d
uqshl.2d
sqrshl.2d
uqrshl.2d
srshl.2d
urshl.2d
sshl.2d
ushl.2d
sshll.2d
ushll.2d
sqdmull.2d
smull.2d
umull.2d
sqdmlsl.2d
smlsl.2d
umlsl.2d
fmul.2d
fminnm.2d
fmaxnm.2d
frintm.2d
fmin.2d
frintn.2d
faddp.2d
sadalp.2d
uadalp.2d
saddlp.2d
uaddlp.2d
fminnmp.2d
fmaxnmp.2d
fminp.2d
frintp.2d
dup.2d
fmaxp.2d
fcmeq.2d
srshr.2d
urshr.2d
sshr.2d
ushr.2d
fcvtas.2d
fabs.2d
sqabs.2d
cmhs.2d
fmls.2d
fcvtms.2d
fcvtns.2d
frecps.2d
fcvtps.2d
frsqrts.2d
fcvtzs.2d
facgt.2d
fcmgt.2d
fcmlt.2d
fsqrt.2d
cmtst.2d
fcvtau.2d
sqshlu.2d
fcvtmu.2d
fcvtnu.2d
fcvtpu.2d
fcvtzu.2d
fdiv.2d
fmov.2d
ssubw.2d
usubw.2d
saddw.2d
uaddw.2d
frint32x.2d
frint64x.2d
fmax.2d
fmulx.2d
frintx.2d
frint32z.2d
frint64z.2d
frintz.2d
ld2d
st2d
ld3d
st3d
ld4d
st4d
fmad
fnmad
ftmad
fabd
sabd
uabd
xpacd
sqdecd
uqdecd
sqincd
uqincd
fcadd
ldadd
fadd
fmadd
fnmadd
usqadd
suqadd
prfd
nand
ld1rqd
ld1rd
asrd
cntd
splice
facge
fcmge
cmpge
fscale
whilele
fcmle
cmple
fcmne
ctermne
cmpne
frecpe
fccmpe
fcmpe
pfalse
frsqrte
ptrue
scvtf
ucvtf
subg
addg
fneg
sqneg
csneg
fmla.h
sqrdmlah.h
sqdmulh.h
sqrdmulh.h
sqrdmlsh.h
sqdmlal.h
sqdmull.h
sqdmlsl.h
fmul.h
fmls.h
ins.h
smov.h
umov.h
fmulx.h
sha1h
ld1h
ldff1h
ldnf1h
ldnt1h
stnt1h
st1h
faddp.2h
fminnmp.2h
fmaxnmp.2h
fminp.2h
fmaxp.2h
crc32h
ld2h
st2h
ld3h
st3h
trn1.4h
zip1.4h
uzp1.4h
rev32.4h
trn2.4h
zip2.4h
uzp2.4h
rev64.4h
saba.4h
uaba.4h
fcmla.4h
fmla.4h
srsra.4h
ursra.4h
ssra.4h
usra.4h
frinta.4h
fsub.4h
shsub.4h
uhsub.4h
sqsub.4h
uqsub.4h
bic.4h
fabd.4h
sabd.4h
uabd.4h
fcadd.4h
fadd.4h
srhadd.4h
urhadd.4h
shadd.4h
uhadd.4h
usqadd.4h
suqadd.4h
facge.4h
fcmge.4h
fcmle.4h
frecpe.4h
frsqrte.4h
scvtf.4h
ucvtf.4h
fneg.4h
sqneg.4h
sqrdmlah.4h
sqdmulh.4h
sqrdmulh.4h
sqrdmlsh.4h
cmhi.4h
sli.4h
mvni.4h
sri.4h
frinti.4h
movi.4h
sqshl.4h
uqshl.4h
sqrshl.4h
uqrshl.4h
srshl.4h
urshl.4h
sshl.4h
ushl.4h
fmul.4h
fminnm.4h
fmaxnm.4h
frintm.4h
rsubhn.4h
raddhn.4h
fmin.4h
smin.4h
umin.4h
sqshrn.4h
uqshrn.4h
sqrshrn.4h
uqrshrn.4h
frintn.4h
sqxtn.4h
uqxtn.4h
sqshrun.4h
sqrshrun.4h
sqxtun.4h
faddp.4h
sadalp.4h
uadalp.4h
saddlp.4h
uaddlp.4h
fminnmp.4h
fmaxnmp.4h
fminp.4h
sminp.4h
uminp.4h
frintp.4h
dup.4h
fmaxp.4h
smaxp.4h
umaxp.4h
fcmeq.4h
srshr.4h
urshr.4h
sshr.4h
ushr.4h
orr.4h
fcvtas.4h
fabs.4h
sqabs.4h
cmhs.4h
cls.4h
fmls.4h
fcvtms.4h
fcvtns.4h
frecps.4h
fcvtps.4h
frsqrts.4h
fcvtzs.4h
facgt.4h
fcmgt.4h
fcmlt.4h
fsqrt.4h
cmtst.4h
fcvtau.4h
sqshlu.4h
fcvtmu.4h
fcvtnu.4h
fcvtpu.4h
fcvtzu.4h
addv.4h
fdiv.4h
saddlv.4h
uaddlv.4h
fminnmv.4h
fmaxnmv.4h
fminv.4h
sminv.4h
uminv.4h
fmov.4h
fmaxv.4h
smaxv.4h
umaxv.4h
fmax.4h
smax.4h
umax.4h
fmulx.4h
frintx.4h
clz.4h
frintz.4h
ld4h
st4h
trn1.8h
zip1.8h
uzp1.8h
rev32.8h
sabal2.8h
uabal2.8h
smlal2.8h
umlal2.8h
ssubl2.8h
usubl2.8h
sabdl2.8h
uabdl2.8h
saddl2.8h
uaddl2.8h
sshll2.8h
ushll2.8h
pmull2.8h
smull2.8h
umull2.8h
smlsl2.8h
umlsl2.8h
rsubhn2.8h
raddhn2.8h
sqshrn2.8h
uqshrn2.8h
sqrshrn2.8h
uqrshrn2.8h
trn2.8h
sqxtn2.8h
uqxtn2.8h
sqshrun2.8h
sqrshrun2.8h
sqxtun2.8h
zip2.8h
uzp2.8h
ssubw2.8h
usubw2.8h
saddw2.8h
uaddw2.8h
rev64.8h
saba.8h
uaba.8h
fcmla.8h
fmla.8h
srsra.8h
ursra.8h
ssra.8h
usra.8h
frinta.8h
fsub.8h
shsub.8h
uhsub.8h
sqsub.8h
uqsub.8h
bic.8h
fabd.8h
sabd.8h
uabd.8h
fcadd.8h
fadd.8h
srhadd.8h
urhadd.8h
shadd.8h
uhadd.8h
usqadd.8h
suqadd.8h
facge.8h
fcmge.8h
fcmle.8h
frecpe.8h
frsqrte.8h
scvtf.8h
ucvtf.8h
fneg.8h
sqneg.8h
sqrdmlah.8h
sqdmulh.8h
sqrdmulh.8h
sqrdmlsh.8h
cmhi.8h
sli.8h
mvni.8h
sri.8h
frinti.8h
movi.8h
sabal.8h
uabal.8h
smlal.8h
umlal.8h
ssubl.8h
usubl.8h
sabdl.8h
uabdl.8h
saddl.8h
uaddl.8h
sqshl.8h
uqshl.8h
sqrshl.8h
uqrshl.8h
srshl.8h
urshl.8h
sshl.8h
ushl.8h
sshll.8h
ushll.8h
pmull.8h
smull.8h
umull.8h
smlsl.8h
umlsl.8h
fmul.8h
fminnm.8h
fmaxnm.8h
frintm.8h
fmin.8h
smin.8h
umin.8h
frintn.8h
faddp.8h
sadalp.8h
uadalp.8h
saddlp.8h
uaddlp.8h
fminnmp.8h
fmaxnmp.8h
fminp.8h
sminp.8h
uminp.8h
frintp.8h
dup.8h
fmaxp.8h
smaxp.8h
umaxp.8h
fcmeq.8h
srshr.8h
urshr.8h
sshr.8h
ushr.8h
orr.8h
fcvtas.8h
fabs.8h
sqabs.8h
cmhs.8h
cls.8h
fmls.8h
fcvtms.8h
fcvtns.8h
frecps.8h
fcvtps.8h
frsqrts.8h
fcvtzs.8h
facgt.8h
fcmgt.8h
fcmlt.8h
fsqrt.8h
cmtst.8h
fcvtau.8h
sqshlu.8h
fcvtmu.8h
fcvtnu.8h
fcvtpu.8h
fcvtzu.8h
addv.8h
fdiv.8h
saddlv.8h
uaddlv.8h
fminnmv.8h
fmaxnmv.8h
fminv.8h
sminv.8h
uminv.8h
fmov.8h
fmaxv.8h
smaxv.8h
umaxv.8h
ssubw.8h
usubw.8h
saddw.8h
uaddw.8h
fmax.8h
smax.8h
umax.8h
fmulx.8h
frintx.8h
clz.8h
frintz.8h
ldaddah
sqrdmlah
ldsminah
lduminah
swpah
ldclrah
ldeorah
casah
ldsetah
ldsmaxah
ldumaxah
crc32ch
sqdech
uqdech
sqinch
uqinch
ldaddh
prfh
ldaddalh
ldsminalh
lduminalh
swpalh
ldclralh
ldeoralh
casalh
ldsetalh
ldsmaxalh
ldumaxalh
ldaddlh
ldsminlh
lduminlh
swplh
ldclrlh
ldeorlh
caslh
ldsetlh
sqdmulh
sqrdmulh
smulh
umulh
ldsmaxlh
ldumaxlh
ldsminh
lduminh
swph
ld1rqh
ld1rh
ldarh
ldlarh
ldrh
ldclrh
stllrh
stlrh
ldeorh
ldaprh
ldtrh
strh
sttrh
ldurh
stlurh
ldapurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ld1sh
ldff1sh
ldnf1sh
cash
sqrdmlsh
ld1rsh
ldrsh
ldtrsh
ldursh
ldapursh
ldseth
cnth
sxth
uxth
revh
ldsmaxh
ldumaxh
xpaci
punpkhi
sunpkhi
uunpkhi
cmhi
cmphi
frinti
movi
movk
ldaddal
sqdmlal
fmlal
ldsminal
lduminal
caspal
swpal
ldclral
ldeoral
casal
ldsetal
ldsmaxal
ldumaxal
smsubl
umsubl
ldaddl
smaddl
umaddl
fcsel
ftssel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sqdmull
ldsminl
lduminl
addpl
caspl
swpl
ldclrl
ldeorl
casl
sqdmlsl
fmlsl
sysl
ldsetl
fcvtl
fmul
fnmul
ftsmul
addvl
rdvl
ldsmaxl
ldumaxl
sbfm
ubfm
prfm
fminnm
fmaxnm
dupm
frintm
prfum
fmin
ldsmin
ldumin
brkn
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
whilelo
punpklo
sunpklo
uunpklo
cmplo
fcmuo
subp
sqdecp
uqdecp
sqincp
uqincp
stgp
fccmp
fcmp
ldnp
stnp
adrp
casp
cntp
frintp
fdup
ldaxp
ldxp
stlxp
stxp
pmull2.1q
pmull.1q
fcmeq
ctermeq
cmpeq
ld1r
ld2r
ld3r
ld4r
ldar
ldlar
fsubr
rdffr
wrffr
srshr
urshr
sshr
ushr
ldclr
stllr
lslr
stlr
ldeor
ldapr
asrr
lsrr
insr
ldtr
sttr
extr
ldur
stlur
ldapur
stur
fdivr
sdivr
udivr
ldaxr
ldxr
stlxr
stxr
fmla.s
sqrdmlah.s
sqdmulh.s
sqrdmulh.s
sqrdmlsh.s
sqdmlal.s
sqdmull.s
sqdmlsl.s
fmul.s
fmls.s
ins.s
smov.s
umov.s
fmulx.s
trn1.2s
zip1.2s
uzp1.2s
trn2.2s
zip2.2s
uzp2.2s
rev64.2s
saba.2s
uaba.2s
fcmla.2s
fmla.2s
srsra.2s
ursra.2s
ssra.2s
usra.2s
frinta.2s
fsub.2s
shsub.2s
uhsub.2s
sqsub.2s
uqsub.2s
bic.2s
fabd.2s
sabd.2s
uabd.2s
fcadd.2s
fadd.2s
srhadd.2s
urhadd.2s
shadd.2s
uhadd.2s
usqadd.2s
suqadd.2s
facge.2s
fcmge.2s
fcmle.2s
frecpe.2s
urecpe.2s
frsqrte.2s
ursqrte.2s
scvtf.2s
ucvtf.2s
fneg.2s
sqneg.2s
sqrdmlah.2s
sqdmulh.2s
sqrdmulh.2s
sqrdmlsh.2s
cmhi.2s
sli.2s
mvni.2s
sri.2s
frinti.2s
movi.2s
sqshl.2s
uqshl.2s
sqrshl.2s
uqrshl.2s
srshl.2s
urshl.2s
sshl.2s
ushl.2s
fmul.2s
fminnm.2s
fmaxnm.2s
frintm.2s
rsubhn.2s
raddhn.2s
fmin.2s
smin.2s
umin.2s
sqshrn.2s
uqshrn.2s
sqrshrn.2s
uqrshrn.2s
frintn.2s
sqxtn.2s
uqxtn.2s
sqshrun.2s
sqrshrun.2s
sqxtun.2s
faddp.2s
sadalp.2s
uadalp.2s
saddlp.2s
uaddlp.2s
fminnmp.2s
fmaxnmp.2s
fminp.2s
sminp.2s
uminp.2s
frintp.2s
dup.2s
fmaxp.2s
smaxp.2s
umaxp.2s
fcmeq.2s
srshr.2s
urshr.2s
sshr.2s
ushr.2s
orr.2s
fcvtas.2s
fabs.2s
sqabs.2s
cmhs.2s
cls.2s
fmls.2s
fcvtms.2s
fcvtns.2s
frecps.2s
fcvtps.2s
frsqrts.2s
fcvtzs.2s
facgt.2s
fcmgt.2s
fcmlt.2s
fsqrt.2s
cmtst.2s
fcvtau.2s
sqshlu.2s
fcvtmu.2s
fcvtnu.2s
fcvtpu.2s
fcvtzu.2s
fdiv.2s
fmov.2s
frint32x.2s
frint64x.2s
fmax.2s
smax.2s
umax.2s
fmulx.2s
frintx.2s
frint32z.2s
frint64z.2s
clz.2s
frintz.2s
sha1su0.4s
sha256su0.4s
trn1.4s
zip1.4s
uzp1.4s
sha1su1.4s
sha256su1.4s
sha256h2.4s
sabal2.4s
uabal2.4s
sqdmlal2.4s
smlal2.4s
umlal2.4s
ssubl2.4s
usubl2.4s
sabdl2.4s
uabdl2.4s
saddl2.4s
uaddl2.4s
sshll2.4s
ushll2.4s
sqdmull2.4s
smull2.4s
umull2.4s
sqdmlsl2.4s
smlsl2.4s
umlsl2.4s
rsubhn2.4s
raddhn2.4s
sqshrn2.4s
uqshrn2.4s
sqrshrn2.4s
uqrshrn2.4s
trn2.4s
sqxtn2.4s
uqxtn2.4s
sqshrun2.4s
sqrshrun2.4s
sqxtun2.4s
zip2.4s
uzp2.4s
ssubw2.4s
usubw2.4s
saddw2.4s
uaddw2.4s
rev64.4s
saba.4s
uaba.4s
fcmla.4s
fmla.4s
srsra.4s
ursra.4s
ssra.4s
usra.4s
frinta.4s
fsub.4s
shsub.4s
uhsub.4s
sqsub.4s
uqsub.4s
sha1c.4s
bic.4s
fabd.4s
sabd.4s
uabd.4s
fcadd.4s
fadd.4s
srhadd.4s
urhadd.4s
shadd.4s
uhadd.4s
usqadd.4s
suqadd.4s
facge.4s
fcmge.4s
fcmle.4s
frecpe.4s
urecpe.4s
frsqrte.4s
ursqrte.4s
scvtf.4s
ucvtf.4s
fneg.4s
sqneg.4s
sha256h.4s
sqrdmlah.4s
sqdmulh.4s
sqrdmulh.4s
sqrdmlsh.4s
cmhi.4s
sli.4s
mvni.4s
sri.4s
frinti.4s
movi.4s
sabal.4s
uabal.4s
sqdmlal.4s
smlal.4s
umlal.4s
ssubl.4s
usubl.4s
sabdl.4s
uabdl.4s
saddl.4s
uaddl.4s
sqshl.4s
uqshl.4s
sqrshl.4s
uqrshl.4s
srshl.4s
urshl.4s
sshl.4s
ushl.4s
sshll.4s
ushll.4s
sqdmull.4s
smull.4s
umull.4s
sqdmlsl.4s
smlsl.4s
umlsl.4s
fmul.4s
sha1m.4s
fminnm.4s
fmaxnm.4s
frintm.4s
fmin.4s
smin.4s
umin.4s
frintn.4s
sha1p.4s
faddp.4s
sadalp.4s
uadalp.4s
saddlp.4s
uaddlp.4s
fminnmp.4s
fmaxnmp.4s
fminp.4s
sminp.4s
uminp.4s
frintp.4s
dup.4s
fmaxp.4s
smaxp.4s
umaxp.4s
fcmeq.4s
srshr.4s
urshr.4s
sshr.4s
ushr.4s
orr.4s
fcvtas.4s
fabs.4s
sqabs.4s
cmhs.4s
cls.4s
fmls.4s
fcvtms.4s
fcvtns.4s
frecps.4s
fcvtps.4s
frsqrts.4s
fcvtzs.4s
facgt.4s
fcmgt.4s
fcmlt.4s
fsqrt.4s
cmtst.4s
fcvtau.4s
sqshlu.4s
fcvtmu.4s
fcvtnu.4s
fcvtpu.4s
fcvtzu.4s
addv.4s
fdiv.4s
saddlv.4s
uaddlv.4s
fminnmv.4s
fmaxnmv.4s
fminv.4s
sminv.4s
uminv.4s
fmov.4s
fmaxv.4s
smaxv.4s
umaxv.4s
ssubw.4s
usubw.4s
saddw.4s
uaddw.4s
frint32x.4s
frint64x.4s
fmax.4s
smax.4s
umax.4s
fmulx.4s
frintx.4s
frint32z.4s
frint64z.4s
clz.4s
frintz.4s
brkas
brkpas
fcvtas
fabs
sqabs
brkbs
brkpbs
subs
sbcs
adcs
bics
adds
nands
ptrues
cmhs
cmphs
whilels
fmls
fnmls
cmpls
fcvtms
brkns
orns
fcvtns
subps
frecps
fcvtps
rdffrs
eors
nors
orrs
frsqrts
fcvtzs
fjcvtzs
compact
ldset
facgt
fcmgt
cmpgt
rbit
whilelt
fcmlt
cmplt
hint
sdot
udot
cnot
fsqrt
ptest
pfirst
cmtst
fcvt
pnext
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
faddv
saddv
uaddv
andv
ldgv
stgv
fdiv
sdiv
udiv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
eorv
fmaxv
smaxv
umaxv
ld1w
ldff1w
ldnf1w
ldnt1w
stnt1w
st1w
crc32w
ld2w
st2w
ld3w
st3w
ld4w
st4w
crc32cw
sqdecw
uqdecw
sqincw
uqincw
prfw
ld1rqw
ld1rw
ld1sw
ldff1sw
ldnf1sw
ldpsw
ld1rsw
ldrsw
ldtrsw
ldursw
ldapursw
cntw
sxtw
uxtw
revw
crc32x
frint32x
frint64x
fmax
ldsmax
ldumax
crc32cx
index
clrex
movprfx
fmulx
frecpx
frintx
fcpy
frint32z
frint64z
braaz
blraaz
brabz
blrabz
cbnz
tbnz
frintz
movz
.tlsdesccall 
# XRay Function Patchable RET.
# XRay Typed Event Log.
# XRay Custom Event Log.
# XRay Function Enter.
# XRay Tail Call Exit.
# XRay Function Exit.
sha512su0
sm3ss1
sha512su1
sm3partw1
rax1
sha512h2
fmlal2
fmlsl2
sm3partw2
eor3
pacia1716
autia1716
pacib1716
autib1716
setf16
setf8
LIFETIME_END
BUNDLE
DBG_VALUE
DBG_LABEL
LIFETIME_START
st2g
stz2g
stzg
sm3tt1a
sm3tt2a
eretaa
sm3tt1b
sm3tt2b
eretab
sm4e
rmif
xaflag
axflag
sha512h
xpaclri
fmlal
# FEntry call
fmlsl
paciasp
autiasp
pacibsp
autibsp
setffr
drps
eret
sdot
udot
cfinv
bcax
sm4ekey
paciaz
autiaz
pacibz
autibz
08I:
08I:
08I:
086&
086&
086&
08k:
08k:
08;:
08B:
08B:
08d:
U$-)$q)$-)$-)$-)L$a)L$-)L$-
e$-<$q<$-<$-<$-<$-<$-<$-v;$qv;$-v;$-v;$-v;$-v;$-v;$-v{$av{$-v{$-v{$-v{$-
U$-0$q0$-0$-0$-0L$a0L$-0L$-
<$-|;$q|;$-|;$-|;$-|;$-|;$-|;$-|{$a|{$-|{$-|{$-|{$-B
0IU*
0IU*
K$-A
{$-_$-_%-_L$-
e$-,<$-
)$-)$-)%-)%-)L$-)L$-
e$-<$-<$-
v{$-v;$-v;$-v{$-
{$-+@
{$-w@
U$-0$-0%-0L$-
<$-|;$-|{$-
U$-9$-9%-9L$-
{$-$
{$-
A%B,%B,
AgB,gB,g
AgB,gB,g
44<B,4<B,4
iK5
{D,5\
E,r@
{D,r
{D,J
Aa*B,a*B,a
Aa*B,a*B,a
A@%B,@%B,@
Aa*B,a*B,a
Aa*B,a*B,a
Aa*B,a*B,a
Aa*B,a*B,a
Aa*B,a*B,a
AajKajK
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X8_X9
Z6_Z7_Z8_Z9
X28_FP
W30_WZR
LR_XZR
z10_hi
z20_hi
z30_hi
z0_hi
z11_hi
z21_hi
z31_hi
z1_hi
z12_hi
z22_hi
z2_hi
z13_hi
z23_hi
z3_hi
z14_hi
z24_hi
z4_hi
z15_hi
z25_hi
z5_hi
z16_hi
z26_hi
z6_hi
z17_hi
z27_hi
z7_hi
z18_hi
z28_hi
z8_hi
z19_hi
z29_hi
z9_hi
nzcv
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
&1<GR]hs
)4?JU`k
"-8CNYdo
G_FLOG10
FMOVD0
FMOVH0
FMOVS0
SHA512SU0
ADR_LSL_ZZZ_D_0
ADR_SXTW_ZZZ_D_0
ADR_UXTW_ZZZ_D_0
ADR_LSL_ZZZ_S_0
DCPS1
SM3SS1
SHA512SU1
SM3PARTW1
RAX1
ADR_LSL_ZZZ_D_1
ADR_SXTW_ZZZ_D_1
ADR_UXTW_ZZZ_D_1
ADR_LSL_ZZZ_S_1
MSRpstateImm1
FABD32
FACGE32
FCMGE32
FCMEQ32
FRECPS32
FRSQRTS32
FACGT32
FCMGT32
FMULX32
CMP_SWAP_32
FCMLAv2f32
FMLAv2f32
FRINTAv2f32
FSUBv2f32
FABDv2f32
FCADDv2f32
FADDv2f32
FACGEv2f32
FCMGEv2f32
FRECPEv2f32
FRSQRTEv2f32
SCVTFv2f32
UCVTFv2f32
FNEGv2f32
FRINTIv2f32
FMULv2f32
FMINNMv2f32
FMAXNMv2f32
FRINTMv2f32
FMINv2f32
FRINTNv2f32
FCVTXNv2f32
FADDPv2f32
FMINNMPv2f32
FMAXNMPv2f32
FMINPv2f32
FRINTPv2f32
FMAXPv2f32
FCMEQv2f32
FCVTASv2f32
FABSv2f32
FMLSv2f32
FCVTMSv2f32
FCVTNSv2f32
FRECPSv2f32
FCVTPSv2f32
FRSQRTSv2f32
FCVTZSv2f32
FACGTv2f32
FCMGTv2f32
FSQRTv2f32
FCVTAUv2f32
FCVTMUv2f32
FCVTNUv2f32
FCVTPUv2f32
FCVTZUv2f32
FDIVv2f32
FRINT32Xv2f32
FRINT64Xv2f32
FMAXv2f32
FMULXv2f32
FRINTXv2f32
FRINT32Zv2f32
FRINT64Zv2f32
FRINTZv2f32
FCMLAv4f32
FMLAv4f32
FRINTAv4f32
FSUBv4f32
FABDv4f32
FCADDv4f32
FADDv4f32
FACGEv4f32
FCMGEv4f32
FRECPEv4f32
FRSQRTEv4f32
SCVTFv4f32
UCVTFv4f32
FNEGv4f32
FRINTIv4f32
FMULv4f32
FMINNMv4f32
FMAXNMv4f32
FRINTMv4f32
FMINv4f32
FRINTNv4f32
FCVTXNv4f32
FADDPv4f32
FMINNMPv4f32
FMAXNMPv4f32
FMINPv4f32
FRINTPv4f32
FMAXPv4f32
FCMEQv4f32
FCVTASv4f32
FABSv4f32
FMLSv4f32
FCVTMSv4f32
FCVTNSv4f32
FRECPSv4f32
FCVTPSv4f32
FRSQRTSv4f32
FCVTZSv4f32
FACGTv4f32
FCMGTv4f32
FSQRTv4f32
FCVTAUv4f32
FCVTMUv4f32
FCVTNUv4f32
FCVTPUv4f32
FCVTZUv4f32
FDIVv4f32
FRINT32Xv4f32
FRINT64Xv4f32
FMAXv4f32
FMULXv4f32
FRINTXv4f32
FRINT32Zv4f32
FRINT64Zv4f32
FRINTZv4f32
LD1i32
ST1i32
SQSUBv1i32
UQSUBv1i32
USQADDv1i32
SUQADDv1i32
FRECPEv1i32
FRSQRTEv1i32
SCVTFv1i32
UCVTFv1i32
SQNEGv1i32
SQRDMLAHv1i32
SQDMULHv1i32
SQRDMULHv1i32
SQRDMLSHv1i32
SQSHLv1i32
UQSHLv1i32
SQRSHLv1i32
UQRSHLv1i32
SQXTNv1i32
UQXTNv1i32
SQXTUNv1i32
FCVTASv1i32
SQABSv1i32
FCVTMSv1i32
FCVTNSv1i32
FCVTPSv1i32
FCVTZSv1i32
FCVTAUv1i32
FCVTMUv1i32
FCVTNUv1i32
FCVTPUv1i32
FCVTZUv1i32
FRECPXv1i32
LD2i32
ST2i32
TRN1v2i32
ZIP1v2i32
UZP1v2i32
TRN2v2i32
ZIP2v2i32
UZP2v2i32
REV64v2i32
SABAv2i32
UABAv2i32
MLAv2i32
SHSUBv2i32
UHSUBv2i32
SQSUBv2i32
UQSUBv2i32
BICv2i32
SABDv2i32
UABDv2i32
SRHADDv2i32
URHADDv2i32
SHADDv2i32
UHADDv2i32
USQADDv2i32
SUQADDv2i32
CMGEv2i32
URECPEv2i32
URSQRTEv2i32
SQNEGv2i32
SQRDMLAHv2i32
SQDMULHv2i32
SQRDMULHv2i32
SQRDMLSHv2i32
CMHIv2i32
MVNIv2i32
MOVIv2i32
SQSHLv2i32
UQSHLv2i32
SQRSHLv2i32
UQRSHLv2i32
SRSHLv2i32
URSHLv2i32
SSHLv2i32
USHLv2i32
SHLLv2i32
FCVTLv2i32
MULv2i32
SMINv2i32
UMINv2i32
FCVTNv2i32
SQXTNv2i32
UQXTNv2i32
SQXTUNv2i32
ADDPv2i32
SMINPv2i32
UMINPv2i32
SMAXPv2i32
UMAXPv2i32
CMEQv2i32
ORRv2i32
SQABSv2i32
CMHSv2i32
CLSv2i32
MLSv2i32
CMGTv2i32
CMTSTv2i32
SMAXv2i32
UMAXv2i32
CLZv2i32
RSUBHNv2i64_v2i32
RADDHNv2i64_v2i32
SADALPv4i16_v2i32
UADALPv4i16_v2i32
SADDLPv4i16_v2i32
UADDLPv4i16_v2i32
LD3i32
ST3i32
LD4i32
ST4i32
TRN1v4i32
ZIP1v4i32
UZP1v4i32
TRN2v4i32
ZIP2v4i32
UZP2v4i32
REV64v4i32
SABAv4i32
UABAv4i32
MLAv4i32
SHSUBv4i32
UHSUBv4i32
SQSUBv4i32
UQSUBv4i32
BICv4i32
SABDv4i32
UABDv4i32
SRHADDv4i32
URHADDv4i32
SHADDv4i32
UHADDv4i32
USQADDv4i32
SUQADDv4i32
CMGEv4i32
URECPEv4i32
URSQRTEv4i32
SQNEGv4i32
SQRDMLAHv4i32
SQDMULHv4i32
SQRDMULHv4i32
SQRDMLSHv4i32
CMHIv4i32
MVNIv4i32
MOVIv4i32
SQSHLv4i32
UQSHLv4i32
SQRSHLv4i32
UQRSHLv4i32
SRSHLv4i32
URSHLv4i32
SSHLv4i32
USHLv4i32
SHLLv4i32
FCVTLv4i32
MULv4i32
SMINv4i32
UMINv4i32
FCVTNv4i32
SQXTNv4i32
UQXTNv4i32
SQXTUNv4i32
ADDPv4i32
SMINPv4i32
UMINPv4i32
SMAXPv4i32
UMAXPv4i32
CMEQv4i32
ORRv4i32
SQABSv4i32
CMHSv4i32
CLSv4i32
MLSv4i32
CMGTv4i32
CMTSTv4i32
SMAXv4i32
UMAXv4i32
CLZv4i32
RSUBHNv2i64_v4i32
RADDHNv2i64_v4i32
SABALv4i16_v4i32
UABALv4i16_v4i32
SQDMLALv4i16_v4i32
SMLALv4i16_v4i32
UMLALv4i16_v4i32
SSUBLv4i16_v4i32
USUBLv4i16_v4i32
SABDLv4i16_v4i32
UABDLv4i16_v4i32
SADDLv4i16_v4i32
UADDLv4i16_v4i32
SQDMULLv4i16_v4i32
SMULLv4i16_v4i32
UMULLv4i16_v4i32
SQDMLSLv4i16_v4i32
SMLSLv4i16_v4i32
UMLSLv4i16_v4i32
SSUBWv4i16_v4i32
USUBWv4i16_v4i32
SADDWv4i16_v4i32
UADDWv4i16_v4i32
SABALv8i16_v4i32
UABALv8i16_v4i32
SQDMLALv8i16_v4i32
SMLALv8i16_v4i32
UMLALv8i16_v4i32
SSUBLv8i16_v4i32
USUBLv8i16_v4i32
SABDLv8i16_v4i32
UABDLv8i16_v4i32
SADDLv8i16_v4i32
UADDLv8i16_v4i32
SQDMULLv8i16_v4i32
SMULLv8i16_v4i32
UMULLv8i16_v4i32
SQDMLSLv8i16_v4i32
SMLSLv8i16_v4i32
UMLSLv8i16_v4i32
SADALPv8i16_v4i32
UADALPv8i16_v4i32
SADDLPv8i16_v4i32
UADDLPv8i16_v4i32
SSUBWv8i16_v4i32
USUBWv8i16_v4i32
SADDWv8i16_v4i32
UADDWv8i16_v4i32
SQDMLALi32
SQDMULLi32
SQDMLSLi32
CPYi32
UMOVvi32
SMOVvi16to32
SMOVvi8to32
JumpTableDest32
G_FLOG2
SHA512H2
G_FEXP2
DCPS2
SM3PARTW2
ADR_LSL_ZZZ_D_2
ADR_SXTW_ZZZ_D_2
ADR_UXTW_ZZZ_D_2
ADR_LSL_ZZZ_S_2
EOR3
DCPS3
ADR_LSL_ZZZ_D_3
ADR_SXTW_ZZZ_D_3
ADR_UXTW_ZZZ_D_3
ADR_LSL_ZZZ_S_3
FABD64
FACGE64
FCMGE64
FCMEQ64
FRECPS64
FRSQRTS64
FACGT64
FCMGT64
FMULX64
CMP_SWAP_64
FCMLAv2f64
FMLAv2f64
FRINTAv2f64
FSUBv2f64
FABDv2f64
FCADDv2f64
FADDv2f64
FACGEv2f64
FCMGEv2f64
FRECPEv2f64
FRSQRTEv2f64
SCVTFv2f64
UCVTFv2f64
FNEGv2f64
FRINTIv2f64
FMULv2f64
FMINNMv2f64
FMAXNMv2f64
FRINTMv2f64
FMINv2f64
FRINTNv2f64
FADDPv2f64
FMINNMPv2f64
FMAXNMPv2f64
FMINPv2f64
FRINTPv2f64
FMAXPv2f64
FCMEQv2f64
FCVTASv2f64
FABSv2f64
FMLSv2f64
FCVTMSv2f64
FCVTNSv2f64
FRECPSv2f64
FCVTPSv2f64
FRSQRTSv2f64
FCVTZSv2f64
FACGTv2f64
FCMGTv2f64
FSQRTv2f64
FCVTAUv2f64
FCVTMUv2f64
FCVTNUv2f64
FCVTPUv2f64
FCVTZUv2f64
FDIVv2f64
FRINT32Xv2f64
FRINT64Xv2f64
FMAXv2f64
FMULXv2f64
FRINTXv2f64
FRINT32Zv2f64
FRINT64Zv2f64
FRINTZv2f64
LD1i64
ST1i64
SQSUBv1i64
UQSUBv1i64
USQADDv1i64
SUQADDv1i64
CMGEv1i64
FRECPEv1i64
FRSQRTEv1i64
SCVTFv1i64
UCVTFv1i64
SQNEGv1i64
CMHIv1i64
SQSHLv1i64
UQSHLv1i64
SQRSHLv1i64
UQRSHLv1i64
SRSHLv1i64
URSHLv1i64
SSHLv1i64
USHLv1i64
PMULLv1i64
FCVTXNv1i64
CMEQv1i64
FCVTASv1i64
SQABSv1i64
CMHSv1i64
FCVTMSv1i64
FCVTNSv1i64
FCVTPSv1i64
FCVTZSv1i64
CMGTv1i64
CMTSTv1i64
FCVTAUv1i64
FCVTMUv1i64
FCVTNUv1i64
FCVTPUv1i64
FCVTZUv1i64
FRECPXv1i64
SADALPv2i32_v1i64
UADALPv2i32_v1i64
SADDLPv2i32_v1i64
UADDLPv2i32_v1i64
LD2i64
ST2i64
TRN1v2i64
ZIP1v2i64
UZP1v2i64
TRN2v2i64
ZIP2v2i64
UZP2v2i64
SQSUBv2i64
UQSUBv2i64
USQADDv2i64
SUQADDv2i64
CMGEv2i64
SQNEGv2i64
CMHIv2i64
SQSHLv2i64
UQSHLv2i64
SQRSHLv2i64
UQRSHLv2i64
SRSHLv2i64
URSHLv2i64
SSHLv2i64
USHLv2i64
PMULLv2i64
ADDPv2i64
CMEQv2i64
SQABSv2i64
CMHSv2i64
CMGTv2i64
CMTSTv2i64
SABALv2i32_v2i64
UABALv2i32_v2i64
SQDMLALv2i32_v2i64
SMLALv2i32_v2i64
UMLALv2i32_v2i64
SSUBLv2i32_v2i64
USUBLv2i32_v2i64
SABDLv2i32_v2i64
UABDLv2i32_v2i64
SADDLv2i32_v2i64
UADDLv2i32_v2i64
SQDMULLv2i32_v2i64
SMULLv2i32_v2i64
UMULLv2i32_v2i64
SQDMLSLv2i32_v2i64
SMLSLv2i32_v2i64
UMLSLv2i32_v2i64
SSUBWv2i32_v2i64
USUBWv2i32_v2i64
SADDWv2i32_v2i64
UADDWv2i32_v2i64
SABALv4i32_v2i64
UABALv4i32_v2i64
SQDMLALv4i32_v2i64
SMLALv4i32_v2i64
UMLALv4i32_v2i64
SSUBLv4i32_v2i64
USUBLv4i32_v2i64
SABDLv4i32_v2i64
UABDLv4i32_v2i64
SADDLv4i32_v2i64
UADDLv4i32_v2i64
SQDMULLv4i32_v2i64
SMULLv4i32_v2i64
UMULLv4i32_v2i64
SQDMLSLv4i32_v2i64
SMLSLv4i32_v2i64
UMLSLv4i32_v2i64
SADALPv4i32_v2i64
UADALPv4i32_v2i64
SADDLPv4i32_v2i64
UADDLPv4i32_v2i64
SSUBWv4i32_v2i64
USUBWv4i32_v2i64
SADDWv4i32_v2i64
UADDWv4i32_v2i64
LD3i64
ST3i64
LD4i64
ST4i64
CPYi64
UMOVvi64
SMOVvi32to64
SMOVvi16to64
SMOVvi8to64
SUBXrx64
ADDXrx64
SUBSXrx64
ADDSXrx64
MSRpstateImm4
anonymous_1365
PACIA1716
AUTIA1716
PACIB1716
AUTIB1716
FABD16
FACGE16
FCMGE16
SETF16
FCMEQ16
FRECPS16
FRSQRTS16
FACGT16
FCMGT16
FMULX16
CMP_SWAP_16
FRECPEv1f16
FRSQRTEv1f16
FCVTASv1f16
FCVTMSv1f16
FCVTNSv1f16
FCVTPSv1f16
FCVTZSv1f16
FCVTAUv1f16
FCVTMUv1f16
FCVTNUv1f16
FCVTPUv1f16
FCVTZUv1f16
FRECPXv1f16
FMLAL2v4f16
FMLSL2v4f16
FCMLAv4f16
FMLAv4f16
FRINTAv4f16
FSUBv4f16
FABDv4f16
FCADDv4f16
FADDv4f16
FACGEv4f16
FCMGEv4f16
FRECPEv4f16
FRSQRTEv4f16
SCVTFv4f16
UCVTFv4f16
FNEGv4f16
FRINTIv4f16
FMLALv4f16
FMLSLv4f16
FMULv4f16
FMINNMv4f16
FMAXNMv4f16
FRINTMv4f16
FMINv4f16
FRINTNv4f16
FADDPv4f16
FMINNMPv4f16
FMAXNMPv4f16
FMINPv4f16
FRINTPv4f16
FMAXPv4f16
FCMEQv4f16
FCVTASv4f16
FABSv4f16
FMLSv4f16
FCVTMSv4f16
FCVTNSv4f16
FRECPSv4f16
FCVTPSv4f16
FRSQRTSv4f16
FCVTZSv4f16
FACGTv4f16
FCMGTv4f16
FSQRTv4f16
FCVTAUv4f16
FCVTMUv4f16
FCVTNUv4f16
FCVTPUv4f16
FCVTZUv4f16
FDIVv4f16
FMAXv4f16
FMULXv4f16
FRINTXv4f16
FRINTZv4f16
FMLAL2lanev4f16
FMLSL2lanev4f16
FMLALlanev4f16
FMLSLlanev4f16
FMLAL2v8f16
FMLSL2v8f16
FCMLAv8f16
FMLAv8f16
FRINTAv8f16
FSUBv8f16
FABDv8f16
FCADDv8f16
FADDv8f16
FACGEv8f16
FCMGEv8f16
FRECPEv8f16
FRSQRTEv8f16
SCVTFv8f16
UCVTFv8f16
FNEGv8f16
FRINTIv8f16
FMLALv8f16
FMLSLv8f16
FMULv8f16
FMINNMv8f16
FMAXNMv8f16
FRINTMv8f16
FMINv8f16
FRINTNv8f16
FADDPv8f16
FMINNMPv8f16
FMAXNMPv8f16
FMINPv8f16
FRINTPv8f16
FMAXPv8f16
FCMEQv8f16
FCVTASv8f16
FABSv8f16
FMLSv8f16
FCVTMSv8f16
FCVTNSv8f16
FRECPSv8f16
FCVTPSv8f16
FRSQRTSv8f16
FCVTZSv8f16
FACGTv8f16
FCMGTv8f16
FSQRTv8f16
FCVTAUv8f16
FCVTMUv8f16
FCVTNUv8f16
FCVTPUv8f16
FCVTZUv8f16
FDIVv8f16
FMAXv8f16
FMULXv8f16
FRINTXv8f16
FRINTZv8f16
FMLAL2lanev8f16
FMLSL2lanev8f16
FMLALlanev8f16
FMLSLlanev8f16
LD1i16
ST1i16
SQSUBv1i16
UQSUBv1i16
USQADDv1i16
SUQADDv1i16
SCVTFv1i16
UCVTFv1i16
SQNEGv1i16
SQRDMLAHv1i16
SQDMULHv1i16
SQRDMULHv1i16
SQRDMLSHv1i16
SQSHLv1i16
UQSHLv1i16
SQRSHLv1i16
UQRSHLv1i16
SQXTNv1i16
UQXTNv1i16
SQXTUNv1i16
SQABSv1i16
LD2i16
ST2i16
LD3i16
ST3i16
LD4i16
ST4i16
TRN1v4i16
ZIP1v4i16
UZP1v4i16
REV32v4i16
TRN2v4i16
ZIP2v4i16
UZP2v4i16
REV64v4i16
SABAv4i16
UABAv4i16
MLAv4i16
SHSUBv4i16
UHSUBv4i16
SQSUBv4i16
UQSUBv4i16
BICv4i16
SABDv4i16
UABDv4i16
SRHADDv4i16
URHADDv4i16
SHADDv4i16
UHADDv4i16
USQADDv4i16
SUQADDv4i16
CMGEv4i16
SQNEGv4i16
SQRDMLAHv4i16
SQDMULHv4i16
SQRDMULHv4i16
SQRDMLSHv4i16
CMHIv4i16
MVNIv4i16
MOVIv4i16
SQSHLv4i16
UQSHLv4i16
SQRSHLv4i16
UQRSHLv4i16
SRSHLv4i16
URSHLv4i16
SSHLv4i16
USHLv4i16
SHLLv4i16
FCVTLv4i16
MULv4i16
SMINv4i16
UMINv4i16
FCVTNv4i16
SQXTNv4i16
UQXTNv4i16
SQXTUNv4i16
ADDPv4i16
SMINPv4i16
UMINPv4i16
SMAXPv4i16
UMAXPv4i16
CMEQv4i16
ORRv4i16
SQABSv4i16
CMHSv4i16
CLSv4i16
MLSv4i16
CMGTv4i16
CMTSTv4i16
SMAXv4i16
UMAXv4i16
CLZv4i16
RSUBHNv4i32_v4i16
RADDHNv4i32_v4i16
SADALPv8i8_v4i16
UADALPv8i8_v4i16
SADDLPv8i8_v4i16
UADDLPv8i8_v4i16
TRN1v8i16
ZIP1v8i16
UZP1v8i16
REV32v8i16
TRN2v8i16
ZIP2v8i16
UZP2v8i16
REV64v8i16
SABAv8i16
UABAv8i16
MLAv8i16
SHSUBv8i16
UHSUBv8i16
SQSUBv8i16
UQSUBv8i16
BICv8i16
SABDv8i16
UABDv8i16
SRHADDv8i16
URHADDv8i16
SHADDv8i16
UHADDv8i16
USQADDv8i16
SUQADDv8i16
CMGEv8i16
SQNEGv8i16
SQRDMLAHv8i16
SQDMULHv8i16
SQRDMULHv8i16
SQRDMLSHv8i16
CMHIv8i16
MVNIv8i16
MOVIv8i16
SQSHLv8i16
UQSHLv8i16
SQRSHLv8i16
UQRSHLv8i16
SRSHLv8i16
URSHLv8i16
SSHLv8i16
USHLv8i16
SHLLv8i16
FCVTLv8i16
MULv8i16
SMINv8i16
UMINv8i16
FCVTNv8i16
SQXTNv8i16
UQXTNv8i16
SQXTUNv8i16
ADDPv8i16
SMINPv8i16
UMINPv8i16
SMAXPv8i16
UMAXPv8i16
CMEQv8i16
ORRv8i16
SQABSv8i16
CMHSv8i16
CLSv8i16
MLSv8i16
CMGTv8i16
CMTSTv8i16
SMAXv8i16
UMAXv8i16
CLZv8i16
RSUBHNv4i32_v8i16
RADDHNv4i32_v8i16
SABALv16i8_v8i16
UABALv16i8_v8i16
SMLALv16i8_v8i16
UMLALv16i8_v8i16
SSUBLv16i8_v8i16
USUBLv16i8_v8i16
SABDLv16i8_v8i16
UABDLv16i8_v8i16
SADDLv16i8_v8i16
UADDLv16i8_v8i16
SMULLv16i8_v8i16
UMULLv16i8_v8i16
SMLSLv16i8_v8i16
UMLSLv16i8_v8i16
SADALPv16i8_v8i16
UADALPv16i8_v8i16
SADDLPv16i8_v8i16
UADDLPv16i8_v8i16
SSUBWv16i8_v8i16
USUBWv16i8_v8i16
SADDWv16i8_v8i16
UADDWv16i8_v8i16
SABALv8i8_v8i16
UABALv8i8_v8i16
SMLALv8i8_v8i16
UMLALv8i8_v8i16
SSUBLv8i8_v8i16
USUBLv8i8_v8i16
SABDLv8i8_v8i16
UABDLv8i8_v8i16
SADDLv8i8_v8i16
UADDLv8i8_v8i16
SMULLv8i8_v8i16
UMULLv8i8_v8i16
SMLSLv8i8_v8i16
UMLSLv8i8_v8i16
SSUBWv8i8_v8i16
USUBWv8i8_v8i16
SADDWv8i8_v8i16
UADDWv8i8_v8i16
SQDMLALi16
SQDMULLi16
SQDMLSLi16
CPYi16
UMOVvi16
JumpTableDest16
CMP_SWAP_128
SETF8
CMP_SWAP_8
LD1i8
ST1i8
SQSUBv1i8
UQSUBv1i8
USQADDv1i8
SUQADDv1i8
SQNEGv1i8
SQSHLv1i8
UQSHLv1i8
SQRSHLv1i8
UQRSHLv1i8
SQXTNv1i8
UQXTNv1i8
SQXTUNv1i8
SQABSv1i8
LD2i8
ST2i8
LD3i8
ST3i8
LD4i8
ST4i8
TRN1v16i8
ZIP1v16i8
UZP1v16i8
REV32v16i8
TRN2v16i8
ZIP2v16i8
UZP2v16i8
REV64v16i8
REV16v16i8
SABAv16i8
UABAv16i8
MLAv16i8
SHSUBv16i8
UHSUBv16i8
SQSUBv16i8
UQSUBv16i8
BICv16i8
SABDv16i8
UABDv16i8
SRHADDv16i8
URHADDv16i8
SHADDv16i8
UHADDv16i8
USQADDv16i8
SUQADDv16i8
ANDv16i8
CMGEv16i8
BIFv16i8
SQNEGv16i8
CMHIv16i8
SQSHLv16i8
UQSHLv16i8
SQRSHLv16i8
UQRSHLv16i8
SRSHLv16i8
URSHLv16i8
SSHLv16i8
USHLv16i8
SHLLv16i8
PMULLv16i8
BSLv16i8
PMULv16i8
SMINv16i8
UMINv16i8
ORNv16i8
SQXTNv16i8
UQXTNv16i8
SQXTUNv16i8
ADDPv16i8
SMINPv16i8
UMINPv16i8
SMAXPv16i8
UMAXPv16i8
CMEQv16i8
EORv16i8
ORRv16i8
SQABSv16i8
CMHSv16i8
CLSv16i8
MLSv16i8
CMGTv16i8
RBITv16i8
CNTv16i8
SDOTv16i8
UDOTv16i8
NOTv16i8
CMTSTv16i8
EXTv16i8
SMAXv16i8
UMAXv16i8
CLZv16i8
RSUBHNv8i16_v16i8
RADDHNv8i16_v16i8
SDOTlanev16i8
UDOTlanev16i8
TRN1v8i8
ZIP1v8i8
UZP1v8i8
REV32v8i8
TRN2v8i8
ZIP2v8i8
UZP2v8i8
REV64v8i8
REV16v8i8
SABAv8i8
UABAv8i8
MLAv8i8
SHSUBv8i8
UHSUBv8i8
SQSUBv8i8
UQSUBv8i8
BICv8i8
SABDv8i8
UABDv8i8
SRHADDv8i8
URHADDv8i8
SHADDv8i8
UHADDv8i8
USQADDv8i8
SUQADDv8i8
ANDv8i8
CMGEv8i8
BIFv8i8
SQNEGv8i8
CMHIv8i8
SQSHLv8i8
UQSHLv8i8
SQRSHLv8i8
UQRSHLv8i8
SRSHLv8i8
URSHLv8i8
SSHLv8i8
USHLv8i8
SHLLv8i8
PMULLv8i8
BSLv8i8
PMULv8i8
SMINv8i8
UMINv8i8
ORNv8i8
SQXTNv8i8
UQXTNv8i8
SQXTUNv8i8
ADDPv8i8
SMINPv8i8
UMINPv8i8
SMAXPv8i8
UMAXPv8i8
CMEQv8i8
EORv8i8
ORRv8i8
SQABSv8i8
CMHSv8i8
CLSv8i8
MLSv8i8
CMGTv8i8
RBITv8i8
CNTv8i8
SDOTv8i8
UDOTv8i8
NOTv8i8
CMTSTv8i8
EXTv8i8
SMAXv8i8
UMAXv8i8
CLZv8i8
RSUBHNv8i16_v8i8
RADDHNv8i16_v8i8
SDOTlanev8i8
UDOTlanev8i8
CPYi8
UMOVvi8
JumpTableDest8
SM3TT1A
SM3TT2A
BRAA
BLRAA
ERETAA
MOVaddrBA
PACDA
AUTDA
PACGA
PACIA
AUTIA
G_FMA
PACDZA
AUTDZA
PACIZA
AUTIZA
LD1B
ST1B
SM3TT1B
LD2B
ST2B
SM3TT2B
LD3B
ST3B
LD4B
ST4B
LDADDAB
LDSMINAB
LDUMINAB
SWPAB
BRAB
BLRAB
LDCLRAB
LDEORAB
CASAB
ERETAB
LDSETAB
LDSMAXAB
LDUMAXAB
PACDB
LDADDB
AUTDB
PACIB
AUTIB
LDADDALB
LDSMINALB
LDUMINALB
SWPALB
LDCLRALB
LDEORALB
CASALB
LDSETALB
LDSMAXALB
LDUMAXALB
LDADDLB
LDSMINLB
LDUMINLB
SWPLB
LDCLRLB
LDEORLB
CASLB
LDSETLB
LDSMAXLB
LDUMAXLB
LDSMINB
LDUMINB
SWPB
LDARB
LDLARB
LDCLRB
STLLRB
STLRB
LDEORB
LDAPRB
LDAXRB
LDXRB
STLXRB
STXRB
CASB
LDSETB
G_FSUB
G_SUB
G_ATOMICRMW_SUB
LDSMAXB
LDUMAXB
PACDZB
AUTDZB
PACIZB
AUTIZB
PTRUE_B
INDEX_II_B
INDEX_RI_B
LSL_ZZI_B
DUP_ZZI_B
ASR_ZZI_B
LSR_ZZI_B
SQSUB_ZI_B
UQSUB_ZI_B
SQADD_ZI_B
UQADD_ZI_B
MUL_ZI_B
SMIN_ZI_B
UMIN_ZI_B
DUP_ZI_B
SUBR_ZI_B
SMAX_ZI_B
UMAX_ZI_B
CMPGE_PPzZI_B
CMPLE_PPzZI_B
CMPNE_PPzZI_B
CMPHI_PPzZI_B
CMPLO_PPzZI_B
CMPEQ_PPzZI_B
CMPHS_PPzZI_B
CMPLS_PPzZI_B
CMPGT_PPzZI_B
CMPLT_PPzZI_B
ASRD_ZPmI_B
LSL_ZPmI_B
ASR_ZPmI_B
LSR_ZPmI_B
CPY_ZPmI_B
CPY_ZPzI_B
TRN1_PPP_B
ZIP1_PPP_B
UZP1_PPP_B
TRN2_PPP_B
ZIP2_PPP_B
UZP2_PPP_B
CNTP_XPP_B
REV_PP_B
UQDECP_WP_B
UQINCP_WP_B
SQDECP_XP_B
UQDECP_XP_B
SQINCP_XP_B
UQINCP_XP_B
LD1RQ_B
INDEX_IR_B
INDEX_RR_B
DUP_ZR_B
INSR_ZR_B
CPY_ZPmR_B
PTRUES_B
PNEXT_B
INSR_ZV_B
CPY_ZPmV_B
WHILELE_PWW_B
WHILELO_PWW_B
WHILELS_PWW_B
WHILELT_PWW_B
WHILELE_PXX_B
WHILELO_PXX_B
WHILELS_PXX_B
WHILELT_PXX_B
CLASTA_RPZ_B
CLASTB_RPZ_B
CLASTA_VPZ_B
CLASTB_VPZ_B
SADDV_VPZ_B
UADDV_VPZ_B
ANDV_VPZ_B
SMINV_VPZ_B
UMINV_VPZ_B
EORV_VPZ_B
SMAXV_VPZ_B
UMAXV_VPZ_B
CLASTA_ZPZ_B
CLASTB_ZPZ_B
SPLICE_ZPZ_B
SEL_ZPZZ_B
TRN1_ZZZ_B
ZIP1_ZZZ_B
UZP1_ZZZ_B
TRN2_ZZZ_B
ZIP2_ZZZ_B
UZP2_ZZZ_B
SQSUB_ZZZ_B
UQSUB_ZZZ_B
SQADD_ZZZ_B
UQADD_ZZZ_B
LSL_WIDE_ZZZ_B
ASR_WIDE_ZZZ_B
LSR_WIDE_ZZZ_B
TBL_ZZZ_B
REV_ZZ_B
MLA_ZPmZZ_B
MSB_ZPmZZ_B
MAD_ZPmZZ_B
MLS_ZPmZZ_B
CMPGE_WIDE_PPzZZ_B
CMPLE_WIDE_PPzZZ_B
CMPNE_WIDE_PPzZZ_B
CMPHI_WIDE_PPzZZ_B
CMPLO_WIDE_PPzZZ_B
CMPEQ_WIDE_PPzZZ_B
CMPHS_WIDE_PPzZZ_B
CMPLS_WIDE_PPzZZ_B
CMPGT_WIDE_PPzZZ_B
CMPLT_WIDE_PPzZZ_B
CMPGE_PPzZZ_B
CMPNE_PPzZZ_B
CMPHI_PPzZZ_B
CMPEQ_PPzZZ_B
CMPHS_PPzZZ_B
CMPGT_PPzZZ_B
SUB_ZPmZ_B
BIC_ZPmZ_B
SABD_ZPmZ_B
UABD_ZPmZ_B
ADD_ZPmZ_B
AND_ZPmZ_B
LSL_WIDE_ZPmZ_B
ASR_WIDE_ZPmZ_B
LSR_WIDE_ZPmZ_B
NEG_ZPmZ_B
SMULH_ZPmZ_B
UMULH_ZPmZ_B
LSL_ZPmZ_B
MUL_ZPmZ_B
SMIN_ZPmZ_B
UMIN_ZPmZ_B
SUBR_ZPmZ_B
LSLR_ZPmZ_B
EOR_ZPmZ_B
ORR_ZPmZ_B
ASRR_ZPmZ_B
LSRR_ZPmZ_B
ASR_ZPmZ_B
LSR_ZPmZ_B
ABS_ZPmZ_B
CLS_ZPmZ_B
RBIT_ZPmZ_B
CNT_ZPmZ_B
CNOT_ZPmZ_B
SMAX_ZPmZ_B
UMAX_ZPmZ_B
MOVPRFX_ZPmZ_B
CLZ_ZPmZ_B
MOVPRFX_ZPzZ_B
SQDECP_XPWd_B
SQINCP_XPWd_B
AUTPAC
G_INTRINSIC
G_FPTRUNC
G_INTRINSIC_TRUNC
G_TRUNC
G_BUILD_VECTOR_TRUNC
LD1D
SST1D
LD2D
ST2D
LD3D
ST3D
LD4D
ST4D
G_SEXTLOAD
G_ZEXTLOAD
G_LOAD
CATCHPAD
XPACD
G_FADD
G_ADD
G_ATOMICRMW_ADD
SST1D_SCALED
PRFB_D_SCALED
PRFD_D_SCALED
SST1H_D_SCALED
PRFH_D_SCALED
SST1W_D_SCALED
PRFW_D_SCALED
SST1D_SXTW_SCALED
PRFB_D_SXTW_SCALED
PRFD_D_SXTW_SCALED
SST1H_D_SXTW_SCALED
PRFH_D_SXTW_SCALED
SST1W_D_SXTW_SCALED
PRFW_D_SXTW_SCALED
PRFB_S_SXTW_SCALED
PRFD_S_SXTW_SCALED
SST1H_S_SXTW_SCALED
PRFH_S_SXTW_SCALED
PRFW_S_SXTW_SCALED
SST1W_SXTW_SCALED
SST1D_UXTW_SCALED
PRFB_D_UXTW_SCALED
PRFD_D_UXTW_SCALED
SST1H_D_UXTW_SCALED
PRFH_D_UXTW_SCALED
SST1W_D_UXTW_SCALED
PRFW_D_UXTW_SCALED
PRFB_S_UXTW_SCALED
PRFD_S_UXTW_SCALED
SST1H_S_UXTW_SCALED
PRFH_S_UXTW_SCALED
PRFW_S_UXTW_SCALED
SST1W_UXTW_SCALED
MOVID
G_ATOMICRMW_NAND
G_AND
G_ATOMICRMW_AND
LIFETIME_END
G_BRCOND
G_INTRINSIC_ROUND
LOAD_STACK_GUARD
FCMGE_PPzZ0_D
FCMLE_PPzZ0_D
FCMNE_PPzZ0_D
FCMEQ_PPzZ0_D
FCMGT_PPzZ0_D
FCMLT_PPzZ0_D
LD1B_D
SST1B_D
LD1SB_D
PTRUE_D
LD1H_D
SST1H_D
LD1SH_D
INDEX_II_D
INDEX_RI_D
FMLA_ZZZI_D
FMUL_ZZZI_D
FMLS_ZZZI_D
SDOT_ZZZI_D
UDOT_ZZZI_D
FTMAD_ZZI_D
LSL_ZZI_D
DUP_ZZI_D
ASR_ZZI_D
LSR_ZZI_D
SQSUB_ZI_D
UQSUB_ZI_D
SQADD_ZI_D
UQADD_ZI_D
MUL_ZI_D
SMIN_ZI_D
UMIN_ZI_D
FDUP_ZI_D
SUBR_ZI_D
SMAX_ZI_D
UMAX_ZI_D
CMPGE_PPzZI_D
CMPLE_PPzZI_D
CMPNE_PPzZI_D
CMPHI_PPzZI_D
CMPLO_PPzZI_D
CMPEQ_PPzZI_D
CMPHS_PPzZI_D
CMPLS_PPzZI_D
CMPGT_PPzZI_D
CMPLT_PPzZI_D
FSUB_ZPmI_D
FADD_ZPmI_D
ASRD_ZPmI_D
LSL_ZPmI_D
FMUL_ZPmI_D
FMINNM_ZPmI_D
FMAXNM_ZPmI_D
FMIN_ZPmI_D
FSUBR_ZPmI_D
ASR_ZPmI_D
LSR_ZPmI_D
FMAX_ZPmI_D
FCPY_ZPmI_D
CPY_ZPzI_D
TRN1_PPP_D
ZIP1_PPP_D
UZP1_PPP_D
TRN2_PPP_D
ZIP2_PPP_D
UZP2_PPP_D
CNTP_XPP_D
REV_PP_D
UQDECP_WP_D
UQINCP_WP_D
SQDECP_XP_D
UQDECP_XP_D
SQINCP_XP_D
UQINCP_XP_D
SQDECP_ZP_D
UQDECP_ZP_D
SQINCP_ZP_D
UQINCP_ZP_D
LD1RQ_D
INDEX_IR_D
INDEX_RR_D
DUP_ZR_D
INSR_ZR_D
CPY_ZPmR_D
PTRUES_D
PNEXT_D
INSR_ZV_D
CPY_ZPmV_D
LD1W_D
SST1W_D
LD1SW_D
WHILELE_PWW_D
WHILELO_PWW_D
WHILELS_PWW_D
WHILELT_PWW_D
WHILELE_PXX_D
WHILELO_PXX_D
WHILELS_PXX_D
WHILELT_PXX_D
CLASTA_RPZ_D
CLASTB_RPZ_D
FADDA_VPZ_D
CLASTA_VPZ_D
CLASTB_VPZ_D
FADDV_VPZ_D
UADDV_VPZ_D
ANDV_VPZ_D
FMINNMV_VPZ_D
FMAXNMV_VPZ_D
FMINV_VPZ_D
SMINV_VPZ_D
UMINV_VPZ_D
EORV_VPZ_D
FMAXV_VPZ_D
SMAXV_VPZ_D
UMAXV_VPZ_D
CLASTA_ZPZ_D
CLASTB_ZPZ_D
SPLICE_ZPZ_D
COMPACT_ZPZ_D
SEL_ZPZZ_D
TRN1_ZZZ_D
ZIP1_ZZZ_D
UZP1_ZZZ_D
TRN2_ZZZ_D
ZIP2_ZZZ_D
UZP2_ZZZ_D
FSUB_ZZZ_D
SQSUB_ZZZ_D
UQSUB_ZZZ_D
FADD_ZZZ_D
SQADD_ZZZ_D
UQADD_ZZZ_D
TBL_ZZZ_D
FTSSEL_ZZZ_D
FMUL_ZZZ_D
FTSMUL_ZZZ_D
FRECPS_ZZZ_D
FRSQRTS_ZZZ_D
SDOT_ZZZ_D
UDOT_ZZZ_D
FEXPA_ZZ_D
FRECPE_ZZ_D
FRSQRTE_ZZ_D
SUNPKHI_ZZ_D
UUNPKHI_ZZ_D
SUNPKLO_ZZ_D
UUNPKLO_ZZ_D
REV_ZZ_D
FCMLA_ZPmZZ_D
FMLA_ZPmZZ_D
FNMLA_ZPmZZ_D
FMSB_ZPmZZ_D
FNMSB_ZPmZZ_D
FMAD_ZPmZZ_D
FNMAD_ZPmZZ_D
FMLS_ZPmZZ_D
FNMLS_ZPmZZ_D
FACGE_PPzZZ_D
FCMGE_PPzZZ_D
CMPGE_PPzZZ_D
FCMNE_PPzZZ_D
CMPNE_PPzZZ_D
CMPHI_PPzZZ_D
FCMUO_PPzZZ_D
FCMEQ_PPzZZ_D
CMPEQ_PPzZZ_D
CMPHS_PPzZZ_D
FACGT_PPzZZ_D
FCMGT_PPzZZ_D
CMPGT_PPzZZ_D
FRINTA_ZPmZ_D
SXTB_ZPmZ_D
UXTB_ZPmZ_D
FSUB_ZPmZ_D
REVB_ZPmZ_D
BIC_ZPmZ_D
FABD_ZPmZ_D
SABD_ZPmZ_D
UABD_ZPmZ_D
FCADD_ZPmZ_D
FADD_ZPmZ_D
AND_ZPmZ_D
FSCALE_ZPmZ_D
FNEG_ZPmZ_D
SMULH_ZPmZ_D
UMULH_ZPmZ_D
SXTH_ZPmZ_D
UXTH_ZPmZ_D
REVH_ZPmZ_D
FRINTI_ZPmZ_D
LSL_ZPmZ_D
FMUL_ZPmZ_D
FMINNM_ZPmZ_D
FMAXNM_ZPmZ_D
FRINTM_ZPmZ_D
FMIN_ZPmZ_D
SMIN_ZPmZ_D
UMIN_ZPmZ_D
FRINTN_ZPmZ_D
FRINTP_ZPmZ_D
FSUBR_ZPmZ_D
LSLR_ZPmZ_D
EOR_ZPmZ_D
ORR_ZPmZ_D
ASRR_ZPmZ_D
LSRR_ZPmZ_D
ASR_ZPmZ_D
LSR_ZPmZ_D
FDIVR_ZPmZ_D
SDIVR_ZPmZ_D
UDIVR_ZPmZ_D
FABS_ZPmZ_D
CLS_ZPmZ_D
RBIT_ZPmZ_D
CNT_ZPmZ_D
CNOT_ZPmZ_D
FSQRT_ZPmZ_D
FDIV_ZPmZ_D
SDIV_ZPmZ_D
UDIV_ZPmZ_D
SXTW_ZPmZ_D
UXTW_ZPmZ_D
REVW_ZPmZ_D
FMAX_ZPmZ_D
SMAX_ZPmZ_D
UMAX_ZPmZ_D
MOVPRFX_ZPmZ_D
FMULX_ZPmZ_D
FRECPX_ZPmZ_D
FRINTX_ZPmZ_D
CLZ_ZPmZ_D
FRINTZ_ZPmZ_D
MOVPRFX_ZPzZ_D
SQDECP_XPWd_D
SQINCP_XPWd_D
SCVTF_ZPmZ_DtoD
UCVTF_ZPmZ_DtoD
FCVTZS_ZPmZ_DtoD
FCVTZU_ZPmZ_DtoD
FCVTZS_ZPmZ_HtoD
FCVT_ZPmZ_HtoD
FCVTZU_ZPmZ_HtoD
SCVTF_ZPmZ_StoD
UCVTF_ZPmZ_StoD
FCVTZS_ZPmZ_StoD
FCVT_ZPmZ_StoD
FCVTZU_ZPmZ_StoD
SM4E
G_SSUBE
G_USUBE
SPACE
REG_SEQUENCE
G_SADDE
G_UADDE
BUNDLE
LOCAL_ESCAPE
G_STORE
PFALSE
DBG_VALUE
G_GLOBAL_VALUE
G_CTLZ_ZERO_UNDEF
G_CTTZ_ZERO_UNDEF
G_IMPLICIT_DEF
RMIF
XAFLAG
AXFLAG
SUBG
ADDG
G_FNEG
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
G_ATOMIC_CMPXCHG
G_ATOMICRMW_XCHG
G_FLOG
G_VAARG
LD1H
ST1H
SHA512H
LD2H
ST2H
LD3H
ST3H
LD4H
ST4H
LDADDAH
LDSMINAH
LDUMINAH
SWPAH
LDCLRAH
LDEORAH
CASAH
LDSETAH
LDSMAXAH
LDUMAXAH
LDADDH
LDADDALH
LDSMINALH
LDUMINALH
SWPALH
LDCLRALH
LDEORALH
CASALH
LDSETALH
LDSMAXALH
LDUMAXALH
LDADDLH
LDSMINLH
LDUMINLH
SWPLH
LDCLRLH
LDEORLH
CASLH
LDSETLH
G_SMULH
G_UMULH
LDSMAXLH
LDUMAXLH
LDSMINH
LDUMINH
SWPH
LDARH
LDLARH
LDCLRH
STLLRH
STLRH
LDEORH
LDAPRH
LDAXRH
LDXRH
STLXRH
STXRH
CASH
LDSETH
LDSMAXH
LDUMAXH
FCMGE_PPzZ0_H
FCMLE_PPzZ0_H
FCMNE_PPzZ0_H
FCMEQ_PPzZ0_H
FCMGT_PPzZ0_H
FCMLT_PPzZ0_H
LD1B_H
ST1B_H
LD1SB_H
PTRUE_H
INDEX_II_H
INDEX_RI_H
FCMLA_ZZZI_H
FMLA_ZZZI_H
FMUL_ZZZI_H
FMLS_ZZZI_H
FTMAD_ZZI_H
LSL_ZZI_H
DUP_ZZI_H
ASR_ZZI_H
LSR_ZZI_H
SQSUB_ZI_H
UQSUB_ZI_H
SQADD_ZI_H
UQADD_ZI_H
MUL_ZI_H
SMIN_ZI_H
UMIN_ZI_H
FDUP_ZI_H
SUBR_ZI_H
SMAX_ZI_H
UMAX_ZI_H
CMPGE_PPzZI_H
CMPLE_PPzZI_H
CMPNE_PPzZI_H
CMPHI_PPzZI_H
CMPLO_PPzZI_H
CMPEQ_PPzZI_H
CMPHS_PPzZI_H
CMPLS_PPzZI_H
CMPGT_PPzZI_H
CMPLT_PPzZI_H
FSUB_ZPmI_H
FADD_ZPmI_H
ASRD_ZPmI_H
LSL_ZPmI_H
FMUL_ZPmI_H
FMINNM_ZPmI_H
FMAXNM_ZPmI_H
FMIN_ZPmI_H
FSUBR_ZPmI_H
ASR_ZPmI_H
LSR_ZPmI_H
FMAX_ZPmI_H
FCPY_ZPmI_H
CPY_ZPzI_H
TRN1_PPP_H
ZIP1_PPP_H
UZP1_PPP_H
TRN2_PPP_H
ZIP2_PPP_H
UZP2_PPP_H
CNTP_XPP_H
REV_PP_H
UQDECP_WP_H
UQINCP_WP_H
SQDECP_XP_H
UQDECP_XP_H
SQINCP_XP_H
UQINCP_XP_H
SQDECP_ZP_H
UQDECP_ZP_H
SQINCP_ZP_H
UQINCP_ZP_H
LD1RQ_H
INDEX_IR_H
INDEX_RR_H
DUP_ZR_H
INSR_ZR_H
CPY_ZPmR_H
PTRUES_H
PNEXT_H
INSR_ZV_H
CPY_ZPmV_H
WHILELE_PWW_H
WHILELO_PWW_H
WHILELS_PWW_H
WHILELT_PWW_H
WHILELE_PXX_H
WHILELO_PXX_H
WHILELS_PXX_H
WHILELT_PXX_H
CLASTA_RPZ_H
CLASTB_RPZ_H
FADDA_VPZ_H
CLASTA_VPZ_H
CLASTB_VPZ_H
FADDV_VPZ_H
SADDV_VPZ_H
UADDV_VPZ_H
ANDV_VPZ_H
FMINNMV_VPZ_H
FMAXNMV_VPZ_H
FMINV_VPZ_H
SMINV_VPZ_H
UMINV_VPZ_H
EORV_VPZ_H
FMAXV_VPZ_H
SMAXV_VPZ_H
UMAXV_VPZ_H
CLASTA_ZPZ_H
CLASTB_ZPZ_H
SPLICE_ZPZ_H
SEL_ZPZZ_H
TRN1_ZZZ_H
ZIP1_ZZZ_H
UZP1_ZZZ_H
TRN2_ZZZ_H
ZIP2_ZZZ_H
UZP2_ZZZ_H
FSUB_ZZZ_H
SQSUB_ZZZ_H
UQSUB_ZZZ_H
FADD_ZZZ_H
SQADD_ZZZ_H
UQADD_ZZZ_H
LSL_WIDE_ZZZ_H
ASR_WIDE_ZZZ_H
LSR_WIDE_ZZZ_H
TBL_ZZZ_H
FTSSEL_ZZZ_H
FMUL_ZZZ_H
FTSMUL_ZZZ_H
FRECPS_ZZZ_H
FRSQRTS_ZZZ_H
FEXPA_ZZ_H
FRECPE_ZZ_H
FRSQRTE_ZZ_H
SUNPKHI_ZZ_H
UUNPKHI_ZZ_H
SUNPKLO_ZZ_H
UUNPKLO_ZZ_H
REV_ZZ_H
FCMLA_ZPmZZ_H
FMLA_ZPmZZ_H
FNMLA_ZPmZZ_H
FMSB_ZPmZZ_H
FNMSB_ZPmZZ_H
FMAD_ZPmZZ_H
FNMAD_ZPmZZ_H
FMLS_ZPmZZ_H
FNMLS_ZPmZZ_H
CMPGE_WIDE_PPzZZ_H
CMPLE_WIDE_PPzZZ_H
CMPNE_WIDE_PPzZZ_H
CMPHI_WIDE_PPzZZ_H
CMPLO_WIDE_PPzZZ_H
CMPEQ_WIDE_PPzZZ_H
CMPHS_WIDE_PPzZZ_H
CMPLS_WIDE_PPzZZ_H
CMPGT_WIDE_PPzZZ_H
CMPLT_WIDE_PPzZZ_H
FACGE_PPzZZ_H
FCMGE_PPzZZ_H
CMPGE_PPzZZ_H
FCMNE_PPzZZ_H
CMPNE_PPzZZ_H
CMPHI_PPzZZ_H
FCMUO_PPzZZ_H
FCMEQ_PPzZZ_H
CMPEQ_PPzZZ_H
CMPHS_PPzZZ_H
FACGT_PPzZZ_H
FCMGT_PPzZZ_H
CMPGT_PPzZZ_H
FRINTA_ZPmZ_H
SXTB_ZPmZ_H
UXTB_ZPmZ_H
FSUB_ZPmZ_H
REVB_ZPmZ_H
BIC_ZPmZ_H
FABD_ZPmZ_H
SABD_ZPmZ_H
UABD_ZPmZ_H
FCADD_ZPmZ_H
FADD_ZPmZ_H
AND_ZPmZ_H
LSL_WIDE_ZPmZ_H
ASR_WIDE_ZPmZ_H
LSR_WIDE_ZPmZ_H
FSCALE_ZPmZ_H
FNEG_ZPmZ_H
SMULH_ZPmZ_H
UMULH_ZPmZ_H
FRINTI_ZPmZ_H
LSL_ZPmZ_H
FMUL_ZPmZ_H
FMINNM_ZPmZ_H
FMAXNM_ZPmZ_H
FRINTM_ZPmZ_H
FMIN_ZPmZ_H
SMIN_ZPmZ_H
UMIN_ZPmZ_H
FRINTN_ZPmZ_H
FRINTP_ZPmZ_H
FSUBR_ZPmZ_H
LSLR_ZPmZ_H
EOR_ZPmZ_H
ORR_ZPmZ_H
ASRR_ZPmZ_H
LSRR_ZPmZ_H
ASR_ZPmZ_H
LSR_ZPmZ_H
FDIVR_ZPmZ_H
FABS_ZPmZ_H
CLS_ZPmZ_H
RBIT_ZPmZ_H
CNT_ZPmZ_H
CNOT_ZPmZ_H
FSQRT_ZPmZ_H
FDIV_ZPmZ_H
FMAX_ZPmZ_H
SMAX_ZPmZ_H
UMAX_ZPmZ_H
MOVPRFX_ZPmZ_H
FMULX_ZPmZ_H
FRECPX_ZPmZ_H
FRINTX_ZPmZ_H
CLZ_ZPmZ_H
FRINTZ_ZPmZ_H
MOVPRFX_ZPzZ_H
SQDECP_XPWd_H
SQINCP_XPWd_H
SCVTF_ZPmZ_DtoH
UCVTF_ZPmZ_DtoH
FCVT_ZPmZ_DtoH
SCVTF_ZPmZ_HtoH
UCVTF_ZPmZ_HtoH
FCVTZS_ZPmZ_HtoH
FCVTZU_ZPmZ_HtoH
SCVTF_ZPmZ_StoH
UCVTF_ZPmZ_StoH
FCVT_ZPmZ_StoH
XPACI
G_PHI
XPACLRI
PRFB_PRI
PRFD_PRI
PRFH_PRI
PRFW_PRI
LDNT1B_ZRI
STNT1B_ZRI
LDNT1D_ZRI
STNT1D_ZRI
LDNT1H_ZRI
STNT1H_ZRI
LDNT1W_ZRI
STNT1W_ZRI
G_FPTOSI
TCRETURNriBTI
G_FPTOUI
LDR_PXI
STR_PXI
ADDPL_XXI
ADDVL_XXI
LDR_ZXI
STR_ZXI
RDVLI_XI
PRFB_D_PZI
PRFD_D_PZI
PRFH_D_PZI
PRFW_D_PZI
PRFB_S_PZI
PRFD_S_PZI
PRFH_S_PZI
PRFW_S_PZI
EXT_ZZI
AND_ZI
DUPM_ZI
EOR_ZI
ORR_ZI
SQDECB_XPiWdI
SQINCB_XPiWdI
SQDECD_XPiWdI
SQINCD_XPiWdI
SQDECH_XPiWdI
SQINCH_XPiWdI
SQDECW_XPiWdI
SQINCW_XPiWdI
UQDECB_WPiI
UQINCB_WPiI
UQDECD_WPiI
UQINCD_WPiI
UQDECH_WPiI
UQINCH_WPiI
UQDECW_WPiI
UQINCW_WPiI
SQDECB_XPiI
UQDECB_XPiI
SQINCB_XPiI
UQINCB_XPiI
CNTB_XPiI
SQDECD_XPiI
UQDECD_XPiI
SQINCD_XPiI
UQINCD_XPiI
CNTD_XPiI
SQDECH_XPiI
UQDECH_XPiI
SQINCH_XPiI
UQINCH_XPiI
CNTH_XPiI
SQDECW_XPiI
UQDECW_XPiI
SQINCW_XPiI
UQINCW_XPiI
CNTW_XPiI
SQDECD_ZPiI
UQDECD_ZPiI
SQINCD_ZPiI
UQINCD_ZPiI
SQDECH_ZPiI
UQDECH_ZPiI
SQINCH_ZPiI
UQINCH_ZPiI
SQDECW_ZPiI
UQDECW_ZPiI
SQINCW_ZPiI
UQINCW_ZPiI
G_PTR_MASK
LDFF1B_REAL
GLD1D_REAL
GLDFF1D_REAL
GLD1D_SCALED_REAL
GLDFF1D_SCALED_REAL
GLD1H_D_SCALED_REAL
GLDFF1H_D_SCALED_REAL
GLD1SH_D_SCALED_REAL
GLDFF1SH_D_SCALED_REAL
GLD1W_D_SCALED_REAL
GLDFF1W_D_SCALED_REAL
GLD1SW_D_SCALED_REAL
GLDFF1SW_D_SCALED_REAL
GLD1D_SXTW_SCALED_REAL
GLDFF1D_SXTW_SCALED_REAL
GLD1H_D_SXTW_SCALED_REAL
GLDFF1H_D_SXTW_SCALED_REAL
GLD1SH_D_SXTW_SCALED_REAL
GLDFF1SH_D_SXTW_SCALED_REAL
GLD1W_D_SXTW_SCALED_REAL
GLDFF1W_D_SXTW_SCALED_REAL
GLD1SW_D_SXTW_SCALED_REAL
GLDFF1SW_D_SXTW_SCALED_REAL
GLD1H_S_SXTW_SCALED_REAL
GLDFF1H_S_SXTW_SCALED_REAL
GLD1SH_S_SXTW_SCALED_REAL
GLDFF1SH_S_SXTW_SCALED_REAL
GLD1W_SXTW_SCALED_REAL
GLDFF1W_SXTW_SCALED_REAL
GLD1D_UXTW_SCALED_REAL
GLDFF1D_UXTW_SCALED_REAL
GLD1H_D_UXTW_SCALED_REAL
GLDFF1H_D_UXTW_SCALED_REAL
GLD1SH_D_UXTW_SCALED_REAL
GLDFF1SH_D_UXTW_SCALED_REAL
GLD1W_D_UXTW_SCALED_REAL
GLDFF1W_D_UXTW_SCALED_REAL
GLD1SW_D_UXTW_SCALED_REAL
GLDFF1SW_D_UXTW_SCALED_REAL
GLD1H_S_UXTW_SCALED_REAL
GLDFF1H_S_UXTW_SCALED_REAL
GLD1SH_S_UXTW_SCALED_REAL
GLDFF1SH_S_UXTW_SCALED_REAL
GLD1W_UXTW_SCALED_REAL
GLDFF1W_UXTW_SCALED_REAL
GLD1B_D_REAL
GLDFF1B_D_REAL
GLD1SB_D_REAL
GLDFF1SB_D_REAL
GLD1H_D_REAL
GLDFF1H_D_REAL
GLD1SH_D_REAL
GLDFF1SH_D_REAL
GLD1W_D_REAL
GLDFF1W_D_REAL
GLD1SW_D_REAL
GLDFF1SW_D_REAL
LDFF1H_REAL
LDFF1B_H_REAL
LDFF1SB_H_REAL
LD1B_IMM_REAL
LDNF1B_IMM_REAL
GLD1D_IMM_REAL
GLDFF1D_IMM_REAL
LDNF1D_IMM_REAL
GLD1B_D_IMM_REAL
GLDFF1B_D_IMM_REAL
LDNF1B_D_IMM_REAL
GLD1SB_D_IMM_REAL
GLDFF1SB_D_IMM_REAL
LDNF1SB_D_IMM_REAL
GLD1H_D_IMM_REAL
GLDFF1H_D_IMM_REAL
LDNF1H_D_IMM_REAL
GLD1SH_D_IMM_REAL
GLDFF1SH_D_IMM_REAL
LDNF1SH_D_IMM_REAL
GLD1W_D_IMM_REAL
GLDFF1W_D_IMM_REAL
LDNF1W_D_IMM_REAL
GLD1SW_D_IMM_REAL
GLDFF1SW_D_IMM_REAL
LDNF1SW_D_IMM_REAL
LD1H_IMM_REAL
LDNF1H_IMM_REAL
LD1B_H_IMM_REAL
LDNF1B_H_IMM_REAL
LD1SB_H_IMM_REAL
LDNF1SB_H_IMM_REAL
GLD1B_S_IMM_REAL
GLDFF1B_S_IMM_REAL
LDNF1B_S_IMM_REAL
GLD1SB_S_IMM_REAL
GLDFF1SB_S_IMM_REAL
LDNF1SB_S_IMM_REAL
GLD1H_S_IMM_REAL
GLDFF1H_S_IMM_REAL
LDNF1H_S_IMM_REAL
GLD1SH_S_IMM_REAL
GLDFF1SH_S_IMM_REAL
LDNF1SH_S_IMM_REAL
GLD1W_IMM_REAL
GLDFF1W_IMM_REAL
LDNF1W_IMM_REAL
LDFF1B_S_REAL
LDFF1SB_S_REAL
LDFF1H_S_REAL
LDFF1SH_S_REAL
LDFF1W_REAL
GLD1D_SXTW_REAL
GLDFF1D_SXTW_REAL
GLD1B_D_SXTW_REAL
GLDFF1B_D_SXTW_REAL
GLD1SB_D_SXTW_REAL
GLDFF1SB_D_SXTW_REAL
GLD1H_D_SXTW_REAL
GLDFF1H_D_SXTW_REAL
GLD1SH_D_SXTW_REAL
GLDFF1SH_D_SXTW_REAL
GLD1W_D_SXTW_REAL
GLDFF1W_D_SXTW_REAL
GLD1SW_D_SXTW_REAL
GLDFF1SW_D_SXTW_REAL
GLD1B_S_SXTW_REAL
GLDFF1B_S_SXTW_REAL
GLD1SB_S_SXTW_REAL
GLDFF1SB_S_SXTW_REAL
GLD1H_S_SXTW_REAL
GLDFF1H_S_SXTW_REAL
GLD1SH_S_SXTW_REAL
GLDFF1SH_S_SXTW_REAL
GLD1W_SXTW_REAL
GLDFF1W_SXTW_REAL
GLD1D_UXTW_REAL
GLDFF1D_UXTW_REAL
GLD1B_D_UXTW_REAL
GLDFF1B_D_UXTW_REAL
GLD1SB_D_UXTW_REAL
GLDFF1SB_D_UXTW_REAL
GLD1H_D_UXTW_REAL
GLDFF1H_D_UXTW_REAL
GLD1SH_D_UXTW_REAL
GLDFF1SH_D_UXTW_REAL
GLD1W_D_UXTW_REAL
GLDFF1W_D_UXTW_REAL
GLD1SW_D_UXTW_REAL
GLDFF1SW_D_UXTW_REAL
GLD1B_S_UXTW_REAL
GLDFF1B_S_UXTW_REAL
GLD1SB_S_UXTW_REAL
GLDFF1SB_S_UXTW_REAL
GLD1H_S_UXTW_REAL
GLDFF1H_S_UXTW_REAL
GLD1SH_S_UXTW_REAL
GLDFF1SH_S_UXTW_REAL
GLD1W_UXTW_REAL
GLDFF1W_UXTW_REAL
GC_LABEL
DBG_LABEL
EH_LABEL
ANNOTATION_LABEL
ICALL_BRANCH_FUNNEL
F128CSEL
G_SHL
G_FCEIL
TLSDESCCALL
PATCHABLE_TAIL_CALL
PATCHABLE_TYPED_EVENT_CALL
PATCHABLE_EVENT_CALL
FENTRY_CALL
TCRETURNriALL
KILL
G_FMUL
G_MUL
G_FREM
G_SREM
G_UREM
ST1B_IMM
LD2B_IMM
ST2B_IMM
LD3B_IMM
ST3B_IMM
LD4B_IMM
ST4B_IMM
LD1RB_IMM
LD1RQ_B_IMM
SST1D_IMM
LD2D_IMM
ST2D_IMM
LD3D_IMM
ST3D_IMM
LD4D_IMM
ST4D_IMM
LD1RD_IMM
SST1B_D_IMM
LD1RB_D_IMM
LD1RSB_D_IMM
SST1H_D_IMM
LD1RH_D_IMM
LD1RSH_D_IMM
LD1RQ_D_IMM
SST1W_D_IMM
LD1RW_D_IMM
ST1H_IMM
LD2H_IMM
ST2H_IMM
LD3H_IMM
ST3H_IMM
LD4H_IMM
ST4H_IMM
LD1RH_IMM
ST1B_H_IMM
LD1RB_H_IMM
LD1RSB_H_IMM
LD1RQ_H_IMM
SST1B_S_IMM
LD1RB_S_IMM
LD1RSB_S_IMM
SST1H_S_IMM
LD1RH_S_IMM
LD1RSH_S_IMM
SST1W_IMM
LD2W_IMM
ST2W_IMM
LD3W_IMM
ST3W_IMM
LD4W_IMM
ST4W_IMM
LD1RW_IMM
LD1RSW_IMM
LD1RQ_W_IMM
INLINEASM
G_ATOMICRMW_UMIN
G_ATOMICRMW_MIN
CFI_INSTRUCTION
ADJCALLSTACKDOWN
G_SSUBO
G_USUBO
G_SADDO
G_UADDO
G_SMULO
G_UMULO
STACKMAP
G_BSWAP
SUBP
MOVaddrCP
G_GEP
G_SITOFP
G_UITOFP
SEH_AddFP
SEH_SetFP
G_FCMP
G_ICMP
G_CTPOP
PATCHABLE_OP
FAULTING_OP
SEL_PPPP
PUNPKHI_PP
PUNPKLO_PP
PTEST_PP
BRKPA_PPzPP
BRKPB_PPzPP
BIC_PPzPP
NAND_PPzPP
ORN_PPzPP
EOR_PPzPP
NOR_PPzPP
ORR_PPzPP
BRKPAS_PPzPP
BRKPBS_PPzPP
BICS_PPzPP
NANDS_PPzPP
ORNS_PPzPP
EORS_PPzPP
NORS_PPzPP
ORRS_PPzPP
ADRP
PACIASP
AUTIASP
PACIBSP
AUTIBSP
ADJCALLSTACKUP
G_FEXP
RDFFR_P
SEH_SaveFRegP
SEH_SaveRegP
BRKA_PPmP
BRKB_PPmP
BRKA_PPzP
BRKB_PPzP
BRKN_PPzP
BRKAS_PPzP
BRKBS_PPzP
BRKNS_PPzP
TLSDESC_CALLSEQ
DUP_ZZI_Q
G_BR
G_BLOCK_ADDR
PATCHABLE_FUNCTION_ENTER
WRFFR
SETFFR
G_ASHR
G_LSHR
SEH_SaveFPLR
RET_ReallyLR
G_BUILD_VECTOR
G_SHUFFLE_VECTOR
G_XOR
G_ATOMICRMW_XOR
G_OR
G_ATOMICRMW_OR
PRFB_PRR
PRFD_PRR
PRFH_PRR
PRFS_PRR
LDNT1B_ZRR
STNT1B_ZRR
LDNT1D_ZRR
STNT1D_ZRR
LDNT1H_ZRR
STNT1H_ZRR
LDNT1W_ZRR
STNT1W_ZRR
G_INTTOPTR
G_FABS
G_UNMERGE_VALUES
G_MERGE_VALUES
MOVbaseTLS
MOVaddrTLS
ADDlowTLS
SUBPS
DRPS
G_CONCAT_VECTORS
COPY_TO_REGCLASS
G_ATOMIC_CMPXCHG_WITH_SUCCESS
G_INTRINSIC_W_SIDE_EFFECTS
FJCVTZS
FCMGE_PPzZ0_S
FCMLE_PPzZ0_S
FCMNE_PPzZ0_S
FCMEQ_PPzZ0_S
FCMGT_PPzZ0_S
FCMLT_PPzZ0_S
LD1B_S
ST1B_S
LD1SB_S
PTRUE_S
LD1H_S
ST1H_S
LD1SH_S
INDEX_II_S
INDEX_RI_S
FCMLA_ZZZI_S
FMLA_ZZZI_S
FMUL_ZZZI_S
FMLS_ZZZI_S
SDOT_ZZZI_S
UDOT_ZZZI_S
FTMAD_ZZI_S
LSL_ZZI_S
DUP_ZZI_S
ASR_ZZI_S
LSR_ZZI_S
SQSUB_ZI_S
UQSUB_ZI_S
SQADD_ZI_S
UQADD_ZI_S
MUL_ZI_S
SMIN_ZI_S
UMIN_ZI_S
FDUP_ZI_S
SUBR_ZI_S
SMAX_ZI_S
UMAX_ZI_S
CMPGE_PPzZI_S
CMPLE_PPzZI_S
CMPNE_PPzZI_S
CMPHI_PPzZI_S
CMPLO_PPzZI_S
CMPEQ_PPzZI_S
CMPHS_PPzZI_S
CMPLS_PPzZI_S
CMPGT_PPzZI_S
CMPLT_PPzZI_S
FSUB_ZPmI_S
FADD_ZPmI_S
ASRD_ZPmI_S
LSL_ZPmI_S
FMUL_ZPmI_S
FMINNM_ZPmI_S
FMAXNM_ZPmI_S
FMIN_ZPmI_S
FSUBR_ZPmI_S
ASR_ZPmI_S
LSR_ZPmI_S
FMAX_ZPmI_S
FCPY_ZPmI_S
CPY_ZPzI_S
TRN1_PPP_S
ZIP1_PPP_S
UZP1_PPP_S
TRN2_PPP_S
ZIP2_PPP_S
UZP2_PPP_S
CNTP_XPP_S
REV_PP_S
UQDECP_WP_S
UQINCP_WP_S
SQDECP_XP_S
UQDECP_XP_S
SQINCP_XP_S
UQINCP_XP_S
SQDECP_ZP_S
UQDECP_ZP_S
SQINCP_ZP_S
UQINCP_ZP_S
INDEX_IR_S
INDEX_RR_S
DUP_ZR_S
INSR_ZR_S
CPY_ZPmR_S
PTRUES_S
PNEXT_S
INSR_ZV_S
CPY_ZPmV_S
WHILELE_PWW_S
WHILELO_PWW_S
WHILELS_PWW_S
WHILELT_PWW_S
WHILELE_PXX_S
WHILELO_PXX_S
WHILELS_PXX_S
WHILELT_PXX_S
CLASTA_RPZ_S
CLASTB_RPZ_S
FADDA_VPZ_S
CLASTA_VPZ_S
CLASTB_VPZ_S
FADDV_VPZ_S
SADDV_VPZ_S
UADDV_VPZ_S
ANDV_VPZ_S
FMINNMV_VPZ_S
FMAXNMV_VPZ_S
FMINV_VPZ_S
SMINV_VPZ_S
UMINV_VPZ_S
EORV_VPZ_S
FMAXV_VPZ_S
SMAXV_VPZ_S
UMAXV_VPZ_S
CLASTA_ZPZ_S
CLASTB_ZPZ_S
SPLICE_ZPZ_S
COMPACT_ZPZ_S
SEL_ZPZZ_S
TRN1_ZZZ_S
ZIP1_ZZZ_S
UZP1_ZZZ_S
TRN2_ZZZ_S
ZIP2_ZZZ_S
UZP2_ZZZ_S
FSUB_ZZZ_S
SQSUB_ZZZ_S
UQSUB_ZZZ_S
FADD_ZZZ_S
SQADD_ZZZ_S
UQADD_ZZZ_S
LSL_WIDE_ZZZ_S
ASR_WIDE_ZZZ_S
LSR_WIDE_ZZZ_S
TBL_ZZZ_S
FTSSEL_ZZZ_S
FMUL_ZZZ_S
FTSMUL_ZZZ_S
FRECPS_ZZZ_S
FRSQRTS_ZZZ_S
SDOT_ZZZ_S
UDOT_ZZZ_S
FEXPA_ZZ_S
FRECPE_ZZ_S
FRSQRTE_ZZ_S
SUNPKHI_ZZ_S
UUNPKHI_ZZ_S
SUNPKLO_ZZ_S
UUNPKLO_ZZ_S
REV_ZZ_S
FCMLA_ZPmZZ_S
FMLA_ZPmZZ_S
FNMLA_ZPmZZ_S
FMSB_ZPmZZ_S
FNMSB_ZPmZZ_S
FMAD_ZPmZZ_S
FNMAD_ZPmZZ_S
FMLS_ZPmZZ_S
FNMLS_ZPmZZ_S
CMPGE_WIDE_PPzZZ_S
CMPLE_WIDE_PPzZZ_S
CMPNE_WIDE_PPzZZ_S
CMPHI_WIDE_PPzZZ_S
CMPLO_WIDE_PPzZZ_S
CMPEQ_WIDE_PPzZZ_S
CMPHS_WIDE_PPzZZ_S
CMPLS_WIDE_PPzZZ_S
CMPGT_WIDE_PPzZZ_S
CMPLT_WIDE_PPzZZ_S
FACGE_PPzZZ_S
FCMGE_PPzZZ_S
CMPGE_PPzZZ_S
FCMNE_PPzZZ_S
CMPNE_PPzZZ_S
CMPHI_PPzZZ_S
FCMUO_PPzZZ_S
FCMEQ_PPzZZ_S
CMPEQ_PPzZZ_S
CMPHS_PPzZZ_S
FACGT_PPzZZ_S
FCMGT_PPzZZ_S
CMPGT_PPzZZ_S
FRINTA_ZPmZ_S
SXTB_ZPmZ_S
UXTB_ZPmZ_S
FSUB_ZPmZ_S
REVB_ZPmZ_S
BIC_ZPmZ_S
FABD_ZPmZ_S
SABD_ZPmZ_S
UABD_ZPmZ_S
FCADD_ZPmZ_S
FADD_ZPmZ_S
AND_ZPmZ_S
LSL_WIDE_ZPmZ_S
ASR_WIDE_ZPmZ_S
LSR_WIDE_ZPmZ_S
FSCALE_ZPmZ_S
FNEG_ZPmZ_S
SMULH_ZPmZ_S
UMULH_ZPmZ_S
SXTH_ZPmZ_S
UXTH_ZPmZ_S
REVH_ZPmZ_S
FRINTI_ZPmZ_S
LSL_ZPmZ_S
FMUL_ZPmZ_S
FMINNM_ZPmZ_S
FMAXNM_ZPmZ_S
FRINTM_ZPmZ_S
FMIN_ZPmZ_S
SMIN_ZPmZ_S
UMIN_ZPmZ_S
FRINTN_ZPmZ_S
FRINTP_ZPmZ_S
FSUBR_ZPmZ_S
LSLR_ZPmZ_S
EOR_ZPmZ_S
ORR_ZPmZ_S
ASRR_ZPmZ_S
LSRR_ZPmZ_S
ASR_ZPmZ_S
LSR_ZPmZ_S
FDIVR_ZPmZ_S
SDIVR_ZPmZ_S
UDIVR_ZPmZ_S
FABS_ZPmZ_S
CLS_ZPmZ_S
RBIT_ZPmZ_S
CNT_ZPmZ_S
CNOT_ZPmZ_S
FSQRT_ZPmZ_S
FDIV_ZPmZ_S
SDIV_ZPmZ_S
UDIV_ZPmZ_S
FMAX_ZPmZ_S
SMAX_ZPmZ_S
UMAX_ZPmZ_S
MOVPRFX_ZPmZ_S
FMULX_ZPmZ_S
FRECPX_ZPmZ_S
FRINTX_ZPmZ_S
CLZ_ZPmZ_S
FRINTZ_ZPmZ_S
MOVPRFX_ZPzZ_S
SQDECP_XPWd_S
SQINCP_XPWd_S
SCVTF_ZPmZ_DtoS
UCVTF_ZPmZ_DtoS
FCVTZS_ZPmZ_DtoS
FCVT_ZPmZ_DtoS
FCVTZU_ZPmZ_DtoS
FCVTZS_ZPmZ_HtoS
FCVT_ZPmZ_HtoS
FCVTZU_ZPmZ_HtoS
SCVTF_ZPmZ_StoS
UCVTF_ZPmZ_StoS
FCVTZS_ZPmZ_StoS
FCVTZU_ZPmZ_StoS
G_EXTRACT
G_SELECT
G_BRINDIRECT
ERET
CATCHRET
CLEANUPRET
PATCHABLE_RET
PATCHABLE_FUNCTION_EXIT
MOVaddrJT
G_EXTRACT_VECTOR_ELT
G_INSERT_VECTOR_ELT
G_FCONSTANT
G_CONSTANT
HINT
STATEPOINT
PATCHPOINT
G_PTRTOINT
G_VASTART
LIFETIME_START
G_INSERT
G_BITCAST
G_ADDRSPACE_CAST
LD1i32_POST
ST1i32_POST
LD2i32_POST
ST2i32_POST
LD3i32_POST
ST3i32_POST
LD4i32_POST
ST4i32_POST
LD1i64_POST
ST1i64_POST
LD2i64_POST
ST2i64_POST
LD3i64_POST
ST3i64_POST
LD4i64_POST
ST4i64_POST
LD1i16_POST
ST1i16_POST
LD2i16_POST
ST2i16_POST
LD3i16_POST
ST3i16_POST
LD4i16_POST
ST4i16_POST
LD1i8_POST
ST1i8_POST
LD2i8_POST
ST2i8_POST
LD3i8_POST
ST3i8_POST
LD4i8_POST
ST4i8_POST
LD1Rv16b_POST
LD2Rv16b_POST
LD3Rv16b_POST
LD4Rv16b_POST
LD1Threev16b_POST
ST1Threev16b_POST
LD3Threev16b_POST
ST3Threev16b_POST
LD1Onev16b_POST
ST1Onev16b_POST
LD1Twov16b_POST
ST1Twov16b_POST
LD2Twov16b_POST
ST2Twov16b_POST
LD1Fourv16b_POST
ST1Fourv16b_POST
LD4Fourv16b_POST
ST4Fourv16b_POST
LD1Rv8b_POST
LD2Rv8b_POST
LD3Rv8b_POST
LD4Rv8b_POST
LD1Threev8b_POST
ST1Threev8b_POST
LD3Threev8b_POST
ST3Threev8b_POST
LD1Onev8b_POST
ST1Onev8b_POST
LD1Twov8b_POST
ST1Twov8b_POST
LD2Twov8b_POST
ST2Twov8b_POST
LD1Fourv8b_POST
ST1Fourv8b_POST
LD4Fourv8b_POST
ST4Fourv8b_POST
LD1Rv1d_POST
LD2Rv1d_POST
LD3Rv1d_POST
LD4Rv1d_POST
LD1Threev1d_POST
ST1Threev1d_POST
LD1Onev1d_POST
ST1Onev1d_POST
LD1Twov1d_POST
ST1Twov1d_POST
LD1Fourv1d_POST
ST1Fourv1d_POST
LD1Rv2d_POST
LD2Rv2d_POST
LD3Rv2d_POST
LD4Rv2d_POST
LD1Threev2d_POST
ST1Threev2d_POST
LD3Threev2d_POST
ST3Threev2d_POST
LD1Onev2d_POST
ST1Onev2d_POST
LD1Twov2d_POST
ST1Twov2d_POST
LD2Twov2d_POST
ST2Twov2d_POST
LD1Fourv2d_POST
ST1Fourv2d_POST
LD4Fourv2d_POST
ST4Fourv2d_POST
LD1Rv4h_POST
LD2Rv4h_POST
LD3Rv4h_POST
LD4Rv4h_POST
LD1Threev4h_POST
ST1Threev4h_POST
LD3Threev4h_POST
ST3Threev4h_POST
LD1Onev4h_POST
ST1Onev4h_POST
LD1Twov4h_POST
ST1Twov4h_POST
LD2Twov4h_POST
ST2Twov4h_POST
LD1Fourv4h_POST
ST1Fourv4h_POST
LD4Fourv4h_POST
ST4Fourv4h_POST
LD1Rv8h_POST
LD2Rv8h_POST
LD3Rv8h_POST
LD4Rv8h_POST
LD1Threev8h_POST
ST1Threev8h_POST
LD3Threev8h_POST
ST3Threev8h_POST
LD1Onev8h_POST
ST1Onev8h_POST
LD1Twov8h_POST
ST1Twov8h_POST
LD2Twov8h_POST
ST2Twov8h_POST
LD1Fourv8h_POST
ST1Fourv8h_POST
LD4Fourv8h_POST
ST4Fourv8h_POST
LD1Rv2s_POST
LD2Rv2s_POST
LD3Rv2s_POST
LD4Rv2s_POST
LD1Threev2s_POST
ST1Threev2s_POST
LD3Threev2s_POST
ST3Threev2s_POST
LD1Onev2s_POST
ST1Onev2s_POST
LD1Twov2s_POST
ST1Twov2s_POST
LD2Twov2s_POST
ST2Twov2s_POST
LD1Fourv2s_POST
ST1Fourv2s_POST
LD4Fourv2s_POST
ST4Fourv2s_POST
LD1Rv4s_POST
LD2Rv4s_POST
LD3Rv4s_POST
LD4Rv4s_POST
LD1Threev4s_POST
ST1Threev4s_POST
LD3Threev4s_POST
ST3Threev4s_POST
LD1Onev4s_POST
ST1Onev4s_POST
LD1Twov4s_POST
ST1Twov4s_POST
LD2Twov4s_POST
ST2Twov4s_POST
LD1Fourv4s_POST
ST1Fourv4s_POST
LD4Fourv4s_POST
ST4Fourv4s_POST
G_FPEXT
G_SEXT
G_ANYEXT
G_ZEXT
MOVaddrEXT
LDGV
STGV
G_FDIV
G_SDIV
G_UDIV
CFINV
LD1W
ST1W
LD2W
ST2W
LD3W
ST3W
LD4W
ST4W
LDADDAW
LDSMINAW
LDUMINAW
CASPAW
SWPAW
LDCLRAW
LDEORAW
CASAW
LDSETAW
LDSMAXAW
LDUMAXAW
LDADDW
LDADDALW
LDSMINALW
LDUMINALW
CASPALW
SWPALW
LDCLRALW
LDEORALW
CASALW
LDSETALW
LDSMAXALW
LDUMAXALW
LDADDLW
LDSMINLW
LDUMINLW
CASPLW
SWPLW
LDCLRLW
LDEORLW
CASLW
LDSETLW
LDSMAXLW
LDUMAXLW
LDSMINW
LDUMINW
G_FPOW
CASPW
SWPW
LDAXPW
LDXPW
STLXPW
STXPW
LDARW
LDLARW
LDCLRW
STLLRW
STLRW
LDEORW
LDAPRW
LDAXRW
LDXRW
STLXRW
STXRW
CASW
LDSETW
SST1D_SXTW
SST1B_D_SXTW
SST1H_D_SXTW
SST1W_D_SXTW
SST1B_S_SXTW
SST1H_S_SXTW
SST1W_SXTW
SST1D_UXTW
SST1B_D_UXTW
SST1H_D_UXTW
SST1W_D_UXTW
SST1B_S_UXTW
SST1H_S_UXTW
SST1W_UXTW
CTERMNE_WW
CTERMEQ_WW
LDSMAXW
LDUMAXW
CBZW
TBZW
CBNZW
TBNZW
LD1RQ_W
LDRBBroW
STRBBroW
LDRBroW
STRBroW
LDRDroW
STRDroW
LDRHHroW
STRHHroW
LDRHroW
STRHroW
PRFMroW
LDRQroW
STRQroW
LDRSroW
STRSroW
LDRSBWroW
LDRSHWroW
LDRWroW
STRWroW
LDRSWroW
LDRSBXroW
LDRSHXroW
LDRXroW
STRXroW
BCAX
LDADDAX
G_ATOMICRMW_UMAX
G_ATOMICRMW_MAX
LDSMINAX
LDUMINAX
CASPAX
SWPAX
LDCLRAX
LDEORAX
CASAX
LDSETAX
LDSMAXAX
LDUMAXAX
LDADDX
G_FRAME_INDEX
CLREX
LDADDALX
LDSMINALX
LDUMINALX
CASPALX
SWPALX
LDCLRALX
LDEORALX
CASALX
LDSETALX
LDSMAXALX
LDUMAXALX
LDADDLX
LDSMINLX
LDUMINLX
CASPLX
SWPLX
LDCLRLX
LDEORLX
CASLX
LDSETLX
LDSMAXLX
LDUMAXLX
LDSMINX
LDUMINX
CASPX
SWPX
LDAXPX
LDXPX
STLXPX
STXPX
LDARX
LDLARX
LDCLRX
STLLRX
STLRX
LDEORX
LDAPRX
LDAXRX
LDXRX
STLXRX
STXRX
CASX
LDSETX
LDSMAXX
LDUMAXX
CTERMNE_XX
CTERMEQ_XX
CBZX
TBZX
CBNZX
TBNZX
SEH_SaveFRegP_X
SEH_SaveRegP_X
SEH_SaveFPLR_X
SEH_SaveFReg_X
SEH_SaveReg_X
LDRBBroX
STRBBroX
LDRBroX
STRBroX
LDRDroX
STRDroX
LDRHHroX
STRHHroX
LDRHroX
STRHroX
PRFMroX
LDRQroX
STRQroX
LDRSroX
STRSroX
LDRSBWroX
LDRSHWroX
LDRWroX
STRWroX
LDRSWroX
LDRSBXroX
LDRSHXroX
LDRXroX
STRXroX
EMITBKEY
SM4ENCKEY
COPY
BRAAZ
BLRAAZ
PACIAZ
AUTIAZ
BRABZ
BLRABZ
PACIBZ
AUTIBZ
G_CTLZ
G_CTTZ
BIC_ZZZ
AND_ZZZ
EOR_ZZZ
ORR_ZZZ
MOVPRFX_ZZ
LD1Rv16b
LD2Rv16b
LD3Rv16b
LD4Rv16b
LD1Threev16b
ST1Threev16b
LD3Threev16b
ST3Threev16b
LD1Onev16b
ST1Onev16b
LD1Twov16b
ST1Twov16b
LD2Twov16b
ST2Twov16b
LD1Fourv16b
ST1Fourv16b
LD4Fourv16b
ST4Fourv16b
LD1Rv8b
LD2Rv8b
LD3Rv8b
LD4Rv8b
LD1Threev8b
ST1Threev8b
LD3Threev8b
ST3Threev8b
LD1Onev8b
ST1Onev8b
LD1Twov8b
ST1Twov8b
LD2Twov8b
ST2Twov8b
LD1Fourv8b
ST1Fourv8b
LD4Fourv8b
ST4Fourv8b
SQSHLb
UQSHLb
SQSHRNb
UQSHRNb
SQRSHRNb
UQRSHRNb
SQSHRUNb
SQRSHRUNb
SQSHLUb
SEH_StackAlloc
LD1Rv1d
LD2Rv1d
LD3Rv1d
LD4Rv1d
LD1Threev1d
ST1Threev1d
LD1Onev1d
ST1Onev1d
LD1Twov1d
ST1Twov1d
LD1Fourv1d
ST1Fourv1d
LD1Rv2d
LD2Rv2d
LD3Rv2d
LD4Rv2d
LD1Threev2d
ST1Threev2d
LD3Threev2d
ST3Threev2d
LD1Onev2d
ST1Onev2d
LD1Twov2d
ST1Twov2d
LD2Twov2d
ST2Twov2d
LD1Fourv2d
ST1Fourv2d
LD4Fourv2d
ST4Fourv2d
SRSRAd
URSRAd
SSRAd
USRAd
SCVTFd
UCVTFd
SLId
SRId
SQSHLd
UQSHLd
SRSHRd
URSHRd
SSHRd
USHRd
FCVTZSd
SQSHLUd
FCVTZUd
AESIMCrrTied
AESMCrrTied
XPACIuntied
LDRAAindexed
LDRABindexed
FCMLAv4f32_indexed
FMLAv1i32_indexed
SQDMULHv1i32_indexed
SQRDMULHv1i32_indexed
SQDMLALv1i32_indexed
SQDMULLv1i32_indexed
SQDMLSLv1i32_indexed
FMULv1i32_indexed
FMLSv1i32_indexed
FMULXv1i32_indexed
FMLAv2i32_indexed
SQRDMLAHv2i32_indexed
SQDMULHv2i32_indexed
SQRDMULHv2i32_indexed
SQRDMLSHv2i32_indexed
SQDMLALv2i32_indexed
SMLALv2i32_indexed
UMLALv2i32_indexed
SQDMULLv2i32_indexed
SMULLv2i32_indexed
UMULLv2i32_indexed
SQDMLSLv2i32_indexed
SMLSLv2i32_indexed
UMLSLv2i32_indexed
FMULv2i32_indexed
FMLSv2i32_indexed
FMULXv2i32_indexed
FMLAv4i32_indexed
SQRDMLAHv4i32_indexed
SQDMULHv4i32_indexed
SQRDMULHv4i32_indexed
SQRDMLSHv4i32_indexed
SQDMLALv4i32_indexed
SMLALv4i32_indexed
UMLALv4i32_indexed
SQDMULLv4i32_indexed
SMULLv4i32_indexed
UMULLv4i32_indexed
SQDMLSLv4i32_indexed
SMLSLv4i32_indexed
UMLSLv4i32_indexed
FMULv4i32_indexed
FMLSv4i32_indexed
FMULXv4i32_indexed
SQRDMLAHi32_indexed
SQRDMLSHi32_indexed
FMLAv1i64_indexed
SQDMLALv1i64_indexed
SQDMULLv1i64_indexed
SQDMLSLv1i64_indexed
FMULv1i64_indexed
FMLSv1i64_indexed
FMULXv1i64_indexed
FMLAv2i64_indexed
FMULv2i64_indexed
FMLSv2i64_indexed
FMULXv2i64_indexed
FCMLAv4f16_indexed
FCMLAv8f16_indexed
FMLAv1i16_indexed
SQDMULHv1i16_indexed
SQRDMULHv1i16_indexed
FMULv1i16_indexed
FMLSv1i16_indexed
FMULXv1i16_indexed
FMLAv4i16_indexed
SQRDMLAHv4i16_indexed
SQDMULHv4i16_indexed
SQRDMULHv4i16_indexed
SQRDMLSHv4i16_indexed
SQDMLALv4i16_indexed
SMLALv4i16_indexed
UMLALv4i16_indexed
SQDMULLv4i16_indexed
SMULLv4i16_indexed
UMULLv4i16_indexed
SQDMLSLv4i16_indexed
SMLSLv4i16_indexed
UMLSLv4i16_indexed
FMULv4i16_indexed
FMLSv4i16_indexed
FMULXv4i16_indexed
FMLAv8i16_indexed
SQRDMLAHv8i16_indexed
SQDMULHv8i16_indexed
SQRDMULHv8i16_indexed
SQRDMLSHv8i16_indexed
SQDMLALv8i16_indexed
SMLALv8i16_indexed
UMLALv8i16_indexed
SQDMULLv8i16_indexed
SMULLv8i16_indexed
UMULLv8i16_indexed
SQDMLSLv8i16_indexed
SMLSLv8i16_indexed
UMLSLv8i16_indexed
FMULv8i16_indexed
FMLSv8i16_indexed
FMULXv8i16_indexed
SQRDMLAHi16_indexed
SQRDMLSHi16_indexed
SEH_EpilogEnd
SEH_PrologEnd
TBLv16i8Three
TBXv16i8Three
TBLv8i8Three
TBXv8i8Three
BR_JumpTable
TBLv16i8One
TBXv16i8One
TBLv8i8One
TBXv8i8One
DUPv2i32lane
DUPv4i32lane
INSvi32lane
DUPv2i64lane
INSvi64lane
DUPv4i16lane
DUPv8i16lane
INSvi16lane
DUPv16i8lane
DUPv8i8lane
INSvi8lane
LDRBBpre
STRBBpre
LDRBpre
STRBpre
LDPDpre
STPDpre
LDRDpre
STRDpre
LDRHHpre
STRHHpre
LDRHpre
STRHpre
STGPpre
LDPQpre
STPQpre
LDRQpre
STRQpre
LDPSpre
STPSpre
LDRSpre
STRSpre
LDRSBWpre
LDRSHWpre
LDPWpre
STPWpre
LDRWpre
STRWpre
LDPSWpre
LDRSWpre
LDRSBXpre
LDRSHXpre
LDPXpre
STPXpre
LDRXpre
STRXpre
SEH_SaveFReg
SEH_SaveReg
LD1Rv4h
LD2Rv4h
LD3Rv4h
LD4Rv4h
LD1Threev4h
ST1Threev4h
LD3Threev4h
ST3Threev4h
LD1Onev4h
ST1Onev4h
LD1Twov4h
ST1Twov4h
LD2Twov4h
ST2Twov4h
LD1Fourv4h
ST1Fourv4h
LD4Fourv4h
ST4Fourv4h
LD1Rv8h
LD2Rv8h
LD3Rv8h
LD4Rv8h
LD1Threev8h
ST1Threev8h
LD3Threev8h
ST3Threev8h
LD1Onev8h
ST1Onev8h
LD1Twov8h
ST1Twov8h
LD2Twov8h
ST2Twov8h
LD1Fourv8h
ST1Fourv8h
LD4Fourv8h
ST4Fourv8h
SCVTFh
UCVTFh
SQSHLh
UQSHLh
SQSHRNh
UQSHRNh
SQRSHRNh
UQRSHRNh
SQSHRUNh
SQRSHRUNh
FCVTZSh
SQSHLUh
FCVTZUh
LDURBBi
STURBBi
LDTRBi
STTRBi
LDURBi
STLURBi
LDAPURBi
STURBi
LDPDi
LDNPDi
STNPDi
STPDi
LDURDi
STURDi
FMOVDi
LDURHHi
STURHHi
LDTRHi
STTRHi
LDURHi
STLURHi
LDAPURHi
STURHi
FMOVHi
PRFUMi
STGPi
LDPQi
LDNPQi
STNPQi
STPQi
LDURQi
STURQi
LDAPURi
LDPSi
LDNPSi
STNPSi
STPSi
LDURSi
STURSi
FMOVSi
LDTRSBWi
LDURSBWi
LDAPURSBWi
LDTRSHWi
LDURSHWi
LDAPURSHWi
MOVKWi
CCMNWi
MOVNWi
LDPWi
CCMPWi
LDNPWi
STNPWi
STPWi
LDTRWi
STTRWi
LDURWi
STLURWi
STURWi
LDPSWi
LDTRSWi
LDURSWi
LDAPURSWi
MOVZWi
LDTRSBXi
LDURSBXi
LDAPURSBXi
LDTRSHXi
LDURSHXi
LDAPURSHXi
MOVKXi
CCMNXi
MOVNXi
LDPXi
CCMPXi
LDNPXi
STNPXi
STPXi
LDTRXi
STTRXi
LDURXi
STLURXi
LDAPURXi
STURXi
MOVZXi
TCRETURNdi
AUTH_TCRETURNrii
FCMPEDri
FCMPDri
SCVTFSWDri
UCVTFSWDri
FCVTZSSWDri
FCVTZUSWDri
SCVTFUWDri
UCVTFUWDri
SCVTFSXDri
UCVTFSXDri
FCVTZSSXDri
FCVTZUSXDri
SCVTFUXDri
UCVTFUXDri
FCMPEHri
FCMPHri
SCVTFSWHri
UCVTFSWHri
FCVTZSSWHri
FCVTZUSWHri
SCVTFUWHri
UCVTFUWHri
SCVTFSXHri
UCVTFSXHri
FCVTZSSXHri
FCVTZUSXHri
SCVTFUXHri
UCVTFUXHri
TCRETURNri
FCMPESri
FCMPSri
SCVTFSWSri
UCVTFSWSri
FCVTZSSWSri
FCVTZUSWSri
SCVTFUWSri
UCVTFUWSri
SCVTFSXSri
UCVTFSXSri
FCVTZSSXSri
FCVTZUSXSri
SCVTFUXSri
UCVTFUXSri
SUBWri
ADDWri
ANDWri
SBFMWri
UBFMWri
EORWri
ORRWri
SUBSWri
ADDSWri
ANDSWri
SUBXri
ADDXri
ANDXri
SBFMXri
UBFMXri
EORXri
ORRXri
SUBSXri
ADDSXri
ANDSXri
AUTH_TCRETURNriri
EXTRWrri
EXTRXrri
LDRBBui
STRBBui
LDRBui
STRBui
LDRDui
STRDui
LDRHHui
STRHHui
LDRHui
STRHui
PRFMui
LDRQui
STRQui
LDRSui
STRSui
LDRSBWui
LDRSHWui
LDRWui
STRWui
LDRSWui
LDRSBXui
LDRSHXui
LDRXui
STRXui
LDRAAwriteback
LDRABwriteback
LDRDl
PRFMl
LDRQl
LDRSl
LDRWl
LDRSWl
LDRXl
StkChkIndirectCall
MVNIv2s_msl
MOVIv2s_msl
MVNIv4s_msl
MOVIv4s_msl
MOVi32imm
MOVi64imm
TBLv16i8Two
TBXv16i8Two
TBLv8i8Two
TBXv8i8Two
FADDPv2i32p
FMINNMPv2i32p
FMAXNMPv2i32p
FMINPv2i32p
FMAXPv2i32p
FADDPv2i64p
FMINNMPv2i64p
FMAXNMPv2i64p
FMINPv2i64p
FMAXPv2i64p
FADDPv2i16p
FMINNMPv2i16p
FMAXNMPv2i16p
FMINPv2i16p
FMAXPv2i16p
SEH_Nop
FRINTADr
FNEGDr
FCVTHDr
FRINTIDr
FRINTMDr
FRINTNDr
FRINTPDr
FABSDr
FCVTSDr
FSQRTDr
FMOVDr
FCVTASUWDr
FCVTMSUWDr
FCVTNSUWDr
FCVTPSUWDr
FCVTZSUWDr
FCVTAUUWDr
FCVTMUUWDr
FCVTNUUWDr
FCVTPUUWDr
FCVTZUUWDr
FRINT32XDr
FRINT64XDr
FRINTXDr
FCVTASUXDr
FCVTMSUXDr
FCVTNSUXDr
FCVTPSUXDr
FCVTZSUXDr
FCVTAUUXDr
FCVTMUUXDr
FCVTNUUXDr
FCVTPUUXDr
FCVTZUUXDr
FMOVXDr
FRINT32ZDr
FRINT64ZDr
FRINTZDr
FRINTAHr
FCVTDHr
FNEGHr
FRINTIHr
FRINTMHr
FRINTNHr
FRINTPHr
FABSHr
FCVTSHr
FSQRTHr
FMOVHr
FCVTASUWHr
FCVTMSUWHr
FCVTNSUWHr
FCVTPSUWHr
FCVTZSUWHr
FCVTAUUWHr
FCVTMUUWHr
FCVTNUUWHr
FCVTPUUWHr
FCVTZUUWHr
FMOVWHr
FRINTXHr
FCVTASUXHr
FCVTMSUXHr
FCVTNSUXHr
FCVTPSUXHr
FCVTZSUXHr
FCVTAUUXHr
FCVTMUUXHr
FCVTNUUXHr
FCVTPUUXHr
FCVTZUUXHr
FMOVXHr
FRINTZHr
FRINTASr
FCVTDSr
FNEGSr
FCVTHSr
FRINTISr
FRINTMSr
FRINTNSr
FRINTPSr
FABSSr
FSQRTSr
FMOVSr
FCVTASUWSr
FCVTMSUWSr
FCVTNSUWSr
FCVTPSUWSr
FCVTZSUWSr
FCVTAUUWSr
FCVTMUUWSr
FCVTNUUWSr
FCVTPUUWSr
FCVTZUUWSr
FMOVWSr
FRINT32XSr
FRINT64XSr
FRINTXSr
FCVTASUXSr
FCVTMSUXSr
FCVTNSUXSr
FCVTPSUXSr
FCVTZSUXSr
FCVTAUUXSr
FCVTMUUXSr
FCVTNUUXSr
FCVTPUUXSr
FCVTZUUXSr
FRINT32ZSr
FRINT64ZSr
FRINTZSr
REV16Wr
SBCWr
ADCWr
CSINCWr
CSNEGWr
FMOVHWr
CSELWr
CCMNWr
CCMPWr
SBCSWr
ADCSWr
CLSWr
FMOVSWr
RBITWr
REVWr
SDIVWr
UDIVWr
LSLVWr
CSINVWr
RORVWr
ASRVWr
LSRVWr
CLZWr
REV32Xr
REV16Xr
SBCXr
ADCXr
CSINCXr
FMOVDXr
CSNEGXr
FMOVHXr
CSELXr
CCMNXr
CCMPXr
SBCSXr
ADCSXr
CLSXr
RBITXr
REVXr
SDIVXr
UDIVXr
LSLVXr
CSINVXr
RORVXr
ASRVXr
LSRVXr
CLZXr
MOVaddr
CompilerBarrier
FMOVXDHighr
FMOVDXHighr
DUPv2i32gpr
DUPv4i32gpr
INSvi32gpr
DUPv2i64gpr
INSvi64gpr
DUPv4i16gpr
DUPv8i16gpr
INSvi16gpr
DUPv16i8gpr
DUPv8i8gpr
INSvi8gpr
SHA256SU0rr
SHA1SU1rr
CRC32Brr
CRC32CBrr
AESIMCrr
AESMCrr
FSUBDrr
FADDDrr
FCCMPEDrr
FCMPEDrr
FMULDrr
FNMULDrr
FMINNMDrr
FMAXNMDrr
FMINDrr
FCCMPDrr
FCMPDrr
AESDrr
FDIVDrr
FMAXDrr
AESErr
SHA1Hrr
CRC32Hrr
FSUBHrr
CRC32CHrr
FADDHrr
FCCMPEHrr
FCMPEHrr
FMULHrr
FNMULHrr
SMULHrr
UMULHrr
FMINNMHrr
FMAXNMHrr
FMINHrr
FCCMPHrr
FCMPHrr
FDIVHrr
FMAXHrr
FSUBSrr
FADDSrr
FCCMPESrr
FCMPESrr
FMULSrr
FNMULSrr
FMINNMSrr
FMAXNMSrr
FMINSrr
FCCMPSrr
FCMPSrr
FDIVSrr
FMAXSrr
CRC32Wrr
SUBWrr
CRC32CWrr
BICWrr
ADDWrr
ANDWrr
EONWrr
ORNWrr
EORWrr
ORRWrr
SUBSWrr
BICSWrr
ADDSWrr
ANDSWrr
CRC32Xrr
SUBXrr
CRC32CXrr
BICXrr
ADDXrr
ANDXrr
EONXrr
ORNXrr
EORXrr
ORRXrr
SUBSXrr
BICSXrr
ADDSXrr
ANDSXrr
SHA1SU0rrr
SHA256SU1rrr
SHA256H2rrr
SHA1Crrr
FMSUBDrrr
FNMSUBDrrr
FMADDDrrr
FNMADDDrrr
FCSELDrrr
SHA256Hrrr
FMSUBHrrr
FNMSUBHrrr
FMADDHrrr
FNMADDHrrr
FCSELHrrr
SMSUBLrrr
UMSUBLrrr
SMADDLrrr
UMADDLrrr
SHA1Mrrr
SHA1Prrr
FMSUBSrrr
FNMSUBSrrr
FMADDSrrr
FNMADDSrrr
FCSELSrrr
MSUBWrrr
MADDWrrr
MSUBXrrr
MADDXrrr
TBLv16i8Four
TBXv16i8Four
TBLv8i8Four
TBXv8i8Four
LD1Rv2s
LD2Rv2s
LD3Rv2s
LD4Rv2s
LD1Threev2s
ST1Threev2s
LD3Threev2s
ST3Threev2s
LD1Onev2s
ST1Onev2s
LD1Twov2s
ST1Twov2s
LD2Twov2s
ST2Twov2s
LD1Fourv2s
ST1Fourv2s
LD4Fourv2s
ST4Fourv2s
LD1Rv4s
LD2Rv4s
LD3Rv4s
LD4Rv4s
LD1Threev4s
ST1Threev4s
LD3Threev4s
ST3Threev4s
LD1Onev4s
ST1Onev4s
LD1Twov4s
ST1Twov4s
LD2Twov4s
ST2Twov4s
LD1Fourv4s
ST1Fourv4s
LD4Fourv4s
ST4Fourv4s
SCVTFs
UCVTFs
SQSHLs
UQSHLs
SQSHRNs
UQSHRNs
SQRSHRNs
UQRSHRNs
SQSHRUNs
SQRSHRUNs
FCVTZSs
SQSHLUs
FCVTZUs
FMOVv2f32_ns
FMOVv4f32_ns
FMOVv2f64_ns
FMOVv4f16_ns
FMOVv8f16_ns
MOVIv16b_ns
MOVIv8b_ns
MOVIv2d_ns
SUBWrs
BICWrs
ADDWrs
ANDWrs
EONWrs
ORNWrs
EORWrs
ORRWrs
SUBSWrs
BICSWrs
ADDSWrs
ANDSWrs
SUBXrs
BICXrs
ADDXrs
ANDXrs
EONXrs
ORNXrs
EORXrs
ORRXrs
SUBSXrs
BICSXrs
ADDSXrs
ANDSXrs
ST2GOffset
STZ2GOffset
STGOffset
STZGOffset
SRSRAv2i32_shift
URSRAv2i32_shift
SSRAv2i32_shift
USRAv2i32_shift
SCVTFv2i32_shift
UCVTFv2i32_shift
SLIv2i32_shift
SRIv2i32_shift
SQSHLv2i32_shift
UQSHLv2i32_shift
SSHLLv2i32_shift
USHLLv2i32_shift
SQSHRNv2i32_shift
UQSHRNv2i32_shift
SQRSHRNv2i32_shift
UQRSHRNv2i32_shift
SQSHRUNv2i32_shift
SQRSHRUNv2i32_shift
SRSHRv2i32_shift
URSHRv2i32_shift
SSHRv2i32_shift
USHRv2i32_shift
FCVTZSv2i32_shift
SQSHLUv2i32_shift
FCVTZUv2i32_shift
SRSRAv4i32_shift
URSRAv4i32_shift
SSRAv4i32_shift
USRAv4i32_shift
SCVTFv4i32_shift
UCVTFv4i32_shift
SLIv4i32_shift
SRIv4i32_shift
SQSHLv4i32_shift
UQSHLv4i32_shift
SSHLLv4i32_shift
USHLLv4i32_shift
SQSHRNv4i32_shift
UQSHRNv4i32_shift
SQRSHRNv4i32_shift
UQRSHRNv4i32_shift
SQSHRUNv4i32_shift
SQRSHRUNv4i32_shift
SRSHRv4i32_shift
URSHRv4i32_shift
SSHRv4i32_shift
USHRv4i32_shift
FCVTZSv4i32_shift
SQSHLUv4i32_shift
FCVTZUv4i32_shift
SRSRAv2i64_shift
URSRAv2i64_shift
SSRAv2i64_shift
USRAv2i64_shift
SCVTFv2i64_shift
UCVTFv2i64_shift
SLIv2i64_shift
SRIv2i64_shift
SQSHLv2i64_shift
UQSHLv2i64_shift
SRSHRv2i64_shift
URSHRv2i64_shift
SSHRv2i64_shift
USHRv2i64_shift
FCVTZSv2i64_shift
SQSHLUv2i64_shift
FCVTZUv2i64_shift
SRSRAv4i16_shift
URSRAv4i16_shift
SSRAv4i16_shift
USRAv4i16_shift
SCVTFv4i16_shift
UCVTFv4i16_shift
SLIv4i16_shift
SRIv4i16_shift
SQSHLv4i16_shift
UQSHLv4i16_shift
SSHLLv4i16_shift
USHLLv4i16_shift
SQSHRNv4i16_shift
UQSHRNv4i16_shift
SQRSHRNv4i16_shift
UQRSHRNv4i16_shift
SQSHRUNv4i16_shift
SQRSHRUNv4i16_shift
SRSHRv4i16_shift
URSHRv4i16_shift
SSHRv4i16_shift
USHRv4i16_shift
FCVTZSv4i16_shift
SQSHLUv4i16_shift
FCVTZUv4i16_shift
SRSRAv8i16_shift
URSRAv8i16_shift
SSRAv8i16_shift
USRAv8i16_shift
SCVTFv8i16_shift
UCVTFv8i16_shift
SLIv8i16_shift
SRIv8i16_shift
SQSHLv8i16_shift
UQSHLv8i16_shift
SSHLLv8i16_shift
USHLLv8i16_shift
SQSHRNv8i16_shift
UQSHRNv8i16_shift
SQRSHRNv8i16_shift
UQRSHRNv8i16_shift
SQSHRUNv8i16_shift
SQRSHRUNv8i16_shift
SRSHRv8i16_shift
URSHRv8i16_shift
SSHRv8i16_shift
USHRv8i16_shift
FCVTZSv8i16_shift
SQSHLUv8i16_shift
FCVTZUv8i16_shift
SRSRAv16i8_shift
URSRAv16i8_shift
SSRAv16i8_shift
USRAv16i8_shift
SLIv16i8_shift
SRIv16i8_shift
SQSHLv16i8_shift
UQSHLv16i8_shift
SSHLLv16i8_shift
USHLLv16i8_shift
SQSHRNv16i8_shift
UQSHRNv16i8_shift
SQRSHRNv16i8_shift
UQRSHRNv16i8_shift
SQSHRUNv16i8_shift
SQRSHRUNv16i8_shift
SRSHRv16i8_shift
URSHRv16i8_shift
SSHRv16i8_shift
USHRv16i8_shift
SQSHLUv16i8_shift
SRSRAv8i8_shift
URSRAv8i8_shift
SSRAv8i8_shift
USRAv8i8_shift
SLIv8i8_shift
SRIv8i8_shift
SQSHLv8i8_shift
UQSHLv8i8_shift
SSHLLv8i8_shift
USHLLv8i8_shift
SQSHRNv8i8_shift
UQSHRNv8i8_shift
SQRSHRNv8i8_shift
UQRSHRNv8i8_shift
SQSHRUNv8i8_shift
SQRSHRUNv8i8_shift
SRSHRv8i8_shift
URSHRv8i8_shift
SSHRv8i8_shift
USHRv8i8_shift
SQSHLUv8i8_shift
LOADgot
SEH_EpilogStart
LDRBBpost
STRBBpost
LDRBpost
STRBpost
LDPDpost
STPDpost
LDRDpost
STRDpost
LDRHHpost
STRHHpost
LDRHpost
STRHpost
STGPpost
LDPQpost
STPQpost
LDRQpost
STRQpost
LDPSpost
STPSpost
LDRSpost
STRSpost
LDRSBWpost
LDRSHWpost
LDPWpost
STPWpost
LDRWpost
STRWpost
LDPSWpost
LDRSWpost
LDRSBXpost
LDRSHXpost
LDPXpost
STPXpost
LDRXpost
STRXpost
SYSLxt
SYSxt
ADDVv4i32v
SADDLVv4i32v
UADDLVv4i32v
FMINNMVv4i32v
FMAXNMVv4i32v
FMINVv4i32v
SMINVv4i32v
UMINVv4i32v
FMAXVv4i32v
SMAXVv4i32v
UMAXVv4i32v
ADDVv4i16v
SADDLVv4i16v
UADDLVv4i16v
FMINNMVv4i16v
FMAXNMVv4i16v
FMINVv4i16v
SMINVv4i16v
UMINVv4i16v
FMAXVv4i16v
SMAXVv4i16v
UMAXVv4i16v
ADDVv8i16v
SADDLVv8i16v
UADDLVv8i16v
FMINNMVv8i16v
FMAXNMVv8i16v
FMINVv8i16v
SMINVv8i16v
UMINVv8i16v
FMAXVv8i16v
SMAXVv8i16v
UMAXVv8i16v
ADDVv16i8v
SADDLVv16i8v
UADDLVv16i8v
SMINVv16i8v
UMINVv16i8v
SMAXVv16i8v
UMAXVv16i8v
ADDVv8i8v
SADDLVv8i8v
UADDLVv8i8v
SMINVv8i8v
UMINVv8i8v
SMAXVv8i8v
UMAXVv8i8v
ST2GPreIndex
STZ2GPreIndex
STGPreIndex
STZGPreIndex
ST2GPostIndex
STZ2GPostIndex
STGPostIndex
STZGPostIndex
SUBWrx
ADDWrx
SUBSWrx
ADDSWrx
SUBXrx
ADDXrx
SUBSXrx
ADDSXrx
RDFFR_PPz
RDFFRS_PPz
FCMGEv1i32rz
FCMLEv1i32rz
FCMEQv1i32rz
FCMGTv1i32rz
FCMLTv1i32rz
FCMGEv2i32rz
FCMLEv2i32rz
FCMEQv2i32rz
FCMGTv2i32rz
FCMLTv2i32rz
FCMGEv4i32rz
FCMLEv4i32rz
FCMEQv4i32rz
FCMGTv4i32rz
FCMLTv4i32rz
FCMGEv1i64rz
FCMLEv1i64rz
FCMEQv1i64rz
FCMGTv1i64rz
FCMLTv1i64rz
FCMGEv2i64rz
FCMLEv2i64rz
FCMEQv2i64rz
FCMGTv2i64rz
FCMLTv2i64rz
FCMGEv1i16rz
FCMLEv1i16rz
FCMEQv1i16rz
FCMGTv1i16rz
FCMLTv1i16rz
FCMGEv4i16rz
FCMLEv4i16rz
FCMEQv4i16rz
FCMGTv4i16rz
FCMLTv4i16rz
FCMGEv8i16rz
FCMLEv8i16rz
FCMEQv8i16rz
FCMGTv8i16rz
FCMLTv8i16rz
CMGEv16i8rz
CMLEv16i8rz
CMEQv16i8rz
CMGTv16i8rz
CMLTv16i8rz
CMGEv8i8rz
CMLEv8i8rz
CMEQv8i8rz
CMGTv8i8rz
CMLTv8i8rz
D7_D8_D9_D10
Q7_Q8_Q9_Q10
Z7_Z8_Z9_Z10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
Z17_Z18_Z19_Z20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
Z27_Z28_Z29_Z30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
Z29_Z30_Z31_Z0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
W10_W11
X10_X11
Z8_Z9_Z10_Z11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
W20_W21
X20_X21
Z18_Z19_Z20_Z21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
Z28_Z29_Z30_Z31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
W0_W1
X0_X1
Z30_Z31_Z0_Z1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
Z9_Z10_Z11_Z12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
Z19_Z20_Z21_Z22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
Z31_Z0_Z1_Z2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
W12_W13
X12_X13
Z10_Z11_Z12_Z13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
W22_W23
X22_X23
Z20_Z21_Z22_Z23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
W2_W3
X2_X3
Z0_Z1_Z2_Z3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
Z11_Z12_Z13_Z14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
Z21_Z22_Z23_Z24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
Z1_Z2_Z3_Z4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
W14_W15
X14_X15
Z12_Z13_Z14_Z15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
W24_W25
X24_X25
Z22_Z23_Z24_Z25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
W4_W5
X4_X5
Z2_Z3_Z4_Z5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
Z13_Z14_Z15_Z16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
Z23_Z24_Z25_Z26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
Z3_Z4_Z5_Z6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
W16_W17
X16_X17
Z14_Z15_Z16_Z17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
W26_W27
X26_X27
Z24_Z25_Z26_Z27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
W6_W7
X6_X7
Z4_Z5_Z6_Z7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
Z15_Z16_Z17_Z18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
Z25_Z26_Z27_Z28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
Z5_Z6_Z7_Z8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
W18_W19
X18_X19
Z16_Z17_Z18_Z19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
W28_W29
Z26_Z27_Z28_Z29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
W8_W9
X8_X9
Z6_Z7_Z8_Z9
Z10_HI
Z20_HI
Z30_HI
Z0_HI
Z11_HI
Z21_HI
Z31_HI
Z1_HI
Z12_HI
Z22_HI
Z2_HI
Z13_HI
Z23_HI
Z3_HI
Z14_HI
Z24_HI
Z4_HI
Z15_HI
Z25_HI
Z5_HI
Z16_HI
Z26_HI
Z6_HI
Z17_HI
Z27_HI
Z7_HI
Z18_HI
Z28_HI
Z8_HI
Z19_HI
Z29_HI
Z9_HI
X28_FP
W30_WZR
LR_XZR
NZCV
FPR32
GPR32
ZPR2
ZPR3
FPR64
XSeqPairsClass_with_sube64_in_tcGPR64
XSeqPairsClass_with_subo64_in_tcGPR64
XSeqPairsClass_with_sube64_in_rtcGPR64
ZPR4
FPR16
FPR128
FPR8
DDDD
QQQQ
PPR_3b
ZPR2_with_zsub0_in_ZPR_3b
ZPR3_with_zsub0_in_ZPR_3b
ZPR4_with_zsub0_in_ZPR_3b
ZPR2_with_zsub_in_FPR128_lo_and_ZPR2_with_zsub1_in_ZPR_3b
ZPR3_with_zsub_in_FPR128_lo_and_ZPR3_with_zsub1_in_ZPR_3b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub1_in_ZPR_3b
ZPR3_with_zsub1_in_ZPR_3b_and_ZPR3_with_zsub2_in_ZPR_3b
ZPR3_with_zsub_in_FPR128_lo_and_ZPR3_with_zsub2_in_ZPR_3b
ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub2_in_ZPR_3b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub2_in_ZPR_3b
ZPR4_with_zsub1_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub2_in_ZPR_3b_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub3_in_ZPR_3b
ZPR2_with_zsub_in_FPR128_lo_and_ZPR2_with_zsub1_in_ZPR_4b
ZPR3_with_zsub_in_FPR128_lo_and_ZPR3_with_zsub1_in_ZPR_4b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub1_in_ZPR_4b
ZPR3_with_zsub1_in_ZPR_4b_and_ZPR3_with_zsub2_in_ZPR_4b
ZPR3_with_zsub_in_FPR128_lo_and_ZPR3_with_zsub2_in_ZPR_4b
ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub2_in_ZPR_4b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub2_in_ZPR_4b
ZPR4_with_zsub1_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
ZPR4_with_zsub2_in_ZPR_4b_and_ZPR4_with_zsub3_in_ZPR_4b
ZPR4_with_zsub_in_FPR128_lo_and_ZPR4_with_zsub3_in_ZPR_4b
GPR32all
GPR64all
WSeqPairsClass_with_subo32_in_GPR32common
XSeqPairsClass_with_subo64_in_GPR64common
QQQQ_with_qsub0_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub1_in_FPR128_lo
QQ_with_qsub0_in_FPR128_lo_and_QQ_with_qsub1_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
ZPR2_with_zsub_in_FPR128_lo
ZPR3_with_zsub_in_FPR128_lo
ZPR4_with_zsub_in_FPR128_lo
GPR32sp
GPR64sp
WSeqPairsClass
XSeqPairsClass
GPR32sponly
GPR64sponly
Cost Model Analysis
m_personality_v0__gxx_wasm_persocessCLRExceptionProcessCLRExceptt_eh_personalityrust_eh_personal__CxxFrameHandle_except_handler3personality_seh0__gxx_personalit__gcc_personalit__C_specific_han__gnat_eh_person_personality_sj0c_personality_v0__objc_personali
Loop Access Analysis
llvm.loop.unroll
liveOnEntry
Optimization Remark Emitter
*+2222212
.catch.all.valuellvm.eh.catch.al
no-realign-stack
Machine Optimization Remark Emitter
patchable-functim.load.relative.llvm.load.relati
regalloc
Register Allocation
ctor-buffer-sizestack-protector-ame-pointer-elimno-frame-pointer
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnounsafe_stack_ptr__safestack_unsa__stack_chk_guarreciprocal-estim
ge Swift VersionClass PropertiesObjective-C ClasObjective-C Is Sective-C GC OnlyObjective-C GC Oage Info Versionrbage CollectionObjective-C Garbage Info Sectioncit-section-nameimplicit-section.gnu.linkonce.b..llvm.linkonce.b.gnu.linkonce.sb.llvm.linkonce.s.gnu.linkonce.td.llvm.linkonce.t.gnu.linkonce.tb
er-elim-non-leafoption-unspecifi
ction-instrumentfunction-instrumuction-thresholdxray-instructionpointer-is-validnull-pointer-is-
ckprotectorcheckstackprotectorchnt.group.barrierinvariant.group.arm.thread.point4.thread.pointeraarch64.thread.pavx512.psll.dq.5avx512.psrl.dq.5
2.mask.movshdup.avx512.mask.vfma2.maskz.vfmadd.s2.mask3.vfmadd.s2.mask3.vfmsub.s.mask3.vfnmsub.s2.mask.vfnmadd.p2.mask.vfnmsub.p2.mask3.vfmadd.p2.mask3.vfmsub.p.mask3.vfnmsub.p2.maskz.vfmadd.pmask.vfmaddsub.p, __objc_catlist__DATA, __objc_cllvm.vectorizer.avx512.mask.paddavx512.mask.psub512.mask.paddus.512.mask.psubus.ssse3.pabs.b.128ssse3.pabs.w.128ssse3.pabs.d.128512.mask.vfmadd.avx512.mask.vfnmavx512.mask3.vfmavx512.maskz.vfm2.mask3.vfnmsub.avx512.mask3.vfn.mask.vfmaddsub.maskz.vfmaddsub.mask3.vfmaddsub.mask3.vfmsubadd.avx512.mask.shufavx512.mask.pabsavx512.broadcastavx512.mask.sqrt.mask.pbroadcastavx512.mask.pbro512.mask.pcmpeq.avx512.mask.pcmp512.mask.pcmpgt.avx512.kortestc.avx512.kortestz.avx512.mask.pshuavx512.mask.pmaxavx512.mask.pminavx512.pbroadcasmask.broadcast.savx512.mask.broa512.mask.movddupavx512.mask.movdavx512.mask.movs2.mask.pshufl.w.2.mask.pshufh.w.2.mask.vpermil.pavx512.mask.vperavx512.mask.perm512.mask.punpcklavx512.mask.punp512.mask.punpckh512.mask.unpckl.avx512.mask.unpc512.mask.unpckh.avx512.mask.pandavx512.mask.por.avx512.mask.pxoravx512.mask.and.avx512.mask.andnavx512.mask.xor.avx512.mask.pmul2.mask.cvtdq2pd.avx512.mask.cvtd.mask.cvtudq2pd.avx512.mask.cvtuavx512.cvtusi2sdavx512.mask.cvtqavx512.mask.cvtpsk.cvtudq2ps.128sk.cvtudq2ps.256sk.cvtuqq2pd.128sk.cvtuqq2pd.256sk.cvttpd2dq.256avx512.mask.cvttsk.cvttps2dq.128sk.cvttps2dq.256avx512.pmul.dq.5512.pmulu.dq.512avx512.pmulu.dq.2.mask.pmulu.dq.mask.pmul.hr.sw.2.mask.pmulhu.w.2.mask.pmaddw.d.avx512.mask.pmadmask.pmaddubs.w.2.mask.packsswb.avx512.mask.pack2.mask.packssdw.2.mask.packuswb.2.mask.packusdw.avx512.mask.cmp.avx512.mask.ucmpavx512.cvtb2maskavx512.cvtw2maskavx512.cvtd2maskavx512.cvtq2maskmask.vpermilvar.avx512.mask.psllavx512.mask.psraavx512.mask.psrlavx512.mask.pmovavx512.mask.lzcn2.mask.pternlog.avx512.mask.pter.maskz.pternlog.avx512.maskz.pteavx512.mask.vpma2.maskz.vpmadd52avx512.maskz.vpmmask.vpermi2var.mask.vpermt2var.avx512.maskz.vpe2.mask.vpdpbusd..maskz.vpdpbusd..mask.vpdpbusds.maskz.vpdpbusds.2.mask.vpdpwssd..maskz.vpdpwssd..mask.vpdpwssds.maskz.vpdpwssds.2.mask.dbpsadbw.avx512.mask.dbps512.mask.vpshld.avx512.mask.vpsh512.mask.vpshrd.avx512.mask.add.avx512.mask.sub.avx512.mask.mul.avx512.mask.div.avx512.mask.max.avx512.mask.min.2.mask.fpclass.pavx512.mask.fpclavx.cvt.ps2.pd.2avx.cvtdq2.pd.25avx.cvtdq2.ps.25avx.vinsertf128.avx2.vinserti128avx512.mask.inseavx.vextractf128avx2.vextracti12avx512.mask.vext512.mask.storeu.avx512.mask.stor512.mask.store.pavx512.mask.loadavx512.mask.expa.compress.store.avx512.mask.compsse42.crc32.64.8avx.vbroadcast.s512.vbroadcast.savx512.vbroadcasavx512.mask.pali512.mask.valign.avx512.mask.valiavx.vbroadcastf12.vbroadcasti128avx2.vbroadcasti.mask.broadcastf.mask.broadcastiavx512.mask.moveavx512.mask.proravx512.mask.prolavx512.mask.pavgectorizer.unroll
loop_header_weig
DIFlagMainSubproDIFlagVirtualInhtipleInheritanceDIFlagMultipleInePassByReferenceDIFlagTypePassByirectVirtualBaseDIFlagIndirectViDIFlagStaticMembDIFlagLittleEndigLValueReferenceDIFlagLValueRefegRValueReferenceDIFlagRValueRefegTypePassByValuelagObjectPointerDIFlagObjectPoinbjcClassCompleteDIFlagObjcClassCingleInheritanceDIFlagSingleInhentroducedVirtualDIFlagIntroducedllCallsDescribedDIFlagAllCallsDeBlockByrefStructDIFlagBlockByrefDIFlagAppleBlockDIFlagArtificialDIFlagPrototypedugDirectivesOnlyDebugDirectivesODISPFlagOptimizeDISPFlagDefinitiPFlagPureVirtualDISPFlagPureVirtPFlagLocalToUnitDISPFlagLocalToU
function_entry_ction_entry_countsynthetic_functi.
////////.
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
?,,?
??,?
////:
////////w
JDDF
JDDF
JJJJJJJ
JJJJJJJJJJJ
JJJJ
??????
???????
++++
++++
..D...E
..T...D
..D...D
..D...D
..D.
MMLL
MMLL
MMLL
MMLL
LLLLMMMMMM
MMLL
MMLL
MMLL
MMLL
LLLLMMMMLLL
LLLLMMMMLLL
LLLLMMMMLL
MMLL
LLLLMMMMLLLLMMMMML
MMLL
MMLL
MMMD4
LLLLMMMMLLL
LLLLMMMMLL
MMMD4
LLLLMMMMLL
MMMD4
...D...D...D...D...D...D..D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
,,,,,,,
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
YYYYYYY
JJJJJJJ
JJJJJJJ
,,,,JJJ
,,,,,,,
;,,;YJJY,YY,J;;J;,,
;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J,,,,JJJJ;;;;;,,;YJJYJ;;J;,,;YJJYJ;;J;,,
,,,,;JJ
,,,,,,,,,,,
????.
{{{{
----KKK
B|||C
 K.D0L.D [.D [.D
GB,,,
|L|CJ
[BJzJ
L|LC
BYzY
[{[BJzJ
L|LCYzY
[{[B
BzYz
{[{BI
[BL|LCYzY
[{[BJzJ
L|LCYzY
[{[B|L|C
BzYz
{[{Bk
Bzzz
|||Ck
|<|C;z
B|||Ck
B|||Ck
 K.D0L.D [.D [.D
JJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLLJJJJKKKKLLLL;;;;<<<<====
zzJz{{K{||L|YYYYZZZZ[[[[,,,,----=
YYYYZZZZ[[[[YYYYZZZZ[[[[JJJ
JJJJ.
zzzz
,,,,;;
YYY"
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
))))
!!""#
%%&&
$$$$$$$$$$$$$$
((((((
(((((((((((((((
((((((
$"!$"!$"!$"!$"!
$$$$$$$$$$$$$$$$$$
$$$$$
&&&&&&&&&&
******
++++
++++++++++++++++
++++++++
,,,,,,,,
,,,,,,,,
,,,,,,,,
-----
----------
------
/000
5555
5555555555555555555655
__builtin_adjust_trampoline
__builtin_debugtrap
__builtin_unwind_init
__builtin_flt_rounds
__builtin_init_trampoline
__builtin_object_size
__builtin_stack_restore
__builtin_stack_save
__builtin_thread_pointer
__builtin_trap
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_buffer_wbinvl1_sc
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubema
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cvt_pk_u8_f32
__builtin_amdgcn_dispatch_id
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_ds_faddf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_fdot2
__builtin_amdgcn_fmed3
__builtin_amdgcn_fmul_legacy
__builtin_amdgcn_groupstaticsize
__builtin_amdgcn_implicit_buffer_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_interp_mov
__builtin_amdgcn_interp_p1
__builtin_amdgcn_interp_p2
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_lerp
__builtin_amdgcn_mbcnt_hi
__builtin_amdgcn_mbcnt_lo
__builtin_amdgcn_mqsad_pk_u16_u8
__builtin_amdgcn_mqsad_u32_u8
__builtin_amdgcn_msad_u8
__builtin_amdgcn_qsad_pk_u16_u8
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_rcp_legacy
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_rsq_legacy
__builtin_amdgcn_s_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_s_dcache_inv_vol
__builtin_amdgcn_s_dcache_wb
__builtin_amdgcn_s_dcache_wb_vol
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_getreg
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_memrealtime
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sendmsg
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_sad_hi_u8
__builtin_amdgcn_sad_u16
__builtin_amdgcn_sad_u8
__builtin_amdgcn_sdot2
__builtin_amdgcn_sdot4
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot2
__builtin_amdgcn_udot4
__builtin_amdgcn_udot8
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_writelane
__builtin_arm_cdp
__builtin_arm_cdp2
__builtin_arm_get_fpscr
__builtin_arm_ldc
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_ldcl
__builtin_arm_mcr
__builtin_arm_mcr2
__builtin_arm_mrc
__builtin_arm_mrc2
__builtin_arm_qadd
__builtin_arm_qadd16
__builtin_arm_qadd8
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub
__builtin_arm_qsub16
__builtin_arm_qsub8
__builtin_arm_sadd16
__builtin_arm_sadd8
__builtin_arm_sasx
__builtin_arm_sel
__builtin_arm_set_fpscr
__builtin_arm_shadd16
__builtin_arm_shadd8
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_shsub8
__builtin_arm_smlabb
__builtin_arm_smlabt
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
__builtin_arm_smlaldx
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ssat
__builtin_arm_ssat16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_ssub8
__builtin_arm_stc
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_stcl
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uadd16
__builtin_arm_uadd8
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhadd8
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uhsub8
__builtin_arm_uqadd16
__builtin_arm_uqadd8
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_uqsub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_usat
__builtin_arm_usat16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_usub8
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_bpf_load_byte
__builtin_bpf_load_half
__builtin_bpf_load_word
__builtin_bpf_pseudo
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_addsp
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_maxup
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_pxorf
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrcrr
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_tfrrcr
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A4_addp_c
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_boundscheck
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A4_combineii
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_subp_c
__builtin_HEXAGON_A4_tfrcpp
__builtin_HEXAGON_A4_tfrpcp
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A5_ACS
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A6_vcmpbeq_notany
__builtin_HEXAGON_A6_vminub_RdP
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_vmux
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffma_sc
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfinvsqrta
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sfrecipa
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_L2_loadw_locked
__builtin_HEXAGON_L4_loadd_locked
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpysin
__builtin_HEXAGON_M2_mpysip
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_insert
__builtin_HEXAGON_S2_insert_rp
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_mask
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffoh
__builtin_brev_stb
__builtin_brev_std
__builtin_brev_sthhi
__builtin_brev_sth
__builtin_brev_stw
__builtin_HEXAGON_S2_storew_locked
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S4_stored_locked
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_V6_extractw
__builtin_HEXAGON_V6_extractw_128B
__builtin_HEXAGON_V6_hi
__builtin_HEXAGON_V6_hi_128B
__builtin_HEXAGON_V6_ld0
__builtin_HEXAGON_V6_ld0_128B
__builtin_HEXAGON_V6_ldcnp0
__builtin_HEXAGON_V6_ldcnp0_128B
__builtin_HEXAGON_V6_ldcnpnt0
__builtin_HEXAGON_V6_ldcnpnt0_128B
__builtin_HEXAGON_V6_ldcp0
__builtin_HEXAGON_V6_ldcp0_128B
__builtin_HEXAGON_V6_ldcpnt0
__builtin_HEXAGON_V6_ldcpnt0_128B
__builtin_HEXAGON_V6_ldnp0
__builtin_HEXAGON_V6_ldnp0_128B
__builtin_HEXAGON_V6_ldnpnt0
__builtin_HEXAGON_V6_ldnpnt0_128B
__builtin_HEXAGON_V6_ldnt0
__builtin_HEXAGON_V6_ldnt0_128B
__builtin_HEXAGON_V6_ldntnt0
__builtin_HEXAGON_V6_ldp0
__builtin_HEXAGON_V6_ldp0_128B
__builtin_HEXAGON_V6_ldpnt0
__builtin_HEXAGON_V6_ldpnt0_128B
__builtin_HEXAGON_V6_ldtnp0
__builtin_HEXAGON_V6_ldtnp0_128B
__builtin_HEXAGON_V6_ldtnpnt0
__builtin_HEXAGON_V6_ldtnpnt0_128B
__builtin_HEXAGON_V6_ldtp0
__builtin_HEXAGON_V6_ldtp0_128B
__builtin_HEXAGON_V6_ldtpnt0
__builtin_HEXAGON_V6_ldtpnt0_128B
__builtin_HEXAGON_V6_ldu0
__builtin_HEXAGON_V6_ldu0_128B
__builtin_HEXAGON_V6_lo
__builtin_HEXAGON_V6_lo_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_pred_not
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_pred_scalar2
__builtin_HEXAGON_V6_pred_scalar2_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_qpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_vaddcarrysat
__builtin_HEXAGON_V6_vaddcarrysat_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_valignb
__builtin_HEXAGON_V6_valignb_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vandqrt
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vandqrt_acc
__builtin_HEXAGON_V6_vandqrt_acc_128B
__builtin_HEXAGON_V6_vandvnqv
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vandvrt
__builtin_HEXAGON_V6_vandvrt_128B
__builtin_HEXAGON_V6_vandvrt_acc
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vaslw_acc
__builtin_HEXAGON_V6_vaslw_acc_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vd0
__builtin_HEXAGON_V6_vd0_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vdmpyhisat
__builtin_HEXAGON_V6_vdmpyhisat_128B
__builtin_HEXAGON_V6_vdmpyhisat_acc
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_veqb_or
__builtin_HEXAGON_V6_veqb_or_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgathermh
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhq
__builtin_HEXAGON_V6_vgathermhq_128B
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
__builtin_HEXAGON_V6_vgathermhwq
__builtin_HEXAGON_V6_vgathermhwq_128B
__builtin_HEXAGON_V6_vgathermw
__builtin_HEXAGON_V6_vgathermw_128B
__builtin_HEXAGON_V6_vgathermwq
__builtin_HEXAGON_V6_vgathermwq_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vlalignbi
__builtin_HEXAGON_V6_vlalignbi_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlut4
__builtin_HEXAGON_V6_vlut4_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
__builtin_HEXAGON_V6_vlutvwhi
__builtin_HEXAGON_V6_vlutvwhi_128B
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstoreq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_vminub
__builtin_HEXAGON_V6_vminub_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vmpahhsat
__builtin_HEXAGON_V6_vmpahhsat_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_vmpyhus
__builtin_HEXAGON_V6_vmpyhus_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vmpyhv_acc
__builtin_HEXAGON_V6_vmpyhv_acc_128B
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vmpyiwh
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpyub
__builtin_HEXAGON_V6_vmpyub_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_vprefixqb
__builtin_HEXAGON_V6_vprefixqb_128B
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vrmpybusi
__builtin_HEXAGON_V6_vrmpybusi_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vrotr_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vrsadubi_acc
__builtin_HEXAGON_V6_vrsadubi_acc_128B
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vscattermh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermhq
__builtin_HEXAGON_V6_vscattermhq_128B
__builtin_HEXAGON_V6_vscattermhw
__builtin_HEXAGON_V6_vscattermhw_128B
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_V6_vscattermhwq
__builtin_HEXAGON_V6_vscattermhwq_128B
__builtin_HEXAGON_V6_vscattermw
__builtin_HEXAGON_V6_vscattermw_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermwq
__builtin_HEXAGON_V6_vscattermwq_128B
__builtin_HEXAGON_V6_vsh
__builtin_HEXAGON_V6_vsh_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vshuffh
__builtin_HEXAGON_V6_vshuffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vshuffvdd
__builtin_HEXAGON_V6_vshuffvdd_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vswap
__builtin_HEXAGON_V6_vswap_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vtmpyhb
__builtin_HEXAGON_V6_vtmpyhb_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vtran2x2_map
__builtin_HEXAGON_V6_vtran2x2_map_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vunpackob
__builtin_HEXAGON_V6_vunpackob_128B
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
__builtin_HEXAGON_Y5_l2fetch
__builtin_circ_ldb
__builtin_circ_ldd
__builtin_circ_ldh
__builtin_circ_ldub
__builtin_circ_lduh
__builtin_circ_ldw
__builtin_circ_stb
__builtin_circ_std
__builtin_circ_sth
__builtin_circ_sthhi
__builtin_circ_stw
__builtin_HEXAGON_prefetch
__builtin_hexagon_vmemcpy
__builtin_hexagon_vmemset
__builtin_mips_absq_s_ph
__builtin_mips_absq_s_qb
__builtin_mips_absq_s_w
__builtin_msa_add_a_b
__builtin_msa_add_a_d
__builtin_msa_add_a_h
__builtin_msa_add_a_w
__builtin_mips_addq_ph
__builtin_mips_addq_s_ph
__builtin_mips_addq_s_w
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_r_w
__builtin_mips_addqh_w
__builtin_msa_adds_a_b
__builtin_msa_adds_a_d
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_s_b
__builtin_msa_adds_s_d
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_u_b
__builtin_msa_adds_u_d
__builtin_msa_adds_u_h
__builtin_msa_adds_u_w
__builtin_mips_addsc
__builtin_mips_addu_ph
__builtin_mips_addu_qb
__builtin_mips_addu_s_ph
__builtin_mips_addu_s_qb
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_msa_addv_b
__builtin_msa_addv_d
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addvi_b
__builtin_msa_addvi_d
__builtin_msa_addvi_h
__builtin_msa_addvi_w
__builtin_mips_addwc
__builtin_msa_and_v
__builtin_msa_andi_b
__builtin_mips_append
__builtin_msa_asub_s_b
__builtin_msa_asub_s_d
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_u_b
__builtin_msa_asub_u_d
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_ave_s_b
__builtin_msa_ave_s_d
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_u_b
__builtin_msa_ave_u_d
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_aver_s_b
__builtin_msa_aver_s_d
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_u_b
__builtin_msa_aver_u_d
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_mips_balign
__builtin_msa_bclr_b
__builtin_msa_bclr_d
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclri_b
__builtin_msa_bclri_d
__builtin_msa_bclri_h
__builtin_msa_bclri_w
__builtin_msa_binsl_b
__builtin_msa_binsl_d
__builtin_msa_binsl_h
__builtin_msa_binsl_w
__builtin_msa_binsli_b
__builtin_msa_binsli_d
__builtin_msa_binsli_h
__builtin_msa_binsli_w
__builtin_msa_binsr_b
__builtin_msa_binsr_d
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsri_b
__builtin_msa_binsri_d
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_mips_bitrev
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_d
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bnegi_b
__builtin_msa_bnegi_d
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnz_b
__builtin_msa_bnz_d
__builtin_msa_bnz_h
__builtin_msa_bnz_v
__builtin_msa_bnz_w
__builtin_mips_bposge32
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_d
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bseti_b
__builtin_msa_bseti_d
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bz_b
__builtin_msa_bz_d
__builtin_msa_bz_h
__builtin_msa_bz_v
__builtin_msa_bz_w
__builtin_msa_ceq_b
__builtin_msa_ceq_d
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceqi_b
__builtin_msa_ceqi_d
__builtin_msa_ceqi_h
__builtin_msa_ceqi_w
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_d
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_u_b
__builtin_msa_cle_u_d
__builtin_msa_cle_u_h
__builtin_msa_cle_u_w
__builtin_msa_clei_s_b
__builtin_msa_clei_s_d
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_u_b
__builtin_msa_clei_u_d
__builtin_msa_clei_u_h
__builtin_msa_clei_u_w
__builtin_msa_clt_s_b
__builtin_msa_clt_s_d
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_u_b
__builtin_msa_clt_u_d
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clti_s_b
__builtin_msa_clti_s_d
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_u_b
__builtin_msa_clti_u_d
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_mips_cmp_eq_ph
__builtin_mips_cmp_le_ph
__builtin_mips_cmp_lt_ph
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgu_eq_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpu_eq_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpu_lt_qb
__builtin_msa_copy_s_b
__builtin_msa_copy_s_d
__builtin_msa_copy_s_h
__builtin_msa_copy_s_w
__builtin_msa_copy_u_b
__builtin_msa_copy_u_d
__builtin_msa_copy_u_h
__builtin_msa_copy_u_w
__builtin_msa_ctcmsa
__builtin_msa_div_s_b
__builtin_msa_div_s_d
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_u_b
__builtin_msa_div_u_d
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_mips_dlsa
__builtin_msa_dotp_s_d
__builtin_msa_dotp_s_h
__builtin_msa_dotp_s_w
__builtin_msa_dotp_u_d
__builtin_msa_dotp_u_h
__builtin_msa_dotp_u_w
__builtin_mips_dpa_w_ph
__builtin_msa_dpadd_s_d
__builtin_msa_dpadd_s_h
__builtin_msa_dpadd_s_w
__builtin_msa_dpadd_u_d
__builtin_msa_dpadd_u_h
__builtin_msa_dpadd_u_w
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpau_h_qbl
__builtin_mips_dpau_h_qbr
__builtin_mips_dpax_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpsq_sa_l_w
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_u_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_mips_dpsx_w_ph
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_extr_r_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_msa_fadd_d
__builtin_msa_fadd_w
__builtin_msa_fcaf_d
__builtin_msa_fcaf_w
__builtin_msa_fceq_d
__builtin_msa_fceq_w
__builtin_msa_fclass_d
__builtin_msa_fclass_w
__builtin_msa_fcle_d
__builtin_msa_fcle_w
__builtin_msa_fclt_d
__builtin_msa_fclt_w
__builtin_msa_fcne_d
__builtin_msa_fcne_w
__builtin_msa_fcor_d
__builtin_msa_fcor_w
__builtin_msa_fcueq_d
__builtin_msa_fcueq_w
__builtin_msa_fcule_d
__builtin_msa_fcule_w
__builtin_msa_fcult_d
__builtin_msa_fcult_w
__builtin_msa_fcun_d
__builtin_msa_fcun_w
__builtin_msa_fcune_d
__builtin_msa_fcune_w
__builtin_msa_fdiv_d
__builtin_msa_fdiv_w
__builtin_msa_fexdo_h
__builtin_msa_fexdo_w
__builtin_msa_fexp2_d
__builtin_msa_fexp2_w
__builtin_msa_fexupl_d
__builtin_msa_fexupl_w
__builtin_msa_fexupr_d
__builtin_msa_fexupr_w
__builtin_msa_ffint_s_d
__builtin_msa_ffint_s_w
__builtin_msa_ffint_u_d
__builtin_msa_ffint_u_w
__builtin_msa_ffql_d
__builtin_msa_ffql_w
__builtin_msa_ffqr_d
__builtin_msa_ffqr_w
__builtin_msa_fill_b
__builtin_msa_fill_d
__builtin_msa_fill_h
__builtin_msa_fill_w
__builtin_msa_flog2_d
__builtin_msa_flog2_w
__builtin_msa_fmadd_d
__builtin_msa_fmadd_w
__builtin_msa_fmax_a_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_d
__builtin_msa_fmax_w
__builtin_msa_fmin_a_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_d
__builtin_msa_fmin_w
__builtin_msa_fmsub_d
__builtin_msa_fmsub_w
__builtin_msa_fmul_d
__builtin_msa_fmul_w
__builtin_msa_frcp_d
__builtin_msa_frcp_w
__builtin_msa_frint_d
__builtin_msa_frint_w
__builtin_msa_frsqrt_d
__builtin_msa_frsqrt_w
__builtin_msa_fsaf_d
__builtin_msa_fsaf_w
__builtin_msa_fseq_d
__builtin_msa_fseq_w
__builtin_msa_fsle_d
__builtin_msa_fsle_w
__builtin_msa_fslt_d
__builtin_msa_fslt_w
__builtin_msa_fsne_d
__builtin_msa_fsne_w
__builtin_msa_fsor_d
__builtin_msa_fsor_w
__builtin_msa_fsqrt_d
__builtin_msa_fsqrt_w
__builtin_msa_fsub_d
__builtin_msa_fsub_w
__builtin_msa_fsueq_d
__builtin_msa_fsueq_w
__builtin_msa_fsule_d
__builtin_msa_fsule_w
__builtin_msa_fsult_d
__builtin_msa_fsult_w
__builtin_msa_fsun_d
__builtin_msa_fsun_w
__builtin_msa_fsune_d
__builtin_msa_fsune_w
__builtin_msa_ftint_s_d
__builtin_msa_ftint_s_w
__builtin_msa_ftint_u_d
__builtin_msa_ftint_u_w
__builtin_msa_ftq_h
__builtin_msa_ftq_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_u_d
__builtin_msa_ftrunc_u_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_u_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_u_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_ilvev_b
__builtin_msa_ilvev_d
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvl_b
__builtin_msa_ilvl_d
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvod_b
__builtin_msa_ilvod_d
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvr_b
__builtin_msa_ilvr_d
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_insert_b
__builtin_msa_insert_d
__builtin_msa_insert_h
__builtin_msa_insert_w
__builtin_mips_insv
__builtin_msa_insve_b
__builtin_msa_insve_d
__builtin_msa_insve_h
__builtin_msa_insve_w
__builtin_mips_lbux
__builtin_msa_ld_b
__builtin_msa_ld_d
__builtin_msa_ld_h
__builtin_msa_ld_w
__builtin_msa_ldi_b
__builtin_msa_ldi_d
__builtin_msa_ldi_h
__builtin_msa_ldi_w
__builtin_mips_lhx
__builtin_mips_lsa
__builtin_mips_lwx
__builtin_mips_madd
__builtin_msa_madd_q_h
__builtin_msa_madd_q_w
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_mips_maddu
__builtin_msa_maddv_b
__builtin_msa_maddv_d
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_msa_max_a_b
__builtin_msa_max_a_d
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_s_b
__builtin_msa_max_s_d
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_u_b
__builtin_msa_max_u_d
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_maxi_s_b
__builtin_msa_maxi_s_d
__builtin_msa_maxi_s_h
__builtin_msa_maxi_s_w
__builtin_msa_maxi_u_b
__builtin_msa_maxi_u_d
__builtin_msa_maxi_u_h
__builtin_msa_maxi_u_w
__builtin_msa_min_a_b
__builtin_msa_min_a_d
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_s_b
__builtin_msa_min_s_d
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_u_b
__builtin_msa_min_u_d
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_mini_s_b
__builtin_msa_mini_s_d
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_u_b
__builtin_msa_mini_u_d
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mod_s_b
__builtin_msa_mod_s_d
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_u_b
__builtin_msa_mod_u_d
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_mips_modsub
__builtin_msa_move_v
__builtin_mips_msub
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_mips_msubu
__builtin_msa_msubv_b
__builtin_msa_msubv_d
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_mips_mthlip
__builtin_mips_mul_ph
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_mips_mul_s_ph
__builtin_mips_muleq_s_w_phl
__builtin_mips_muleq_s_w_phr
__builtin_mips_muleu_s_ph_qbl
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_mips_mulsa_w_ph
__builtin_mips_mulsaq_s_w_ph
__builtin_mips_mult
__builtin_mips_multu
__builtin_msa_mulv_b
__builtin_msa_mulv_d
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_nloc_b
__builtin_msa_nloc_d
__builtin_msa_nloc_h
__builtin_msa_nloc_w
__builtin_msa_nlzc_b
__builtin_msa_nlzc_d
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nor_v
__builtin_msa_nori_b
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_mips_packrl_ph
__builtin_msa_pckev_b
__builtin_msa_pckev_d
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckod_b
__builtin_msa_pckod_d
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pcnt_b
__builtin_msa_pcnt_d
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_mips_pick_ph
__builtin_mips_pick_qb
__builtin_mips_preceq_w_phl
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbra
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_precrq_ph_w
__builtin_mips_precrq_qb_ph
__builtin_mips_precrq_rs_ph_w
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_prepend
__builtin_mips_raddu_w_qb
__builtin_mips_rddsp
__builtin_mips_repl_ph
__builtin_mips_repl_qb
__builtin_msa_sat_s_b
__builtin_msa_sat_s_d
__builtin_msa_sat_s_h
__builtin_msa_sat_s_w
__builtin_msa_sat_u_b
__builtin_msa_sat_u_d
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_mips_shilo
__builtin_mips_shll_ph
__builtin_mips_shll_qb
__builtin_mips_shll_s_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_ph
__builtin_mips_shra_qb
__builtin_mips_shra_r_ph
__builtin_mips_shra_r_qb
__builtin_mips_shra_r_w
__builtin_mips_shrl_ph
__builtin_mips_shrl_qb
__builtin_msa_sld_b
__builtin_msa_sld_d
__builtin_msa_sld_h
__builtin_msa_sld_w
__builtin_msa_sldi_b
__builtin_msa_sldi_d
__builtin_msa_sldi_h
__builtin_msa_sldi_w
__builtin_msa_sll_b
__builtin_msa_sll_d
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_slli_b
__builtin_msa_slli_d
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_splat_b
__builtin_msa_splat_d
__builtin_msa_splat_h
__builtin_msa_splat_w
__builtin_msa_splati_b
__builtin_msa_splati_d
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_sra_b
__builtin_msa_sra_d
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_srai_b
__builtin_msa_srai_d
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srar_b
__builtin_msa_srar_d
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srari_b
__builtin_msa_srari_d
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srl_b
__builtin_msa_srl_d
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srli_b
__builtin_msa_srli_d
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srlr_b
__builtin_msa_srlr_d
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlri_b
__builtin_msa_srlri_d
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_st_b
__builtin_msa_st_d
__builtin_msa_st_h
__builtin_msa_st_w
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_subq_s_w
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_r_w
__builtin_mips_subqh_w
__builtin_msa_subs_s_b
__builtin_msa_subs_s_d
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_u_b
__builtin_msa_subs_u_d
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subsus_u_b
__builtin_msa_subsus_u_d
__builtin_msa_subsus_u_h
__builtin_msa_subsus_u_w
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_d
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_mips_subu_ph
__builtin_mips_subu_qb
__builtin_mips_subu_s_ph
__builtin_mips_subu_s_qb
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_subv_b
__builtin_msa_subv_d
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subvi_b
__builtin_msa_subvi_d
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_vshf_b
__builtin_msa_vshf_d
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_mips_wrdsp
__builtin_msa_xor_v
__builtin_msa_xori_b
__nvvm_add_rm_d
__nvvm_add_rm_f
__nvvm_add_rm_ftz_f
__nvvm_add_rn_d
__nvvm_add_rn_f
__nvvm_add_rn_ftz_f
__nvvm_add_rp_d
__nvvm_add_rp_f
__nvvm_add_rp_ftz_f
__nvvm_add_rz_d
__nvvm_add_rz_f
__nvvm_add_rz_ftz_f
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_bar
__nvvm_bar_n
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
__syncthreads
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar0_popc
__nvvm_bitcast_d2ll
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_ceil_d
__nvvm_ceil_f
__nvvm_ceil_ftz_f
__nvvm_cos_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_d2f_rm
__nvvm_d2f_rm_ftz
__nvvm_d2f_rn
__nvvm_d2f_rn_ftz
__nvvm_d2f_rp
__nvvm_d2f_rp_ftz
__nvvm_d2f_rz
__nvvm_d2f_rz_ftz
__nvvm_d2i_hi
__nvvm_d2i_lo
__nvvm_d2i_rm
__nvvm_d2i_rn
__nvvm_d2i_rp
__nvvm_d2i_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rn
__nvvm_d2ll_rp
__nvvm_d2ll_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rn
__nvvm_d2ui_rp
__nvvm_d2ui_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rn
__nvvm_d2ull_rp
__nvvm_d2ull_rz
__nvvm_div_approx_f
__nvvm_div_approx_ftz_f
__nvvm_div_rm_d
__nvvm_div_rm_f
__nvvm_div_rm_ftz_f
__nvvm_div_rn_d
__nvvm_div_rn_f
__nvvm_div_rn_ftz_f
__nvvm_div_rp_d
__nvvm_div_rp_f
__nvvm_div_rp_ftz_f
__nvvm_div_rz_d
__nvvm_div_rz_f
__nvvm_div_rz_ftz_f
__nvvm_ex2_approx_d
__nvvm_ex2_approx_f
__nvvm_ex2_approx_ftz_f
__nvvm_f2h_rn
__nvvm_f2h_rn_ftz
__nvvm_f2i_rm
__nvvm_f2i_rm_ftz
__nvvm_f2i_rn
__nvvm_f2i_rn_ftz
__nvvm_f2i_rp
__nvvm_f2i_rp_ftz
__nvvm_f2i_rz
__nvvm_f2i_rz_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rp
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rz_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rp
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rz_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rn
__nvvm_f2ull_rn_ftz
__nvvm_f2ull_rp
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rz_ftz
__nvvm_fabs_d
__nvvm_fabs_f
__nvvm_fabs_ftz_f
__nvvm_floor_d
__nvvm_floor_f
__nvvm_floor_ftz_f
__nvvm_fma_rm_d
__nvvm_fma_rm_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rn_d
__nvvm_fma_rn_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rp_d
__nvvm_fma_rp_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rz_d
__nvvm_fma_rz_f
__nvvm_fma_rz_ftz_f
__nvvm_fmax_d
__nvvm_fmax_f
__nvvm_fmax_ftz_f
__nvvm_fmin_d
__nvvm_fmin_f
__nvvm_fmin_ftz_f
__nvvm_fns
__nvvm_i2d_rm
__nvvm_i2d_rn
__nvvm_i2d_rp
__nvvm_i2d_rz
__nvvm_i2f_rm
__nvvm_i2f_rn
__nvvm_i2f_rp
__nvvm_i2f_rz
__nvvm_isspacep_const
__nvvm_isspacep_global
__nvvm_isspacep_local
__nvvm_isspacep_shared
__nvvm_istypep_sampler
__nvvm_istypep_surface
__nvvm_istypep_texture
__nvvm_lg2_approx_d
__nvvm_lg2_approx_f
__nvvm_lg2_approx_ftz_f
__nvvm_ll2d_rm
__nvvm_ll2d_rn
__nvvm_ll2d_rp
__nvvm_ll2d_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rn
__nvvm_ll2f_rp
__nvvm_ll2f_rz
__nvvm_lohi_i2d
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_mul_rm_d
__nvvm_mul_rm_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rn_d
__nvvm_mul_rn_f
__nvvm_mul_rn_ftz_f
__nvvm_mul_rp_d
__nvvm_mul_rp_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rz_d
__nvvm_mul_rz_f
__nvvm_mul_rz_ftz_f
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_mulhi_i
__nvvm_mulhi_ll
__nvvm_mulhi_ui
__nvvm_mulhi_ull
__nvvm_prmt
__nvvm_rcp_approx_ftz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rm_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rn_d
__nvvm_rcp_rn_f
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rp_d
__nvvm_rcp_rp_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rz_d
__nvvm_rcp_rz_f
__nvvm_rcp_rz_ftz_f
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_envreg0
__nvvm_read_ptx_sreg_envreg1
__nvvm_read_ptx_sreg_envreg10
__nvvm_read_ptx_sreg_envreg11
__nvvm_read_ptx_sreg_envreg12
__nvvm_read_ptx_sreg_envreg13
__nvvm_read_ptx_sreg_envreg14
__nvvm_read_ptx_sreg_envreg15
__nvvm_read_ptx_sreg_envreg16
__nvvm_read_ptx_sreg_envreg17
__nvvm_read_ptx_sreg_envreg18
__nvvm_read_ptx_sreg_envreg19
__nvvm_read_ptx_sreg_envreg2
__nvvm_read_ptx_sreg_envreg20
__nvvm_read_ptx_sreg_envreg21
__nvvm_read_ptx_sreg_envreg22
__nvvm_read_ptx_sreg_envreg23
__nvvm_read_ptx_sreg_envreg24
__nvvm_read_ptx_sreg_envreg25
__nvvm_read_ptx_sreg_envreg26
__nvvm_read_ptx_sreg_envreg27
__nvvm_read_ptx_sreg_envreg28
__nvvm_read_ptx_sreg_envreg29
__nvvm_read_ptx_sreg_envreg3
__nvvm_read_ptx_sreg_envreg30
__nvvm_read_ptx_sreg_envreg31
__nvvm_read_ptx_sreg_envreg4
__nvvm_read_ptx_sreg_envreg5
__nvvm_read_ptx_sreg_envreg6
__nvvm_read_ptx_sreg_envreg7
__nvvm_read_ptx_sreg_envreg8
__nvvm_read_ptx_sreg_envreg9
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_warpsize
__nvvm_rotate_b32
__nvvm_rotate_b64
__nvvm_rotate_right_b64
__nvvm_round_d
__nvvm_round_f
__nvvm_round_ftz_f
__nvvm_rsqrt_approx_d
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_ftz_f
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_saturate_d
__nvvm_saturate_f
__nvvm_saturate_ftz_f
__nvvm_shfl_bfly_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_down_f32
__nvvm_shfl_down_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_down_f32
__nvvm_shfl_sync_down_i32
__nvvm_shfl_sync_idx_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_up_i32
__nvvm_sin_approx_f
__nvvm_sin_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_f
__nvvm_sqrt_rm_d
__nvvm_sqrt_rm_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rn_f
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rp_d
__nvvm_sqrt_rp_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rz_d
__nvvm_sqrt_rz_f
__nvvm_sqrt_rz_ftz_f
__nvvm_suq_array_size
__nvvm_suq_channel_data_type
__nvvm_suq_channel_order
__nvvm_suq_depth
__nvvm_suq_height
__nvvm_suq_width
__nvvm_sust_b_1d_array_i16_clamp
__nvvm_sust_b_1d_array_i16_trap
__nvvm_sust_b_1d_array_i16_zero
__nvvm_sust_b_1d_array_i32_clamp
__nvvm_sust_b_1d_array_i32_trap
__nvvm_sust_b_1d_array_i32_zero
__nvvm_sust_b_1d_array_i64_clamp
__nvvm_sust_b_1d_array_i64_trap
__nvvm_sust_b_1d_array_i64_zero
__nvvm_sust_b_1d_array_i8_clamp
__nvvm_sust_b_1d_array_i8_trap
__nvvm_sust_b_1d_array_i8_zero
__nvvm_sust_b_1d_array_v2i16_clamp
__nvvm_sust_b_1d_array_v2i16_trap
__nvvm_sust_b_1d_array_v2i16_zero
__nvvm_sust_b_1d_array_v2i32_clamp
__nvvm_sust_b_1d_array_v2i32_trap
__nvvm_sust_b_1d_array_v2i32_zero
__nvvm_sust_b_1d_array_v2i64_clamp
__nvvm_sust_b_1d_array_v2i64_trap
__nvvm_sust_b_1d_array_v2i64_zero
__nvvm_sust_b_1d_array_v2i8_clamp
__nvvm_sust_b_1d_array_v2i8_trap
__nvvm_sust_b_1d_array_v2i8_zero
__nvvm_sust_b_1d_array_v4i16_clamp
__nvvm_sust_b_1d_array_v4i16_trap
__nvvm_sust_b_1d_array_v4i16_zero
__nvvm_sust_b_1d_array_v4i32_clamp
__nvvm_sust_b_1d_array_v4i32_trap
__nvvm_sust_b_1d_array_v4i32_zero
__nvvm_sust_b_1d_array_v4i8_clamp
__nvvm_sust_b_1d_array_v4i8_trap
__nvvm_sust_b_1d_array_v4i8_zero
__nvvm_sust_b_1d_i16_clamp
__nvvm_sust_b_1d_i16_trap
__nvvm_sust_b_1d_i16_zero
__nvvm_sust_b_1d_i32_clamp
__nvvm_sust_b_1d_i32_trap
__nvvm_sust_b_1d_i32_zero
__nvvm_sust_b_1d_i64_clamp
__nvvm_sust_b_1d_i64_trap
__nvvm_sust_b_1d_i64_zero
__nvvm_sust_b_1d_i8_clamp
__nvvm_sust_b_1d_i8_trap
__nvvm_sust_b_1d_i8_zero
__nvvm_sust_b_1d_v2i16_clamp
__nvvm_sust_b_1d_v2i16_trap
__nvvm_sust_b_1d_v2i16_zero
__nvvm_sust_b_1d_v2i32_clamp
__nvvm_sust_b_1d_v2i32_trap
__nvvm_sust_b_1d_v2i32_zero
__nvvm_sust_b_1d_v2i64_clamp
__nvvm_sust_b_1d_v2i64_trap
__nvvm_sust_b_1d_v2i64_zero
__nvvm_sust_b_1d_v2i8_clamp
__nvvm_sust_b_1d_v2i8_trap
__nvvm_sust_b_1d_v2i8_zero
__nvvm_sust_b_1d_v4i16_clamp
__nvvm_sust_b_1d_v4i16_trap
__nvvm_sust_b_1d_v4i16_zero
__nvvm_sust_b_1d_v4i32_clamp
__nvvm_sust_b_1d_v4i32_trap
__nvvm_sust_b_1d_v4i32_zero
__nvvm_sust_b_1d_v4i8_clamp
__nvvm_sust_b_1d_v4i8_trap
__nvvm_sust_b_1d_v4i8_zero
__nvvm_sust_b_2d_array_i16_clamp
__nvvm_sust_b_2d_array_i16_trap
__nvvm_sust_b_2d_array_i16_zero
__nvvm_sust_b_2d_array_i32_clamp
__nvvm_sust_b_2d_array_i32_trap
__nvvm_sust_b_2d_array_i32_zero
__nvvm_sust_b_2d_array_i64_clamp
__nvvm_sust_b_2d_array_i64_trap
__nvvm_sust_b_2d_array_i64_zero
__nvvm_sust_b_2d_array_i8_clamp
__nvvm_sust_b_2d_array_i8_trap
__nvvm_sust_b_2d_array_i8_zero
__nvvm_sust_b_2d_array_v2i16_clamp
__nvvm_sust_b_2d_array_v2i16_trap
__nvvm_sust_b_2d_array_v2i16_zero
__nvvm_sust_b_2d_array_v2i32_clamp
__nvvm_sust_b_2d_array_v2i32_trap
__nvvm_sust_b_2d_array_v2i32_zero
__nvvm_sust_b_2d_array_v2i64_clamp
__nvvm_sust_b_2d_array_v2i64_trap
__nvvm_sust_b_2d_array_v2i64_zero
__nvvm_sust_b_2d_array_v2i8_clamp
__nvvm_sust_b_2d_array_v2i8_trap
__nvvm_sust_b_2d_array_v2i8_zero
__nvvm_sust_b_2d_array_v4i16_clamp
__nvvm_sust_b_2d_array_v4i16_trap
__nvvm_sust_b_2d_array_v4i16_zero
__nvvm_sust_b_2d_array_v4i32_clamp
__nvvm_sust_b_2d_array_v4i32_trap
__nvvm_sust_b_2d_array_v4i32_zero
__nvvm_sust_b_2d_array_v4i8_clamp
__nvvm_sust_b_2d_array_v4i8_trap
__nvvm_sust_b_2d_array_v4i8_zero
__nvvm_sust_b_2d_i16_clamp
__nvvm_sust_b_2d_i16_trap
__nvvm_sust_b_2d_i16_zero
__nvvm_sust_b_2d_i32_clamp
__nvvm_sust_b_2d_i32_trap
__nvvm_sust_b_2d_i32_zero
__nvvm_sust_b_2d_i64_clamp
__nvvm_sust_b_2d_i64_trap
__nvvm_sust_b_2d_i64_zero
__nvvm_sust_b_2d_i8_clamp
__nvvm_sust_b_2d_i8_trap
__nvvm_sust_b_2d_i8_zero
__nvvm_sust_b_2d_v2i16_clamp
__nvvm_sust_b_2d_v2i16_trap
__nvvm_sust_b_2d_v2i16_zero
__nvvm_sust_b_2d_v2i32_clamp
__nvvm_sust_b_2d_v2i32_trap
__nvvm_sust_b_2d_v2i32_zero
__nvvm_sust_b_2d_v2i64_clamp
__nvvm_sust_b_2d_v2i64_trap
__nvvm_sust_b_2d_v2i64_zero
__nvvm_sust_b_2d_v2i8_clamp
__nvvm_sust_b_2d_v2i8_trap
__nvvm_sust_b_2d_v2i8_zero
__nvvm_sust_b_2d_v4i16_clamp
__nvvm_sust_b_2d_v4i16_trap
__nvvm_sust_b_2d_v4i16_zero
__nvvm_sust_b_2d_v4i32_clamp
__nvvm_sust_b_2d_v4i32_trap
__nvvm_sust_b_2d_v4i32_zero
__nvvm_sust_b_2d_v4i8_clamp
__nvvm_sust_b_2d_v4i8_trap
__nvvm_sust_b_2d_v4i8_zero
__nvvm_sust_b_3d_i16_clamp
__nvvm_sust_b_3d_i16_trap
__nvvm_sust_b_3d_i16_zero
__nvvm_sust_b_3d_i32_clamp
__nvvm_sust_b_3d_i32_trap
__nvvm_sust_b_3d_i32_zero
__nvvm_sust_b_3d_i64_clamp
__nvvm_sust_b_3d_i64_trap
__nvvm_sust_b_3d_i64_zero
__nvvm_sust_b_3d_i8_clamp
__nvvm_sust_b_3d_i8_trap
__nvvm_sust_b_3d_i8_zero
__nvvm_sust_b_3d_v2i16_clamp
__nvvm_sust_b_3d_v2i16_trap
__nvvm_sust_b_3d_v2i16_zero
__nvvm_sust_b_3d_v2i32_clamp
__nvvm_sust_b_3d_v2i32_trap
__nvvm_sust_b_3d_v2i32_zero
__nvvm_sust_b_3d_v2i64_clamp
__nvvm_sust_b_3d_v2i64_trap
__nvvm_sust_b_3d_v2i64_zero
__nvvm_sust_b_3d_v2i8_clamp
__nvvm_sust_b_3d_v2i8_trap
__nvvm_sust_b_3d_v2i8_zero
__nvvm_sust_b_3d_v4i16_clamp
__nvvm_sust_b_3d_v4i16_trap
__nvvm_sust_b_3d_v4i16_zero
__nvvm_sust_b_3d_v4i32_clamp
__nvvm_sust_b_3d_v4i32_trap
__nvvm_sust_b_3d_v4i32_zero
__nvvm_sust_b_3d_v4i8_clamp
__nvvm_sust_b_3d_v4i8_trap
__nvvm_sust_b_3d_v4i8_zero
__nvvm_sust_p_1d_array_i16_trap
__nvvm_sust_p_1d_array_i32_trap
__nvvm_sust_p_1d_array_i8_trap
__nvvm_sust_p_1d_array_v2i16_trap
__nvvm_sust_p_1d_array_v2i32_trap
__nvvm_sust_p_1d_array_v2i8_trap
__nvvm_sust_p_1d_array_v4i16_trap
__nvvm_sust_p_1d_array_v4i32_trap
__nvvm_sust_p_1d_array_v4i8_trap
__nvvm_sust_p_1d_i16_trap
__nvvm_sust_p_1d_i32_trap
__nvvm_sust_p_1d_i8_trap
__nvvm_sust_p_1d_v2i16_trap
__nvvm_sust_p_1d_v2i32_trap
__nvvm_sust_p_1d_v2i8_trap
__nvvm_sust_p_1d_v4i16_trap
__nvvm_sust_p_1d_v4i32_trap
__nvvm_sust_p_1d_v4i8_trap
__nvvm_sust_p_2d_array_i16_trap
__nvvm_sust_p_2d_array_i32_trap
__nvvm_sust_p_2d_array_i8_trap
__nvvm_sust_p_2d_array_v2i16_trap
__nvvm_sust_p_2d_array_v2i32_trap
__nvvm_sust_p_2d_array_v2i8_trap
__nvvm_sust_p_2d_array_v4i16_trap
__nvvm_sust_p_2d_array_v4i32_trap
__nvvm_sust_p_2d_array_v4i8_trap
__nvvm_sust_p_2d_i16_trap
__nvvm_sust_p_2d_i32_trap
__nvvm_sust_p_2d_i8_trap
__nvvm_sust_p_2d_v2i16_trap
__nvvm_sust_p_2d_v2i32_trap
__nvvm_sust_p_2d_v2i8_trap
__nvvm_sust_p_2d_v4i16_trap
__nvvm_sust_p_2d_v4i32_trap
__nvvm_sust_p_2d_v4i8_trap
__nvvm_sust_p_3d_i16_trap
__nvvm_sust_p_3d_i32_trap
__nvvm_sust_p_3d_i8_trap
__nvvm_sust_p_3d_v2i16_trap
__nvvm_sust_p_3d_v2i32_trap
__nvvm_sust_p_3d_v2i8_trap
__nvvm_sust_p_3d_v4i16_trap
__nvvm_sust_p_3d_v4i32_trap
__nvvm_sust_p_3d_v4i8_trap
__nvvm_swap_lo_hi_b64
__nvvm_trunc_d
__nvvm_trunc_f
__nvvm_trunc_ftz_f
__nvvm_txq_array_size
__nvvm_txq_channel_data_type
__nvvm_txq_channel_order
__nvvm_txq_depth
__nvvm_txq_height
__nvvm_txq_num_mipmap_levels
__nvvm_txq_num_samples
__nvvm_txq_width
__nvvm_ui2d_rm
__nvvm_ui2d_rn
__nvvm_ui2d_rp
__nvvm_ui2d_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rn
__nvvm_ui2f_rp
__nvvm_ui2f_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rn
__nvvm_ull2d_rp
__nvvm_ull2d_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rn
__nvvm_ull2f_rp
__nvvm_ull2f_rz
__nvvm_vote_all
__nvvm_vote_all_sync
__nvvm_vote_any
__nvvm_vote_any_sync
__nvvm_vote_ballot
__nvvm_vote_ballot_sync
__nvvm_vote_uni
__nvvm_vote_uni_sync
__builtin_addf128_round_to_odd
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vsbox
__builtin_altivec_crypto_vshasigmad
__builtin_altivec_crypto_vshasigmaw
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_dstt
__builtin_altivec_mfvscr
__builtin_altivec_mtvscr
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vaddcuq
__builtin_altivec_vaddcuw
__builtin_altivec_vaddecuq
__builtin_altivec_vaddeuqm
__builtin_altivec_vaddsbs
__builtin_altivec_vaddshs
__builtin_altivec_vaddsws
__builtin_altivec_vaddubs
__builtin_altivec_vadduhs
__builtin_altivec_vadduws
__builtin_altivec_vavgsb
__builtin_altivec_vavgsh
__builtin_altivec_vavgsw
__builtin_altivec_vavgub
__builtin_altivec_vavguh
__builtin_altivec_vavguw
__builtin_altivec_vbpermq
__builtin_altivec_vcfsx
__builtin_altivec_vcfux
__builtin_altivec_vclzlsbb
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpbfp_p
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequb_p
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpequd_p
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequh_p
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequw_p
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpgtfp
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vcmpgtsb
__builtin_altivec_vcmpgtsb_p
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtsh
__builtin_altivec_vcmpgtsh_p
__builtin_altivec_vcmpgtsw
__builtin_altivec_vcmpgtsw_p
__builtin_altivec_vcmpgtub
__builtin_altivec_vcmpgtub_p
__builtin_altivec_vcmpgtud
__builtin_altivec_vcmpgtud_p
__builtin_altivec_vcmpgtuh
__builtin_altivec_vcmpgtuh_p
__builtin_altivec_vcmpgtuw
__builtin_altivec_vcmpgtuw_p
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezb_p
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezh_p
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpnezw_p
__builtin_altivec_vctsxs
__builtin_altivec_vctuxs
__builtin_altivec_vctzlsbb
__builtin_altivec_vexptefp
__builtin_altivec_vgbbd
__builtin_altivec_vlogefp
__builtin_altivec_vmaddfp
__builtin_altivec_vmaxfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxub
__builtin_altivec_vmaxud
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxuw
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vminfp
__builtin_altivec_vminsb
__builtin_altivec_vminsd
__builtin_altivec_vminsh
__builtin_altivec_vminsw
__builtin_altivec_vminub
__builtin_altivec_vminud
__builtin_altivec_vminuh
__builtin_altivec_vminuw
__builtin_altivec_vmladduhm
__builtin_altivec_vmsummbm
__builtin_altivec_vmsumshm
__builtin_altivec_vmsumshs
__builtin_altivec_vmsumubm
__builtin_altivec_vmsumuhm
__builtin_altivec_vmsumuhs
__builtin_altivec_vmulesb
__builtin_altivec_vmulesh
__builtin_altivec_vmulesw
__builtin_altivec_vmuleub
__builtin_altivec_vmuleuh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulosb
__builtin_altivec_vmulosh
__builtin_altivec_vmulosw
__builtin_altivec_vmuloub
__builtin_altivec_vmulouh
__builtin_altivec_vmulouw
__builtin_altivec_vnmsubfp
__builtin_altivec_vperm_4si
__builtin_altivec_vpkpx
__builtin_altivec_vpksdss
__builtin_altivec_vpksdus
__builtin_altivec_vpkshss
__builtin_altivec_vpkshus
__builtin_altivec_vpkswss
__builtin_altivec_vpkswus
__builtin_altivec_vpkudus
__builtin_altivec_vpkuhus
__builtin_altivec_vpkuwus
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
__builtin_altivec_vprtybw
__builtin_altivec_vrefp
__builtin_altivec_vrfim
__builtin_altivec_vrfin
__builtin_altivec_vrfip
__builtin_altivec_vrfiz
__builtin_altivec_vrlb
__builtin_altivec_vrld
__builtin_altivec_vrldmi
__builtin_altivec_vrldnm
__builtin_altivec_vrlh
__builtin_altivec_vrlw
__builtin_altivec_vrlwmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsel_4si
__builtin_altivec_vsl
__builtin_altivec_vslb
__builtin_altivec_vslh
__builtin_altivec_vslo
__builtin_altivec_vslv
__builtin_altivec_vslw
__builtin_altivec_vsr
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsrb
__builtin_altivec_vsrh
__builtin_altivec_vsro
__builtin_altivec_vsrv
__builtin_altivec_vsrw
__builtin_altivec_vsubcuq
__builtin_altivec_vsubcuw
__builtin_altivec_vsubecuq
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubsbs
__builtin_altivec_vsubshs
__builtin_altivec_vsubsws
__builtin_altivec_vsububs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubuws
__builtin_altivec_vsum2sws
__builtin_altivec_vsum4sbs
__builtin_altivec_vsum4shs
__builtin_altivec_vsum4ubs
__builtin_altivec_vsumsws
__builtin_altivec_vupkhpx
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhsh
__builtin_altivec_vupkhsw
__builtin_altivec_vupklpx
__builtin_altivec_vupklsb
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_bpermd
__builtin_divde
__builtin_divdeu
__builtin_divf128_round_to_odd
__builtin_divwe
__builtin_divweu
__builtin_fmaf128_round_to_odd
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_mulf128_round_to_odd
__builtin_qpx_qvfabs
__builtin_qpx_qvfadd
__builtin_qpx_qvfadds
__builtin_qpx_qvfcfid
__builtin_qpx_qvfcfids
__builtin_qpx_qvfcfidu
__builtin_qpx_qvfcfidus
__builtin_qpx_qvfcmpeq
__builtin_qpx_qvfcmpgt
__builtin_qpx_qvfcmplt
__builtin_qpx_qvfcpsgn
__builtin_qpx_qvfctid
__builtin_qpx_qvfctidu
__builtin_qpx_qvfctiduz
__builtin_qpx_qvfctidz
__builtin_qpx_qvfctiw
__builtin_qpx_qvfctiwu
__builtin_qpx_qvfctiwuz
__builtin_qpx_qvfctiwz
__builtin_qpx_qvflogical
__builtin_qpx_qvfmadd
__builtin_qpx_qvfmadds
__builtin_qpx_qvfmsub
__builtin_qpx_qvfmsubs
__builtin_qpx_qvfmul
__builtin_qpx_qvfmuls
__builtin_qpx_qvfnabs
__builtin_qpx_qvfneg
__builtin_qpx_qvfnmadd
__builtin_qpx_qvfnmadds
__builtin_qpx_qvfnmsub
__builtin_qpx_qvfnmsubs
__builtin_qpx_qvfperm
__builtin_qpx_qvfre
__builtin_qpx_qvfres
__builtin_qpx_qvfrim
__builtin_qpx_qvfrin
__builtin_qpx_qvfrip
__builtin_qpx_qvfriz
__builtin_qpx_qvfrsp
__builtin_qpx_qvfrsqrte
__builtin_qpx_qvfrsqrtes
__builtin_qpx_qvfsel
__builtin_qpx_qvfsub
__builtin_qpx_qvfsubs
__builtin_qpx_qvftstnan
__builtin_qpx_qvfxmadd
__builtin_qpx_qvfxmadds
__builtin_qpx_qvfxmul
__builtin_qpx_qvfxmuls
__builtin_qpx_qvfxxcpnmadd
__builtin_qpx_qvfxxcpnmadds
__builtin_qpx_qvfxxmadd
__builtin_qpx_qvfxxmadds
__builtin_qpx_qvfxxnpmadd
__builtin_qpx_qvfxxnpmadds
__builtin_qpx_qvgpci
__builtin_qpx_qvlfcd
__builtin_qpx_qvlfcda
__builtin_qpx_qvlfcs
__builtin_qpx_qvlfcsa
__builtin_qpx_qvlfd
__builtin_qpx_qvlfda
__builtin_qpx_qvlfiwa
__builtin_qpx_qvlfiwaa
__builtin_qpx_qvlfiwz
__builtin_qpx_qvlfiwza
__builtin_qpx_qvlfs
__builtin_qpx_qvlfsa
__builtin_qpx_qvlpcld
__builtin_qpx_qvlpcls
__builtin_qpx_qvlpcrd
__builtin_qpx_qvlpcrs
__builtin_qpx_qvstfcd
__builtin_qpx_qvstfcda
__builtin_qpx_qvstfcs
__builtin_qpx_qvstfcsa
__builtin_qpx_qvstfd
__builtin_qpx_qvstfda
__builtin_qpx_qvstfiw
__builtin_qpx_qvstfiwa
__builtin_qpx_qvstfs
__builtin_qpx_qvstfsa
__builtin_vsx_scalar_extract_expq
__builtin_vsx_scalar_insert_exp_qp
__builtin_set_texasr
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_sqrtf128_round_to_odd
__builtin_subf128_round_to_odd
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tbegin
__builtin_tcheck
__builtin_tend
__builtin_tendall
__builtin_trechkpt
__builtin_treclaim
__builtin_tresume
__builtin_truncf128_round_to_odd
__builtin_tsr
__builtin_tsuspend
__builtin_ttest
__builtin_vsx_xsmaxdp
__builtin_vsx_xsmindp
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqdp_p
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvcvdpsp
__builtin_vsx_xvcvdpsxws
__builtin_vsx_xvcvdpuxws
__builtin_vsx_xvcvhpsp
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvsxdsp
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxdsp
__builtin_vsx_xvcvuxwdp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xviexpdp
__builtin_vsx_xviexpsp
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvtstdcdp
__builtin_vsx_xvtstdcsp
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xxextractuw
__builtin_vsx_xxinsertw
__builtin_vsx_xxleqv
__builtin_r600_group_barrier
__builtin_r600_implicitarg_ptr
__builtin_r600_rat_store_typed
__builtin_r600_read_global_size_x
__builtin_r600_read_global_size_y
__builtin_r600_read_global_size_z
__builtin_r600_read_ngroups_x
__builtin_r600_read_ngroups_y
__builtin_r600_read_ngroups_z
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_s390_efpc
__builtin_tx_nesting_depth
__builtin_s390_lcbb
__builtin_tx_assist
__builtin_s390_sfpc
__builtin_s390_vaccb
__builtin_s390_vacccq
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vacch
__builtin_s390_vaccq
__builtin_s390_vacq
__builtin_s390_vaq
__builtin_s390_vavgb
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavgh
__builtin_s390_vavglb
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vavglh
__builtin_s390_vbperm
__builtin_s390_vcksm
__builtin_s390_verimb
__builtin_s390_verimf
__builtin_s390_verimg
__builtin_s390_verimh
__builtin_s390_verllb
__builtin_s390_verllf
__builtin_s390_verllg
__builtin_s390_verllh
__builtin_s390_verllvb
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_verllvh
__builtin_s390_vfaeb
__builtin_s390_vfaef
__builtin_s390_vfaeh
__builtin_s390_vfaezb
__builtin_s390_vfaezf
__builtin_s390_vfaezh
__builtin_s390_vfeeb
__builtin_s390_vfeef
__builtin_s390_vfeeh
__builtin_s390_vfeezb
__builtin_s390_vfeezf
__builtin_s390_vfeezh
__builtin_s390_vfeneb
__builtin_s390_vfenef
__builtin_s390_vfeneh
__builtin_s390_vfenezb
__builtin_s390_vfenezf
__builtin_s390_vfenezh
__builtin_s390_vgfmab
__builtin_s390_vgfmaf
__builtin_s390_vgfmag
__builtin_s390_vgfmah
__builtin_s390_vgfmb
__builtin_s390_vgfmf
__builtin_s390_vgfmg
__builtin_s390_vgfmh
__builtin_s390_vistrb
__builtin_s390_vistrf
__builtin_s390_vistrh
__builtin_s390_vlbb
__builtin_s390_vll
__builtin_s390_vlrl
__builtin_s390_vmaeb
__builtin_s390_vmaef
__builtin_s390_vmaeh
__builtin_s390_vmahb
__builtin_s390_vmahf
__builtin_s390_vmahh
__builtin_s390_vmaleb
__builtin_s390_vmalef
__builtin_s390_vmaleh
__builtin_s390_vmalhb
__builtin_s390_vmalhf
__builtin_s390_vmalhh
__builtin_s390_vmalob
__builtin_s390_vmalof
__builtin_s390_vmaloh
__builtin_s390_vmaob
__builtin_s390_vmaof
__builtin_s390_vmaoh
__builtin_s390_vmeb
__builtin_s390_vmef
__builtin_s390_vmeh
__builtin_s390_vmhb
__builtin_s390_vmhf
__builtin_s390_vmhh
__builtin_s390_vmleb
__builtin_s390_vmlef
__builtin_s390_vmleh
__builtin_s390_vmlhb
__builtin_s390_vmlhf
__builtin_s390_vmlhh
__builtin_s390_vmlob
__builtin_s390_vmlof
__builtin_s390_vmloh
__builtin_s390_vmob
__builtin_s390_vmof
__builtin_s390_vmoh
__builtin_s390_vmslg
__builtin_s390_vpdi
__builtin_s390_vperm
__builtin_s390_vpklsf
__builtin_s390_vpklsg
__builtin_s390_vpklsh
__builtin_s390_vpksf
__builtin_s390_vpksg
__builtin_s390_vpksh
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbih
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
__builtin_s390_vsq
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vstl
__builtin_s390_vstrcb
__builtin_s390_vstrcf
__builtin_s390_vstrch
__builtin_s390_vstrczb
__builtin_s390_vstrczf
__builtin_s390_vstrczh
__builtin_s390_vstrl
__builtin_s390_vsumb
__builtin_s390_vsumgf
__builtin_s390_vsumgh
__builtin_s390_vsumh
__builtin_s390_vsumqf
__builtin_s390_vsumqg
__builtin_s390_vtm
__builtin_s390_vuphb
__builtin_s390_vuphf
__builtin_s390_vuphh
__builtin_s390_vuplb
__builtin_s390_vuplf
__builtin_s390_vuplhb
__builtin_s390_vuplhf
__builtin_s390_vuplhh
__builtin_s390_vuplhw
__builtin_s390_vupllb
__builtin_s390_vupllf
__builtin_s390_vupllh
__builtin_ia32_pavgusb
__builtin_ia32_pf2id
__builtin_ia32_pfacc
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqit1
__builtin_ia32_pfrsqrt
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
__builtin_ia32_pmulhrw
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_aesdec128
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast128
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_aesenc128
__builtin_ia32_aesenc256
__builtin_ia32_aesenc512
__builtin_ia32_aesenclast128
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesimc128
__builtin_ia32_aeskeygenassist128
__builtin_ia32_addsubpd256
__builtin_ia32_addsubps256
__builtin_ia32_blendvpd256
__builtin_ia32_blendvps256
__builtin_ia32_cvtpd2ps256
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvtps2dq256
__builtin_ia32_cvttpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_dpps256
__builtin_ia32_haddpd256
__builtin_ia32_haddps256
__builtin_ia32_hsubpd256
__builtin_ia32_hsubps256
__builtin_ia32_lddqu256
__builtin_ia32_maskloadpd
__builtin_ia32_maskloadpd256
__builtin_ia32_maskloadps
__builtin_ia32_maskloadps256
__builtin_ia32_maskstorepd
__builtin_ia32_maskstorepd256
__builtin_ia32_maskstoreps
__builtin_ia32_maskstoreps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_movmskpd256
__builtin_ia32_movmskps256
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_ptestz256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_rsqrtps256
__builtin_ia32_vpermilvarpd
__builtin_ia32_vpermilvarpd256
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarps256
__builtin_ia32_vtestcpd
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestcps
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestnzcps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestzpd256
__builtin_ia32_vtestzps
__builtin_ia32_vtestzps256
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_gatherd_d
__builtin_ia32_gatherd_d256
__builtin_ia32_gatherd_pd
__builtin_ia32_gatherd_pd256
__builtin_ia32_gatherd_ps
__builtin_ia32_gatherd_ps256
__builtin_ia32_gatherd_q
__builtin_ia32_gatherd_q256
__builtin_ia32_gatherq_d
__builtin_ia32_gatherq_d256
__builtin_ia32_gatherq_pd
__builtin_ia32_gatherq_pd256
__builtin_ia32_gatherq_ps
__builtin_ia32_gatherq_ps256
__builtin_ia32_gatherq_q
__builtin_ia32_gatherq_q256
__builtin_ia32_maskloadd
__builtin_ia32_maskloadd256
__builtin_ia32_maskloadq
__builtin_ia32_maskloadq256
__builtin_ia32_maskstored
__builtin_ia32_maskstored256
__builtin_ia32_maskstoreq
__builtin_ia32_maskstoreq256
__builtin_ia32_mpsadbw256
__builtin_ia32_packssdw256
__builtin_ia32_packsswb256
__builtin_ia32_packusdw256
__builtin_ia32_packuswb256
__builtin_ia32_pblendvb256
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_phaddd256
__builtin_ia32_phaddsw256
__builtin_ia32_phaddw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_phsubw256
__builtin_ia32_pmaddubsw256
__builtin_ia32_pmaddwd256
__builtin_ia32_pmovmskb256
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmulhuw256
__builtin_ia32_psadbw256
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignd256
__builtin_ia32_psignw256
__builtin_ia32_pslld256
__builtin_ia32_psllq256
__builtin_ia32_psllw256
__builtin_ia32_pslldi256
__builtin_ia32_psllqi256
__builtin_ia32_psllwi256
__builtin_ia32_psllv4si
__builtin_ia32_psllv8si
__builtin_ia32_psllv2di
__builtin_ia32_psllv4di
__builtin_ia32_psrad256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrawi256
__builtin_ia32_psrav4si
__builtin_ia32_psrav8si
__builtin_ia32_psrld256
__builtin_ia32_psrlq256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv2di
__builtin_ia32_psrlv4di
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_broadcastmb128
__builtin_ia32_broadcastmb256
__builtin_ia32_broadcastmb512
__builtin_ia32_broadcastmw128
__builtin_ia32_broadcastmw256
__builtin_ia32_broadcastmw512
__builtin_ia32_cvtsi2sd64
__builtin_ia32_cvtsi2ss32
__builtin_ia32_cvtsi2ss64
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtusi2ss32
__builtin_ia32_cvtusi2sd64
__builtin_ia32_cvtusi2ss64
__builtin_ia32_dbpsadbw128
__builtin_ia32_dbpsadbw256
__builtin_ia32_dbpsadbw512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_gathersiv8df
__builtin_ia32_gathersiv16si
__builtin_ia32_gathersiv8di
__builtin_ia32_gathersiv16sf
__builtin_ia32_gatherdiv8df
__builtin_ia32_gatherdiv16si
__builtin_ia32_gatherdiv8di
__builtin_ia32_gatherdiv16sf
__builtin_ia32_gather3div2df
__builtin_ia32_gather3div2di
__builtin_ia32_gather3div4df
__builtin_ia32_gather3div4di
__builtin_ia32_gather3div4sf
__builtin_ia32_gather3div4si
__builtin_ia32_gather3div8sf
__builtin_ia32_gather3div8si
__builtin_ia32_gather3siv2df
__builtin_ia32_gather3siv2di
__builtin_ia32_gather3siv4df
__builtin_ia32_gather3siv4di
__builtin_ia32_gather3siv4sf
__builtin_ia32_gather3siv4si
__builtin_ia32_gather3siv8sf
__builtin_ia32_gather3siv8si
__builtin_ia32_gatherpfdpd
__builtin_ia32_gatherpfdps
__builtin_ia32_gatherpfqpd
__builtin_ia32_gatherpfqps
__builtin_ia32_addsd_round_mask
__builtin_ia32_addss_round_mask
__builtin_ia32_cmpsd_mask
__builtin_ia32_cmpss_mask
__builtin_ia32_compressqi128_mask
__builtin_ia32_compressqi256_mask
__builtin_ia32_compressqi512_mask
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_compressdf128_mask
__builtin_ia32_compressdf256_mask
__builtin_ia32_compressdf512_mask
__builtin_ia32_compresssf128_mask
__builtin_ia32_compresssf256_mask
__builtin_ia32_compresssf512_mask
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compresshi128_mask
__builtin_ia32_compresshi256_mask
__builtin_ia32_compresshi512_mask
__builtin_ia32_vpconflictsi_128_mask
__builtin_ia32_vpconflictsi_256_mask
__builtin_ia32_vpconflictsi_512_mask
__builtin_ia32_vpconflictdi_128_mask
__builtin_ia32_vpconflictdi_256_mask
__builtin_ia32_vpconflictdi_512_mask
__builtin_ia32_cvtdq2ps512_mask
__builtin_ia32_cvtpd2dq128_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtpd2ps_mask
__builtin_ia32_cvtpd2ps512_mask
__builtin_ia32_cvtpd2qq128_mask
__builtin_ia32_cvtpd2qq256_mask
__builtin_ia32_cvtpd2qq512_mask
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2dq128_mask
__builtin_ia32_cvtps2dq256_mask
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtps2pd512_mask
__builtin_ia32_cvtps2qq128_mask
__builtin_ia32_cvtps2qq256_mask
__builtin_ia32_cvtps2qq512_mask
__builtin_ia32_cvtps2udq128_mask
__builtin_ia32_cvtps2udq256_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
__builtin_ia32_cvtqq2ps128_mask
__builtin_ia32_cvtqq2ps256_mask
__builtin_ia32_cvtqq2ps512_mask
__builtin_ia32_cvtsd2ss_round_mask
__builtin_ia32_cvtss2sd_round_mask
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2dq512_mask
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2dq512_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddf512_mask
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_fixupimmpd128_mask
__builtin_ia32_fixupimmpd256_mask
__builtin_ia32_fixupimmpd512_mask
__builtin_ia32_fixupimmps128_mask
__builtin_ia32_fixupimmps256_mask
__builtin_ia32_fixupimmps512_mask
__builtin_ia32_fixupimmsd_mask
__builtin_ia32_fixupimmss_mask
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getmantsd_round_mask
__builtin_ia32_getmantss_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovsdb128_mask
__builtin_ia32_pmovsdb256_mask
__builtin_ia32_pmovsdb512_mask
__builtin_ia32_pmovsdb128mem_mask
__builtin_ia32_pmovsdb256mem_mask
__builtin_ia32_pmovsdb512mem_mask
__builtin_ia32_pmovsdw128_mask
__builtin_ia32_pmovsdw256_mask
__builtin_ia32_pmovsdw512_mask
__builtin_ia32_pmovsdw128mem_mask
__builtin_ia32_pmovsdw256mem_mask
__builtin_ia32_pmovsdw512mem_mask
__builtin_ia32_pmovsqb128_mask
__builtin_ia32_pmovsqb256_mask
__builtin_ia32_pmovsqb512_mask
__builtin_ia32_pmovsqb128mem_mask
__builtin_ia32_pmovsqb256mem_mask
__builtin_ia32_pmovsqb512mem_mask
__builtin_ia32_pmovsqd128_mask
__builtin_ia32_pmovsqd256_mask
__builtin_ia32_pmovsqd512_mask
__builtin_ia32_pmovsqd128mem_mask
__builtin_ia32_pmovsqd256mem_mask
__builtin_ia32_pmovsqd512mem_mask
__builtin_ia32_pmovsqw128_mask
__builtin_ia32_pmovsqw256_mask
__builtin_ia32_pmovsqw512_mask
__builtin_ia32_pmovsqw128mem_mask
__builtin_ia32_pmovsqw256mem_mask
__builtin_ia32_pmovsqw512mem_mask
__builtin_ia32_pmovswb128_mask
__builtin_ia32_pmovswb256_mask
__builtin_ia32_pmovswb512_mask
__builtin_ia32_pmovswb128mem_mask
__builtin_ia32_pmovswb256mem_mask
__builtin_ia32_pmovswb512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_vpmultishiftqb128_mask
__builtin_ia32_vpmultishiftqb256_mask
__builtin_ia32_vpmultishiftqb512_mask
__builtin_ia32_rangepd128_mask
__builtin_ia32_rangepd256_mask
__builtin_ia32_rangepd512_mask
__builtin_ia32_rangeps128_mask
__builtin_ia32_rangeps256_mask
__builtin_ia32_rangeps512_mask
__builtin_ia32_rangesd128_round_mask
__builtin_ia32_rangess128_round_mask
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_rndscalepd_128_mask
__builtin_ia32_rndscalepd_256_mask
__builtin_ia32_rndscalepd_mask
__builtin_ia32_rndscaleps_128_mask
__builtin_ia32_rndscaleps_256_mask
__builtin_ia32_rndscaleps_mask
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_vcvtph2ps_mask
__builtin_ia32_vcvtph2ps256_mask
__builtin_ia32_vcvtph2ps512_mask
__builtin_ia32_vcvtps2ph_mask
__builtin_ia32_vcvtps2ph256_mask
__builtin_ia32_vcvtps2ph512_mask
__builtin_ia32_vpshldvd128_mask
__builtin_ia32_vpshldvd256_mask
__builtin_ia32_vpshldvd512_mask
__builtin_ia32_vpshldvq128_mask
__builtin_ia32_vpshldvq256_mask
__builtin_ia32_vpshldvq512_mask
__builtin_ia32_vpshldvw128_mask
__builtin_ia32_vpshldvw256_mask
__builtin_ia32_vpshldvw512_mask
__builtin_ia32_vpshrdvd128_mask
__builtin_ia32_vpshrdvd256_mask
__builtin_ia32_vpshrdvd512_mask
__builtin_ia32_vpshrdvq128_mask
__builtin_ia32_vpshrdvq256_mask
__builtin_ia32_vpshrdvq512_mask
__builtin_ia32_vpshrdvw128_mask
__builtin_ia32_vpshrdvw256_mask
__builtin_ia32_vpshrdvw512_mask
__builtin_ia32_vpshufbitqmb128_mask
__builtin_ia32_vpshufbitqmb256_mask
__builtin_ia32_vpshufbitqmb512_mask
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_vpshldvd128_maskz
__builtin_ia32_vpshldvd256_maskz
__builtin_ia32_vpshldvd512_maskz
__builtin_ia32_vpshldvq128_maskz
__builtin_ia32_vpshldvq256_maskz
__builtin_ia32_vpshldvq512_maskz
__builtin_ia32_vpshldvw128_maskz
__builtin_ia32_vpshldvw256_maskz
__builtin_ia32_vpshldvw512_maskz
__builtin_ia32_vpshrdvd128_maskz
__builtin_ia32_vpshrdvd256_maskz
__builtin_ia32_vpshrdvd512_maskz
__builtin_ia32_vpshrdvq128_maskz
__builtin_ia32_vpshrdvq256_maskz
__builtin_ia32_vpshrdvq512_maskz
__builtin_ia32_vpshrdvw128_maskz
__builtin_ia32_vpshrdvw256_maskz
__builtin_ia32_vpshrdvw512_maskz
__builtin_ia32_maxpd512
__builtin_ia32_maxps512
__builtin_ia32_minpd512
__builtin_ia32_minps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_packssdw512
__builtin_ia32_packsswb512
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_permvardf256
__builtin_ia32_permvardf512
__builtin_ia32_permvardi256
__builtin_ia32_permvardi512
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvarhi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarqi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_pmaddubsw512
__builtin_ia32_pmaddwd512
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhw512
__builtin_ia32_pmulhuw512
__builtin_ia32_psadbw512
__builtin_ia32_pshufb512
__builtin_ia32_pslld512
__builtin_ia32_psllq512
__builtin_ia32_psllw512
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
__builtin_ia32_psllwi512
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psllv8hi
__builtin_ia32_psllv16hi
__builtin_ia32_psllv32hi
__builtin_ia32_psrad512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraq512
__builtin_ia32_psraw512
__builtin_ia32_psradi512
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_psraqi512
__builtin_ia32_psrawi512
__builtin_ia32_psrav16si
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psrav8di
__builtin_ia32_psrav8hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav32hi
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlw512
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrlwi512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_psrlv8hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv32hi
__builtin_ia32_pternlogd128
__builtin_ia32_pternlogd256
__builtin_ia32_pternlogd512
__builtin_ia32_pternlogq128
__builtin_ia32_pternlogq256
__builtin_ia32_pternlogq512
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14pd512_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_rsqrt14ps512_mask
__builtin_ia32_rsqrt14sd_mask
__builtin_ia32_rsqrt14ss_mask
__builtin_ia32_rsqrt28pd_mask
__builtin_ia32_rsqrt28ps_mask
__builtin_ia32_rsqrt28sd_round_mask
__builtin_ia32_rsqrt28ss_round_mask
__builtin_ia32_scattersiv8df
__builtin_ia32_scattersiv16si
__builtin_ia32_scattersiv8di
__builtin_ia32_scattersiv16sf
__builtin_ia32_scatterdiv8df
__builtin_ia32_scatterdiv16si
__builtin_ia32_scatterdiv8di
__builtin_ia32_scatterdiv16sf
__builtin_ia32_scatterdiv2df
__builtin_ia32_scatterdiv2di
__builtin_ia32_scatterdiv4df
__builtin_ia32_scatterdiv4di
__builtin_ia32_scatterdiv4sf
__builtin_ia32_scatterdiv4si
__builtin_ia32_scatterdiv8sf
__builtin_ia32_scatterdiv8si
__builtin_ia32_scatterpfdpd
__builtin_ia32_scatterpfdps
__builtin_ia32_scatterpfqpd
__builtin_ia32_scatterpfqps
__builtin_ia32_scattersiv2df
__builtin_ia32_scattersiv2di
__builtin_ia32_scattersiv4df
__builtin_ia32_scattersiv4di
__builtin_ia32_scattersiv4sf
__builtin_ia32_scattersiv4si
__builtin_ia32_scattersiv8sf
__builtin_ia32_scattersiv8si
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_vcomisd
__builtin_ia32_vcomiss
__builtin_ia32_vcvtsd2si32
__builtin_ia32_vcvtsd2si64
__builtin_ia32_vcvtsd2usi32
__builtin_ia32_vcvtsd2usi64
__builtin_ia32_vcvtss2si32
__builtin_ia32_vcvtss2si64
__builtin_ia32_vcvtss2usi32
__builtin_ia32_vcvtss2usi64
__builtin_ia32_vpdpbusd128
__builtin_ia32_vpdpbusd256
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
__builtin_ia32_vpermi2varhi512
__builtin_ia32_vpermi2varpd128
__builtin_ia32_vpermi2varpd256
__builtin_ia32_vpermi2varpd512
__builtin_ia32_vpermi2varps128
__builtin_ia32_vpermi2varps256
__builtin_ia32_vpermi2varps512
__builtin_ia32_vpermi2varq128
__builtin_ia32_vpermi2varq256
__builtin_ia32_vpermi2varq512
__builtin_ia32_vpermi2varqi128
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
__builtin_ia32_vpermilvarpd512
__builtin_ia32_vpermilvarps512
__builtin_ia32_vpmadd52huq128
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_bextr_u32
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_si
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_si
__builtin_ia32_pdep_di
__builtin_ia32_pext_si
__builtin_ia32_pext_di
__builtin_ia32_cldemote
__builtin_ia32_clflushopt
__builtin_ia32_clrssbsy
__builtin_ia32_clwb
__builtin_ia32_clzero
__builtin_ia32_directstore_u32
__builtin_ia32_directstore_u64
__builtin_ia32_readeflags_u32
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u32
__builtin_ia32_writeeflags_u64
__builtin_ia32_fxrstor
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave
__builtin_ia32_fxsave64
__builtin_ia32_incsspd
__builtin_ia32_incsspq
__builtin_ia32_invpcid
__builtin_ia32_llwpcb
__builtin_ia32_lwpins32
__builtin_ia32_lwpins64
__builtin_ia32_lwpval32
__builtin_ia32_lwpval64
__builtin_ia32_emms
__builtin_ia32_femms
__builtin_ia32_maskmovq
__builtin_ia32_movntq
__builtin_ia32_packssdw
__builtin_ia32_packsswb
__builtin_ia32_packuswb
__builtin_ia32_paddb
__builtin_ia32_paddd
__builtin_ia32_paddq
__builtin_ia32_paddw
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_palignr
__builtin_ia32_pand
__builtin_ia32_pandn
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtd
__builtin_ia32_pcmpgtw
__builtin_ia32_vec_ext_v4hi
__builtin_ia32_vec_set_v4hi
__builtin_ia32_pmaddwd
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
__builtin_ia32_pmulhw
__builtin_ia32_pmulhuw
__builtin_ia32_pmullw
__builtin_ia32_pmuludq
__builtin_ia32_por
__builtin_ia32_psadbw
__builtin_ia32_pslld
__builtin_ia32_psllq
__builtin_ia32_psllw
__builtin_ia32_pslldi
__builtin_ia32_psllqi
__builtin_ia32_psllwi
__builtin_ia32_psrad
__builtin_ia32_psraw
__builtin_ia32_psradi
__builtin_ia32_psrawi
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psrlw
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrlwi
__builtin_ia32_psubb
__builtin_ia32_psubd
__builtin_ia32_psubq
__builtin_ia32_psubw
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhdq
__builtin_ia32_punpckhwd
__builtin_ia32_punpcklbw
__builtin_ia32_punpckldq
__builtin_ia32_punpcklwd
__builtin_ia32_pxor
__builtin_ia32_monitorx
__builtin_ia32_movdir64b
__builtin_ia32_mwaitx
__builtin_ia32_pclmulqdq128
__builtin_ia32_pclmulqdq256
__builtin_ia32_pclmulqdq512
__builtin_ia32_ptwrite32
__builtin_ia32_ptwrite64
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_rdpmc
__builtin_ia32_rdsspd
__builtin_ia32_rdsspq
__builtin_ia32_rdtsc
__builtin_ia32_rstorssp
__builtin_ia32_saveprevssp
__builtin_ia32_setssbsy
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha1nexte
__builtin_ia32_sha1rnds4
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_slwpcb
__builtin_ia32_cmpss
__builtin_ia32_comieq
__builtin_ia32_comige
__builtin_ia32_comigt
__builtin_ia32_comile
__builtin_ia32_comilt
__builtin_ia32_comineq
__builtin_ia32_cvtpd2pi
__builtin_ia32_cvtpi2pd
__builtin_ia32_cvtpi2ps
__builtin_ia32_cvtps2pi
__builtin_ia32_cvtss2si
__builtin_ia32_cvtss2si64
__builtin_ia32_cvttpd2pi
__builtin_ia32_cvttps2pi
__builtin_ia32_cvttss2si
__builtin_ia32_cvttss2si64
__builtin_ia32_maxps
__builtin_ia32_maxss
__builtin_ia32_minps
__builtin_ia32_minss
__builtin_ia32_movmskps
__builtin_ia32_pshufw
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sfence
__builtin_ia32_ucomieq
__builtin_ia32_ucomige
__builtin_ia32_ucomigt
__builtin_ia32_ucomile
__builtin_ia32_ucomilt
__builtin_ia32_ucomineq
__builtin_ia32_clflush
__builtin_ia32_cmpsd
__builtin_ia32_comisdeq
__builtin_ia32_comisdge
__builtin_ia32_comisdgt
__builtin_ia32_comisdle
__builtin_ia32_comisdlt
__builtin_ia32_comisdneq
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvtps2dq
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2si64
__builtin_ia32_cvtsd2ss
__builtin_ia32_cvttpd2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_cvttsd2si
__builtin_ia32_cvttsd2si64
__builtin_ia32_lfence
__builtin_ia32_maskmovdqu
__builtin_ia32_maxpd
__builtin_ia32_maxsd
__builtin_ia32_mfence
__builtin_ia32_minpd
__builtin_ia32_minsd
__builtin_ia32_movmskpd
__builtin_ia32_packssdw128
__builtin_ia32_packsswb128
__builtin_ia32_packuswb128
__builtin_ia32_pause
__builtin_ia32_pmaddwd128
__builtin_ia32_pmovmskb128
__builtin_ia32_pmulhw128
__builtin_ia32_pmulhuw128
__builtin_ia32_psadbw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllw128
__builtin_ia32_pslldi128
__builtin_ia32_psllqi128
__builtin_ia32_psllwi128
__builtin_ia32_psrad128
__builtin_ia32_psraw128
__builtin_ia32_psradi128
__builtin_ia32_psrawi128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
__builtin_ia32_psrlw128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrlwi128
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdneq
__builtin_ia32_addsubpd
__builtin_ia32_addsubps
__builtin_ia32_haddpd
__builtin_ia32_haddps
__builtin_ia32_hsubpd
__builtin_ia32_hsubps
__builtin_ia32_lddqu
__builtin_ia32_monitor
__builtin_ia32_mwait
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_dppd
__builtin_ia32_dpps
__builtin_ia32_insertps128
__builtin_ia32_mpsadbw128
__builtin_ia32_packusdw128
__builtin_ia32_pblendvb128
__builtin_ia32_phminposuw128
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_ptestz128
__builtin_ia32_roundpd
__builtin_ia32_roundps
__builtin_ia32_roundsd
__builtin_ia32_roundss
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_crc32qi
__builtin_ia32_crc32di
__builtin_ia32_pcmpestri128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_pcmpestrm128
__builtin_ia32_pcmpistri128
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpistrm128
__builtin_ia32_extrq
__builtin_ia32_extrqi
__builtin_ia32_insertq
__builtin_ia32_insertqi
__builtin_ia32_pabsb
__builtin_ia32_pabsd
__builtin_ia32_pabsw
__builtin_ia32_phaddd
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw
__builtin_ia32_phaddsw128
__builtin_ia32_phaddw
__builtin_ia32_phaddw128
__builtin_ia32_phsubd
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw
__builtin_ia32_phsubsw128
__builtin_ia32_phsubw
__builtin_ia32_phsubw128
__builtin_ia32_pmaddubsw
__builtin_ia32_pmaddubsw128
__builtin_ia32_pmulhrsw
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb
__builtin_ia32_pshufb128
__builtin_ia32_psignb
__builtin_ia32_psignb128
__builtin_ia32_psignd
__builtin_ia32_psignd128
__builtin_ia32_psignw
__builtin_ia32_psignw128
__builtin_ia32_bextri_u32
__builtin_ia32_bextri_u64
__builtin_ia32_tpause
__builtin_ia32_umonitor
__builtin_ia32_umwait
__builtin_ia32_vcvtph2ps
__builtin_ia32_vcvtph2ps256
__builtin_ia32_vcvtps2ph
__builtin_ia32_vcvtps2ph256
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
__builtin_ia32_vgf2p8affineinvqb_v64qi
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
__builtin_ia32_vgf2p8mulb_v64qi
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_wrpkru
__builtin_ia32_wrssd
__builtin_ia32_wrssq
__builtin_ia32_wrussd
__builtin_ia32_wrussq
__builtin_ia32_xabort
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczpd256
__builtin_ia32_vfrczps
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczss
__builtin_ia32_vpcomb
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomuw
__builtin_ia32_vpcomw
__builtin_ia32_vpermil2pd
__builtin_ia32_vpermil2pd256
__builtin_ia32_vpermil2ps
__builtin_ia32_vpermil2ps256
__builtin_ia32_vphaddbd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddbw
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddudq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubdq
__builtin_ia32_vphsubwd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacssdql
__builtin_ia32_vpmacsswd
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacsww
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vpperm
__builtin_ia32_vpshab
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpshaw
__builtin_ia32_vpshlb
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshlw
__builtin_ia32_xtest
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__dmb
__dsb
__isb
_MoveFromCoprocessor
_MoveFromCoprocessor2
*+2222212
ccccccccc
round.towardzerofpexcept.maytrapn_section_prefixfunction_section
gisterParametersNumRegisterParamiant SDK VersionTarget Variant S
llvm.global_ctorllvm.global_dtorllvm.compiler.ussanitize_hwaddre
__cxa_pure_virtu
llvm.masked.loadllvm.masked.stor0
asan.module_ctor
o_printf_options__local_stdio_prio_scanf_options__local_stdio_sc
__objc_classrefs.
lazy_symbol_pointhread_local_regnon_lazy_symbol_cstring_literalsliteral_pointersariable_pointersthread_local_var_local_variablesd_local_zerofillthread_local_zerA
.custom_section.
watchossimulator
ll_graph_profilellvm_call_graph_m_linker_optionsllvm_linker_optignu_unique_objecndirect_functiongnu_indirect_funllvm.objc.retainllvm.objc.releasobjc.autoreleasellvm.objc.autoreobjc.retainBlockleaseReturnValueoreleasePoolPushloadWeakRetainedllvm.objc.loadWeobjc.destroyWeakllvm.objc.destrom.objc.storeWeakllvm.objc.storeWllvm.objc.initWellvm.objc.moveWellvm.objc.copyWeunretainedObjectllvm.objc.unretanretainedPointerjc.clang.arc.usellvm.objc.clang.c_msgSend_fixup_
l_objc_msgSend_
nstrument_target__llvm_profile_iAlignment from assumptions
Loop Distribution
Loop Load Elimination
oop.unroll.countloop.unroll.fullop.unroll.enable.runtime.disable
Lower operations on the matrix type
statepoint-examp
crypto-neon-fp-a
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
BCSymbolMap Vers
()^$|*+?.[]\{}
z>()^$|+?[]\{}
use-external-namoverlay-relativeexternal-content                                                                                
\\\\\\\\\\\\\\\\
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
rofile_func_exit__cyg_profile_fu_func_enter_bare
__gnu_mcount_nc
Loop Vectorization
SLP Vectorizer
unts-propagationsynthetic-countselim-avail-extername-anon-globalrpo-functionattruire<globals-aa>require<globals-instrumentation>invalidate<pass-require<pass-inse<targetlibinfo>invalidate<targerequire<targetlidate<globals-aa>invalidate<globaprofile-summary>invalidate<profitrinsic-loweringpre-isel-intrinsinvalidate<no-oprequire<profile-invalidate<stackcalled-value-pro<module-summary>invalidate<modulatepoints-for-gcrewrite-statepoirequire<module-sidate<callgraph>invalidate<callgre<no-op-module>require<no-op-more<stack-safety>require<stack-sat-gcov-profilinginsert-gcov-prof-profile-summaryprint-profile-su-dead-prototypesstrip-dead-protorequire<callgrapinvalidate<verifprint-stack-safewholeprogramdevithinlto-pre-linkidate<fam-proxy>invalidate<fam-prequire<fam-proxate<no-op-cgscc>require<no-op-cgoped-noalias-aa>invalidate<scopeck-safety-local>calar-evolution>invalidate<scala<no-op-function>require<scoped-nfrom-assumptionsalignment-from-aling;no-runtime>unroll<peeling;nidate<memoryssa>invalidate<memor-guard-intrinsiclower-guard-intrstore-vectorizerload-store-vectolative-executionspeculative-execinvalidate<memderequire<memoryssadd-discriminatocallsite-splittiloop-data-prefetprint<assumptionprint<branch-proprint<postdomtreprint<domfrontielazy-value-info>invalidate<lazy-opt-remark-emit>invalidate<opt-rrequire<lazy-valrequire<opt-remainvalidate<loopsrequire<targetirrequire<basic-aaprint<block-freqprint<phi-valuesverify<memoryssatransform-warnine<demanded-bits>invalidate<demanrequire<scalar-ee<cfl-anders-aa>invalidate<cfl-ae<cfl-steens-aa>invalidate<cfl-se<type-based-aa>invalidate<type-ne-ee-instrumentpost-inline-ee-i-inline-libcallspartially-inlineprint<stack-saferequire<domtree>require<regions>require<scev-aa>break-crit-edgesearly-cse-memssanary-reassociateprint<memoryssa>date<block-freq>invalidate<blockrequire<demandeddate<phi-values>invalidate<phi-vrequire<cfl-anderequire<cfl-steerequire<type-bassive-instcombineaggressive-instcated-propagationcorrelated-propauire<block-freq>require<block-fralidate<domtree>invalidate<domtruire<phi-values>require<phi-valualidate<regions>invalidate<regioalidate<scev-aa>invalidate<scev-calls-shrinkwraplibcalls-shrinkwate<assumptions>invalidate<assumate<branch-prob>invalidate<brancate<postdomtree>invalidate<postdate<domfrontier>invalidate<domfrrequire<no-op-fuprint<scalar-evorequire<assumptirequire<branch-prequire<postdomtrequire<domfrontinvalidate<basicmake-guards-explprint<demanded-bunreachableblockloop-instsimplifprint-access-infrequire<ivusers>loop-predicationate<access-info>invalidate<accesrequire<access-idate<no-op-loop>uire<no-op-loop>require<no-op-loalidate<ivusers>invalidate<ivusescoped-noalias-assumeConstVCallstypeTestAssumeCoheckedLoadVCallstypeCheckedLoadVdLoadConstVCallstypeCheckedLoadCem_or_argmemonlyinaccessiblemem_ccessiblememonlyinaccessiblememoEligibleToImportnotEligibleToImpenceable_or_nulldereferenceable_x86_vectorcallccvirtualConstPropally_initializedexternally_initilocal_unnamed_adreturnDoesNotAliavailable_externtypeTestAssumeVC
__has_include_nengClassReference_NSConstantStrinsel_registerNameQ
MbP?
TEMP_FAILURE_RET
do not call %0; consider using exception handling instead
__builtin_expect
enum type seems like a bitmask (contains mostly power-of-2 literals) but %plural{1:a literal is|:some literals are}0 not power-of-2
used here as a bitmask
enum type seems like a bitmask (contains mostly power-of-2 literals), but this literal is not a power-of-2
enum values are from different enum types
__builtin_memcmp;__builtin_strcasecmp;__builtin_strcmp;__builtin_strncasecmp;__builtin_strncmp;_mbscmp;_mbscmp_l;_mbsicmp;_mbsicmp_l;_mbsnbcmp;_mbsnbcmp_l;_mbsnbicmp;_mbsnbicmp_l;_mbsncmp;_mbsncmp_l;_mbsnicmp;_mbsnicmp_l;_memicmp;_memicmp_l;_stricmp;_stricmp_l;_strnicmp;_strnicmp_l;_wcsicmp;_wcsicmp_l;_wcsnicmp;_wcsnicmp_l;lstrcmp;lstrcmpi;memcmp;memicmp;strcasecmp;strcmp;strcmpi;stricmp;strncasecmp;strncmp;strnicmp;wcscasecmp;wcscmp;wcsicmp;wcsncmp;wcsnicmp;wmemcmp;
%0 must be marked explicit to avoid unintentional implicit conversions
................
conditionVar
initVar
incrementVar
conditionBound
forLoopArray
beginCall
endVar
conditionEndVar
endCall
derefByValueResult
derefByRefResult
forLoopIterator
forLoopPseudoArray
pointerType
memory
newExpression
constructorCall
resetCall
function
field
c-style-cast
named-cast
lambda
typedef
AutoPrTokenId
AutoPtrOwnershipTransferId
iterator_decl
decl_new
decl_cast
decl_template
SpecialFunction
SpecialFunction
DeletedNotPublic
sequence
ABNewPersonViewController;ABPeoplePickerNavigationController;ABPersonViewController;ABUnknownPersonViewController;NSHashTable;NSMapTable;NSPointerArray;NSPointerFunctions;NSTimer;UIActionSheet;UIAlertView;UIImagePickerController;UITextInputMode;UIWebView
the type of the loop variable %0 is different from the one returned by the iterator and generates an implicit conversion; you can either change the type to the matching one (%1 but 'const auto&' is always a valid option) or remove the reference to make it explicit that you are creating a new value
vector_var_decl
append_call
vector_var_decl_stmt
loop_init_var
loop_parent
loop_end_expr
for_loop_counter
for_range_loop
Camel_Snake_Casecamel_Snake_Back________________1;2;3;4;
1.0;100.0;
then-literal
if-assign-obj
if-assign-lvalue
if-assign-loc
compound-return
if-bool-yields-then
if-bool-yields-else
ternary-bool-yields-condition
ternary-bool-yields-not-condition
if-return
if-not-return
if-assign
if-assign-not
compound-bool
compound-bool-not
redundant boolean literal in if statement condition
redundant boolean literal in conditional return statement
redundant boolean literal supplied to boolean operator
::std::basic_string;::std::basic_string_view;::std::vector;::std::array
 parser, made by/* A Bison parse
 @ @
warnOnDeadSymbolclang_analyzer_wer_warnIfReachedclang_analyzer_czer_checkInlinedng_analyzer_evalclang_analyzer_eanalyzer_explainng_analyzer_dumpclang_analyzer_danalyzer_express_analyzer_denotenalyzer_hashDumpclang_analyzer_h_numTimesReachedclang_analyzer_nlyzer_printStateclang_analyzer_pclang_analyzer_ggetchar_unlockedUntrusted data is used as a format string (CWE-134: Uncontrolled Format String)
Untrusted data is passed to a system call (CERT/STR02-C. Sanitize data passed to complex subsystems)
Untrusted data is used to specify the buffer size (CERT/STR31-C. Guarantee that storage for strings has sufficient space for character data and the null terminator)
takes_localized_calized_nsstringreturns_localizekCFAllocatorNulleWithBytesNoCopyCFStringCreateWiInternetPasswordSecKeychainFindIdGenericPasswordSecKeychainFindGnItemCopyContentSecKeychainItemCnItemFreeContentSecKeychainItemFvalueWithPointerinitWithCharacteaWithBytesNoCopydataWithBytesNoCtWithBytesNoCopyinitWithBytesNoC
NSAutoreleasePooonFailureHandler_XCAssertionFail_DTAssertionFail_TSAssertionFailNSAssertionHandl1
CFDictionaryCreayGetValueAtIndexCFArrayGetValueApthread_mutex_un_try_lock_sharedlck_rw_try_lock_y_lock_exclusivelck_mtx_try_lockpthread_rwlock_tad_rwlock_rdlockpthread_rwlock_rad_rwlock_wrlockpthread_rwlock_ww_lock_exclusivelck_rw_lock_exclad_mutex_trylockpthread_mutex_trad_rwlock_unlockpthread_rwlock_uad_mutex_destroypthread_mutex_depthread_mutex_lolck_rw_lock_sharpthread_mutex_in
__builtin_allocalloca_with_alignt_location_queueunexplored_firstored_first_queueock_dfs_contentsbfs_block_dfs_codynamic-bifurcatexecuted 0 timesLoop body executEntering loop boLoop body skipped when collection is empty
Loop body skipped when range is empty
Loop body executed 0 times
Entering loop body
ndition is falseAssuming the conondition is truedent_bits_engine__independent_bicplusplus.SelfAs
tion_set_contextxpc_connection_sread_setspecificpthread_setspeci
lPassedToNonnullnullability.Nullosx.cocoa.NilArgosx.cocoa.AtSyncosx.ObjCProperty.core.Conversionalpha.core.Conve.mpi.MPI-Checkeroptin.mpi.MPI-Chocoa.UnusedIvarsosx.cocoa.Unused.core.PointerSubalpha.core.Pointocoa.RetainCountosx.cocoa.Retaindebug.ConfigDumpdebug.DumpLiveVaosx.SecKeychainAosx.cocoa.SelfIncplusplus.SmartPcoa.ClassReleaseosx.cocoa.ClassRlus.InnerPointercplusplus.InnerPllvm.Conventionsalpha.llvm.Convecoa.ObjCGenericsosx.cocoa.ObjCGecoa.SuperDeallocosx.cocoa.SuperDunix.PthreadLockalpha.unix.Pthrealpha.unix.Chroovalist.CopyToSelunix.MallocSizeoosx.cocoa.NSErroosx.cocoa.Deallodebug.ReportStmtalpha.unix.Streavalist.ValistBasalpha.clone.ClonapiModeling.googalpha.core.Identcplusplus.NewDelcore.NonNullParacore.StackAddrEsapiModeling.Trustring.BadSizeArgunix.cstring.Badore.CastToStructalpha.core.CastTiewExplodedGraphdebug.ViewExplodbjectRetainCountosx.OSObjectRetanix.SimpleStreamalpha.unix.SimplackAddressEscapecore.StackAddresring.OutOfBoundsalpha.unix.cstrioReturnFunctionscore.builtin.NoRized.UndefReturncore.uninitializ.UnreachableCodealpha.deadcode.Uunix.cstring.Nulcore.NullDereferdebug.DumpDominadebug.ExprInspecalpha.core.Fixedalpha.core.Sizeovalist.Uninitial.CStringModelingunix.cstring.CStty.MmapWriteExecalpha.security.MObjectCStyleCastoptin.osx.OSObjeecureAPI.mkstempsecurity.insecurng.BufferOverlape.GCDAntipatternoptin.performancIteratorModelingalpha.cplusplus.ableDereferencedpAutoreleaseLeakosx.cocoa.RunLooLibraryFunctionsapiModeling.StdCBuiltinFunctionscore.builtin.BuinamicTypeCheckeralpha.core.Dynamus.IteratorRangey.MallocOverflowy.ReturnPtrRangealpha.security.RiadicMethodTypesosx.cocoa.VariadAutoreleaseWriteosx.cocoa.Autoreundation.CFErrorosx.coreFoundatiicMemoryModelingunix.DynamicMemotchedDeallocatorunix.MismatchedDlStringConstantscore.NonnilStrinObjectConversionosx.NumberObjectMissingSuperCallosx.cocoa.MissinnsecureAPI.bcopynsecureAPI.bzeronsecureAPI.getpwnsecureAPI.vforkity.ArrayBoundV2alpha.security.Andation.CFNumbercTypePropagationcore.DynamicTypeSAutoreleasePoolosx.cocoa.NSAutorrorDerefCheckerosx.NSOrCFErrorD.NullabilityBaseonNilReturnValueosx.cocoa.NonNilTestAfterDivZeroalpha.core.TestAplus.VirtualCalloptin.cplusplus.secureAPI.mktempsecureAPI.strcpyurity.ArrayBounde.BoolAssignmentalpha.core.BoolAFloatLoopCountersecurity.FloatLoformance.Padding.RetainCountBaseitialized.Branchitialized.Assigntability.UnixAPIoptin.portabilitinsecureAPI.bcmpinsecureAPI.getsinsecureAPI.randug.AnalysisOrderdebug.AnalysisOre.CallAndMessagecore.CallAndMessug.DumpCallGraphdebug.DumpCallGrug.ViewCallGraphdebug.ViewCallGrha.core.CastSizealpha.core.CastSdcode.DeadStoresdeadcode.DeadStoug.DumpLiveStmtsdebug.DumpLiveStusplus.NewDeleteug.DumpTraversaldebug.DumpTraverist.Unterminatedvalist.UnterminaConditionBRVisit
layout_compatiblicationExtensioniOSMacApplicatioiosmac_app_extenmacCatalystAppliwatchOSApplicatitvOSApplicationEmacOSApplicationac_app_extensionuikitformac_app_iOSApplicationEx
null_unspecified
c_implementationobjc_implementatvirtual_inheritamultiple_inheritsingle_inheritan
icCompareAndSwapOSAtomicCompareAobjc_atomicCompa
requiredMetaCast
SearchCFPropertyIORegistryEntrySInInstanceCreateCFPlugInInstanceDequeueAndRetainCMBufferQueueDeq
NSMakeCollectablwarePathMatchingIOOpenFirmwarePayEntryIDMatchingIORegistryEntryIviceNameMatchingIOServiceNameMatIOBSDNameMatchinIOServiceMatchindispatch_set_conssionEncodeFrameVTCompressionSesxtCreateWithDataCGBitmapContextChingNotificationIOServiceAddMatcIOServiceAddNotiMatchingServicesIOServiceGetMatcrCreateWithBytesCVPixelBufferCretMatchingService
dispatch_data_cr
rc_ownership_retnership_consumedrc_ownership_con
clang-format off
^[\t\ ]*#[\t\ ]*(import|include)[^"<]*(["<][^">]*[">])
 ]*import[
 ]*(static[
 ]*)?([^
 ]*)[
 ]*;
ng-format off *//* clang-format // clang-format @
^[\t\ ]*#[\t\ ]*(import|include)[^"<]*(["<][^">]*[">])
t_variant_tripletarget_variant_tllvm.init.trampo
decltype(nullptrlong unsigned in
@UUUUUU
denormal-fp-mathstrict-float-cas
l_parameter_packDW_TAG_GNU_formaDW_TAG_function_l_site_parameterDW_TAG_call_sitee_reference_typeDW_TAG_rvalue_reND_Delphi_stringDW_TAG_BORLAND_De_type_parameterDW_TAG_template_DW_TAG_GNU_call__value_parameterDW_TAG_with_stmtDW_TAG_base_typeDW_TAG_file_typeDW_TAG_try_blockDW_TAG_namespaceDW_TAG_conditionDW_TAG_type_unitDW_TAG_MIPS_looplined_subroutineDW_TAG_inlined_sr_to_member_typeDW_TAG_ptr_to_mecess_declarationDW_TAG_access_dePLE_ptrauth_typeDW_TAG_APPLE_ptrRLAND_Delphi_setified_parametersDW_TAG_unspecifiD_Delphi_variant_subroutine_typeDW_TAG_subroutin_dwarf_procedureDW_TAG_dwarf_pro_imported_moduleDW_TAG_imported_G_reference_typeDW_TAG_referenceG_structure_typeDW_TAG_structureG_interface_typeDW_TAG_interfaceG_template_aliasG_immutable_typeDW_TAG_immutableG_class_templateDW_TAG_class_temG_APPLE_propertyDW_TAG_APPLE_proTAG_pointer_typeDW_TAG_pointer_tTAG_compile_unitDW_TAG_compile_uTAG_common_blockDW_TAG_common_blTAG_variant_partDW_TAG_variant_pTAG_partial_unitDW_TAG_partial_uTAG_coarray_typeDW_TAG_coarray_tTAG_dynamic_typeDW_TAG_dynamic_tTAG_format_labelDW_TAG_format_laDW_TAG_lexical_bDW_TAG_subrange_DW_TAG_namelist_DW_TAG_volatile_DW_TAG_restrict_DW_TAG_skeleton_rted_declarationenumeration_typeDW_TAG_enumeratiformal_parameterDW_TAG_formal_pacommon_inclusionDW_TAG_common_inunspecified_typegeneric_subrangeDW_TAG_generic_sBORLAND_propertyDW_TAG_BORLAND_pDW_TAG_entry_poiDW_TAG_string_tyDW_TAG_inheritanDW_TAG_catch_bloDW_TAG_packed_tyDW_TAG_thrown_tyDW_TAG_shared_tyDW_TAG_atomic_tyDW_TAG_array_typDW_TAG_class_typDW_TAG_union_typDW_TAG_const_typDW_TAG_enumeratoDW_TAG_subprograpush_tls_addressDW_OP_GNU_push_t_GNU_const_indexDW_OP_GNU_const_OP_LLVM_fragmentDW_OP_LLVM_fragmDW_OP_call_frameDW_OP_implicit_vDW_OP_GNU_addr_iform_tls_addressDW_OP_form_tls_aimplicit_pointerDW_OP_implicit_ph_object_addressDW_OP_push_objecDW_OP_deref_sizeDW_OP_const_typeDW_OP_deref_typeDW_OP_plus_uconsDW_OP_xderef_sizDW_OP_stack_valuDW_OP_entry_valuDW_OP_regval_typDW_OP_xderef_typDW_OP_reinterpreATE_signed_fixedDW_ATE_signed_fiE_packed_decimalDW_ATE_packed_deE_numeric_stringDW_ATE_numeric_sE_unsigned_fixedDW_ATE_unsigned__imaginary_floatDW_ATE_imaginaryDW_ATE_signed_chDW_ATE_complex_fDW_ATE_decimal_fITY_pure_virtualDW_VIRTUALITY_puRTUALITY_virtualDW_VIRTUALITY_viDW_VIRTUALITY_noGLE_RenderScriptDW_LANG_GOOGLE_RDW_LANG_RenderScG_ObjC_plus_plusDW_LANG_ObjC_pluG_C_plus_plus_03DW_LANG_C_plus_pG_C_plus_plus_11G_C_plus_plus_14G_Mips_AssemblerDW_LANG_Mips_AssG_BORLAND_DelphiDW_LANG_BORLAND_DW_LANG_Pascal83DW_LANG_Fortran7DW_LANG_Fortran9DW_LANG_Fortran0LANG_C_plus_plusDW_CC_LLVM_Win64DW_CC_LLVM_AAPCSDW_CC_LLVM_SwiftDW_CC_BORLAND_ms_BORLAND_stdcallDW_CC_BORLAND_st_LLVM_vectorcallDW_CC_LLVM_vecto_LLVM_X86_64SysVDW_CC_LLVM_X86_6_LLVM_X86RegCallDW_CC_LLVM_X86ReBORLAND_safecallDW_CC_BORLAND_saBORLAND_msreturnBORLAND_thiscallDW_CC_BORLAND_thBORLAND_fastcallDW_CC_BORLAND_faLLVM_PreserveAllDW_CC_LLVM_Presend_fastcall_i386DW_CC_GNU_borlanDW_CC_GNU_renesaDW_CC_BORLAND_paDW_CC_GDB_IBM_OpCC_pass_by_valueDW_CC_pass_by_vaass_by_referenceDW_CC_pass_by_reLVM_IntelOclBiccDW_CC_LLVM_IntelLVM_SpirFunctionDW_CC_LLVM_SpirFLVM_OpenCLKernelDW_CC_LLVM_OpenCLVM_PreserveMostMACINFO_end_fileDW_MACINFO_end_fCINFO_start_fileDW_MACINFO_startCINFO_vendor_extDW_MACINFO_vendoDW_MACINFO_undefDW_MACINFO_defin
C/C++ MSF 7.00
Microsoft C/C++ 
LIBCLANG_LOGGING
clang_getRemappings was called with NULL parameter
Error by clang_getRemappings("
" does not exist
clang_getRemappingsFromFileList was called with numFiles=0
clang_getRemappingsFromFileList was called with NULL filePaths
Error by clang_getRemappingsFromFileList
framework module 
  umbrella header "
  export *
  module * { export * }
LIBCLANG_DISABLE_CRASH_RECOVERY
LIBCLANG_BGPRIO_INDEX
LIBCLANG_BGPRIO_EDIT
clang_createTranslationUnit2
clang_parseTranslationUnit2FullArgv
libclang: crash detected during parsing: {
  'source_filename' : '%s'
  'command_line_args' : [
'%s'
  'unsaved_files' : [
('%s', '...', %ld)
  'options' : %d,
LIBCLANG_RESOURCE_USAGE
clang_saveTranslationUnit
called with a bad TU: 
libclang: crash detected during AST saving: {
  'filename' : '%s'
clang_reparseTranslationUnit
libclang: crash detected during reparsing
clang_getTranslationUnitSpelling
clang_getTranslationUnitCursor
clang_getTranslationUnitTargetInfo
clang_isFileMultipleIncludeGuarded
<not implemented>
packed
default
hidden
protected
typename
class
template<...> class
FunctionDecl
TypedefDecl
EnumDecl
EnumConstantDecl
StructDecl
UnionDecl
ClassDecl
FieldDecl
VarDecl
ParmDecl
ObjCInterfaceDecl
ObjCCategoryDecl
ObjCProtocolDecl
ObjCPropertyDecl
ObjCIvarDecl
ObjCInstanceMethodDecl
ObjCClassMethodDecl
ObjCImplementationDecl
ObjCCategoryImplDecl
CXXMethod
UnexposedDecl
ObjCSuperClassRef
ObjCProtocolRef
ObjCClassRef
TypeRef
TemplateRef
NamespaceRef
MemberRef
LabelRef
OverloadedDeclRef
VariableRef
IntegerLiteral
FixedPointLiteral
FloatingLiteral
ImaginaryLiteral
StringLiteral
CharacterLiteral
ParenExpr
UnaryOperator
ArraySubscriptExpr
OMPArraySectionExpr
BinaryOperator
CompoundAssignOperator
ConditionalOperator
CStyleCastExpr
CompoundLiteralExpr
InitListExpr
AddrLabelExpr
StmtExpr
GenericSelectionExpr
GNUNullExpr
CXXStaticCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXConstCastExpr
CXXFunctionalCastExpr
CXXTypeidExpr
CXXBoolLiteralExpr
CXXNullPtrLiteralExpr
CXXThisExpr
CXXThrowExpr
CXXNewExpr
CXXDeleteExpr
UnaryExpr
ObjCStringLiteral
ObjCBoolLiteralExpr
ObjCAvailabilityCheckExpr
ObjCSelfExpr
ObjCEncodeExpr
ObjCSelectorExpr
ObjCProtocolExpr
ObjCBridgedCastExpr
BlockExpr
PackExpansionExpr
SizeOfPackExpr
LambdaExpr
UnexposedExpr
DeclRefExpr
MemberRefExpr
CallExpr
ObjCMessageExpr
UnexposedStmt
DeclStmt
LabelStmt
CompoundStmt
CaseStmt
DefaultStmt
IfStmt
SwitchStmt
WhileStmt
DoStmt
ForStmt
GotoStmt
IndirectGotoStmt
ContinueStmt
BreakStmt
ReturnStmt
GCCAsmStmt
MSAsmStmt
ObjCAtTryStmt
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtThrowStmt
ObjCAtSynchronizedStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
CXXCatchStmt
CXXTryStmt
CXXForRangeStmt
SEHTryStmt
SEHExceptStmt
SEHFinallyStmt
SEHLeaveStmt
NullStmt
InvalidFile
InvalidCode
NoDeclFound
NotImplemented
TranslationUnit
UnexposedAttr
attribute(ibaction)
attribute(iboutlet)
attribute(iboutletcollection)
attribute(final)
attribute(override)
attribute(annotate)
asm label
attribute(packed)
attribute(pure)
attribute(const)
attribute(noduplicate)
attribute(constant)
attribute(device)
attribute(global)
attribute(host)
attribute(shared)
attribute(visibility)
attribute(dllexport)
attribute(dllimport)
attribute(ns_returns_retained)
attribute(ns_returns_not_retained)
attribute(ns_returns_autoreleased)
attribute(ns_consumes_self)
attribute(ns_consumed)
attribute(objc_exception)
attribute(NSObject)
attribute(objc_independent_class)
attribute(objc_precise_lifetime)
attribute(objc_returns_inner_pointer)
attribute(objc_requires_super)
attribute(objc_root_class)
attribute(objc_subclassing_restricted)
attribute(objc_protocol_requires_explicit_implementation)
attribute(objc_designated_initializer)
attribute(objc_runtime_visible)
attribute(objc_boxable)
attribute(flag_enum)
preprocessing directive
macro definition
macro expansion
inclusion directive
Namespace
LinkageSpec
C++ base class specifier
CXXConstructor
CXXDestructor
CXXConversion
TemplateTypeParameter
NonTypeTemplateParameter
TemplateTemplateParameter
FunctionTemplate
ClassTemplate
ClassTemplatePartialSpecialization
NamespaceAlias
UsingDirective
UsingDeclaration
TypeAliasDecl
ObjCSynthesizeDecl
ObjCDynamicDecl
CXXAccessSpecifier
ModuleImport
OMPParallelDirective
OMPSimdDirective
OMPForDirective
OMPForSimdDirective
OMPSectionsDirective
OMPSectionDirective
OMPSingleDirective
OMPMasterDirective
OMPCriticalDirective
OMPParallelForDirective
OMPParallelForSimdDirective
OMPParallelSectionsDirective
OMPTaskDirective
OMPTaskyieldDirective
OMPBarrierDirective
OMPTaskwaitDirective
OMPTaskgroupDirective
OMPFlushDirective
OMPOrderedDirective
OMPAtomicDirective
OMPTargetDirective
OMPTargetDataDirective
OMPTargetEnterDataDirective
OMPTargetExitDataDirective
OMPTargetParallelDirective
OMPTargetParallelForDirective
OMPTargetUpdateDirective
OMPTeamsDirective
OMPCancellationPointDirective
OMPCancelDirective
OMPTaskLoopDirective
OMPTaskLoopSimdDirective
OMPDistributeDirective
OMPDistributeParallelForDirective
OMPDistributeParallelForSimdDirective
OMPDistributeSimdDirective
OMPTargetParallelForSimdDirective
OMPTargetSimdDirective
OMPTeamsDistributeDirective
OMPTeamsDistributeSimdDirective
OMPTeamsDistributeParallelForSimdDirective
OMPTeamsDistributeParallelForDirective
OMPTargetTeamsDirective
OMPTargetTeamsDistributeDirective
OMPTargetTeamsDistributeParallelForDirective
OMPTargetTeamsDistributeParallelForSimdDirective
OMPTargetTeamsDistributeSimdDirective
OverloadCandidate
TypeAliasTemplateDecl
StaticAssert
FriendDecl
 (Definition)
(%s:%d:%d) = %s
(%s:%d:%d):%s%s
  -> %s(%s:%d:%d)
<null input>
libclang: crash detected while annotating tokens
clang_Module_getNumTopLevelHeaders
clang_Module_getTopLevelHeader
ASTContext: expressions, declarations, and types
ASTContext: identifiers
ASTContext: selectors
Code completion: cached global results
SourceManager: content cache allocator
ASTContext: side tables
SourceManager: malloc'ed memory buffers
SourceManager: mmap'ed memory buffers
ExternalASTSource: malloc'ed memory buffers
ExternalASTSource: mmap'ed memory buffers
Preprocessor: malloc'ed memory
Preprocessor: PreprocessingRecord
SourceManager: data structures and tables
Preprocessor: header search tables
clang_getCXTUResourceUsage
clang_getAllSkippedRanges
  %s: %lu
LIBCLANG_NOTHREADS
LIBCLANG_BGPRIO_DISABLE
<NULL TU>
(%s:%d:%d)
[%s %d:%d-%d:%d]
[%s:%d:%d - 
%s:%d:%d]
[libclang:
%7.4f] 
--------------------------------------------------
CFStringRef
Allocation failed
LIBCLANG FATAL ERROR: %s
-fno-spell-checking
-fspell-checking
-Xclang
-detailed-preprocessing-record
-fallow-editor-placeholders
clang_reparseTranslationUnit_Impl
readonly
assign
unsafe_unretained
readwrite
retain
copy
nonatomic
atomic
getter
setter
strong
weak
inout
oneway
bycopy
byref
define
libclang: crash detected in code completion
LIBCLANG_OBJTRACKING
--- %u completion results
clang_codeCompleteAt_Impl
-code-completion-at={0}:{1}:{2}
+++ %u completion results
clang_getNumDiagnostics
clang_getDiagnosticSetFromTU
note: 
warning: 
error: 
fatal error: 
<no diagnostic text>
SmallVector capacity overflow during allocation
clang_findReferencesInFile
Null cursor
Got CXCursor_NoDeclFound
Null file
Null visitor
cursor is not referencing a declaration
clang_findIncludesInFile
clang
11.0.0
libclang-%%%%%%%%%%%%
toolchain
clang-
;__libclang_unknown_crash_signature__;
signature
libclang.operation
parse
complete
"libclang.opts":
"args":[
],"invocation-args":[
],"unsaved_file_hashes":[
name
llvm::CrashRecoveryContext::HandleCrash
__libclang_unknown_crash_signature__
-cc1
clang_compileInMemory_v1: requires -cc1 invocation!
clang_compileInMemory(): Duplicate output file '
clang_Refactoring_findActionsWithInitiationFailureDiagnosicsAt
clang_Refactoring_initiateAction
clang_Refactoring_initiateActionOnDecl
clang_Refactoring_findRenamedCursor
clang_Refactoring_findRenamedOccurrencesInPrimaryTUs
clang_Refactoring_findSymbolOccurrencesInInitiationTU
CRefactor: Failed to load command line: 
decl.isDefined
rename.avoid.textual.matches
LIBCLANG TOOLING ERROR: %s
-Wno-
("%s", %d, %d) = invalid
("%s", %d, %d) = 
clang_getLocationForOffset
-ferror-limit=0
-ferror-limit=
Allocation failed
Invalid
Unexposed
Void
Bool
Char_U
UChar
Char16
Char32
UShort
UInt
ULong
ULongLong
UInt128
Char_S
SChar
WChar
Short
Long
LongLong
Int128
Half
Float
Double
LongDouble
ShortAccum
Accum
LongAccum
UShortAccum
UAccum
ULongAccum
Float16
Float128
NullPtr
Overload
Dependent
ObjCId
ObjCClass
ObjCSel
Complex
Pointer
BlockPointer
LValueReference
RValueReference
Record
Enum
Typedef
ObjCInterface
ObjCObject
ObjCObjectPointer
ObjCTypeParam
FunctionNoProto
FunctionProto
ConstantArray
IncompleteArray
VariableArray
DependentSizedArray
Vector
MemberPointer
Auto
Elaborated
Pipe
Attributed
OCLImage1dRO
OCLImage1dArrayRO
OCLImage1dBufferRO
OCLImage2dRO
OCLImage2dArrayRO
OCLImage2dDepthRO
OCLImage2dArrayDepthRO
OCLImage2dMSAARO
OCLImage2dArrayMSAARO
OCLImage2dMSAADepthRO
OCLImage2dArrayMSAADepthRO
OCLImage3dRO
OCLImage1dWO
OCLImage1dArrayWO
OCLImage1dBufferWO
OCLImage2dWO
OCLImage2dArrayWO
OCLImage2dDepthWO
OCLImage2dArrayDepthWO
OCLImage2dMSAAWO
OCLImage2dArrayMSAAWO
OCLImage2dMSAADepthWO
OCLImage2dArrayMSAADepthWO
OCLImage3dWO
OCLImage1dRW
OCLImage1dArrayRW
OCLImage1dBufferRW
OCLImage2dRW
OCLImage2dArrayRW
OCLImage2dDepthRW
OCLImage2dArrayDepthRW
OCLImage2dMSAARW
OCLImage2dArrayMSAARW
OCLImage2dMSAADepthRW
OCLImage2dArrayMSAADepthRW
OCLImage3dRW
OCLIntelSubgroupAVCMcePayload
OCLIntelSubgroupAVCImePayload
OCLIntelSubgroupAVCRefPayload
OCLIntelSubgroupAVCSicPayload
OCLIntelSubgroupAVCMceResult
OCLIntelSubgroupAVCImeResult
OCLIntelSubgroupAVCRefResult
OCLIntelSubgroupAVCSicResult
OCLIntelSubgroupAVCImeResultSingleRefStreamout
OCLIntelSubgroupAVCImeResultDualRefStreamout
OCLIntelSubgroupAVCImeSingleRefStreamin
OCLIntelSubgroupAVCImeDualRefStreamin
OCLSampler
OCLEvent
OCLQueue
OCLReserveID
clang_indexSourceFileFullArgv
libclang: crash detected during indexing source file: {
clang_indexTranslationUnit
libclang: crash detected during indexing TU
clang_indexTranslationUnit_Impl
<uninitialized>
true
false
nullptr
(char*)
 + 1
;{}#@
*** AST Context Stats:
 types total.
    
Builtin
 types, 
 each 
 bytes)
DependentSizedExtVector
DependentSizedMatrix
DependentAddressSpace
DependentVector
ExtVector
Matrix
UnresolvedUsing
Paren
Adjusted
Decayed
TypeOfExpr
TypeOf
Decltype
UnaryTransform
TemplateTypeParm
SubstTemplateTypeParm
SubstTemplateTypeParmPack
TemplateSpecialization
DeducedTemplateSpecialization
InjectedClassName
DependentName
DependentTemplateSpecialization
PackExpansion
Atomic
Total bytes = 
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
elfv1-qpx
__NSConstantString_tag
flags
length
_cfisa
_swift_rc
_ptr
__NSConstantString
objc_super
__block_descriptor
reserved
Size
__block_descriptor_withcopydispose
CopyFuncPtr
DestroyFuncPtr
instancetype
objc_class
objc_object
{objc_object=}
{objc_class=}
"_vptr$
Class
Protocol
sse2
__make_integer_seq
__type_pack_element
Allocation failed
BOOL
__builtin_va_list
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
__va_list_tag
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
__builtin_ms_va_list
the global namespace
the global scope
block literal
lambda expression
namespace 
method 
function 
' (aka '
values
' (vector of 
(no argument)
(default) 
 != 
[(default) 
template 
(default) template 
[(default) template 
[template 
 aka 
(no qualifiers) 
(no qualifiers)
[...]
 * ...]
<<<NULL>>>
LocInfo Type
Type
 sugar
 dependent
 instantiation_dependent
 variably_modified
 contains_unexpanded_pack
 imported
 written as lvalue reference
 static
 altivec
 altivec pixel
 altivec bool
 neon
 neon poly
 trailing_return
 noreturn
 produces_result
 regparm 
 underlying_type
 depth 
 index 
 pack
TemplateArgument
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion 
 expr
 alias
 decltype(auto)
 undeduced
 expansions 
QualType
Decl
 parent 
 in 
 hidden
 implicit
 used
 referenced
 invalid
 constexpr
 prev 
 first 
also in 
capture this
capture
 byref
 nested
 C++
 inline
original
super
CXXCtorInitializer
 required
 optional
 readonly
 assign
 readwrite
 retain
 copy
 nonatomic
 atomic
 weak
 strong
 unsafe_unretained
 class
 ...
inherited from
previous
 struct
 __module_private__
 definition
DefinitionData
 parsing_base_specifiers
 generic
 lambda
 pass_in_registers
 empty
 aggregate
 standard_layout
 trivially_copyable
 pod
 trivial
 polymorphic
 abstract
 literal
 has_user_declared_ctor
 has_constexpr_non_copy_move_ctor
 has_mutable_fields
 has_variant_members
 can_const_default_init
DefaultConstructor
 exists
 non_trivial
 user_provided
 needs_implicit
 defaulted_is_constexpr
CopyConstructor
 simple
 user_declared
 has_const_param
 needs_overload_resolution
 defaulted_is_deleted
 implicit_has_const_param
MoveConstructor
CopyAssignment
MoveAssignment
Destructor
 irrelevant
virtual 
 typename
 covariant
 contravariant
 bounded
 virtual
target 
nominated 
constructed 
 mutable
 synthesize
 none
 private
 protected
 public
 package
 pure
 default
_delete
 delete
 noexcept-unevaluated 
 noexcept-uninstantiated 
<<NULL params x 
Overrides: [ 
 tls
 tls_dynamic
 nrvo
 cinit
 callinit
 listinit
 combiner
 initializer
 omp_priv = 
 omp_priv ()
<<<NULL>>> OMPClause
Clause
 dynamic
compiler
exestr
linker
user
AddressSpace
NoDeref
ObjCGC
ObjCInertUnsafeUnretained
ObjCKindOf
OpenCLConstantAddressSpace
OpenCLGenericAddressSpace
OpenCLGlobalAddressSpace
OpenCLLocalAddressSpace
OpenCLPrivateAddressSpace
PointerAuth
Ptr32
Ptr64
SPtr
TypeNonNull
TypeNullUnspecified
TypeNullable
UPtr
FallThrough
Suppress
AArch64VectorPcs
AnyX86NoCfCheck
CDecl
FastCall
IntelOclBicc
LifetimeBound
MSABI
NSReturnsRetained
ObjCOwnership
Pascal
PreserveAll
PreserveMost
RegCall
StdCall
SwiftCall
SysVABI
ThisCall
VectorCall
SwiftContext
SwiftErrorResult
SwiftIndirectResult
Annotate
CFConsumed
CarriesDependency
NSConsumed
NonNull
OSConsumed
PassObjectSize
AMDGPUFlatWorkGroupSize
AMDGPUNumSGPR
AMDGPUNumVGPR
AMDGPUWavesPerEU
ARMInterrupt
AVRInterrupt
AVRSignal
AcquireCapability
AcquiredAfter
AcquiredBefore
AlignMac68k
Aligned
AllocAlign
AllocSize
AlwaysDestroy
AlwaysInline
AnalyzerNoReturn
AnyX86Interrupt
AnyX86NoCallerSavedRegisters
ArcWeakrefUnavailable
ArgumentWithTypeTag
Artificial
AsmLabel
AssertCapability
AssertExclusiveLock
AssertSharedLock
AssumeAligned
Availability
Blocks
C11NoReturn
CFAuditedTransfer
CFReturnsNotRetained
CFReturnsRetained
CFUnknownTransfer
CPUDispatch
CPUSpecific
CUDAConstant
CUDADevice
CUDAGlobal
CUDAHost
CUDAInvalidTarget
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Capability
CapturedRecord
Cleanup
CodeSeg
Cold
Common
Const
Constructor
Consumable
ConsumableAutoCast
ConsumableSetOnRead
Convergent
DLLExport
DLLExportStaticLocal
DLLImport
DLLImportStaticLocal
Deprecated
DiagnoseIf
DisableTailCalls
EmptyBases
EnableIf
EnumExtensibility
ExcludeFromExplicitInstantiation
ExclusiveTrylockFunction
ExternalSourceSymbol
Final
FlagEnum
Flatten
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
IBAction
IBOutlet
IBOutletCollection
InitPriority
InternalLinkage
LTOVisibilityPublic
LayoutVersion
LockReturned
LocksExcluded
MIGServerRoutine
MSInheritance
MSNoVTable
MSP430Interrupt
MSStruct
MSVtorDisp
MaxFieldAlignment
MayAlias
MicroMips
MinSize
MinVectorWidth
Mips16
MipsInterrupt
MipsLongCall
MipsShortCall
NSConsumesSelf
NSReturnsAutoreleased
NSReturnsNotRetained
Naked
NoAlias
NoCommon
NoDebug
NoDestroy
NoDuplicate
NoInline
NoInstrumentFunction
NoMicroMips
NoMips16
NoReturn
NoSanitize
NoSplitStack
NoStackProtector
NoThreadSafetyAnalysis
NoThrow
NonTrivialUnionMember
NotTailCalled
OMPCaptureNoInit
OMPDeclareTargetDecl
OMPThreadPrivateDecl
OSConsumesThis
OSReturnsNotRetained
OSReturnsRetained
OSReturnsRetainedOnNonZero
OSReturnsRetainedOnZero
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCCompleteDefinition
ObjCException
ObjCExplicitProtocolImpl
ObjCExternallyRetained
ObjCIndependentClass
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
ObjCSubclassingRestricted
OpenCLIntelReqdSubGroupSize
OpenCLKernel
OpenCLUnrollHint
OptimizeNone
Override
Ownership
Packed
ParamTypestate
PragmaClangBSSSection
PragmaClangDataSection
PragmaClangRodataSection
PragmaClangTextSection
PtGuardedBy
PtGuardedVar
Pure
RISCVInterrupt
Reinitializes
ReleaseCapability
ReqdWorkGroupSize
RequireConstantInit
RequiresCapability
Restrict
ReturnTypestate
ReturnsNonNull
ReturnsTwice
ScopedLockable
Section
SelectAny
Sentinel
SetTypestate
SharedTrylockFunction
SpeculativeLoadHardening
SwiftError
SwiftImportAsNonGeneric
SwiftImportPropertyAsAccessors
SwiftName
SwiftNewtype
SwiftPrivate
TLSModel
Target
TestTypestate
TransparentUnion
TrivialABI
TryAcquireCapability
TypeTagForDatatype
TypeVisibility
Unavailable
Uninitialized
Unused
Used
Uuid
VecReturn
VecTypeHint
Visibility
WarnUnused
WarnUnusedResult
Weak
WeakImport
WeakRef
WorkGroupSizeHint
X86ForceAlignArgPointer
XRayInstrument
XRayLogArgs
AbiTag
Alias
AlignValue
IFunc
InitSeg
LoopHint
Mode
NSErrorDomain
NoEscape
OMPCaptureKind
OMPDeclareSimdDecl
OMPReferencedVar
ObjCBoxable
ObjCClassStub
ObjCDesignatedInitializer
ObjCNonLazyClass
ObjCRuntimeName
ObjCRuntimeVisible
OpenCLAccess
Overloadable
RenderScriptKernel
SwiftBridge
SwiftBridgedTypedef
SwiftObjCMembers
SwiftVersioned
SwiftVersionedRemoval
Thread
Attr
 Inherited
 Implicit
 IRQ
 FIQ
 SWI
 ABORT
 UNDEF
 Generic
 IsPointer
 Unavailable
 Strict
 ByRef
 Unknown
 Consumed
 Unconsumed
 DT_Error
 DT_Warning
 ArgDependent
 Closed
 Open
 GeneratedDeclaration
 Vectorize
 VectorizeWidth
 Interleave
 InterleaveCount
 Unroll
 UnrollCount
 UnrollAndJam
 UnrollAndJamCount
 Distribute
 Enable
 Disable
 Numeric
 AssumeSafety
 Full
 BestCase
 sw0
 sw1
 hw0
 hw1
 hw2
 hw3
 hw4
 hw5
 eic
 BS_Undefined
 BS_Inbranch
 BS_Notinbranch
 MT_To
 MT_Link
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 AAPCS
 AAPCS_VFP
 AddressDiscriminated
 user
 supervisor
 machine
 None
 NonNullError
 NullResult
 ZeroResult
 NonZeroResult
 NK_Struct
 NK_Enum
 IsReplacedByActive
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 IR_None
 IR_ARCForbiddenType
 IR_ForbiddenWeak
 IR_IgnoredWeak
 IR_ARCForbiddenConversion
 IR_ARCInitReturnsUnrelated
 IR_ARCFieldWithOwnership
<undeserialized declarations>
StoredDeclsMap 
 primary
DeclarationName 
<undeserialized lookups>
 lvalue
 xvalue
 bitfield
 objcproperty
 objcsubscript
 vectorcomponent
' ComputeLHSTy=
 ComputeResultTy=
 elidable
 list
 std::initializer_list
 zeroing
 global
 array
 this
 adl
 -> 
 functional cast to 
 part_of_explicit_cast
cleanup
 result_dependent
case 
 selected
 field 
array filler
 extended by 
__objc_yes
__objc_no
 isFreeIvar
 selector=
 class=
 super (instance)
 super (class)
 Kind=MethodRef Getter="
(null)
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
ADL) = '
 sizeof
 alignof
 vec_step
 __builtin_omp_required_simd_align
 __alignof
postfix
prefix
 cannot overflow
 has_init
 has_var
 has_else
 <implicit>
 catch all
 gnu_range
<built-in>
<None>
TemplateName
NestedNameSpecifierLoc
TypeLoc
NestedNameSpecifier
AccessSpecDecl
BlockDecl
CapturedDecl
ClassScopeFunctionSpecializationDecl
EmptyDecl
ExportDecl
ExternCContextDecl
FileScopeAsmDecl
FriendTemplateDecl
ImportDecl
LinkageSpecDecl
NamedDecl
LabelDecl
NamespaceDecl
NamespaceAliasDecl
ObjCCompatibleAliasDecl
ObjCContainerDecl
ObjCImplDecl
ObjCMethodDecl
TemplateDecl
BuiltinTemplateDecl
RedeclarableTemplateDecl
ClassTemplateDecl
FunctionTemplateDecl
VarTemplateDecl
TemplateTemplateParmDecl
TypeDecl
TagDecl
RecordDecl
CXXRecordDecl
ClassTemplateSpecializationDecl
ClassTemplatePartialSpecializationDecl
TemplateTypeParmDecl
TypedefNameDecl
ObjCTypeParamDecl
UnresolvedUsingTypenameDecl
UsingDecl
UsingDirectiveDecl
UsingPackDecl
UsingShadowDecl
ConstructorUsingShadowDecl
ValueDecl
BindingDecl
DeclaratorDecl
ObjCAtDefsFieldDecl
CXXDeductionGuideDecl
CXXMethodDecl
CXXConstructorDecl
CXXConversionDecl
CXXDestructorDecl
MSPropertyDecl
NonTypeTemplateParmDecl
DecompositionDecl
ImplicitParamDecl
OMPCapturedExprDecl
ParmVarDecl
VarTemplateSpecializationDecl
VarTemplatePartialSpecializationDecl
IndirectFieldDecl
OMPDeclareReductionDecl
UnresolvedUsingValueDecl
OMPRequiresDecl
ObjCPropertyImplDecl
PragmaCommentDecl
PragmaDetectMismatchDecl
StaticAssertDecl
TranslationUnitDecl
Stmt
AsmStmt
AttributedStmt
CapturedStmt
CoreturnStmt
CoroutineBodyStmt
Expr
AbstractConditionalOperator
BinaryConditionalOperator
ArrayInitIndexExpr
ArrayInitLoopExpr
ArrayTypeTraitExpr
AsTypeExpr
AtomicExpr
CXXBindTemporaryExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDependentScopeMemberExpr
CXXFoldExpr
CXXInheritedCtorInitExpr
CXXNoexceptExpr
CXXPseudoDestructorExpr
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CastExpr
ExplicitCastExpr
CXXNamedCastExpr
ImplicitCastExpr
ChooseExpr
ConvertVectorExpr
CoroutineSuspendExpr
CoawaitExpr
CoyieldExpr
DependentCoawaitExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
DesignatedInitUpdateExpr
ExpressionTraitExpr
ExtVectorElementExpr
FullExpr
ConstantExpr
ExprWithCleanups
FunctionParmPackExpr
ImplicitValueInitExpr
MSPropertyRefExpr
MSPropertySubscriptExpr
MaterializeTemporaryExpr
MemberExpr
NoInitExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCObjectLiteral
ObjCArrayLiteral
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCPropertyRefExpr
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
OverloadExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
ShuffleVectorExpr
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TypeTraitExpr
TypoExpr
UnaryExprOrTypeTraitExpr
VAArgExpr
MSDependentExistsStmt
OMPExecutableDirective
OMPLoopDirective
SwitchCase
BuiltinType
ComplexType
PointerType
BlockPointerType
ReferenceType
LValueReferenceType
RValueReferenceType
MemberPointerType
ArrayType
ConstantArrayType
IncompleteArrayType
VariableArrayType
DependentSizedArrayType
DependentSizedExtVectorType
DependentSizedMatrixType
DependentAddressSpaceType
VectorType
DependentVectorType
ExtVectorType
MatrixType
FunctionType
FunctionProtoType
FunctionNoProtoType
UnresolvedUsingType
ParenType
TypedefType
AdjustedType
DecayedType
TypeOfExprType
TypeOfType
DecltypeType
UnaryTransformType
TagType
RecordType
EnumType
ElaboratedType
AttributedType
TemplateTypeParmType
SubstTemplateTypeParmType
SubstTemplateTypeParmPackType
TemplateSpecializationType
DeducedType
AutoType
DeducedTemplateSpecializationType
InjectedClassNameType
DependentNameType
DependentTemplateSpecializationType
PackExpansionType
ObjCTypeParamType
ObjCObjectType
ObjCInterfaceType
ObjCObjectPointerType
PipeType
AtomicType
 __attribute__((aarch64_vector_pcs))
 [[clang::aarch64_vector_pcs]]
aarch64_vector_pcs
 __attribute__((amdgpu_flat_work_group_size(
 [[clang::amdgpu_flat_work_group_size(
amdgpu_flat_work_group_size
 __attribute__((amdgpu_num_sgpr(
 [[clang::amdgpu_num_sgpr(
amdgpu_num_sgpr
 __attribute__((amdgpu_num_vgpr(
 [[clang::amdgpu_num_vgpr(
amdgpu_num_vgpr
 __attribute__((amdgpu_waves_per_eu(
 [[clang::amdgpu_waves_per_eu(
amdgpu_waves_per_eu
 __attribute__((interrupt("
")))
 [[gnu::interrupt("
")]]
interrupt
 __attribute__((interrupt))
 [[gnu::interrupt]]
 __attribute__((signal))
 [[gnu::signal]]
signal
 __attribute__((abi_tag(
 [[gnu::abi_tag(
abi_tag
 __attribute__((acquire_capability(
 [[clang::acquire_capability(
 __attribute__((acquire_shared_capability(
 [[clang::acquire_shared_capability(
 __attribute__((exclusive_lock_function(
 __attribute__((shared_lock_function(
acquire_capability
acquire_shared_capability
exclusive_lock_function
shared_lock_function
 __attribute__((acquired_after(
acquired_after
 __attribute__((acquired_before(
acquired_before
 __attribute__((address_space(
 [[clang::address_space(
address_space
 __attribute__((alias("
 [[gnu::alias("
alias
(No spelling)
 __attribute__((align_value(
align_value
 __attribute__((aligned
 [[gnu::aligned
 __declspec(align
 alignas
 _Alignas
aligned
align
alignas
_Alignas
 __attribute__((alloc_align(
 [[gnu::alloc_align(
alloc_align
 __attribute__((alloc_size
 [[gnu::alloc_size
alloc_size
 __attribute__((always_destroy))
 [[clang::always_destroy]]
always_destroy
 __attribute__((always_inline))
 [[gnu::always_inline]]
 __forceinline
always_inline
__forceinline
 __attribute__((analyzer_noreturn))
analyzer_noreturn
 __attribute__((annotate("
 [[clang::annotate("
annotate
 __attribute__((no_caller_saved_registers))
 [[gnu::no_caller_saved_registers]]
no_caller_saved_registers
 __attribute__((nocf_check))
 [[gnu::nocf_check]]
nocf_check
 __attribute__((objc_arc_weak_reference_unavailable))
 [[clang::objc_arc_weak_reference_unavailable]]
objc_arc_weak_reference_unavailable
 __attribute__((argument_with_type_tag(
 [[clang::argument_with_type_tag(
 __attribute__((pointer_with_type_tag(
 [[clang::pointer_with_type_tag(
argument_with_type_tag
pointer_with_type_tag
 __attribute__((artificial))
 [[gnu::artificial]]
artificial
 asm("
 __asm__("
__asm__
 __attribute__((assert_capability(
 [[clang::assert_capability(
 __attribute__((assert_shared_capability(
 [[clang::assert_shared_capability(
assert_capability
assert_shared_capability
 __attribute__((assert_exclusive_lock(
assert_exclusive_lock
 __attribute__((assert_shared_lock(
assert_shared_lock
 __attribute__((assume_aligned(
 [[gnu::assume_aligned(
assume_aligned
 __attribute__((availability(
, strict
, introduced=
, deprecated=
, obsoleted=
, unavailable
 [[clang::availability(
availability
 __attribute__((blocks("
 [[clang::blocks("
blocks
 _Noreturn
_Noreturn
 __attribute__((cdecl))
 [[gnu::cdecl]]
 __cdecl
 _cdecl
cdecl
__cdecl
_cdecl
 __attribute__((cf_audited_transfer))
 [[clang::cf_audited_transfer]]
cf_audited_transfer
 __attribute__((cf_consumed))
 [[clang::cf_consumed]]
cf_consumed
 __attribute__((cf_returns_not_retained))
 [[clang::cf_returns_not_retained]]
cf_returns_not_retained
 __attribute__((cf_returns_retained))
 [[clang::cf_returns_retained]]
cf_returns_retained
 __attribute__((cf_unknown_transfer))
 [[clang::cf_unknown_transfer]]
cf_unknown_transfer
 __attribute__((cpu_dispatch(
 [[clang::cpu_dispatch(
 __declspec(cpu_dispatch(
cpu_dispatch
 __attribute__((cpu_specific(
 [[clang::cpu_specific(
 __declspec(cpu_specific(
cpu_specific
 __attribute__((constant))
 __declspec(__constant__)
constant
__constant__
 __attribute__((device))
 __declspec(__device__)
device
__device__
 __attribute__((global))
 __declspec(__global__)
global
__global__
 __attribute__((host))
 __declspec(__host__)
host
__host__
 __attribute__((launch_bounds(
 __declspec(__launch_bounds__(
launch_bounds
__launch_bounds__
 __attribute__((shared))
 __declspec(__shared__)
shared
__shared__
 [[noreturn]]
noreturn
 __attribute__((callable_when(
 [[clang::callable_when(
callable_when
 __attribute__((capability("
 [[clang::capability("
 __attribute__((shared_capability("
 [[clang::shared_capability("
capability
shared_capability
 __attribute__((carries_dependency))
 [[carries_dependency]]
carries_dependency
 __attribute__((cleanup(
 [[gnu::cleanup(
 __declspec(code_seg("
code_seg
 __attribute__((cold))
 [[gnu::cold]]
cold
 __attribute__((common))
 [[gnu::common]]
common
 __attribute__((const))
 [[gnu::const]]
 __attribute__((__const))
 [[gnu::__const]]
const
__const
 __attribute__((constructor(
 [[gnu::constructor(
constructor
 __attribute__((consumable("
 [[clang::consumable("
consumable
 __attribute__((consumable_auto_cast_state))
 [[clang::consumable_auto_cast_state]]
consumable_auto_cast_state
 __attribute__((consumable_set_state_on_read))
 [[clang::consumable_set_state_on_read]]
consumable_set_state_on_read
 __attribute__((convergent))
 [[clang::convergent]]
convergent
 __declspec(dllexport)
 __attribute__((dllexport))
 [[gnu::dllexport]]
dllexport
 __declspec(dllimport)
 __attribute__((dllimport))
 [[gnu::dllimport]]
dllimport
 __attribute__((deprecated("
 [[gnu::deprecated("
 __declspec(deprecated("
 [[deprecated("
deprecated
 __attribute__((destructor(
 [[gnu::destructor(
destructor
 __attribute__((diagnose_if(
", "
diagnose_if
 __attribute__((disable_tail_calls))
 [[clang::disable_tail_calls]]
disable_tail_calls
 __declspec(empty_bases)
empty_bases
 __attribute__((enable_if(
enable_if
 __attribute__((enum_extensibility("
 [[clang::enum_extensibility("
enum_extensibility
 __attribute__((exclude_from_explicit_instantiation))
 [[clang::exclude_from_explicit_instantiation]]
exclude_from_explicit_instantiation
 __attribute__((exclusive_trylock_function(
exclusive_trylock_function
 __attribute__((external_source_symbol("
 [[clang::external_source_symbol("
external_source_symbol
 [[fallthrough]]
 [[clang::fallthrough]]
fallthrough
 __attribute__((fastcall))
 [[gnu::fastcall]]
 __fastcall
 _fastcall
fastcall
__fastcall
_fastcall
 final
 sealed
final
sealed
 __attribute__((flag_enum))
 [[clang::flag_enum]]
flag_enum
 __attribute__((flatten))
 [[gnu::flatten]]
flatten
 __attribute__((format(
 [[gnu::format(
format
 __attribute__((format_arg(
 [[gnu::format_arg(
format_arg
 __attribute__((gnu_inline))
 [[gnu::gnu_inline]]
gnu_inline
 __attribute__((guarded_by(
guarded_by
 __attribute__((guarded_var))
 [[clang::guarded_var]]
guarded_var
 __attribute__((hot))
 [[gnu::hot]]
 __attribute__((ibaction))
 [[clang::ibaction]]
ibaction
 __attribute__((iboutlet))
 [[clang::iboutlet]]
iboutlet
 __attribute__((iboutletcollection(
 [[clang::iboutletcollection(
iboutletcollection
 __attribute__((ifunc("
 [[gnu::ifunc("
ifunc
 __attribute__((init_priority(
 [[gnu::init_priority(
init_priority
#pragma init_seg
init_seg
 __attribute__((intel_ocl_bicc))
 [[clang::intel_ocl_bicc]]
intel_ocl_bicc
 __attribute__((internal_linkage))
 [[clang::internal_linkage]]
internal_linkage
 __attribute__((lto_visibility_public))
 [[clang::lto_visibility_public]]
lto_visibility_public
 __declspec(layout_version(
layout_version
 __attribute__((lifetimebound))
 [[clang::lifetimebound]]
lifetimebound
 __attribute__((lock_returned(
lock_returned
 __attribute__((locks_excluded(
locks_excluded
#pragma clang loop
#pragma unroll
#pragma nounroll
#pragma unroll_and_jam
#pragma nounroll_and_jam
loop
unroll
nounroll
unroll_and_jam
nounroll_and_jam
 __attribute__((mig_server_routine))
 [[clang::mig_server_routine]]
mig_server_routine
 __attribute__((ms_abi))
 [[gnu::ms_abi]]
ms_abi
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__unspecified_inheritance
 __declspec(novtable)
novtable
 __attribute__((interrupt(
 [[gnu::interrupt(
 __attribute__((ms_struct))
 [[gnu::ms_struct]]
ms_struct
 __attribute__((may_alias))
 [[gnu::may_alias]]
may_alias
 __attribute__((micromips))
 [[gnu::micromips]]
micromips
 __attribute__((minsize))
 [[clang::minsize]]
minsize
 __attribute__((min_vector_width(
 [[clang::min_vector_width(
min_vector_width
 __attribute__((mips16))
 [[gnu::mips16]]
mips16
 __attribute__((long_call))
 [[gnu::long_call]]
 __attribute__((far))
 [[gnu::far]]
long_call
 __attribute__((short_call))
 [[gnu::short_call]]
 __attribute__((near))
 [[gnu::near]]
short_call
near
 __attribute__((mode(
 [[gnu::mode(
mode
 __attribute__((ns_consumed))
 [[clang::ns_consumed]]
ns_consumed
 __attribute__((ns_consumes_self))
 [[clang::ns_consumes_self]]
ns_consumes_self
 __attribute__((ns_error_domain(
ns_error_domain
 __attribute__((ns_returns_autoreleased))
 [[clang::ns_returns_autoreleased]]
ns_returns_autoreleased
 __attribute__((ns_returns_not_retained))
 [[clang::ns_returns_not_retained]]
ns_returns_not_retained
 __attribute__((ns_returns_retained))
 [[clang::ns_returns_retained]]
ns_returns_retained
 __attribute__((naked))
 [[gnu::naked]]
 __declspec(naked)
naked
 __declspec(noalias)
noalias
 __attribute__((nocommon))
 [[gnu::nocommon]]
nocommon
 __attribute__((nodebug))
 [[gnu::nodebug]]
nodebug
 __attribute__((noderef))
 [[clang::noderef]]
noderef
 __attribute__((no_destroy))
 [[clang::no_destroy]]
no_destroy
 __attribute__((noduplicate))
 [[clang::noduplicate]]
noduplicate
 __attribute__((noescape))
 [[clang::noescape]]
noescape
 __attribute__((noinline))
 [[gnu::noinline]]
 __declspec(noinline)
noinline
 __attribute__((no_instrument_function))
 [[gnu::no_instrument_function]]
no_instrument_function
 __attribute__((nomicromips))
 [[gnu::nomicromips]]
nomicromips
 __attribute__((nomips16))
 [[gnu::nomips16]]
nomips16
 __attribute__((noreturn))
 [[gnu::noreturn]]
 __declspec(noreturn)
 __attribute__((no_sanitize(
 [[clang::no_sanitize(
no_sanitize
 __attribute__((no_split_stack))
 [[gnu::no_split_stack]]
no_split_stack
 __attribute__((no_stack_protector))
 [[clang::no_stack_protector]]
no_stack_protector
 __attribute__((no_thread_safety_analysis))
 [[clang::no_thread_safety_analysis]]
no_thread_safety_analysis
 __attribute__((nothrow))
 [[gnu::nothrow]]
 __declspec(nothrow)
nothrow
 __attribute__((nonnull(
 [[gnu::nonnull(
nonnull
 __attribute__((union_member_50591731))
 [[clang::union_member_50591731]]
union_member_50591731
 __attribute__((not_tail_called))
 [[clang::not_tail_called]]
not_tail_called
#pragma omp declare simd
declare simd
#pragma omp declare target
declare target
 __attribute__((os_consumed))
 [[clang::os_consumed]]
os_consumed
 __attribute__((os_consumes_this))
 [[clang::os_consumes_this]]
os_consumes_this
 __attribute__((os_returns_not_retained))
 [[clang::os_returns_not_retained]]
os_returns_not_retained
 __attribute__((os_returns_retained))
 [[clang::os_returns_retained]]
os_returns_retained
 __attribute__((os_returns_retained_on_non_zero))
 [[clang::os_returns_retained_on_non_zero]]
os_returns_retained_on_non_zero
 __attribute__((os_returns_retained_on_zero))
 [[clang::os_returns_retained_on_zero]]
os_returns_retained_on_zero
 __attribute__((objc_boxable))
 [[clang::objc_boxable]]
objc_boxable
 __attribute__((objc_bridge(
 [[clang::objc_bridge(
objc_bridge
 __attribute__((objc_bridge_mutable(
 [[clang::objc_bridge_mutable(
objc_bridge_mutable
 __attribute__((objc_bridge_related(
 [[clang::objc_bridge_related(
objc_bridge_related
 __attribute__((objc_class_stub))
 [[clang::objc_class_stub]]
objc_class_stub
 __attribute__((objc_complete_definition))
objc_complete_definition
 __attribute__((objc_designated_initializer))
 [[clang::objc_designated_initializer]]
objc_designated_initializer
 __attribute__((objc_exception))
 [[clang::objc_exception]]
objc_exception
 __attribute__((objc_protocol_requires_explicit_implementation))
 [[clang::objc_protocol_requires_explicit_implementation]]
objc_protocol_requires_explicit_implementation
 __attribute__((objc_externally_retained))
 [[clang::objc_externally_retained]]
objc_externally_retained
 __attribute__((objc_gc(
 [[clang::objc_gc(
objc_gc
 __attribute__((objc_independent_class))
 [[clang::objc_independent_class]]
objc_independent_class
 __unsafe_unretained
__unsafe_unretained
 __kindof
__kindof
 __attribute__((objc_method_family("
 [[clang::objc_method_family("
objc_method_family
 __attribute__((NSObject))
 [[clang::NSObject]]
NSObject
 __attribute__((objc_nonlazy_class))
 [[clang::objc_nonlazy_class]]
objc_nonlazy_class
 __attribute__((objc_ownership(
 [[clang::objc_ownership(
objc_ownership
 __attribute__((objc_precise_lifetime))
 [[clang::objc_precise_lifetime]]
objc_precise_lifetime
 __attribute__((objc_requires_property_definitions))
 [[clang::objc_requires_property_definitions]]
objc_requires_property_definitions
 __attribute__((objc_requires_super))
 [[clang::objc_requires_super]]
objc_requires_super
 __attribute__((objc_returns_inner_pointer))
 [[clang::objc_returns_inner_pointer]]
objc_returns_inner_pointer
 __attribute__((objc_root_class))
 [[clang::objc_root_class]]
objc_root_class
 __attribute__((objc_runtime_name("
 [[clang::objc_runtime_name("
objc_runtime_name
 __attribute__((objc_runtime_visible))
 [[clang::objc_runtime_visible]]
objc_runtime_visible
 __attribute__((objc_subclassing_restricted))
 [[clang::objc_subclassing_restricted]]
objc_subclassing_restricted
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
__read_only
read_only
__write_only
write_only
__read_write
read_write
 __constant
 constant
__constant
 __generic
__generic
generic
 __global
__global
 __attribute__((intel_reqd_sub_group_size(
intel_reqd_sub_group_size
 __kernel
 kernel
__kernel
kernel
 __local
 local
__local
local
 __private
__private
private
 __attribute__((opencl_unroll_hint(
opencl_unroll_hint
 __attribute__((optnone))
 [[clang::optnone]]
optnone
 __attribute__((overloadable))
 [[clang::overloadable]]
overloadable
 override
override
 __attribute__((ownership_holds(
 [[clang::ownership_holds(
 __attribute__((ownership_returns(
 [[clang::ownership_returns(
 __attribute__((ownership_takes(
 [[clang::ownership_takes(
ownership_holds
ownership_returns
ownership_takes
 __attribute__((packed))
 [[gnu::packed]]
 __attribute__((param_typestate("
 [[clang::param_typestate("
param_typestate
 __attribute__((pascal))
 [[clang::pascal]]
 __pascal
 _pascal
pascal
__pascal
_pascal
 __attribute__((pass_object_size(
 [[clang::pass_object_size(
 __attribute__((pass_dynamic_object_size(
 [[clang::pass_dynamic_object_size(
pass_object_size
pass_dynamic_object_size
 __attribute__((pcs("
 [[gnu::pcs("
 __ptrauth(
__ptrauth
 __attribute__((preserve_all))
 [[clang::preserve_all]]
preserve_all
 __attribute__((preserve_most))
 [[clang::preserve_most]]
preserve_most
 __attribute__((pt_guarded_by(
pt_guarded_by
 __attribute__((pt_guarded_var))
 [[clang::pt_guarded_var]]
pt_guarded_var
 __ptr32
__ptr32
 __ptr64
__ptr64
 __attribute__((pure))
 [[gnu::pure]]
pure
 __attribute__((regcall))
 [[gnu::regcall]]
 __regcall
regcall
__regcall
 __attribute__((reinitializes))
 [[clang::reinitializes]]
reinitializes
 __attribute__((release_capability(
 [[clang::release_capability(
 __attribute__((release_shared_capability(
 [[clang::release_shared_capability(
 __attribute__((release_generic_capability(
 [[clang::release_generic_capability(
 __attribute__((unlock_function(
 [[clang::unlock_function(
release_capability
release_shared_capability
release_generic_capability
unlock_function
 __attribute__((kernel))
 __attribute__((reqd_work_group_size(
reqd_work_group_size
 __attribute__((require_constant_initialization))
 [[clang::require_constant_initialization]]
require_constant_initialization
 __attribute__((requires_capability(
 [[clang::requires_capability(
 __attribute__((exclusive_locks_required(
 [[clang::exclusive_locks_required(
 __attribute__((requires_shared_capability(
 [[clang::requires_shared_capability(
 __attribute__((shared_locks_required(
 [[clang::shared_locks_required(
requires_capability
exclusive_locks_required
requires_shared_capability
shared_locks_required
 __declspec(restrict)
 __attribute__((malloc))
 [[gnu::malloc]]
restrict
malloc
 __attribute__((return_typestate("
 [[clang::return_typestate("
return_typestate
 __attribute__((returns_nonnull))
 [[gnu::returns_nonnull]]
returns_nonnull
 __attribute__((returns_twice))
 [[gnu::returns_twice]]
returns_twice
 __sptr
__sptr
 __attribute__((scoped_lockable))
 [[clang::scoped_lockable]]
scoped_lockable
 __attribute__((section("
 [[gnu::section("
 __declspec(allocate("
section
allocate
 __declspec(selectany)
 __attribute__((selectany))
 [[gnu::selectany]]
selectany
 __attribute__((sentinel(
 [[gnu::sentinel(
sentinel
 __attribute__((set_typestate("
 [[clang::set_typestate("
set_typestate
 __attribute__((shared_trylock_function(
shared_trylock_function
 __attribute__((speculative_load_hardening))
 [[clang::speculative_load_hardening]]
speculative_load_hardening
 __attribute__((stdcall))
 [[gnu::stdcall]]
 __stdcall
 _stdcall
stdcall
__stdcall
_stdcall
 [[gsl::suppress(
suppress
 __attribute__((swift_bridge("
swift_bridge
 __attribute__((swift_bridged_typedef))
swift_bridged_typedef
 __attribute__((swiftcall))
 [[clang::swiftcall]]
swiftcall
 __attribute__((swift_context))
 [[clang::swift_context]]
swift_context
 __attribute__((swift_error("
 [[gnu::swift_error("
swift_error
 __attribute__((swift_error_result))
 [[clang::swift_error_result]]
swift_error_result
 __attribute__((swift_indirect_result))
 [[clang::swift_indirect_result]]
swift_indirect_result
 __attribute__((swift_name("
 [[gnu::swift_name("
swift_name
 __attribute__((swift_newtype("
 __attribute__((swift_wrapper("
swift_newtype
swift_wrapper
 __attribute__((swift_objc_members))
swift_objc_members
 __attribute__((swift_private))
 [[gnu::swift_private]]
swift_private
 __attribute__((sysv_abi))
 [[gnu::sysv_abi]]
sysv_abi
 __attribute__((tls_model("
 [[gnu::tls_model("
tls_model
 __attribute__((target("
 [[gnu::target("
target
 __attribute__((test_typestate("
 [[clang::test_typestate("
test_typestate
 __attribute__((thiscall))
 [[gnu::thiscall]]
 __thiscall
 _thiscall
thiscall
__thiscall
_thiscall
 __declspec(thread)
thread
 __attribute__((transparent_union))
 [[gnu::transparent_union]]
transparent_union
 __attribute__((trivial_abi))
 [[clang::trivial_abi]]
trivial_abi
 __attribute__((try_acquire_capability(
 [[clang::try_acquire_capability(
 __attribute__((try_acquire_shared_capability(
 [[clang::try_acquire_shared_capability(
try_acquire_capability
try_acquire_shared_capability
 _Nonnull
_Nonnull
 _Null_unspecified
_Null_unspecified
 _Nullable
_Nullable
 __attribute__((type_tag_for_datatype(
 [[clang::type_tag_for_datatype(
type_tag_for_datatype
 __attribute__((type_visibility("
 [[clang::type_visibility("
type_visibility
 __uptr
__uptr
 __attribute__((unavailable("
 [[clang::unavailable("
unavailable
 __attribute__((uninitialized))
 [[clang::uninitialized]]
uninitialized
 [[maybe_unused]]
 __attribute__((unused))
 [[gnu::unused]]
maybe_unused
unused
 __attribute__((used))
 [[gnu::used]]
used
 __declspec(uuid("
[uuid("
uuid
 __attribute__((vecreturn))
 [[clang::vecreturn]]
vecreturn
 __attribute__((vec_type_hint(
vec_type_hint
 __attribute__((vectorcall))
 [[clang::vectorcall]]
 __vectorcall
 _vectorcall
vectorcall
__vectorcall
_vectorcall
 __attribute__((visibility("
 [[gnu::visibility("
visibility
 __attribute__((warn_unused))
 [[gnu::warn_unused]]
warn_unused
 [[nodiscard]]
 [[clang::warn_unused_result]]
 __attribute__((warn_unused_result))
 [[gnu::warn_unused_result]]
nodiscard
warn_unused_result
 __attribute__((weak))
 [[gnu::weak]]
 __attribute__((weak_import))
 [[clang::weak_import]]
weak_import
 __attribute__((weakref("
 [[gnu::weakref("
weakref
 __attribute__((work_group_size_hint(
work_group_size_hint
 __attribute__((force_align_arg_pointer))
 [[gnu::force_align_arg_pointer]]
force_align_arg_pointer
 __attribute__((xray_always_instrument))
 [[clang::xray_always_instrument]]
 __attribute__((xray_never_instrument))
 [[clang::xray_never_instrument]]
xray_always_instrument
xray_never_instrument
 __attribute__((xray_log_args(
 [[clang::xray_log_args(
xray_log_args
Allocation failed
ABORT
UNDEF
unknown
consumed
unconsumed
error
warning
closed
open
enable
full
assume_safety
disable
vectorize
vectorize_width
interleave
interleave_count
unroll_count
unroll_and_jam_count
distribute
vector=sw0
vector=sw1
vector=hw0
vector=hw1
vector=hw2
vector=hw3
vector=hw4
vector=hw5
 simdlen(
 uniform
 aligned(
 linear(
inbranch
notinbranch
link
none
alloc
init
mutableCopy
aapcs
aapcs-vfp
supervisor
machine
nonnull_error
null_result
zero_result
nonzero_result
struct
enum
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
[in]
[out]
[in,out]
Returns 
textblock
abstract
addtogroup
attention
author
authors
brief
callback
category
classdesign
coclass
code
endcode
copyright
date
defgroup
dependency
details
discussion
enddot
exception
function
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
interface
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
method
methodgroup
endmsc
namespace
note
overload
ownership
paragraph
param
performance
post
property
protocol
related
relatedalso
relates
relatesalso
remark
remarks
result
return
returns
rtfonly
endrtfonly
security
seealso
short
since
subpage
subsection
subsubsection
superclass
template
templatefield
/textblock
throw
throws
todo
tparam
typedef
union
verbatim
endverbatim
version
weakgroup
xmlonly
endxmlonly
tilde
floor
\@&<
__attribute__((deprecated))
weak_equality
strong_equality
partial_ordering
weak_ordering
strong_ordering
equal
nonequal
equivalent
nonequivalent
less
greater
unordered
CFStringCreateWithFormat
CFStringCreateWithFormatAndArguments
CFStringAppendFormat
CFStringAppendFormatAndArguments
`anonymous namespace'
(anonymous namespace)
(anonymous 
(anonymous)
auto
extern
__private_extern__
register
static
main
field-padding
Allocation failed
<deduction guide for 
delete
new[]
delete[]
operator
operator""
operator 
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
Export
ExternCContext
FileScopeAsm
Friend
FriendTemplate
Import
Label
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCProtocol
ObjCMethod
ObjCProperty
BuiltinTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
CXXRecord
ClassTemplateSpecialization
TypeAlias
UnresolvedUsingTypename
Using
UsingPack
UsingShadow
ConstructorUsingShadow
Binding
Field
ObjCAtDefsField
ObjCIvar
Function
CXXDeductionGuide
MSProperty
NonTypeTemplateParm
Decomposition
ImplicitParam
OMPCapturedExpr
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
OMPDeclareReduction
UnresolvedUsingValue
OMPRequires
OMPThreadPrivate
ObjCPropertyImpl
PragmaComment
PragmaDetectMismatch
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 each (
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 Export decls, 
 ExternCContext decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LinkageSpec decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 BuiltinTemplate decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 ObjCTypeParam decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 Using decls, 
 UsingDirective decls, 
 UsingPack decls, 
 UsingShadow decls, 
 ConstructorUsingShadow decls, 
 Binding decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXDeductionGuide decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 Decomposition decls, 
 ImplicitParam decls, 
 OMPCapturedExpr decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 OMPDeclareReduction decls, 
 UnresolvedUsingValue decls, 
 OMPRequires decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 PragmaComment decls, 
 PragmaDetectMismatch decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
Allocation failed
not available on 
introduced in 
obsoleted in 
first deprecated in 
_app_extension
android
Android
macos
macOS
tvos
tvOS
watchos
watchOS
bridgeos
bridgeOS
driverkit
DriverKit
ios_app_extension
iOS (App Extension)
macos_app_extension
macOS (App Extension)
tvos_app_extension
tvOS (App Extension)
watchos_app_extension
watchOS (App Extension)
maccatalyst
macCatalyst
maccatalyst_app_extension
macCatalyst App Extension
swift
Swift
00000000-0000-0000-C000-000000000046
00020400-0000-0000-C000-000000000046
Allocation failed
__invoke
public
private
protected
self
_cmd
Allocation failed
#pragma omp end declare target
public
template <
typename 
class 
__asm (
friend 
@import 
extern "
inline 
@compatibility_alias 
@interface 
@end
__covariant 
__contravariant 
@implementation 
@class 
@protocol 
, ...
inout 
out 
bycopy 
byref 
oneway 
@required
@optional
@property
getter = 
setter = 
null_resettable
__module_private__ 
template<> 
using 
typedef 
using typename 
using namespace 
mutable 
extern 
__private_extern__ 
constexpr 
explicit 
 const
 restrict
 throw(
 noexcept
 = 0
 = delete
 = default
__thread 
_Thread_local 
thread_local 
#pragma omp declare reduction (
 initializer(
omp_priv(
omp_priv = 
#pragma omp requires 
#pragma omp threadprivate
@synthesize 
@dynamic 
static_assert(
Allocation failed
__func__
__FUNCTION__
__FUNCDNAME__
L__FUNCTION__
__PRETTY_FUNCTION__
__FUNCSIG__
L__FUNCSIG__
_block_invoke
static 
__cdecl 
__stdcall 
__fastcall 
__thiscall 
__vectorcall 
__regcall 
void
 volatile
auto 
0123456789ABCDEF
\U00
__real
__imag
__extension__
co_await
BitCast
LValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToPointer
NullToMemberPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
MemberPointerToBoolean
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FixedPointCast
FixedPointToBoolean
FloatingToIntegral
FloatingToBoolean
BooleanToSignedIntegral
FloatingCast
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCProduceObject
ARCConsumeObject
ARCReclaimReturnedObject
ARCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLOpaqueType
AddressSpaceConversion
IntToOCLSampler
even
captures not currently allowed
static_cast
dynamic_cast
reinterpret_cast
const_cast
<invalid cast>
Allocation failed
__bridge
__bridge_transfer
__bridge_retained
generation counter overflowed
size_t
ssize_t
intmax_t
uintmax_t
ptrdiff_t
allocator
basic_string
char_traits
basic_istream
basic_ostream
basic_iostream
U2ASI
__weak
__unaligned
__strong
__autoreleasing
cannot yet mangle expression type %0
u8__uuidoft
u8__uuidofz
?: operator with omitted middle operand cannot be mangled
cannot yet mangle vec_step expression
cannot yet mangle __builtin_omp_required_simd_align expression
_SUBSTPACK_
v110_SUBSTPACK
LDnE
v18co_await
v18co_yield
dtdefpT
DF16_
U10__float128
11objc_object
10objc_class
13objc_selector
ocl_image1d_ro
ocl_image1d_array_ro
ocl_image1d_buffer_ro
ocl_image2d_ro
ocl_image2d_array_ro
ocl_image2d_depth_ro
ocl_image2d_array_depth_ro
ocl_image2d_msaa_ro
ocl_image2d_array_msaa_ro
ocl_image2d_msaa_depth_ro
ocl_image2d_array_msaa_depth_ro
ocl_image3d_ro
ocl_image1d_wo
ocl_image1d_array_wo
ocl_image1d_buffer_wo
ocl_image2d_wo
ocl_image2d_array_wo
ocl_image2d_depth_wo
ocl_image2d_array_depth_wo
ocl_image2d_msaa_wo
ocl_image2d_array_msaa_wo
ocl_image2d_msaa_depth_wo
ocl_image2d_array_msaa_depth_wo
ocl_image3d_wo
ocl_image1d_rw
ocl_image1d_array_rw
ocl_image1d_buffer_rw
ocl_image2d_rw
ocl_image2d_array_rw
ocl_image2d_depth_rw
ocl_image2d_array_depth_rw
ocl_image2d_msaa_rw
ocl_image2d_array_msaa_rw
ocl_image2d_msaa_depth_rw
ocl_image2d_array_msaa_depth_rw
ocl_image3d_rw
11ocl_sampler
9ocl_event
12ocl_clkevent
9ocl_queue
13ocl_reserveid
ocl_intel_sub_group_avc_mce_payload_t
ocl_intel_sub_group_avc_ime_payload_t
ocl_intel_sub_group_avc_ref_payload_t
ocl_intel_sub_group_avc_sic_payload_t
ocl_intel_sub_group_avc_mce_result_t
ocl_intel_sub_group_avc_ime_result_t
ocl_intel_sub_group_avc_ref_result_t
ocl_intel_sub_group_avc_sic_result_t
ocl_intel_sub_group_avc_ime_result_single_reference_streamout_t
ocl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
ocl_intel_sub_group_avc_ime_single_reference_streamin_t
ocl_intel_sub_group_avc_ime_dual_reference_streamin_t
U13block_pointer
Poly8
Poly16
Poly64
Int8
Int16
Int32
Int64
Uint8
Uint16
Uint32
Uint64
Float32
Float64
poly8_t
poly16_t
poly64_t
int8_t
uint8_t
int16_t
uint16_t
int32_t
uint32_t
int64_t
uint64_t
float64_t
float32_t
float16_t
__simd64_
__simd128_
cannot mangle this dependent neon vector type yet
U25pass_dynamic_object_size
U17pass_object_size
u6typeof
3eut
12_GLOBAL__N_1
__regcall3__
U8__kindof
objcproto
8ocl_pipe
U7_Atomic
Ua9enable_ifI
_ZGR
_ZTI
_ZTS
_ZGV
__cxx_global_var_init
__dtor_
__filt_
__fin_
_ZTV
_ZTT
_ZTC
_ZTH
_ZTW
__regcall3__
_block_invoke_
Mangling declaration
?A0x
?__K
$$$V
cannot mangle this dependent-length array yet
PEAXI@Z
PAXI@Z
<decltype-auto>
<auto>
__pass_dynamic_object_size
__pass_object_size
__clang
objc_selector
PAUocl_image1d_ro@@
PAUocl_image1d_array_ro@@
PAUocl_image1d_buffer_ro@@
PAUocl_image2d_ro@@
PAUocl_image2d_array_ro@@
PAUocl_image2d_depth_ro@@
PAUocl_image2d_array_depth_ro@@
PAUocl_image2d_msaa_ro@@
PAUocl_image2d_array_msaa_ro@@
PAUocl_image2d_msaa_depth_ro@@
PAUocl_image2d_array_msaa_depth_ro@@
PAUocl_image3d_ro@@
PAUocl_image1d_wo@@
PAUocl_image1d_array_wo@@
PAUocl_image1d_buffer_wo@@
PAUocl_image2d_wo@@
PAUocl_image2d_array_wo@@
PAUocl_image2d_depth_wo@@
PAUocl_image2d_array_depth_wo@@
PAUocl_image2d_msaa_wo@@
PAUocl_image2d_array_msaa_wo@@
PAUocl_image2d_msaa_depth_wo@@
PAUocl_image2d_array_msaa_depth_wo@@
PAUocl_image3d_wo@@
PAUocl_image1d_rw@@
PAUocl_image1d_array_rw@@
PAUocl_image1d_buffer_rw@@
PAUocl_image2d_rw@@
PAUocl_image2d_array_rw@@
PAUocl_image2d_depth_rw@@
PAUocl_image2d_array_depth_rw@@
PAUocl_image2d_msaa_rw@@
PAUocl_image2d_array_msaa_rw@@
PAUocl_image2d_msaa_depth_rw@@
PAUocl_image2d_array_msaa_depth_rw@@
PAUocl_image3d_rw@@
ocl_sampler
ocl_event
ocl_clkevent
ocl_queue
ocl_reserveid
_Float16
_Half
cannot mangle this built-in %0 type yet
_Complex
_ASCLglobal
_ASCLlocal
_ASCLconstant
_ASCLprivate
_ASCLgeneric
_ASCUdevice
_ASCUconstant
_ASCUshared
cannot mangle this dependent-sized extended vector type yet
Cannot mangle this dependent-sized matrix type yet
cannot mangle this dependent address space type yet
__m64
__vector
cannot mangle this dependent-sized vector type yet
Cannot mangle this matrix type yet
$$A8@@
$$A6
cannot mangle this unresolved dependent type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this decltype() yet
cannot mangle this unary transform type yet
cannot mangle this template type parameter type yet
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this 'auto' type yet
cannot mangle this deduced class template specialization type yet
cannot mangle this dependent name type yet
cannot mangle this dependent template specialization type yet
cannot mangle this pack expansion yet
KindOf
__ObjC
Autoreleasing
Strong
cannot mangle this OpenCL pipe type yet
_Atomic
$0A@
_GUID_
__s_GUID
?__L
cannot mangle this three-way comparison operator yet
cannot mangle this conditional operator yet
__block_literal
$$J0
??_E
?$RT
??_R0
??_C@_
??__J
??_B
?$S1@
@4IA
??__
YAXXZ
?filt$
?fin$
??_S
??_7
??_8
?$TSS
@4HA
??_K
_CTA
??_R1
??_R2
??_R3
??_R4@
??_R4
__super
Allocation failed
NSString
NSArray
NSMutableArray
NSDictionary
NSMutableDictionary
NSNumber
NSMutableSet
NSMutableOrderedSet
NSValue
stringWithString
stringWithUTF8String
initWithUTF8String
stringWithCString
encoding
initWithString
array
arrayWithArray
arrayWithObject
arrayWithObjects
count
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
withObject
addObject
insertObject
atIndex
setObject
atIndexedSubscript
dictionary
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
forKeyedSubscript
setValue
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
initWithChar
initWithUnsignedChar
initWithShort
initWithUnsignedShort
initWithInt
initWithUnsignedInt
initWithLong
initWithUnsignedLong
initWithLongLong
initWithUnsignedLongLong
initWithFloat
initWithDouble
initWithBool
initWithInteger
initWithUnsignedInteger
BOOL
NSInteger
NSUInteger
final(
num_threads(
safelen(
simdlen(
collapse(
default(
proc_bind(
unified_address
unified_shared_memory
reverse_offload
dynamic_allocators
atomic_default_mem_order(
schedule(
ordered
nowait
untied
nogroup
mergeable
read
write
update
seq_cst
threads
simd
device(
num_teams(
thread_limit(
priority(
grainsize(
num_tasks(
hint(
firstprivate
lastprivate
reduction(
task_reduction(
in_reduction(
linear
copyin
copyprivate
depend(
map(
from
dist_schedule(
defaultmap(
use_device_ptr
is_device_ptr
wint_t
__int32
__int64
unsigned __int32
unsigned __int64
unsigned ptrdiff_t
const unichar *
wchar_t *
unichar
wchar_t
^[[:space:]]*(private|public|sensitive|mask\.[^[:space:],}]*)[[:space:]]*(,|})
mask
sensitive
*** Dumping AST Record Layout
Type: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  FieldOffsets: [
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
[sizeof=
, dsize=
, align=
 nvsize=
, nvalign=
%10lld | 
           | 
*** Stmt/Expr Stats:
 stmts/exprs total.
${:uid}
asm 
volatile 
__asm 
<<<NULL STATEMENT>>>
break;
catch (
for (
<null expr>
try 
continue;
co_return
while (
 ?: 
__array_rank
__array_extent
__builtin_astype(
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_nand_fetch(
__opencl_atomic_init(
__opencl_atomic_load(
__opencl_atomic_store(
__opencl_atomic_exchange(
__opencl_atomic_compare_exchange_strong(
__opencl_atomic_compare_exchange_weak(
__opencl_atomic_fetch_add(
__opencl_atomic_fetch_sub(
__opencl_atomic_fetch_and(
__opencl_atomic_fetch_or(
__opencl_atomic_fetch_xor(
__opencl_atomic_fetch_min(
__opencl_atomic_fetch_max(
__atomic_fetch_min(
__atomic_fetch_max(
delete 
<forwarded>
new 
noexcept(
this
throw 
typeid(
__uuidof(
>>>(
-0123456789
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
%02x
%04x
%08x
__builtin_choose_expr(
__builtin_convertvector(
co_await 
co_yield 
 ... 
/*base*/
/*updater*/
__is_lvalue_expr
__is_rvalue_expr
__null
_Generic(
/*implicit*/
/*implicit*/(
Ui16
*this
/*no init*/
@available(...)
@encode(
->isa
.isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
__builtin_shufflevector(
sizeof...(
__builtin_types_compatible_p
__is_interface_class
__is_sealed
__is_destructible
__is_trivially_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__is_assignable
__has_nothrow_assign
__has_nothrow_move_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_move_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_move_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_aggregate
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_pod
__is_polymorphic
__is_trivial
__is_union
__has_unique_object_representations
__is_trivially_constructible
__is_trivially_copyable
__is_trivially_assignable
__reference_binds_to_temporary
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_standard_layout
__is_signed
__is_unsigned
__is_same
__is_convertible
sizeof
alignof
_Alignof
__alignof
vec_step
__builtin_omp_required_simd_align
__builtin_va_arg(
goto 
if (
else
goto *
__if_exists (
__if_not_exists (
#pragma omp atomic
#pragma omp barrier
#pragma omp cancel 
#pragma omp cancellation point 
#pragma omp critical
#pragma omp flush
#pragma omp distribute
#pragma omp distribute parallel for
#pragma omp distribute parallel for simd
#pragma omp distribute simd
#pragma omp for
#pragma omp for simd
#pragma omp parallel for
#pragma omp parallel for simd
#pragma omp simd
#pragma omp target parallel for simd
#pragma omp target simd
#pragma omp target teams distribute
#pragma omp target teams distribute parallel for
#pragma omp target teams distribute parallel for simd
#pragma omp target teams distribute simd
#pragma omp taskloop
#pragma omp taskloop simd
#pragma omp teams distribute
#pragma omp teams distribute parallel for
#pragma omp teams distribute parallel for simd
#pragma omp teams distribute simd
#pragma omp master
#pragma omp ordered
#pragma omp parallel
#pragma omp parallel sections
#pragma omp section
#pragma omp sections
#pragma omp single
#pragma omp target data
#pragma omp target
#pragma omp target enter data
#pragma omp target exit data
#pragma omp target parallel
#pragma omp target parallel for
#pragma omp target teams
#pragma omp target update
#pragma omp task
#pragma omp taskgroup
#pragma omp taskwait
#pragma omp taskyield
#pragma omp teams
@catch (...) { /* todo */ } 
@synchronized (
@throw
@try
@catch(
@finally
@autoreleasepool
__except (
<<unknown expr type>>
__finally 
__leave;
__try 
default:
switch (
Stmt::viewAST is only available in debug builds on 
systems with Graphviz or gv!
(no value)
(null template argument)
<invalid sloc>
line
(CXXTemporary
<not a builtin command>
 Text="
 Name="
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
 Arg[
 Attrs: 
 SelfClosing
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
align_val_t
byte
typename
class
struct
__interface
union
enum
bool
_Bool
char
signed char
long
long long
__int128
unsigned char
unsigned short
unsigned int
unsigned long
unsigned long long
unsigned __int128
half
__fp16
float
double
long double
short _Accum
_Accum
long _Accum
unsigned short _Accum
unsigned _Accum
unsigned long _Accum
short _Fract
_Fract
long _Fract
unsigned short _Fract
unsigned _Fract
unsigned long _Fract
_Sat short _Accum
_Sat _Accum
_Sat long _Accum
_Sat unsigned short _Accum
_Sat unsigned _Accum
_Sat unsigned long _Accum
_Sat short _Fract
_Sat _Fract
_Sat long _Fract
_Sat unsigned short _Fract
_Sat unsigned _Fract
_Sat unsigned long _Fract
__float128
__wchar_t
char8_t
char16_t
char32_t
nullptr_t
<overloaded function type>
<bound member function type>
<pseudo-object type>
<dependent type>
<unknown type>
<ARC unbridged cast type>
<builtin fn type>
Class
__read_only image1d_t
__read_only image1d_array_t
__read_only image1d_buffer_t
__read_only image2d_t
__read_only image2d_array_t
__read_only image2d_depth_t
__read_only image2d_array_depth_t
__read_only image2d_msaa_t
__read_only image2d_array_msaa_t
__read_only image2d_msaa_depth_t
__read_only image2d_array_msaa_depth_t
__read_only image3d_t
__write_only image1d_t
__write_only image1d_array_t
__write_only image1d_buffer_t
__write_only image2d_t
__write_only image2d_array_t
__write_only image2d_depth_t
__write_only image2d_array_depth_t
__write_only image2d_msaa_t
__write_only image2d_array_msaa_t
__write_only image2d_msaa_depth_t
__write_only image2d_array_msaa_depth_t
__write_only image3d_t
__read_write image1d_t
__read_write image1d_array_t
__read_write image1d_buffer_t
__read_write image2d_t
__read_write image2d_array_t
__read_write image2d_depth_t
__read_write image2d_array_depth_t
__read_write image2d_msaa_t
__read_write image2d_array_msaa_t
__read_write image2d_msaa_depth_t
__read_write image2d_array_msaa_depth_t
__read_write image3d_t
sampler_t
event_t
clk_event_t
queue_t
reserve_id_t
<OpenMP array section type>
intel_sub_group_avc_mce_payload_t
intel_sub_group_avc_ime_payload_t
intel_sub_group_avc_ref_payload_t
intel_sub_group_avc_sic_payload_t
intel_sub_group_avc_mce_result_t
intel_sub_group_avc_ime_result_t
intel_sub_group_avc_ref_result_t
intel_sub_group_avc_sic_result_t
intel_sub_group_avc_ime_result_single_reference_streamout_t
intel_sub_group_avc_ime_result_dual_reference_streamout_t
intel_sub_group_avc_ime_single_reference_streamin_t
intel_sub_group_avc_ime_dual_reference_streamin_t
spir_function
opencl_kernel
NSCopying
__ptrauth(
__device
__shared
__attribute__((address_space(
volatile
__restrict
NULL TYPE
_Complex 
 __attribute__((matrix_type(
))) 
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
 * sizeof(
)))) 
(anonymous namespace)::
typeof 
typeof(
decltype(
__underlying_type(
std::function<
lambda
anonymous
__kindof 
type-parameter-
decltype(auto)
__auto_type
read_only 
write_only 
pipe 
_Atomic(
 __attribute__((ext_vector_type(
__attribute__((ns_consumed)) 
__attribute__((noescape)) 
__attribute__((
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
__attribute__((aarch64_vector_pcs))
 __attribute__((regparm (
 __attribute__((
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
 [scalar deleting]
VFTable indices for 
 entry
 entries
 -- accessible via 
vbtable index 
vfptr at offset 
%4llu | 
Original map
Construction vtable for ('
) in '
Vtable for '
 entries).
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
 method: 
VFTable for 
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
' in 
[return adjustment (to type '
'): 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left,
 vboffset at 
 in the vbtable, 
<unknown>
Loading API notes from 
_private
APINotes
_private.
Headers
PrivateHeaders
APINotes.
CONTROL_BLOCK
METADATA
MODULE_NAME
IDENTIFIER_BLOCK
IDENTIFIER_DATA
OBJC_CONTEXT_BLOCK
OBJC_CONTEXT_ID_DATA
OBJC_PROPERTY_BLOCK
OBJC_PROPERTY_DATA
OBJC_METHOD_BLOCK
OBJC_METHOD_DATA
OBJC_SELECTOR_BLOCK
OBJC_SELECTOR_DATA
GLOBAL_VARIABLE_BLOCK
GLOBAL_VARIABLE_DATA
GLOBAL_FUNCTION_BLOCK
GLOBAL_FUNCTION_DATA
Invalid encoding
Unexpected end of file
Name
AvailabilityMsg
SwiftInferImportAsMember
SwiftVersions
null
Null
NULL
TRUE
FALSE
01234567
0123456789abcdefABCDEF
0123456789
TVOS
WatchOS
BridgeOS
nonswift
available
Classes
Protocols
Functions
Globals
Enumerators
Tags
Typedefs
AuditedForNullability
Methods
Properties
Selector
MethodKind
Parameters
Nullability
NullabilityOfRet
RetainCountConvention
FactoryAsInit
DesignatedInit
Required
ResultType
Instance
Position
PropertyKind
SwiftImportAsAccessors
EnumKind
CFEnum
NSEnum
CFOptions
NSOptions
CFClosedEnum
NSClosedEnum
SwiftWrapper
Version
not a version number in the form XX.YY
multiple definitions of class '
multiple definitions of protocol '
multiple definitions of global variable '
multiple definitions of global function '
multiple definitions of enumerator '
multiple definitions Of tag '
cannot mix EnumKind and EnumExtensibility (for 
cannot mix EnumKind and FlagEnum (for 
multiple definitions of typedef '
duplicate definition of method '
duplicate definition of instance property '
duplicate definition of class property '
selector 
is missing a ':' at the end
'FactoryAsInit' is no longer valid; use 'SwiftName' instead
availability message for available API '
' will not be used
nullability info for 
 does not fit
__gnu__
_Clang
ext_vector_type
matrix_type
regparm
vector_size
block
enum_constant
field
function(is_member)
objc_category
objc_implementation
objc_interface
objc_method
objc_method(is_instance)
objc_property
objc_protocol
record
record(unless(is_union))
hasType
hasType(functionType)
type_alias
variable
variable(is_thread_local)
variable(is_global)
variable(is_parameter)
variable(unless(is_parameter))
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignl
__builtin_copysignf128
LLdLLdLLd
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fabsf128
LLdLLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodl
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_huge_valf128
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_inff128
__builtin_labs
LiLi
__builtin_llabs
LLiLLi
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nanf128
LLdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_nansf128
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powl
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_ceil
__builtin_ceilf
__builtin_ceill
__builtin_cos
__builtin_cosf
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_cosl
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_exp
__builtin_expf
__builtin_expl
__builtin_exp2
__builtin_exp2f
__builtin_exp2l
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_floor
__builtin_floorf
__builtin_floorl
__builtin_fma
dddd
__builtin_fmaf
ffff
__builtin_fmal
LdLdLdLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxl
__builtin_fmin
__builtin_fminf
__builtin_fminl
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_llrint
LLid
__builtin_llrintf
LLif
__builtin_llrintl
LLiLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10l
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log2
__builtin_log2f
__builtin_log2l
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logf
__builtin_logl
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_rint
__builtin_rintf
__builtin_rintl
__builtin_round
__builtin_roundf
__builtin_roundl
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_sin
__builtin_sinf
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinl
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtl
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanl
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_isgreater
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_canonicalize
__builtin_canonicalizef
__builtin_canonicalizel
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
iLLi
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_clrsb
__builtin_clrsbl
__builtin_clrsbll
__builtin_bswap16
UsUs
__builtin_bswap32
UiUi
__builtin_bswap64
ULLiULLi
__builtin_bitreverse8
UcUc
__builtin_bitreverse16
__builtin_bitreverse32
__builtin_bitreverse64
__builtin_rotateleft8
UcUcUc
__builtin_rotateleft16
UsUsUs
__builtin_rotateleft32
UiUiUi
__builtin_rotateleft64
ULLiULLiULLi
__builtin_rotateright8
__builtin_rotateright16
__builtin_rotateright32
__builtin_rotateright64
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_assume_aligned
v*vC*z.
__builtin_bcmp
iv*v*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
ivC*vC*z
__builtin_memcpy
v*v*vC*z
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_wcschr
w*wC*w
__builtin_wcscmp
iwC*wC*
__builtin_wcslen
zwC*
__builtin_wcsncmp
iwC*wC*z
__builtin_wmemchr
w*wC*wz
__builtin_wmemcmp
__builtin_wmemcpy
w*w*wC*z
__builtin_wmemmove
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin___clear_cache
vc*c*
__builtin_flt_rounds
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_thread_pointer
__builtin_launder
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin_dynamic_object_size
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_unpredictable
__builtin_expect
LiLiLi
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_trap
__builtin_debugtrap
__builtin_unreachable
__builtin_shufflevector
__builtin_convertvector
__builtin_matrix_insert
__builtin_matrix_extract
__builtin_matrix_subtract
__builtin_matrix_add
__builtin_matrix_multiply
__builtin_matrix_transpose
__builtin_matrix_scalar_multiply
__builtin_matrix_column_load
__builtin_matrix_column_store
__builtin_alloca
__builtin_alloca_with_align
v*zIz
__builtin_call_with_static_chain
__sync_fetch_and_add
__sync_fetch_and_add_1
ccD*c.
__sync_fetch_and_add_2
ssD*s.
__sync_fetch_and_add_4
iiD*i.
__sync_fetch_and_add_8
LLiLLiD*LLi.
__sync_fetch_and_add_16
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_or
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_and
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_xor
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_nand_and_fetch
__sync_nand_and_fetch_1
__sync_nand_and_fetch_2
__sync_nand_and_fetch_4
__sync_nand_and_fetch_8
__sync_nand_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
__sync_val_compare_and_swap_1
ccD*cc.
__sync_val_compare_and_swap_2
ssD*ss.
__sync_val_compare_and_swap_4
iiD*ii.
__sync_val_compare_and_swap_8
LLiLLiD*LLiLLi.
__sync_val_compare_and_swap_16
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
izvCD*
__atomic_is_lock_free
__opencl_atomic_init
__opencl_atomic_load
__opencl_atomic_store
__opencl_atomic_exchange
__opencl_atomic_compare_exchange_strong
__opencl_atomic_compare_exchange_weak
__opencl_atomic_fetch_add
__opencl_atomic_fetch_sub
__opencl_atomic_fetch_and
__opencl_atomic_fetch_or
__opencl_atomic_fetch_xor
__opencl_atomic_fetch_min
__opencl_atomic_fetch_max
__atomic_fetch_min
__atomic_fetch_max
__sync_synchronize
__sync_fetch_and_min
iiD*i
__sync_fetch_and_max
__sync_fetch_and_umin
UiUiD*Ui
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
_alloca
__annotation
wC*.
__assume
_bittest
UcNiC*Ni
_bittestandcomplement
UcNi*Ni
_bittestandreset
_bittestandset
_bittest64
UcWiC*Wi
_bittestandcomplement64
UcWi*Wi
_bittestandreset64
_bittestandset64
_byteswap_ushort
stdlib.h
_byteswap_ulong
UNiUNi
_byteswap_uint64
__debugbreak
__exception_code
_exception_code
__exception_info
_exception_info
__abnormal_termination
_abnormal_termination
__GetExceptionInfo
_InterlockedAnd8
ccD*c
_InterlockedAnd16
ssD*s
_InterlockedAnd
NiNiD*Ni
_InterlockedCompareExchange8
ccD*cc
_InterlockedCompareExchange16
ssD*ss
_InterlockedCompareExchange
NiNiD*NiNi
_InterlockedCompareExchange64
LLiLLiD*LLiLLi
_InterlockedCompareExchangePointer
v*v*D*v*v*
_InterlockedCompareExchangePointer_nf
_InterlockedDecrement16
ssD*
_InterlockedDecrement
NiNiD*
_InterlockedExchange
_InterlockedExchange8
_InterlockedExchange16
_InterlockedExchangeAdd8
_InterlockedExchangeAdd16
_InterlockedExchangeAdd
_InterlockedExchangePointer
v*v*D*v*
_InterlockedExchangeSub8
_InterlockedExchangeSub16
_InterlockedExchangeSub
_InterlockedIncrement16
_InterlockedIncrement
_InterlockedOr8
_InterlockedOr16
_InterlockedOr
_InterlockedXor8
_InterlockedXor16
_InterlockedXor
_interlockedbittestandreset
UcNiD*Ni
_interlockedbittestandreset64
UcWiD*Wi
_interlockedbittestandreset_acq
_interlockedbittestandreset_nf
_interlockedbittestandreset_rel
_interlockedbittestandset
_interlockedbittestandset64
_interlockedbittestandset_acq
_interlockedbittestandset_nf
_interlockedbittestandset_rel
__noop
__lzcnt16
__lzcnt
__lzcnt64
UWiUWi
__popcnt16
__popcnt
__popcnt64
_ReturnAddress
_rotl8
_rotl16
UsUsUc
_rotl
UiUii
_lrotl
UNiUNii
_rotl64
UWiUWii
_rotr8
_rotr16
_rotr
_lrotr
_rotr64
__va_start
vc**.
__fastfail
_setjmpex
setjmpex.h
va_start
stdarg.h
va_end
va_copy
abort
calloc
v*zz
exit
_Exit
realloc
v*v*z
strtod
dcC*c**
strtof
fcC*c**
strtold
LdcC*c**
strtol
LicC*c**i
strtoll
LLicC*c**i
strtoul
ULicC*c**i
strtoull
ULLicC*c**i
memcpy
string.h
memcmp
memmove
strcpy
strncpy
strcmp
strncmp
strcat
strncat
strxfrm
zc*cC*z
memchr
strchr
strcspn
strpbrk
strrchr
strspn
strstr
strtok
memset
strerror
strlen
printf
fp:0:
stdio.h
fprintf
fp:1:
snprintf
fp:2:
sprintf
ic*cC*.
vprintf
icC*a
fP:0:
vfprintf
iP*cC*a
fP:1:
vsnprintf
fP:2:
vsprintf
scanf
icC*R.
fs:0:
fscanf
iP*RcC*R.
fs:1:
sscanf
icC*RcC*R.
vscanf
icC*Ra
fS:0:
vfscanf
iP*RcC*Ra
fS:1:
vsscanf
icC*RcC*Ra
fopen
P*cC*cC*
fread
zv*zzP*
fwrite
zvC*zzP*
isalnum
ctype.h
isalpha
isblank
iscntrl
isdigit
isgraph
islower
isprint
ispunct
isspace
isupper
isxdigit
tolower
toupper
wcschr
wchar.h
wcscmp
wcslen
wcsncmp
wmemchr
wmemcmp
wmemcpy
wmemmove
setjmp
setjmp.h
longjmp
alloca
stpcpy
stpncpy
strdup
strndup
index
strings.h
rindex
bzero
strcasecmp
strncasecmp
_exit
unistd.h
vfork
_setjmp
__sigsetjmp
iSJi
sigsetjmp
setjmp_syscall
savectx
qsetjmp
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
objc_msgSendSuper
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc_sync_enter
objc/objc-sync.h
objc_sync_exit
__builtin_objc_memmove_collectable
NSLog
Foundation/NSObjCRuntime.h
NSLogv
atan2
atan2f
atan2l
labs
llabs
copysign
copysignf
copysignl
fabs
fabsf
fabsl
finite
finitef
finitel
__finite
__finitef
__finitel
fmod
fmodf
fmodl
frexp
frexpf
frexpl
ldexp
ldexpf
ldexpl
modf
modff
modfl
nanf
nanl
powf
powl
acos
acosf
acosl
acosh
acoshf
acoshl
asin
asinf
asinl
asinh
asinhf
asinhl
atan
atanf
atanl
atanh
atanhf
atanhl
cbrt
cbrtf
cbrtl
ceil
ceilf
ceill
cosf
cosl
cosh
coshf
coshl
erff
erfl
erfc
erfcf
erfcl
expf
expl
exp2
exp2f
exp2l
expm1
expm1f
expm1l
fdim
fdimf
fdiml
floorf
floorl
fmaf
fmal
fmax
fmaxf
fmaxl
fmin
fminf
fminl
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
logf
logl
log10
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nearbyint
nearbyintf
nearbyintl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
remquo
remquof
remquol
rint
rintf
rintl
round
roundf
roundl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
sinf
sinl
sinh
sinhf
sinhl
sqrt
sqrtf
sqrtl
tanf
tanl
tanh
tanhf
tanhl
tgamma
tgammaf
tgammal
trunc
truncf
truncl
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__sinpi
__sinpif
__cospi
__cospif
__tanpi
__tanpif
__exp10
__exp10f
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_annotation
__builtin_assume
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_add_overflow
__builtin_sub_overflow
__builtin_mul_overflow
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__builtin_operator_new
__builtin_operator_delete
__builtin_char_memchr
c*cC*iz
__builtin_dump_struct
ivC*v*
__builtin___get_unsafe_stack_start
__builtin___get_unsafe_stack_bottom
__builtin___get_unsafe_stack_top
__builtin___get_unsafe_stack_ptr
__builtin_nontemporal_store
__builtin_nontemporal_load
__builtin_coro_resume
__builtin_coro_destroy
__builtin_coro_done
__builtin_coro_promise
v*v*IiIb
__builtin_coro_size
__builtin_coro_frame
__builtin_coro_noop
__builtin_coro_free
__builtin_coro_id
v*Iiv*v*v*
__builtin_coro_alloc
__builtin_coro_begin
__builtin_coro_end
bv*Ib
__builtin_coro_suspend
__builtin_coro_param
bv*v*
__builtin_ptrauth_strip
v*v*i
__builtin_ptrauth_blend_discriminator
zv*i
__builtin_ptrauth_sign_constant
v*v*iv*
__builtin_ptrauth_sign_unauthenticated
__builtin_ptrauth_sign_generic_data
zv*v*
__builtin_ptrauth_auth_and_resign
v*v*iv*iv*
__builtin_ptrauth_auth
__builtin_ptrauth_string_discriminator
icC*
read_pipe
write_pipe
reserve_read_pipe
reserve_write_pipe
commit_write_pipe
commit_read_pipe
sub_group_reserve_read_pipe
sub_group_reserve_write_pipe
sub_group_commit_read_pipe
sub_group_commit_write_pipe
work_group_reserve_read_pipe
work_group_reserve_write_pipe
work_group_commit_read_pipe
work_group_commit_write_pipe
get_pipe_num_packets
get_pipe_max_packets
enqueue_kernel
get_kernel_work_group_size
get_kernel_preferred_work_group_size_multiple
get_kernel_max_sub_group_size_for_ndrange
get_kernel_sub_group_count_for_ndrange
to_global
to_local
to_private
__builtin_store_half
vdh*
__builtin_store_halff
vfh*
__builtin_load_half
dhC*
__builtin_load_halff
fhC*
__builtin_os_log_format_buffer_size
zcC*.
p:0:nut
__builtin_os_log_format
v*v*cC*.
p:0:nt
omp_is_initial_device
__xray_customevent
vcC*z
__xray_typedevent
vzcC*z
__builtin_ms_va_start
vc*&.
__builtin_ms_va_end
vc*&
__builtin_ms_va_copy
vc*&c*&
10.0
sm_20
sm_21
sm_30
sm_32
sm_35
sm_37
sm_50
sm_52
sm_53
sm_60
sm_61
sm_62
sm_70
sm_72
sm_75
gfx600
gfx601
gfx700
gfx701
gfx702
gfx703
gfx704
gfx801
gfx802
gfx803
gfx810
gfx900
gfx902
gfx904
gfx906
gfx909
compute_20
compute_30
compute_32
compute_35
compute_37
compute_50
compute_52
compute_53
compute_60
compute_61
compute_62
compute_70
compute_72
compute_75
compute_amdgcn
'nonnull'
'_Nonnull'
'nullable'
'_Nullable'
'null_unspecified'
'_Null_unspecified'
diagnostic state at 
<unknown 
ignored
fatal
 pragma
 no-error
 no-fatal
 overruled
File 
 <FileID 
 has_local_transitions
: state 
identifier
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
OpenMP Issue
Inline Assembly Issue
Modules Issue
Coroutines Issue
AST Deserialization Issue
Backend Issue
Refactoring Continuation Issue
API Notes Issue
Related Result Type Issue
Rename Issue
AST Serialization Issue
Nullability Issue
Generics Issue
User-Defined Issue
Refactoring Invocation Issue
VTable ABI Issue
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Instrumentation Issue
Unused Entity Issue
NSInvocation's %0 is not safe to be used with an object with ownership other than __unsafe_unretained
invalid type %0 in asm input for constraint '%1'
%0 attribute cannot be applied to types
uuid attribute contains a malformed GUID
cannot open file '%0': %1
only special member functions may be defaulted
only functions can have deleted definitions
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute|for %select{language|source container}1 name in 'external_source_symbol' attribute}0
file '%0' modified since it was first processed
compile with '-ffixed-point' to enable fixed point types
'%0' is invalid in friend declarations
integer literal is too large to be represented in any %select{signed |}0integer type
character literal with user-defined suffix cannot be used here
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
'%0' can only be used if the target supports the mfhc1 and mthc1 instructions
module '%0' is needed but has not been provided, and implicit use of module files is disabled
build a shadowed submodule '%0'
cyclic dependency in module '%0': %1
no handler registered for module format '%0'
%select{|umbrella }0header '%1' not found
could not build module '%0'
module '%0' not found
error in loading module '%0' from prebuilt module path
import of shadowed module '%0'
module '%0' %select{is incompatible with|requires}1 feature '%2'
[rewriter] %0
nullability specifier %0 conflicts with existing specifier %1
directive '#pragma omp %0' cannot contain more than one '%1' clause%select{| with '%3' name modifier| with 'source' dependence}2
OpenCL %select{C|C++}0 version %1 does not support the '%2' %select{type qualifier|storage class specifier}3
'%0' is not supported in OpenCL C++
option '%0' cannot be specified on this target
option '%0' cannot be specified with '%1'
option '%0' cannot be specified without '%1'
redefinition of parameter %0
%0 only allowed in __except block or filter expression
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
ABI '%0' is not supported on CPU '%1'
ABI '%0' is not supported for '%1'
micromips is not supported for target CPU '%0'
execute only is not supported for the %0 sub-architecture
the '%0' unit is not supported with this instruction set
the %0 sub-architecture does not support unaligned accesses
this value is too large for this fixed point type
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
conversion between fixed point and %0 is not yet supported
no analyzer checkers are associated with '%0'
'%0' can only be used with the '%1' ABI
%0 byte order mark detected in '%1', but encoding is not supported
must use '%1' tag to refer to type %0%select{| in this scope}2
'long long' is an extension when C99 mode is not enabled
'diagnose_if' is a clang extension
'enable_if' is a clang extension
'long long' is a C++11 extension
duplicate '%0' declaration specifier
integer literal is too large to be represented in a signed integer type, interpreting as unsigned
integer literal is too large to be represented in type 'long' and is subject to undefined behavior under C++98, interpreting as 'unsigned long'; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
variadic templates are a C++11 extension
too many errors emitted, stopping now
also found
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
use -analyzer-disable-all-checks to disable all static analyzer checkers
definition of %0 is not complete until the closing '}'
using
valid target CPU values are: %0
could not acquire lock file for module '%0': %1
timed out waiting to acquire lock file for module '%0'
private API notes file for module '%0' should be named '%0_private.apinotes', not '%1'
[rewriter] call returns pointer to GC managed memory; it will become unmanaged in ARC
conflicting nullability specifier on parameter types, %0 conflicts with existing specifier %1
conflicting nullability specifier on return types, %0 conflicts with existing specifier %1
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
duplicate definition of category %1 on interface %0
redeclaration of method parameter %0
redefinition of method parameter %0
duplicate nullability specifier %0
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C89; this literal will %select{have type 'long long'|be ill-formed}0 in C99 onwards
integer literal is too large to be represented in type 'long', interpreting as 'unsigned long' per C++98; this literal will %select{have type 'long long'|be ill-formed}0 in C++11 onwards
unknown attribute %0 ignored
invalid input for analyzer-config option '%0', that expects %1 value
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
unknown analyzer-config '%0'
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
Architecture '%0' does not support '%1' execution mode
CPU '%0' does not support '%1' execution mode
'%0' not supported, please use -iquote instead
cannot deduce implicit triple value for -Xopenmp-target, specify triple using -Xopenmp-target=<triple>
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
-fembed-bitcode is not supported on versions of iOS prior to 6.0
cannot read configuration file '%0'
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0', %1
the clang compiler does not support -pg option on %select{Darwin|versions of OS X 10.9 and later}0
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
compilation database '%0' could not be opened: %1
configuration file '%0' does not exist
configuration file '%0' cannot be found
conflicting deployment targets, both '%0' and '%1' are present in environment
Unsupported CUDA gpu architecture: %0
unsupported architecture '%0' for host compilation.
GPU arch %0 is supported by CUDA versions between %1 and %2 (inclusive), but installation at %3 is %4.  Use --cuda-path to specify a different CUDA install, pass a different GPU arch with --cuda-gpu-arch, or pass --no-cuda-version-check.
defsym must be of the form: sym=value: %0
Value is not an integer: %0
option '/Zc:dllexportInlines-' is ABI-changing and not compatible with '/fallback'
no more than one option '--config' is allowed
-emit-llvm cannot be used when linking
The option -fopenmp-targets must be used in conjunction with a -fopenmp option compatible with offloading, please use -fopenmp=libomp or -fopenmp=libiomp5.
failing because %select{environment variable 'FORCE_CLANG_DIAGNOSTICS_CRASH' is set|'-gen-reproducer' is used}0
GNUstep Objective-C runtime version %0 incompatible with target binary format
invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid -Xopenmp-target argument: '%0', options requiring arguments are unsupported
invalid arch name '%0'
invalid argument '%0' to -fdebug-prefix-map
invalid CoreFoundation Runtime ABI '%0'; must be one of 'objc', 'standalone', 'swift', 'swift-5.0', 'swift-4.2', 'swift-4.1'
invalid Darwin version number: %0
invalid output type '%0' for use with gcc tool
-mhvx-length is not supported without a -mhvx/-mhvx= flag
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid linker name in argument '%0'
invalid float ABI '%0'
invalid thread pointer reading mode '%0'
OpenMP target is invalid: '%0'
cannot use '%0' output with multiple -arch options
invalid PGO instrumentor in argument '%0'
invalid option '%0' not of the form <from-file>;<to-file>
invalid arch name '%0', %1
invalid arch name '%0', %1 '%2'
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
invalid thread model '%0' in '%1' for this target
invalid value '%1' in '%0'
invalid version number in '%0'
LTO requires -fuse-ld=lld
malformed sanitizer blacklist: '%0'
option '-MG' requires '-M' or '-MM'
missing argument to '%0'
argument to '%0' is missing (expected %1 value%s1)
Mixed Cuda and HIP compilation is not supported.
header file '%0' input type '%1' does not match type of prior input in module compilation; use '-x %2' to override
option '-fmodules-validate-once-per-build-session' requires '-fbuild-session-timestamp=<seconds since Epoch>' or '-fbuild-session-file=<file>'
option '--config' is not allowed inside configuration file
'%0': unable to use AST files with this tool
cannot find CUDA installation.  Provide its path via --cuda-path, or pass -nocudainc to build without CUDA includes.
cannot find libdevice for %0. Provide path to different CUDA installation via --cuda-path, or pass -nocudalib to build without linking with libdevice.
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
[no]neon is not accepted as modifier, please use [no]simd instead
no such file or directory: '%0'
The provided host compiler IR file '%0' is required to generate code for OpenMP target regions but cannot be found.
The target '%0' is not a supported OpenMP host target.
%0 in '%1'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
target '%0' does not support native pointer authentication
ROPI is not compatible with c++
embedded and GOT-based position independence are incompatible
unsupported '-target-variant' value '%0'; use 'ios-macabi' instead
-ftrivial-auto-var-init=zero hasn't been enabled. Enable it at your own peril for benchmarking purpose only with -enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
unable to remove file: %0
unable to set working directory: %0
unknown argument: '%0'
unknown argument '%0', did you mean '%1'?
unknown '-mindirect-jump=' option '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
use /Tc or /Tp to set input type for standard input
%0 is not supported with -fembed-bitcode
'-mindirect-jump=%0' is unsupported with the '%1' architecture
unsupported value '%0' for -linker option
position-independent code requires '-mabicalls'
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported option '%0', did you mean '%1'?
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
invalid branch protection option '%0' in '%1'
32-bit targets are not supported when building for the 'UIKit for Mac' macOS target
there is no external assembler that can be used on this platform
-fobjc-weak is not supported on the current deployment target
-fobjc-weak is not supported in Objective-C garbage collection
the target architecture '%0' is not supported by the target '%1'
-ftest-module-file-extension argument '%0' is not of the required form 'blockname:major:minor:hashed:user info'
AddressSanitizer doesn't support linking with debug runtime libraries yet
diagnostic msg: %0
was searched for in the directory: %0
The last /TC or /TP option takes precedence over earlier instances
use '%0'%select{| or '%3'|, '%3', or '%4'|, '%3', '%4', or '%5'}2 for '%1' standard
-verify prefixes must start with a letter and contain only alphanumeric characters, hyphens, and underscores
Use '--' to treat subsequent arguments as filenames
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
cannot compress debug sections (zlib not installed)
unknown platform, assuming -mfloat-abi=%0
compiler_rt-static.a is being deprecated, please use -fapple-link-rtlib instead. Clang will substitute -lcompiler_rt-static with libclang_rt.a
SDK settings were ignored as 'SDKSettings.json' could not be parsed
argument '%0' is deprecated, use '%1' instead
libstdc++ is deprecated; move to libc++%select{ with a minimum deployment target of %1|}0
argument '%0' requires profile-guided optimization information
implicitly disabling vptr sanitizer because rtti wasn't enabled
joined argument expects additional value: '%0'
-fexperimental-isel support for the '%0' architecture is incomplete
-fexperimental-isel support is incomplete for this architecture at the current optimization level
option '-ffine-grained-bitfield-accesses' cannot be enabled together with a sanitizer; flag ignored
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
falling back to %0
The '%0' architecture does not support -moutline; flag ignored
unable to find a Visual Studio installation; try running Clang from a developer command prompt
the object size sanitizer has no effect at -O0, but is explicitly enabled: %0
The OpenMP offloading target '%0' is similar to target '%1' already specified - will be ignored.
No library '%0' found in the default clang lib directory or in LIBRARY_PATH. Expect degraded performance due to no inlining of runtime functions on target devices.
optimization level '%0' is not supported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
option '%0' was ignored by the PS4 toolchain, using '-fPIC'
environment variable SCE_ORBIS_SDK_DIR is set, but points to invalid or nonexistent directory '%0'
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
unable to find %0 directory, expected to be in '%1'
unknown argument ignored in clang-cl: '%0'
unknown argument ignored in clang-cl '%0' (did you mean '%1'?)
debug information option '%0' is not supported for target '%1'
ignoring '-mgpopt' option as it cannot be used with %select{|the implicit usage of }0-mabicalls
ignoring '-mlong-calls' option as it is not currently supported with %select{|the implicit usage of }0-mabicalls
optimization flag '%0' is not supported for target '%1'
ignoring '%0' option as it cannot be used with %select{implicit usage of|}1 -mabicalls and the N64 ABI
argument unused during compilation: '%0'
auto-vectorization requires HVX, use -mhvx to enable it
support for '/Yc' with more than one source file not implemented yet; flag ignored
support for '/Yc' and '/Yu' with different filenames not implemented yet; flags ignored
support for '%0' without a corresponding /FI flag not implemented yet; flag ignored
the flag '%0' has been deprecated and will be ignored
optimization flag '%0' is not supported
ignoring invalid -ftabstop value '%0', using default value %1
using sysroot for '%0' but targeting '%1'
invalid iOS deployment version '%0', iOS 10 is the maximum deployment target for 32-bit targets
no such sysroot directory: '%0'
'/U%0' treated as the '/U' option
ignoring '-mabs=2008' option because the '%0' architecture does not support it
ignoring '-mabs=legacy' option because the '%0' architecture does not support it
ignoring '-mcompact-branches=' option because the '%0' architecture does not support it
ignoring '-mnan=2008' option because the '%0' architecture does not support it
ignoring '-mnan=legacy' option because the '%0' architecture does not support it
%select{alias|ifunc}0 must point to a defined %select{variable or |}1function
%0 needs target feature %1
%select{alias|ifunc}0 definition is part of a cycle
definition with same mangled name '%0' as another definition
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
invalid value '%1' in '%0'; alignment must be a power of 2
cannot locate code-completion file %0
invalid exception model '%0' for target '%1'
unable to find plugin '%0'
invalid wchar_t type '%0'; must be one of 'char', 'short', 'int'
no suitable precompiled header file found in directory '%0'
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to change standard output to binary
unable to create target: '%0'
unable to interface with target machine
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
always_inline function %1 requires target feature '%2', but would be inlined into function %0 that is compiled without support for '%2'
header module compilation requires '-fmodules' or '-fmodules-ts'
ifunc resolver function must return a pointer
inline asm is used in the module with -fno-gnu-inline-asm
invalid virtual filesystem overlay file '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
virtual filesystem overlay file '%0' not found
module compilation requires '-fmodules'
cannot create includes file for module %0: %1
unexpected module header file input '%0'
module header file '%0' not found
module interface compilation requires '-fmodules-ts'
module map file '%0' not found
file '%0' specified by '-fmodules-embed-file=' not found
-fapinotes was provided without -fmodules-cache-path=<directory>
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
test module file extension '%0' has different version (%1.%2) than expected (%3.%4)
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
could not determine the original source location for %0:%1:%2
instantiated into assembly here
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
module imported here
module defined here
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop. If the arrays will always be independent specify '#pragma clang loop vectorize(assume_safety)' before the loop or provide the '__restrict__' qualifier with the independent array arguments. Erroneous results will occur if these options are incorrectly applied!
%0; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'.
producing index data for module file '%0'
building module '%0' as '%1'
finished building module '%0'
%select{alias|ifunc}2 will always resolve to %0 even if weak definition of %1 is overridden
%select{alias|ifunc}1 will not be in section '%0' but in the same section as the %select{aliasee|resolver}2
%select{large|misaligned}0 atomic operation may incur significant performance penalty
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
stack frame size of %0 bytes in %q1
macro '%0' contains embedded newline; text after the newline is ignored
overriding the module target triple with %0
unable to open file %0 for serializing diagnostics (%1)
unable to merge a subprocess's serialized diagnostics
unable to open statistics output file '%0': '%1'
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
module file %0 cannot be loaded due to a configuration mismatch with the current compilation
no submodule named %0 in module '%1'; using top level '%2'
OpenCL version %0 does not support the option '%1'
profile data may be incomplete: of %0 function%s0, %1 %plural{1:has|:have}1 no data
profile data may be out of date: of %0 function%s0, %1 %plural{1:has|:have}1 mismatched data that will be ignored
no profile data available for file "%0"
include path for stdlibc++ headers not found; pass '-stdlib=libc++' on the command line to use the libc++ standard library instead
unknown %select{warning|remark}0 option '%1'%select{|; did you mean '%3'?}2
unknown %0 warning specifier: '%1'
file '%0' has been modified since the AST file '%1' was built
file '%0' has been modified since the module file '%1' was built
input is not a PCH file: '%0'
file '%0' has been modified since the precompiled header '%1' was built
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
module '%0' %select{in|imported by}4 AST file '%1' found in a different module map file (%2) than when the importing AST file was built (%3)
module '%0' in AST file '%1' %select{(imported by AST file '%2') |}4is not defined in any loaded module map file; maybe you need to load '%3'?
module '%0' was built in directory '%1' but now resides in directory '%2'
module '%0' %select{uses|does not use}1 additional module map '%2'%select{| not}1 used when the module was built
module '%0' is defined in both '%1' and '%2'
file '%1' is not a valid precompiled %select{PCH|module|AST}0 file
%select{PCH|module|AST}0 file '%1' not found%select{|: %3}2
AST file '%0' was not built as a module
%select{PCH|module|AST}0 file '%1' is out of date and needs to be rebuilt%select{|: %3}2
cannot emit module %0: %select{size|mtime}1 must be explicitly specified for missing header file "%2"
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{%4 base %plural{1:class|:classes}4|%4 virtual base %plural{1:class|:classes}4|%ordinal4 base class with type %5|%ordinal4 %select{non-virtual|virtual}5 base class %6|%ordinal4 base class %5 with %select{public|protected|private|no}6 access specifier}3
%q0 has different definitions in different modules; %select{definition in module '%2' is here|defined here}1
instantiation of %q0 is different in different modules
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{enum that is %select{not scoped|scoped}4|enum scoped with keyword %select{struct|class}4|enum %select{without|with}4 specified type|enum with specified type %4|enum with %4 element%s4|%ordinal4 element has name %5|%ordinal4 element %5 %select{has|does not have}6 an initilizer|%ordinal4 element %5 has an initializer|}3
%q0 has different definitions in different modules; %select{definition in module '%2'|defined here}1 first difference is %select{return type is %4|%ordinal4 parameter with name %5|%ordinal4 parameter with type %5%select{| decayed from %7}6|%ordinal4 parameter with%select{out|}5 a default argument|%ordinal4 parameter with a default argument|function body}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{static assert with condition|static assert with message|static assert with %select{|no }4message|field %4|field %4 with type %5|%select{non-|}5bitfield %4|bitfield %4 with one width expression|%select{non-|}5mutable field %4|field %4 with %select{no|an}5 initalizer|field %4 with an initializer|%select{method %5|constructor|destructor}4|%select{method %5|constructor|destructor}4 is %select{not deleted|deleted}6|%select{method %5|constructor|destructor}4 is %select{not defaulted|defaulted}6|%select{method %5|constructor|destructor}4 is %select{|pure }6%select{not virtual|virtual}7|%select{method %5|constructor|destructor}4 is %select{not static|static}6|%select{method %5|constructor|destructor}4 is %select{not volatile|volatile}6|%select{method %5|constructor|destructor}4 is %select{not const|const}6|%select{method %5|constructor|destructor}4 is %select{not inline|inline}6|%select{method %5|constructor|destructor}4 that has %6 parameter%s6|%select{method %5|constructor|destructor}4 with %ordinal6 parameter of type %7%select{| decayed from %9}8|%select{method %5|constructor|destructor}4 with %ordinal6 parameter named %7|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with%select{out|}7 a default argument|%select{method %5|constructor|destructor}4 with %ordinal6 parameter with a default argument|%select{method %5|constructor|destructor}4 with %select{no |}6template arguments|%select{method %5|constructor|destructor}4 with %6 template argument%s6|%select{method %5|constructor|destructor}4 with %6 for %ordinal7 template argument|%select{method %5|constructor|destructor}4 with %select{no body|body}6|%select{method %5|constructor|destructor}4 with body|%select{typedef|type alias}4 name %5|%select{typedef|type alias}4 %5 with underlying type %6|data member with name %4|data member %4 with type %5|data member %4 with%select{out|}5 an initializer|data member %4 with an initializer|data member %4 %select{is constexpr|is not constexpr}5|friend %select{class|function}4|friend %4|friend function %4|function template %4 with %5 template parameter%s5|function template %4 with %ordinal5 template parameter being a %select{type|non-type|template}6 template parameter|function template %4 with %ordinal5 template parameter %select{with no name|named %7}6|function template %4 with %ordinal5 template parameter with %select{no |}6default argument|function template %4 with %ordinal5 template parameter with default argument %6|function template %4 with %ordinal5 template parameter with one type|function template %4 with %ordinal5 template parameter %select{not |}6being a template parameter pack|}3
%q0 %select{with definition in module '%2'|defined here}1 has different definitions in different modules; first difference is this %select{||||static assert|field|method|type alias|typedef|data member|friend declaration|unexpected decl}3
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
%q0 has different definitions in different modules; first difference is %select{definition in module '%2'|defined here}1 found %select{unnamed template parameter|template parameter %4|template parameter with %select{no |}4default argument|template parameter with default argument}3
%0 is currently enabled, but was not in the PCH file
PCH file built from a different branch (%0) than the compiler (%1)
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
PCH was compiled with module cache path '%0', but the path is currently '%1'
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file was|current translation unit is}0 compiled with the target feature '%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
PCH file contains compiler errors
in first definition, possible difference is here
consider adding '%0' to the header search path
after modifying system headers, please delete the module cache at '%0'
imported by %select{|module '%2' in }1'%0'
but in '%0' found %select{%2 base %plural{1:class|:classes}2|%2 virtual base %plural{1:class|:classes}2|%ordinal2 base class with different type %3|%ordinal2 %select{non-virtual|virtual}3 base class %4|%ordinal2 base class %3 with %select{public|protected|private|no}4 access specifier}1
definition in module '%0' is here
but in '%0' found %select{enum that is %select{not scoped|scoped}2|enum scoped with keyword %select{struct|class}2|enum %select{without|with}2 specified type|enum with specified type %2|enum with %2 element%s2|%ordinal2 element has name %3|%ordinal2 element %3 %select{has|does not have}4 an initializer|%ordinal2 element %3 has different initializer|}1
but in '%0' found %select{different return type %2|%ordinal2 parameter with name %3|%ordinal2 parameter with type %3%select{| decayed from %5}4|%ordinal2 parameter with%select{out|}3 a default argument|%ordinal2 parameter with a different default argument|a different body}1
but in '%0' found %select{end of class|public access specifier|private access specifier|protected access specifier|static assert|field|method|type alias|typedef|data member|friend declaration|function template}1
but in '%0' found %select{static assert with different condition|static assert with different message|static assert with %select{|no }2message|field %2|field %2 with type %3|%select{non-|}3bitfield %2|bitfield %2 with different width expression|%select{non-|}3mutable field %2|field %2 with %select{no|an}3 initializer|field %2 with a different initializer|%select{method %3|constructor|destructor}2|%select{method %3|constructor|destructor}2 is %select{not deleted|deleted}4|%select{method %3|constructor|destructor}2 is %select{not defaulted|defaulted}4|%select{method %3|constructor|destructor}2 is %select{|pure }4%select{not virtual|virtual}5|%select{method %3|constructor|destructor}2 is %select{not static|static}4|%select{method %3|constructor|destructor}2 is %select{not volatile|volatile}4|%select{method %3|constructor|destructor}2 is %select{not const|const}4|%select{method %3|constructor|destructor}2 is %select{not inline|inline}4|%select{method %3|constructor|destructor}2 that has %4 parameter%s4|%select{method %3|constructor|destructor}2 with %ordinal4 parameter of type %5%select{| decayed from %7}6|%select{method %3|constructor|destructor}2 with %ordinal4 parameter named %5|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with%select{out|}5 a default argument|%select{method %3|constructor|destructor}2 with %ordinal4 parameter with a different default argument|%select{method %3|constructor|destructor}2 with %select{no |}4template arguments|%select{method %3|constructor|destructor}2 with %4 template argument%s4|%select{method %3|constructor|destructor}2 with %4 for %ordinal5 template argument|%select{method %3|constructor|destructor}2 with %select{no body|body}4|%select{method %3|constructor|destructor}2 with different body|%select{typedef|type alias}2 name %3|%select{typedef|type alias}2 %3 with different underlying type %4|data member with name %2|data member %2 with different type %3|data member %2 with%select{out|}3 an initializer|data member %2 with a different initializer|data member %2 %select{is constexpr|is not constexpr}3|friend %select{class|function}2|friend %2|friend function %2|function template %2 with %3 template parameter%s3|function template %2 with %ordinal3 template paramter being a %select{type|non-type|template}4 template parameter|function template %2 with %ordinal3 template parameter %select{with no name|named %5}4|function template %2 with %ordinal3 template parameter with %select{no |}4default argument|function template %2 with %ordinal3 template parameter with default argument %4|function template %2 with %ordinal3 template parameter with different type|function template %2 with %ordinal3 template parameter %select{not |}4being a template parameter pack|}1
but in '%0' found %select{||||different static assert|different field|different method|different type alias|different typedef|different data member|different friend declaration|another unexpected decl}1
definition has no member %0
declaration of %0 does not match
but in '%0' found %select{unnamed template parameter %2|template parameter %2|template parameter with %select{no |}2default argument|template parameter with different default argument}1
please rebuild precompiled header '%0'
'%0' required by '%1'
in second definition, possible difference is here
importing module '%0'%select{| into '%3'}2 from '%1'
duplicate module file extension block name '%0'
module file '%0' was validated as a system module and is now being imported as a non-system module; any difference in diagnostic options will be ignored
%select{precompiled header|module}0 uses __DATE__ or __TIME__
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
%select{hex|octal}0 escape sequence out of range
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
hexadecimal floating %select{constant|literal}0 requires %select{an exponent|a significand}1
\%0 used with no following hex digits
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in %select{decimal|octal|binary}1 constant
invalid suffix '%0' on %select{integer|floating}1 constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed in top-level modules
conflicting re-export of module '%0' as '%1' or '%2'
header attribute '%0' specified multiple times
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected a header attribute name ('size' or 'mtime')
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected integer literal as value for header attribute '%0'
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only top-level modules can be re-exported as public
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
skipping stray token
use declarations are only allowed in top-level modules
Unicode character literals may not contain multiple characters
non-ASCII characters are not allowed outside of literals and identifiers
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
editor placeholder in source file
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
already inside '#pragma clang assume_nonnull'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
'#pragma clang assume_nonnull' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected %select{identifier after '.' in |}0module name
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
function-like macro %0 is not defined
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> include; use "quotes" instead
'%0' file not found, did you mean '%1'?
cannot convert %0 token to an identifier
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot #include files inside '#pragma clang arc_cf_code_audited'
cannot #include files inside '#pragma clang assume_nonnull'
#include nested too deeply
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro name must be an identifier
invalid #ident directive
missing '(' following __VA_OPT__
macro name missing
missing ')' in macro parameter list
no module map available for module %0
submodule %0.%1 not declared in module map
no matching '#pragma clang module end' for this '#pragma clang module begin'
must specify '-fmodule-name=%0' to enter %select{|submodule of }1this module%select{ (current module is %3)|}2
no matching '#pragma clang module endbuild' for this '#pragma clang module build'
no matching '#pragma clang module begin' for this '#pragma clang module end'
nested parentheses not permitted in %0
variadic macros not supported in OpenCL
C++ operator %0 (aka %1) used as a macro name
#pragma hdrstop not seen while attempting to use precompiled header
remainder by zero in preprocessor expression
'%select{#|#@}0' is not followed by a macro parameter
'%0' required for precompiled header not found
#include of '%0' not seen while attempting to %select{create|use}1 precompiled header
not currently inside '#pragma clang arc_cf_code_audited'
not currently inside '#pragma clang assume_nonnull'
unterminated conditional directive
attempt to use a poisoned identifier
__VA_OPT__ cannot be nested within its own replacement tokens
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
module %0 does not depend on a module exporting '%1'
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
'##' cannot appear at end of __VA_OPT__ argument
'##' cannot appear at start of __VA_OPT__ argument
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++14 extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
pasting two '/' tokens into a '//' comment is a Microsoft extension
treating Ctrl-Z as end-of-file is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
multi-character character constant
hexadecimal floating constants are a C99 feature
hexadecimal floating literals are a C++17 feature
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
__VA_OPT__ can only appear in the expansion of a variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable Microsoft search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating %select{'|'"'}0 character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
submodule of top-level module '%0' implicitly imported here
cannot use initializer list at the beginning of a macro argument
macro %0 defined here
use 'framework module' to declare module '%0'
to match this '{'
to match this ']'
previously defined here
rename '%0' to ensure it can be found by name
expanding this definition of %0
other definition of %0
did not find header '%0' in framework '%1' (loaded from '%2')
entering module '%0' due to this pragma
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in %select{char|string}0 literal
null character ignored
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next with absolute path
#include_next in primary source file
invalid string literal, ignoring final '\'
macro is not used
non-portable path to file '%0'; specified path differs in case from file name on disk
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++14
digit separators are incompatible with C++ standards before C++14
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
unicode literals are incompatible with C++ standards before C++17
'<=>' operator is incompatible with C++ standards before C++2a
hexadecimal floating literals are incompatible with C++ standards before C++17
'<=>' is a single token in C++2a; add a space to avoid a change in behavior
'%0' is a keyword in C++2a
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
macro expansion producing 'defined' has undefined behavior
extraneous characters in character constant ignored
public framework header includes private framework header '%0'
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
skipping '%0' because module declaration of '%1' lacks the 'framework' qualifier
expected canonical name for private module '%0'
private submodule '%0' in private module map, expected top-level module
module '%0' already re-exported as '%1'
umbrella directory '%0' not found
unknown attribute '%0'
module '%0' conflicts with already-imported module '%1': %2
'/*' within block comment
include of non-modular header inside framework module '%0': '%1'
include of non-modular header inside module '%0': '%1'
ambiguous expansion of macro %0
%select{left|right}0 side of operator converted from negative value to unsigned: %1
expansion of date or time macro is not reproducible
integer overflow in preprocessor expression
#pragma hdrstop filename not supported, /Fp can be used to specify precompiled header filename
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
definition of macro %0 does not match definition in precompiled header
keyword is hidden by macro definition
macro name is a reserved identifier
ignoring redefinition of Objective-C qualifier macro
%0 is not defined, evaluates to 0
missing argument to debug command '%0'
unexpected debug command '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
double-quoted include "%0" in framework header, expected angle-bracketed instead
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
use of private header from outside its module: '%0'
treating Unicode character <U+%0> as identifier character rather than as '%1' symbol
identifier contains Unicode character <U+%0> that is invisible in some environments
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
alias declaration cannot be a pack expansion
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
declaration of anonymous %0 must be a definition
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
__asm used with no assembly instructions
'asm goto' constructs are not supported yet
cannot use %select{unicode|wide}0 string literal in 'asm'
@defs is not supported in Objective-C++
unexpected '@' in member specification
use of '@import' when modules are disabled
use of '@import' when C++ modules are disabled, consider using -fmodules and -fcxx-modules
%0 attribute cannot be applied to a module import
%0 attribute cannot be applied to a module
parentheses must be omitted if %0 attribute's argument list is empty
misplaced attributes; expected attributes here
an attribute list cannot appear here
expected a platform name here
unrecognized platform name %0
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macos'
version for '%0' already specified
'*' query has already been specified
must handle potential future platforms with '*'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
brackets are not allowed here; to declare an array, place the brackets after the %select{identifier|name}0
'_Noreturn' keyword must precede function declarator
template template parameter requires 'class' after the parameter list
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute %0 cannot have an argument list
attribute %0 cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
'%0' qualifier may not appear after the virtual specifier '%1'
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
'~' in destructor name should be after nested name specifier
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
use of empty enum
missing ',' between enumerators
unnamed enumeration must be a definition
unexpected end of exception specification
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected '::' after '__super'
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '#pragma omp end declare target'
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
expected a foldable binary operator in fold expression
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected member name or ';' after declaration specifiers; %0 is a keyword in Objective-C++
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected ')' or ',' after '%0'
expected a qualified name after 'typename'
expected ')' after '%0'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected 'this' following '*' in lambda capture list
expected statement
expected template
expected template parameter
expected %0; %1 is a keyword in Objective-C++
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of non-template %1 %2
export declaration cannot be empty
duplicate %0 clause in an 'external_source_symbol' attribute
expected 'language', 'defined_in', or 'generated_declaration'
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
operators in fold expression must be the same
'co_await' modifier can only be applied to range-based for loop
for range declaration must declare a variable
range-based for loop requires type for loop variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
GNU-style inline assembly is disabled
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from an in-class initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
nested namespace definition cannot be 'inline'
cannot use %select{dot|arrow}0 operator on a type
'%0' qualifier may not be applied to a reference
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
%select{'mutable'|'constexpr'}0 cannot appear multiple times in a lambda declarator
lambda requires '()' before %select{'mutable'|return type|attribute specifier|'constexpr'}0
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
expected %0 at end of module
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after '%select{module|import}0'
expected ';' after module name
module partition must be declared 'export'
'__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
property declaration cannot have an in-class initializer
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
parameter named %0 is missing
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
expected type parameter name
illegal interface qualifier
illegal visibility specification
missing '@end'
@implementation cannot have type parameters
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
properties are an Objective-C 2 feature
property name cannot be a bit-field
property requires fields to be named
protocol qualifiers must precede type arguments
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface, protocol, or implementation
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
function declaration is expected after 'declare simd' directive
unexpected '%0' clause, '%1' is specified already
unexpected '%0' clause, only 'to' or 'link' clauses expected
expected at least one clause on '#pragma omp %0' directive
expected identifier specifying the name of the 'omp critical' directive
expected ',' or ')' in '%0' %select{clause|directive}1
expected identifier or one of the following operators: '+', '-', '*', '&', '|', '^', '&&', or '||'
'#pragma omp %0' %select{|with '%2' clause }1cannot be an immediate substatement
missing map type
missing map type modifier
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive %select{|'#pragma omp %1'}0
expected an OpenMP directive
incorrect map type, expected one of 'to', 'from', 'tofrom', 'alloc', 'release', or 'delete'
incorrect map type modifier, expected 'always' or 'close'
^^ is a reserved operator in OpenCL
taking address of function is not allowed
OpenCL only supports 'opencl_unroll_hint' attribute on for, while, and do statements
'%0' is a reserved keyword in OpenCL C++
virtual functions are not supported in OpenCL C++
out-of-line constructor for %0 cannot have template arguments
'%0' keyword not permitted with interface types
missing parentheses around the size of parameter pack %0
duplicate attribute subject matcher '%0'
expected an attribute after '('
expected identifier that represents an attribute name
expected an attribute that is specified using the GNU, C++11 or '__declspec' syntax
expected '.' after pragma attribute namespace %0
expected 'push', 'pop', or '(' after '#pragma clang attribute'
expected an identifier that corresponds to an attribute subject rule
expected an identifier that corresponds to an attribute subject matcher sub-rule; '%0' matcher %select{does not support sub-rules|supports the following sub-rules: %2|}1
extra tokens after attribute in a '#pragma clang attribute push'
unexpected argument '%0' to '#pragma clang attribute'; expected 'push' or 'pop'
expected attribute subject set specifier 'apply_to'
more than one attribute specified in '#pragma clang attribute push'
namespace can only apply to 'push' or 'pop' directives
unknown attribute subject rule '%0'
%select{invalid use of|unknown}2 attribute subject matcher sub-rule '%0'; '%1' matcher %select{does not support sub-rules|supports the following sub-rules: %3}2
attribute %0 is not supported by '#pragma clang attribute'
force_cuda_host_device end pragma without matching force_cuda_host_device begin
expected '=' following '#pragma clang section %select{invalid|bss|data|rodata|text}0'
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
expected one of [bss|data|rodata|text] section kind in '#pragma %0'
'#pragma fp_contract' can only appear at file scope or at the start of a compound statement
unexpected argument '%0' to '#pragma clang fp %1'; expected 'on', 'fast' or 'off'
%select{invalid|missing}0 option%select{ %1|}0; expected contract
'#pragma clang fp' can only appear at file scope or at the start of a compound statement
invalid argument; expected 'enable'%select{|, 'full'}0%select{|, 'assume_safety'}1 or 'disable'
%select{invalid|missing}0 option%select{ %1|}0; expected vectorize, vectorize_width, interleave, interleave_count, unroll, unroll_count, or distribute
missing argument; expected %select{an integer value|'enable'%select{|, 'full'}1%select{|, 'assume_safety'}2 or 'disable'}0
missing argument to '#pragma %0'%select{|; expected %2}1
unexpected extra argument '%0' to '#pragma clang optimize'
unexpected argument '%0' to '#pragma clang optimize'; expected 'on' or 'off'
unexpected %0, expected to see one of %select{|'best_case', 'full_generality', }1'single_inheritance', 'multiple_inheritance', or 'virtual_inheritance'
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
range-based 'for' statement uses ':', not '='
expected parenthesized parameter pack name in 'sizeof...' expression
statement expression not allowed at file scope
'__super' cannot be used with a using declaration
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1
a static_assert declaration cannot be a template
cannot template a using %select{directive|declaration}0
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
unparsed tokens following type
typename is allowed for identifiers only
type name does not allow constexpr specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected '@' in program
unexpected ':' in nested name specifier; did you mean '::'?
module declaration can only appear at the top level
attributes cannot be specified on namespace alias
attributes cannot be specified on a nested namespace definition
@implementation declaration cannot be protocol qualified
unexpected namespace scope prior to decltype
unexpected ';' before %0
'template' keyword not permitted here
'%0' cannot be a part of nested name specifier; did you mean ':'?
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
'static' may not be used without an array size
'static' may not be used with an unspecified variable length array size
attribute with scope specifier cannot follow default scope specifier
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'__auto_type' is a GNU extension
default member initializer for bit-field is a C++2a extension
%0 is a C11-specific feature
generic selections are a C11-specific feature
_Noreturn functions are a C11-specific feature
_Static_assert is a C11-specific feature
compound literals are a C99-specific feature
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Clang extension
constexpr if is a C++17 extension
'constexpr' on lambda expressions is a C++17 extension
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++14 extension
ISO C++17 does not allow a decomposition group to be empty
%select{defaulted|deleted}0 function definitions are a C++11 extension
ISO C++17 does not allow dynamic exception specifications
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
pack fold expression is a C++17 extension
range-based for loop is a C++11 extension
range-based for loop initialization statements are a C++2a extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
'%select{if|switch}0' initialization statements are a C++17 extension
inline namespaces are a C++11 feature
inline nested namespace definition is a C++2a extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
enumeration types with a fixed underlying type are a Microsoft extension
'sealed' keyword is a Microsoft extension
use of multiple declarators in a single using declaration is a C++17 extension
nested namespace definition is a C++17 extension; define each namespace separately
in-class initialization of non-static data member is a C++11 extension
attributes on %select{a namespace|an enumerator}0 declaration are a C++17 extension
type nullability specifier %0 is a Clang extension
'%0' keyword is a C++11 extension
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
static_assert with no message is a C++17 extension
unknown pragma in STDC namespace
template template parameter using 'typename' is a C++17 extension
'__thread' before '%0'
default scope specifier for attributes is a C++17 extension
pack expansion of using declaration is a C++17 extension
__final is a GNU extension, consider using C++11 final
use -fbracket-depth=N to increase maximum nesting level
use '%0' instead
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
did you mean to use 'typename'?
insert ',' before '...' to silence this warning
place '...' %select{immediately before declared identifier|here}0 to declare a function parameter pack
preceding '...' declares a function parameter pack
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
omit the namespace to add attributes to the most-recently pushed attribute group
use the GNU '__attribute__' syntax
previous default generic association is here
'%0' casts have no effect when not using ARC
ignored %0 qualifier on asm
use of '@import' in framework header is discouraged, including this header requires -fmodules
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'unavailable' availability overrides all other availability information
use of C-style parameters in Objective-C method declarations is deprecated
nvcc does not allow '__%0__' to appear after '()' in lambdas
'decltype(auto)' type specifier is incompatible with C++ standards before C++14
use of right-shift operator ('>>') in template argument will require parentheses in C++11
constexpr if is incompatible with C++ standards before C++17
constexpr on lambda expressions is incompatible with C++ standards before C++17
pack fold expression is incompatible with C++ standards before C++17
%select{if|switch}0 initialization statements are incompatible with C++ standards before C++17
nested namespace definition is incompatible with C++ standards before C++17
attributes on %select{a namespace|an enumerator}0 declaration are incompatible with C++ standards before C++17
static_assert with no message is incompatible with C++ standards before C++17
template template parameter using 'typename' is incompatible with C++ standards before C++17
default scope specifier for attributes is incompatible with C++ standards before C++17
default member initializer for bit-field is incompatible with C++ standards before C++2a
range-based for loop initialization statements are incompatible with C++ standards before C++2a
inline nested namespace definition is incompatible with C++ standards before C++2a
use of multiple declarators in a single using declaration is incompatible with C++ standards before C++17
pack expansion using declaration is incompatible with C++ standards before C++17
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
%select{defaulted|deleted}0 function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
in-class initialization of non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
empty initialization statement of '%select{if|switch|range-based for}0' has no effect
dynamic exception specifications are deprecated
use same version number separators '_' or '.'; as in 'major[.minor[.subminor]]'
extra ';' after member function definition
meaningless 'volatile' on asm outside function
GCC does not allow an attribute in this position on a function declaration
GCC does not allow variable declarations in for loop initializers before C99
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
qualifiers after comma in declarator list are ignored
'...' in this location creates a C-style varargs function%select{, not a function parameter pack|}0
%0 used as the name of the previous parameter rather than as part of the selector
empty expression statement has no effect; remove unnecessary ';' to silence this warning
protocol has no object type specified; defaults to qualified 'id'
extra tokens at the end of '#pragma omp %0' are ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
OpenCL extension end directive mismatches begin directive - ignoring
'#pragma comment %0' ignored
expected action or ')' in '#pragma %0' - ignored
missing ':' after %0 - ignoring
missing ':' or ')' after %0 - ignoring
expected ',' in '#pragma %0'
expected identifier in '#pragma %0' - ignored
expected 'compiler', 'lib', 'user', or a string literal for the section name in '#pragma %0' - ignored
expected integer between %0 and %1 inclusive in '#pragma %2' - ignored
missing '(' after '#pragma %0' - ignoring
expected non-wide string literal in '#pragma %0'
expected %select{'enable', 'disable', 'begin' or 'end'|'disable'}0 - ignoring
expected ')' or ',' in '#pragma %0'
missing ')' after '#pragma %0' - ignoring
expected a stack label or a string literal for the section name in '#pragma %0' - ignored
expected a string literal for the section name in '#pragma %0' - ignored
expected push, pop or a string literal for the section name in '#pragma %0' - ignored
expected string literal in '#pragma %0' - ignoring
OpenCL extension %0 is core feature or supported optional core feature - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of #pragma clang force_cuda_host_device begin|end
'#pragma init_seg' is only supported when targeting a Microsoft environment
%0 is not a recognized builtin%select{|; consider including <intrin.h> to access non-builtin intrinsics}1
unknown action for '#pragma %0' - ignored
unexpected argument '%0' to '#pragma %1'%select{|; expected %3}2
unknown action '%1' for '#pragma %0' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
'#pragma optimize' is not supported
expected 'align' following '#pragma options' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
argument to '#pragma unroll' should not be in parentheses in CUDA C/C++
known but unsupported action '%1' for '#pragma %0' - ignored
unsupported OpenCL extension %0 - ignoring
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
pragma STDC FENV_ACCESS ON is not supported, ignoring pragma
'__clang__' is a predefined macro name, not an attribute scope specifier; did you mean '_Clang' instead?
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
type %0 has incompatible definitions in different translation units
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
ambiguous vftable component for %0 introduced via covariant thunks; this is an inherent limitation of the ABI
%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 pointer to element of array without known bound is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression
cannot refer to element %0 of %select{array of %2 element%plural{1:|:s}2|non-array object}1 in a constant expression
%select{alignment of|offset of the aligned pointer from}0 the base pointee object (%1 %plural{1:byte|:bytes}1) is %select{less than|not a multiple of}0 the asserted %2 %plural{1:byte|:bytes}2
value of the aligned pointer (%0) is not a multiple of the asserted %1 %plural{1:byte|:bytes}1
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
constexpr evaluation exceeded maximum depth of %0 calls
floating point arithmetic produces %select{an infinity|a NaN}0
in implicit initialization for inherited constructor of %0
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
constructor inherited from base class %0 cannot be used in a constant expression; derived class cannot be implicitly initialized
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended
signed left shift discards bits
left shift of negative value %0
read of incomplete type %0 is not allowed in a constant expression
read of mutable member %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
cannot constant evaluate '%select{memcpy|memmove}0' between objects of incomplete type %1
cannot constant evaluate '%select{memcpy|memmove}0' between objects of non-trivially-copyable type %1
%select{source|destination}2 of '%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' is %3
'%select{memcpy|wmemcpy}0' between overlapping memory regions
cannot constant evaluate '%select{memcpy|memmove}0' from object of type %1 to object of type %2
'%select{%select{memcpy|wmemcpy}1|%select{memmove|wmemmove}1}0' not supported: %select{size to copy (%4) is not a multiple of size of element type %3 (%5)|source is not a contiguous array of at least %4 elements of type %3|destination is not a contiguous array of at least %4 elements of type %3}2
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
temporary created here
%select{|implicit }0use of 'this' pointer is only allowed within the evaluation of a call to a 'constexpr' member function
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression
%select{|sub}0object of type %1 is not initialized
indexing of array without known bound is not allowed in a constant expression
array-to-pointer decay of array member without known bound is not supported
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate virtual function call in a constant expression
comparison between unequal pointers to void has unspecified result
covariant thunk required by %0
division by zero
class has base type %0
bit-field %0 with type %1 and length %2 here
also defined here
enumerator %0 with value %1 here
field %0 has type %1 here
field has name %0 here
friend declared here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
no corresponding friend here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
unimplemented constexpr lambda feature: %0 (coming soon!)
-fsanitize-address-field-padding applied to %0
-fsanitize-address-field-padding ignored for %0 because it %select{is not C++|is packed|is a union|is trivially copyable|has trivial destructor|is standard layout|is in a blacklisted file|is blacklisted}1
overflow in expression; result is %0 with type %1
ms_struct may not produce Microsoft-compatible layouts with fundamental data types with sizes that aren't a power of two
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%s2 to align %4
padding size of %0 with %1 %select{byte|bit}2%s1 to alignment boundary
packed attribute is unnecessary for %0
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '\deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML tag '%0' requires an end tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
error opening '%0': required by the CrossTU functionality
error parsing index file: '%0' line: %1 'UniqueID filename' format expected
multiple definitions are found for the same key in index 
imported AST from '%0' had been generated for a different target, current: %1, imported: %2
this builtin is only available on 32-bit targets
this builtin is only available on 64-bit targets
cannot add 'abi_tag' attribute in a redeclaration
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
cannot declare a member with an address-discriminated ptrauth qualifier in a union
address of overloaded function %0 is ambiguous
cannot form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
cannot take address of function %0 because parameter %1 has pass_object_size attribute
conflicting address space qualifiers are provided between types %0 and %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
cannot take address of function %0 because it has one or more non-tautological enable_if conditions
alias definition of %0 after tentative definition
definition %0 cannot also be an %select{alias|ifunc}1
aliases are not supported on darwin
CUDA does not support aliases
pack expansion used as argument for non-pack parameter of alias template
extraneous template parameter list in alias template declaration
'align_value' attribute requires integer constant
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
aligned %select{allocation|deallocation}0 function of type '%1' is only available on %2 %3 or newer
'aligned' attribute requires integer constant
requested alignment is dependent but declaration is not dependent
requested alignment is not a power of 2
requested alignment must be %0 or smaller
requested alignment must be %0 or greater
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
constructor of %0 inherited from multiple base class subobjects
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
anonymous bit-field cannot have qualifiers
width of anonymous bit-field (%0 bits) exceeds %select{width|size}1 of its type (%2 bit%s2)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
member of anonymous %select{struct|union}0 redeclares %1
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
%select{x86|x86-64}0 'interrupt' attribute only applies to functions that have %select{a 'void' return type|only a pointer parameter optionally followed by an integer parameter|a pointer as the first parameter|a %2 type as the second parameter}1
interrupt service routine cannot be called directly
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained|assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
cannot create __weak reference in file using manual reference counting
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
cannot create __weak reference because the current deployment target does not support weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument value %0 is outside the valid range [%1, %2]
argument should be a multiple of %0
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
invalid special register for builtin
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing 'char8_t' array with plain string literal
%select{|ISO C++20 does not permit }0initialization of char array with UTF-8 string literal%select{ is not permitted by '-fchar8_t'|}0
initializing char array with wide string literal
array size must be specified in new expressions
array of abstract class type %0
array section does not specify contiguous storage
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an%select{| invalid}0 address space
bad type for named register variable
constraint '%0' expects an integer constant expression
asm operand has incomplete type %0
more than one input constraint matches the same output '%0'
register '%0' unsuitable for global register variables on this target
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid output size for constraint '%0'
parameter references not allowed in naked functions
'this' pointer references not allowed in naked functions
reference to a %select{bit-field|vector element|global register variable}0 in asm %select{input|output}1 with a memory constraint '%2'
size of register '%0' does not match variable size
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
asm constraint has an unexpected number of alternatives: %0 vs %1
unknown register name '%0' in asm
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin cannot be const-qualified (%0 invalid)
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
synchronization scope argument to atomic operation is invalid
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to signed or unsigned 32-bit integer
address argument to atomic operation must be a pointer to non-%select{const|constant}0 _Atomic type (%1 invalid)
address argument to atomic operation must be a pointer to non-const type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0
%0 attribute expression never produces a constant expression
the type %0 is already explicitly ownership-qualified
%0 attribute can only be applied to a %select{function|method}1 with an error parameter
%0 attribute with '%1' convention can only be applied to a %select{function|method}2 returning %select{an integral type|a pointer}3
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
function type may not be qualified with an address space
multiple address spaces specified for type
address space is negative
address space is larger than the maximum supported (%0)
requested alignment must be %0 bytes or smaller
%0 attribute argument is invalid: %select{max must be 0 since min is 0|min must not be greater than max}1
%0 attribute must be greater than 0
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
%0 attribute requires integer constant between %1 and %2 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
invalid attribute argument %0 - expecting a vector or vectorizable scalar type
Neon vector size must be 64 or 128 bits
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
'__declspec(dllexport)' cannot be applied to more than one default constructor in %0
attribute %q0 cannot be applied to a deleted function
lambda cannot be declared %0
attribute %q0 cannot be applied to member of %q1 class
%q0 must have external linkage when declared %q1
redeclaration of %q0 cannot add %q1 attribute
%q0 cannot be thread local when declared %q1
definition of dllimport data
dllimport cannot be applied to non-inline function definition
definition of dllimport static field not allowed
%0 attribute argument may only refer to a function parameter of integer type
%0 attribute is invalid for the implicit this argument
invalid matrix element type %0
vector size not an integral multiple of component size
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute cannot be used with pointers to members
%0 attribute is not supported in %select{C|C++|Objective-C}1
%0 attribute is not supported on '%1'
%0 attribute can only be applied once per parameter
redeclaration of %0 must %select{not |}1have the 'overloadable' attribute
at most one overload for a given name may lack the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to%select{| constant}1 pointer arguments
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
%0 attribute requires OpenCL version %1%select{| or above}2
%0 attribute requires a %select{positive|non-negative}1 integral compile time constant expression
argument to %select{'code_seg'|'section'}1 attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
%0 size too large
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported for this target
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|functions, methods and blocks|functions, methods, and parameters|variables|variables and fields|variables, data members and tag types|types and namespaces|variables, functions and classes|kernel functions|non-K&R-style functions}1
%0 attribute only applies to %1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero %0 size
%0 and %1 attributes are not compatible
cannot pass bit-field as __auto_type initializer in C
%select{'auto'|'decltype(auto)'|'__auto_type'|template arguments}0 deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
deduced conflicting types %diff{($ vs $) |}0,1for initializer list element type
cannot use __auto_type with initializer list in C
'auto' return without trailing return type; deduced return types are a C++14 extension
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
%select{function with deduced return type|declaration with trailing return type}0 must be the only declaration in its group
%select{'auto'|'decltype(auto)'|'__auto_type'|use of %select{class template|function template|variable template|alias template|template template parameter|template}2 %3 requires template arguments; argument deduction}0 not allowed %select{in function prototype|in non-static struct member|in struct member|in non-static union member|in union member|in non-static class member|in interface member|in exception declaration|in template parameter until C++17|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter|in type allocated by 'new'|in K&R-style function parameter|in template parameter|in friend declaration}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
cannot deduce type for variable %1 with type %2 from %select{parenthesized|nested}0 initializer list
declaration of variable %0 with deduced type %1 requires an initializer
variable %0 declared with deduced type %1 cannot appear in its own initializer
return type of 'await_suspend' is required to be 'void' or 'bool' (have %0)
property implementation must have its declaration in the category %0
%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast|}0 from scalar %1 to vector %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2, which are not related by inheritance, is not allowed
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to vector %2 of different size
%0 is an incomplete type
%0 is not a class
%0 is not polymorphic
%0 is not a pointer
%0 is not a reference or pointer
%0 cannot be used as the type of a kernel parameter
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
function multiversioning doesn't support %select{feature|architecture}0 '%1'
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0 or one of its extensions
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address, which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from rvalue of type %1 to rvalue reference type %2; types are not compatible
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
binding %0 cannot appear in the initializer of its own decomposition declaration
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
width of bit-field %0 (%1 bits) exceeds %select{width|size}2 of its type (%3 bit%s3)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or %select{pick a deployment target that supports them|for OpenCL 2.0}0
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
%select{non-pointer|function pointer|void pointer}0 argument to '__builtin_launder' is not allowed
argument to __builtin_longjmp must be a constant 1
__builtin_longjmp is not supported for the current target
%select{First|Second}0 argument must be a matrix
Matrix dimensions do not match operation
Element types of input matrixes do not match (%0 != %1)
Implicit cast to from %0 to %1 failed
%select{First|Second}0 argument must be a %select{pointer|pointer to integers or floats}1
%select{Row|Column|Offset|Stride}0 argument must be %select{an integer|a constant integer expression}1
%select{First|Scalar}0 argument must be a %select{matrix|float or integer}0
Matrix types must match
call to '%select{__builtin_operator_new|__builtin_operator_delete}0' selects non-usual %select{allocation|deallocation}0 function
cannot redeclare builtin function %0
'%0' is only available in %1
__builtin_setjmp is not supported for the current target
builtin is not supported on this target
this builtin is only available on x86-64 and aarch64 targets
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
cannot find suitable %select{getter|setter}0 for property %1
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass non-trivial C object of type %0 by value to variadic %select{function|block|method|constructor}1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
non-local lambda expression cannot have a capture-default
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with incomplete type %1
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot catch variably modified type %0
cannot define %select{category|class extension}0 for undefined class %1
property declared in category %0 cannot be implemented in class implementation
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
function with no prototype cannot use the %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
property %0 is a class property; did you mean to access it with class '%1'?
%0 redeclared with '%1' access
'objc_class_stub' attribute cannot be specified on a class that does not have the 'objc_subclassing_restricted' attribute
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
type of machine mode does not support base vector types
compound literal in function scope may not be qualified with an address space
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
%select{variable|function}0 concept cannot be declared '%select{thread_local|inline|friend|constexpr}1'
concept declarations may only appear in namespace scope
%select{function|variable}0 concept cannot be %select{explicitly instantiated|explicitly specialized|partially specialized}1
'concept' cannot be applied on an %select{explicit instantiation|explicit specialization|partial specialization}0
'concept' can only appear on the definition of a function template or variable template
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
vector condition type %0 and result type %1 do not have elements of the same size
vector condition type %0 and result type %1 do not have the same number of elements
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function 'cudaConfigureCall' must have scalar return type
conflicting types for alias %0
conflicting code segment specifiers
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
statement not allowed in constexpr %select{function|constructor}0
no return statement in constexpr function
constexpr constructor must initialize all members
destructor cannot be marked constexpr
function try block not allowed in constexpr %select{function|constructor}0
variables defined in a constexpr %select{function|constructor}0 must be initialized
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared constexpr
constexpr can only be used in variable and function declarations
constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type
constexpr function's return type %0 is not a literal type
%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1
non-void constexpr function %0 should return a value
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked constexpr
constexpr union constructor does not initialize any member
constexpr variable cannot have non-literal type %0
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
cannot specify any part of a return type in the declaration of a conversion function%select{; put the complete type after 'operator'|; use a typedef to declare a conversion to %1|; use an alias template to declare a conversion to %1|}0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
std::experimental::coroutine_handle missing a member named '%0'
'%1' cannot be used in %select{a constructor|a destructor|a copy assignment operator|a move assignment operator|the 'main' function|a constexpr function|a function with a deduced return type|a varargs function}0
Objective-C methods as coroutines are not yet supported
'%0' cannot be used outside a function
%0: 'get_return_object_on_allocation_failure()' must be a static member function
the coroutine promise type %0 declares both 'return_value' and 'return_void'
%0 is required to have a non-throwing noexcept specification when the promise type declares 'get_return_object_on_allocation_failure()'
the coroutine promise type %0 must declare either 'return_value' or 'return_void'
this function cannot be a coroutine: %0 is an incomplete type
%0 is required to declare the member 'unhandled_exception()'
this function cannot be a coroutine: missing definition of specialization %0
'%0' cannot be used in an unevaluated context
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
'cpu_dispatch' function redeclared with different CPUs
multiple 'cpu_specific' functions cannot specify the same CPU: %0
%select{constructor|destructor}1 %0 must not return void expression
cannot use '%0' in %select{__device__|__global__|__host__|__host__ __device__}1 function
__shared__ variable %0 cannot be 'extern'
__shared__ local variables not allowed in %select{__device__|__global__|__host__|__host__ __device__}0 functions
__constant__ variables must be global
%select{__device__|__global__|__host__|__host__ __device__}0 function %1 cannot overload %select{__device__|__global__|__host__|__host__ __device__}2 function %3
constexpr function %0 without __host__ or __device__ attributes cannot overload __device__ function with same signature.  Add a __host__ attribute, or build with -fno-cuda-host-device-constexpr.
cannot use variable-length arrays in %select{__device__|__global__|__host__|__host__ __device__}0 functions
module name '%0' specified on command line does not match name of module
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime would be shorter than the lifetime of the constructed object
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
GNU decimal type extension not supported
%0 attribute cannot be applied to a statement
'%0' declared as an array with a negative size
declarator requires an identifier
'__declspec(thread)' applied to variable that already has a thread-local storage specifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype(auto)' not allowed here
'decltype' cannot be used to name a declaration
cannot decompose members of ambiguous base class %1 of %0:%2
cannot decompose class type %0 because it has an anonymous %select{struct|union}1 member
decomposition declaration not permitted in this context
cannot decompose members of inaccessible base class %1 of %0
cannot decompose %select{private|protected}0 member %1 of %3
cannot decompose class type %1: %select{its base classes %2 and|both it and its base class}0 %3 have non-static data members
decomposition declaration must be the only declaration in its group
decomposition declaration cannot be declared with parentheses
decomposition declaration %0 requires an initializer
decomposition declaration cannot be declared %plural{1:'%1'|:with '%1' specifiers}0
cannot decompose this type; 'std::tuple_element<%0>::type' does not name a type
cannot decompose this type; 'std::tuple_size<%0>::value' is not a valid integral constant expression
decomposition declaration template not supported
decomposition declaration cannot be declared with type %0; declared type must be 'auto' or reference to 'auto'
cannot decompose %select{union|non-class, non-array}1 type %2
type %0 decomposes into %2 elements, but %select{only |}3%1 names were provided
cannot decrement expression of type bool
cannot %select{form pointer to|form reference to|form array of|form function returning|use parentheses when declaring variable with}0 deduced class template specialization type
ambiguous deduction for template arguments of %0
no viable constructor or deduction guide for deduction of template arguments of %0
class template argument deduction for %0 selected a deleted constructor
class template argument deduction for %0 selected an explicit %select{constructor|deduction guide}1 for copy-list-initialization
template %0 has no definition and no %select{|viable }1deduction guides for deduction of template arguments
%select{<error>|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments; argument deduction only allowed for class templates
deduced non-type template argument does not have the same type as the corresponding template parameter%diff{ ($ vs $)|}0,1
deduced return types are a C++14 extension
deduced type %1 of deduction guide is not %select{|written as }2a specialization of template %0
deduction guide cannot have a function definition
deduction guide is %select{not |}0declared 'explicit' but previous declaration was%select{ not|}0
deduction guide cannot be declared '%0'
cannot specify deduction guide for %select{<error>|function template|variable template|alias template|template template parameter|dependent template name}0 %1
deduction guide declaration without trailing return type
deduction guide cannot be %select{explicitly instantiated|explicitly specialized}0
deduction guide template contains %select{a template parameter|template parameters}0 that cannot be deduced
cannot specify any part of a return type in the declaration of a deduction guide
deduction guide has different access from the corresponding member template
deduction guide must be declared in the same scope as template %q0
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| without a user-provided default constructor}1
'default' statement not in switch statement
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
constructor inherited by %0 from base class %1 is implicitly deleted
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
typename specifier refers to %select{class template|function template|variable template|alias template|template template parameter|template}0 member in %1; argument deduction not allowed here
no candidate function template was found for dependent friend function template specialization
nested name specifier for a declaration cannot depend on a template parameter
type of specialized non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
'objc_designated_initializer' attribute only applies to init methods of interface or class extension declarations
designator in initializer for scalar type %0
designator into flexible array member subobject
%select{no_destroy|always_destroy}0 attribute can only be applied to a variable with static or thread storage duration
destroying operator delete can have only an optional size and optional alignment parameter
destructor cannot be declared '%0'
expected the class name after '~' to name a destructor
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
destructor cannot be variadic
destructor cannot have any parameters
within a %select{__device__|__global__|__host__|__host__ __device__}0 function, only __shared__ variables or const variables without device memory qualifier may be marked 'static'
invalid diagnostic type for 'diagnose_if'; use "error" or "warning" instead
conflicting asm label
declaration of %0 has a different language linkage
conflicting pass_object_size attributes on parameters
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
exception specifications are not allowed beyond a single level of indirection
cannot cast %select{private|protected}2 base class %1 to %0
reference to %select{destructor|pseudo-destructor}0 must be called%select{|; did you mean to call it with no arguments?}1
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
synthesized properties %0 and %1 both claim instance variable %2
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
dynamic property cannot have instance variable specification
dynamic initialization is not supported for __device__, __constant__, and __shared__ variables.
catch-all handler must come last
ISO C requires a named parameter before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'
non-integral type %0 is an invalid underlying type
mode %0 is not supported for enumeration types
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
exception specification of %0 uses itself
exception specifications are not allowed in %select{typedefs|type aliases}0
exception specification needed for member of incomplete class %0
exception specification is not available until end of class definition
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in char array initializer
%0 is not a class%select{ or namespace|, namespace, or enumeration}1
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
export declaration can only be used within a module interface unit after the module declaration
export declaration appears within another export declaration
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
expression is not a string literal
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
control reaches end of non-void block
fallthrough annotation does not directly precede switch label
fallthrough annotation is outside switch statement
%0 attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has incomplete type %0
data member instantiated with function type %0
field may not be qualified with an address space
filter expression type should be an integral value not %0
declaration of %0 overrides a '%select{final|sealed}1' function
first argument to __builtin_call_with_static_chain must not be a block call
first argument to __builtin_call_with_static_chain must not be a builtin call
first argument to __builtin_call_with_static_chain must be a non-member call expression
first argument to __builtin_call_with_static_chain must not be a pseudo-destructor call
first argument to 'va_arg' is of type %0 and not 'va_list'
ARC forbids flexible array members with retainable object type
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
flexible array member %0 with type %1 is not at the end of %select{struct|interface|union|class|enum}2
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
expression not permitted as operand of fold expression
unary fold expression has empty expansion for operator '%0' with no fallback value
binary fold expression has unexpanded parameter packs in both operands
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
function cannot return qualified void type %0
function declared with %0 attribute was previously declared without the %0 attribute
declared return type of function concept must be 'bool'
function concept cannot have exception specification
function concept declaration must be a definition
function concept cannot have any parameters
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
no getter method for read from property
call to global function %0 not configured
cannot jump from this goto statement to its label
cannot jump from this goto statement to label %0 inside an inline assembly block
half precision constant requires cl_khr_fp16
builtin requires HVX
builtin is not supported on this CPU
builtin is not supported on this version of HVX
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
integral constant expression must have integral or unscoped enumeration type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
identifier %0 in object destruction expression does not name a type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
array has incomplete element type %0
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
implicit conversion from %0 to %1 is not permitted in C++
cannot declare implementation of a class declared with the 'objc_class_stub' attribute
std::nothrow was not found; include <new> before defining a coroutine which uses get_return_object_on_allocation_failure()
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot deduce return type of 'operator<=>' because type '%0' was not found; include <compare>
%0 type was not found; include <experimental/coroutine> before defining a coroutine
this function cannot be a coroutine: %0 is not a class
this function cannot be a coroutine: %q0 has no member named 'promise_type'
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
default member initializer for %0 uses itself
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
default member initializer for %1 needed within definition of enclosing class %0 outside of member functions
static const volatile data member must be initialized out of line
target exception specification is not superset of source
API notes replacement type %0 has a different size from original type %1
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is not constexpr
exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one
number of elements must be either one or match the size of the vector
cannot %select{decrement|increment}0 expression of enum type %1
cannot jump from this indirect goto statement to one of its possible targets
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot deduce type for lambda capture %1 from %select{parenthesized|nested}0 initializer list
cannot initialize %select{a variable|a parameter|return object|statement expression result|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)|: different exception specifications}4
initializer element is not a compile-time constant
cannot create object of function type %0
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer-string for char array is too long
inline declaration of %0 follows non-inline definition
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
non-inline namespace cannot be reopened as inline
'inline' can only appear on functions%select{| and non-local variables}0
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
integer sequences must have integral element type
integer sequences must have non-negative sequence length
'internal_linkage' attribute does not appear on the first declaration of %0
%plural{[0,2]:must use a qualified name when declaring|3:cannot declare}0 a %select{constructor|destructor|conversion operator|deduction guide}0 as a friend
invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions
value '%0' out of range for constraint '%1'
invalid reinterpretation: sizes of %0 and %1 must match
%0 attribute cannot be applied to virtual functions
interface type cannot inherit from %select{struct|non-public interface|class}0 %1
collection element of type %0 is not an Objective-C object
'_Complex %0' is invalid
%select{function parameter|typedef|non-static data member}0 cannot be constexpr
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
invalid cpu name for builtin
invalid option '%0' for %select{cpu_specific|cpu_dispatch}1
invalid cpu feature string for builtin
cannot combine with previous '%0' declaration specifier
invalid declaration specifier in template non-type parameter
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
mask type size must be between 1-byte and 8-bytes
invalid use of member %0 in static member function
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{non-member function|static member function|deduction guide}0 %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
'_Sat' specifier is only valid on '_Fract' or '_Accum', not '%0'
'%0' cannot be signed or unsigned
invalid use of '__super', this keyword can only be used inside class or member function scope
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
the %0 type cannot be used to declare a program scope variable
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
cannot use '%0' with '__vector bool'
cannot combine with previous '%0' declaration specifier. '__vector' must be first
use of 'double' with '__vector' requires VSX support to be enabled (available on POWER7 or later)
cannot use 'float' with '__vector'
cannot use 'long' with '__vector'
cannot use 'long double' with '__vector'
use of 'long long' with '__vector bool' requires VSX support (available on POWER7 or later) or extended Altivec support (available on POWER8 or later) to be enabled
'%select{|short|long|long long}0 %1' is invalid
property %0 not found on object of type %1; did you mean to access instance variable %2?
property %0 attempting to use instance variable %1 declared in super class %2
instance variables cannot be of reference type
instance variable %0 accessed in class method
kernel call to non-global function %0
kernel function %0 must be a free function or static member function
kernel function type %0 must have void return type
pointer arguments to kernel functions must reside in '__global', '__constant' or '__local' address space
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
a lambda expression cannot appear in this context
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
string literal in language linkage specifier cannot have an encoding-prefix
unknown linkage language
cannot apply asm label to %select{variable|function}0 after its first use
'lifetimebound' attribute cannot be applied to a %select{constructor|destructor}0
'lifetimebound' attribute cannot be applied; %select{static |non-}0member function has no implicit object parameter
cannot initialize %select{non-class|reference}0 type %1 with a parenthesized initializer list
non-template literal operator must have one or two parameters
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
parameter of literal operator must have type 'unsigned long long', 'long double', 'char', 'wchar_t', 'char16_t', 'char32_t', or 'const char *'
literal operator %0 must be in a namespace or global scope
invalid literal operator parameter type %0, did you mean %1?
template parameter list for literal operator must be either 'char...' or 'typename T, T...'
literal operator template cannot have any parameters
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
main cannot be declared as global variable
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::experimental::coroutine_handle must be a class template
'std::experimental::coroutine_traits' must be a class template
std::initializer_list must be a class template with a single type parameter
std::nothrow must be a valid variable declaration
control may reach end of non-void block
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
'this' argument to member function %0 has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
'this' argument to member function %0 is an %select{lvalue|rvalue}1, but function has %select{non-const lvalue|rvalue}2 ref-qualifier
cannot initialize object parameter of type %0 with an expression of type %1
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
member pointer has incomplete base type %0
%select{instance|class}1 method %0 not found ; did you mean %2?
derived class must specify the same code segment as its base classes
overriding virtual function must specify the same code segment as its overridden function
exception specification in declaration does not match previous declaration
exception specification in explicit instantiation does not match instantiated one
inheritance model does not match %select{definition|previous declaration}0
declaration of %0 in %select{the global module|module %2}1 follows declaration in %select{the global module|module %4}3
uuid does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
missing actual type specifier for pipe
string literal must be prefixed by '@' 
%select{constructor for %1 must explicitly initialize the|implicit default constructor for %1 must explicitly initialize the|cannot use constructor inherited from base class %4;}0 %select{base class|member}2 %3 %select{which|which|of %1}0 does not have a default constructor
%0 is missing exception specification '%1'
missing context for method declaration
missing '[' at start of message send expression
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
C++ requires a type specifier for all declarations
cannot use C++ 'try' in the same function as SEH '__try'
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
'module' declaration found while building header module
'module' declaration found while building module from module map
missing 'export module' declaration in module interface unit
@import of module '%0' in implementation of '%1'; use #import
import of module '%0' appears within %1
missing 'export' specifier in module declaration while building module interface
definition of module '%0' is not available; use -fmodule-file= to specify path to precompiled module interface
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
translation unit contains multiple module declarations
import of module '%0' appears within same top-level module '%1'
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
missing '#include %3'; %select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from module '%2' before it is required
%select{declaration|definition|default argument|explicit specialization|partial specialization}0 of %1 must be imported from one of the following modules before it is required:%2
'__leave' statement not in __try block
'__builtin_ms_va_start' used in System V ABI function
arguments to __annotation must be wide string constants
multiple initializations given for base %0
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
function declaration cannot become a multiversioned function after first usage
multiversioned function declaration has a different %select{calling convention|return type|constexpr specification|inline specification|storage class|linkage}0
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioned functions do not yet support %select{function templates|virtual functions|deduced return types|constructors|destructors|deleted functions|defaulted functions|constexpr functions}1
multiversioned function redeclarations require identical target attributes
attribute '%select{target|cpu_specific|cpu_dispatch}0' multiversioning cannot be combined with other attributes
multiversioned function must have a prototype
'main' cannot be a multiversioned function
function multiversioning is not supported on the current target
function declaration is missing %select{'target'|'cpu_specific' or 'cpu_dispatch'}0 attribute in a multiversioned function
multiversioning attributes cannot be combined
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
lookup of %0 in member access expression is ambiguous
%0 cannot appear before '::' because it is not a class%select{ or namespace|, namespace, or enumeration}1; did you mean ':'?
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
nested redefinition of %0
'abi_tag' %0 missing in original declaration
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
allocation of incomplete type %0
no %select{getter|setter}0 defined for property %1
invalid use of '__super', %0 has no base classes
use of dynamic_cast requires -frtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
expression is not assignable
no suitable member %0 in %1
no @interface declaration found in class messaging of %0
no template named %0
no template named %0; did you mean %1?
use of typeid requires -frtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-ASM statement in naked function is not supported
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
declaration of non-local variable in 'for' loop
non-static declaration of %0 follows static declaration
member %0 of %1 is not a template; did you mean %select{|simply }2%3?
%0 does not name a template but is followed by template arguments
%0 does not name a template but is followed by template arguments; did you mean %1?
non-thread-local declaration of %0 follows thread-local declaration
template argument / label address difference / what did you expect?
non-type template argument refers to subobject '%0'
qualified name refers into a specialization of %select{function|variable}0 template %1
non-type template parameter %0 with type %1 has incompatible initializer of type %2
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
address argument to nontemporal builtin must be a pointer (%0 invalid)
address argument to nontemporal builtin must be a pointer to integer, float, pointer, or a vector of such types (%0 invalid)
non-trivial C types are disallowed in union
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer}1 parameters
overriding method has mismatched ns_consumed attribute on its parameter
domain argument %0 does not refer to global constant
ns_error_domain attribute only valid on %select{enums, structs, and unions|enums, structs, unions, and classes}0
domain argument must be an identifier
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
nullability keyword %0 cannot be applied to multi-level pointer type %1
nullability specifier %0 cannot be applied to non-pointer type %1
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
attribute %0 can only be applied to @protocol definitions, not forward declarations
parameter of %0 attribute must be 'id' when used on a typedef
'objc_bridge(id)' is only allowed on structs and typedefs of void pointers
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
cannot use '%0' with Objective-C exceptions disabled
initialization statement is not supported when iterating over Objective-C collection
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
'__kindof' specifier cannot be applied to non-object type %0
'__kindof' type specifier must precede the declarator
literal construction method %0 has incompatible signature
%select{an array|a dictionary|a numeric literal|a boxed expression|}0 literal can only be used at file scope if %select{its contents are all also constant literals|its contents are all also constant literals and its keys are string literals|constant|constant}0
%0 %select{parameter|return}1 type is unsupported; support for vector types for this target is introduced in %2
indexing expression is invalid because subscript type %0 has multiple type conversion functions
non-trivially copyable type %0 cannot be used in a boxed expression
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
cannot catch an Objective-C object by value
%select{extension|category}0 of non-parameterized class %1 cannot have type parameters
forward declaration of non-parameterized class %0 cannot have type parameters
class %0 previously declared with type parameters
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
cannot implement a category for class %0 that is only visible via the Objective-C runtime
cannot implement subclass %0 of a superclass %1 that is only visible via the Objective-C runtime
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
type argument %0 does not satisfy the bound (%1) of type parameter %2
type argument %0 cannot explicitly specify nullability
no type or protocol named %0
type argument %0 must be a pointer (requires a '*')
type argument %0 is neither an Objective-C object nor a block type
type argument %0 cannot be qualified with '%1'
angle brackets contain both a %select{type|protocol}0 (%1) and a %select{protocol|type}0 (%2)
type arguments cannot be applied to non-class type %0
type arguments cannot be applied to non-parameterized class %0
type arguments cannot be applied to already-specialized class type %0
too %select{many|few}0 type arguments for class %1 (have %2, expected %3)
%select{forward class declaration|class definition|category|extension}0 has too %select{few|many}1 type parameters (expected %2, have %3)
type bound %0 for type parameter %1 conflicts with %select{implicit|previous}2 bound %3%select{for type parameter %5|}4
type parameter %0 bound %1 cannot explicitly specify nullability
missing type bound %0 for type parameter %1 in %select{@interface|@class}2
missing '*' in type bound %0 for type parameter %1
type bound %0 for type parameter %1 is not an Objective-C pointer type
type bound %1 for type parameter %0 cannot be qualified with '%2'
redeclaration of type parameter %0
%select{in|co|contra}0variant type parameter %1 conflicts with previous %select{in|co|contra}2variant type parameter %3
cannot declare variable inside @interface or @protocol
field %0 with variable sized type %1 is not at the end of class
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
argument of aligned clause should be array%select{ or pointer|, pointer, reference to array or reference to pointer}1, not %0
%select{a variable|a parameter|'this'}0 cannot appear in more than one aligned clause
expected pointer, array, reference to pointer, or reference to array in 'is_device_ptr clause'
OpenMP array section is not allowed here
expected at least one 'to' clause or 'from' clause specified to '#pragma omp target update'
the statement for 'atomic capture' must be a compound statement of form '{v = x; x binop= expr;}', '{x binop= expr; v = x;}', '{v = x; x = x binop expr;}', '{v = x; x = expr binop x;}', '{x = x binop expr; v = x;}', '{x = expr binop x; v = x;}' or '{v = x; x = expr;}', '{v = x; x++;}', '{v = x; ++x;}', '{++x; v = x;}', '{x++; v = x;}', '{v = x; x--;}', '{v = x; --x;}', '{--x; v = x;}', '{x--; v = x;}' where x is an l-value expression with scalar type
the statement for 'atomic capture' must be an expression statement of form 'v = ++x;', 'v = --x;', 'v = x++;', 'v = x--;', 'v = x binop= expr;', 'v = x = x binop expr' or 'v = x = expr binop x', where x and v are both l-value expressions with scalar type
the statement for 'atomic' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic read' must be an expression statement of form 'v = x;', where v and x are both lvalue expressions with scalar type
directive '#pragma omp atomic' cannot contain more than one 'read', 'write', 'update' or 'capture' clause
the statement for 'atomic update' must be an expression statement of form '++x;', '--x;', 'x++;', 'x--;', 'x binop= expr;', 'x = x binop expr' or 'x = expr binop x', where x is an l-value expression with scalar type
the statement for 'atomic write' must be an expression statement of form 'x = expr;', where x is a lvalue expression with scalar type
bit fields cannot be used to specify storage in a '%0' clause
arguments of OpenMP clause '%0' with bitwise operators cannot be of floating type
arguments of OpenMP clause '%0' for 'min' or 'max' must be of %select{scalar|arithmetic}1 type
const-qualified list item cannot be reduction
const-qualified variable cannot be %0
constructs with the same name must have a 'hint' clause with the same value
redefinition of user-defined reduction for type %0
%0 appears multiple times in clauses on the same declare target directive
%0 must not appear in both clauses 'to' and 'link'
'depend' clauses cannot be mixed with '%0' clause
expected%select{| %1}0 loop iteration variable
expected '+' or '-' operation
'depend(%select{source|sink:vec}0)' clause%select{|s}0 cannot be mixed with 'depend(%select{sink:vec|source}0)' clause%select{s|}0
unexpected expression: number of expressions is larger than the number of associated loops
same map type modifier has been specified more than once
expected access to data field
expected addressable lvalue expression, array element or array section
expected variable name as a base of the array %select{subscript|section}0
expected a reference to an integer-typed parameter
expected expression containing only member accesses and/or array sections based on named variables
expected a reference to a parameter specified in a 'uniform' clause
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name%select{| or data member of current class}0
expected variable name%select{|, data member of current class}0, array element or array section
expression requires explicit conversion from %0 to %1
a firstprivate variable with incomplete type %0
'#pragma omp declare simd' can only be applied to functions
function name is not allowed in 'link' clause
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
'%0' and '%1' clause are mutually exclusive and may not appear on the same directive
the name of the construct must be specified in presence of 'hint' clause
in_reduction variable must appear in a task_reduction clause
expression has incomplete class type %0
invalid 'this' expression on 'map' clause
%select{map type '%1' is not allowed|map type must be specified}0 for '#pragma omp %2'
'#pragma omp %0' directive must appear only in file scope
%0 used in declare target directive is not a variable or a function name
a lastprivate variable with incomplete type %0
only loop iteration variables are allowed in 'linear' clause in distribute directives
argument of a linear clause should be of integral or pointer type, not %0
a linear variable with incomplete type %0
'linear' clause cannot be specified along with 'ordered' clause with a parameter
variable with local storage in initial value of threadprivate variable
'%0' statement cannot be used in OpenMP for loop
could not calculate number of iterations calling 'operator-' with upper and lower loop bounds
increment expression must cause %0 to %select{decrease|increase}1 on each iteration of OpenMP for loop
condition of OpenMP for loop must be a relational comparison ('<', '<=', '>', or '>=') of loop variable %0
increment clause of OpenMP for loop must perform simple addition or subtraction on loop variable %0
initialization clause of OpenMP for loop is not in canonical form ('var = init' or 'T var = init')
loop iteration variable in the associated loop of 'omp %1' directive may not be %0, predetermined as %2
variable must be of integer or %select{pointer|random access iterator}0 type
variable already marked as mapped in current construct
multiple array elements associated with the same variable are not allowed in map clauses of the same construct
argument to '%0' clause must be a %select{non-negative|strictly positive}1 integer value
expected at least one %0 clause for '#pragma omp %1'
variable %0 must have explicitly specified data sharing attributes
no more 'if' clause is allowed
%select{statement after '#pragma omp %1' must be a for loop|expected %2 for loops after '#pragma omp %1'%select{|, but found only %4}3}0
expression must have integral or unscoped enumeration type, not %0
unable to resolve declare reduction construct for type %0
variable can appear only once in OpenMP '%0' clause
variable can appear only once in OpenMP 'target update' construct
'ordered' directive %select{without any clauses|with 'threads' clause}0 cannot be closely nested inside ordered region with specified parameter
'ordered' directive with 'depend' clause cannot be closely nested inside ordered region without specified parameter
'ordered' clause with a parameter can not be specified in '#pragma omp %0' directive
original storage of expression in data environment is shared but data environment do not fully contain mapped expression storage
orphaned 'omp %0' directives are prohibited; perhaps you forget to enclose the directive into a %select{|||target |teams }1region?
%select{orphaned 'omp section' directives are prohibited, it|'omp section' directive}0 must be closely nested to a sections region%select{|, not a %1 region}0
argument of a reduction clause of a %0 construct must not appear in a firstprivate clause on a task construct
the statement for '#pragma omp parallel sections' must be a compound statement
statement in 'omp parallel sections' directive must be enclosed into a section region
expected reference to one of the parameters of function %0%select{| or 'this'}1
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be nowait
parent region for 'omp %select{cancellation point|cancel}0' construct cannot be ordered
pointer cannot be mapped along with a section derived from itself
a private variable with incomplete type %0
region cannot be%select{| closely}0 nested inside '%1' region%select{|; perhaps you forget to enclose 'omp %3' directive into a parallel region?|; perhaps you forget to enclose 'omp %3' directive into a for or a parallel for region with 'ordered' clause?|; perhaps you forget to enclose 'omp %3' directive into a target region?|; perhaps you forget to enclose 'omp %3' directive into a teams region?}2
OpenMP constructs may not be nested inside an atomic region
cannot nest 'critical' regions having the same name %0
OpenMP constructs may not be nested inside a simd region
list item of type %0 is not valid for specified reduction operation: unable to provide default initialization value
in_reduction variable must have the same reduction operation as in a task_reduction clause
reduction variables may not be accessed in an explicit task
a reduction list item with incomplete type %0
expected addressable reduction item for the task-based directives
argument of OpenMP clause '%0' must reference the same object in all threads
cannot generate code for reduction on %select{|array section, which requires a }0variable length array
'reduction' clause cannot be used with 'nogroup' clause
reduction type cannot be %select{qualified with 'const', 'volatile' or 'restrict'|a function|a reference|an array}0 type
arguments of '#pragma omp %0' cannot be of reference type %1
directive must be at file or namespace scope
%0 variable must be %1
Only one %0 clause can appear on a requires directive in a single translation unit
same pointer dereferenced in multiple different ways in map clause expressions
'schedule' clause with 'nonmonotonic' modifier cannot be specified if an 'ordered' clause is specified
'nonmonotonic' modifier can only be specified with 'dynamic' or 'guided' schedule kind
section of pointer to function type %0
section of pointer to incomplete type %0
section length is evaluated to a negative value %0
section length is unspecified and cannot be inferred because subscripted value is %select{not an array|an array of unknown bound}0
array section must be a subset of the original array
the statement for '#pragma omp sections' must be a compound statement
statement in 'omp sections' directive must be enclosed into a section region
'%0' statement cannot be used in OpenMP simd region
the 'copyprivate' clause must not be used with the 'nowait' clause
single declaration is expected after 'declare simd' directive
target construct with nested teams region contains statements outside of the teams construct
threadprivate variables are not allowed in '%0' clause
threadprivate variables cannot be used in target constructs
threadprivate variable with incomplete type %0
array section %select{lower bound|length}0 is not an integer
subscripted value is not an array or pointer
expected %0 in OpenMP clause '%1'
modifier '%0' cannot be used along with modifier '%1'
mapping of union members is not allowed
incorrect reduction identifier, expected one of '+', '-', '*', '&', '|', '^', '&&', '||', 'min' or 'max' or declare reduction for type %0
expected %select{|one of}0 %1 directive name modifier%select{|s}0
expected pointer or reference to pointer in 'use_device_ptr' clause
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is %select{thread-local|a global named register variable}1
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be in a %1 clause in '#pragma omp %2' directive
arguments of OpenMP clause '%0' in '#pragma omp %2' directive cannot be of variably-modified type %1
one of 'for', 'parallel', 'sections' or 'taskgroup' is expected
%0 variable cannot be %1
directive name modifier '%0' is not allowed for '#pragma omp %1'
expected %select{'val' modifier|one of 'ref', val' or 'uval' modifiers}0
variable of non-reference type %0 can be used only with 'val' modifier, but used with '%1'
the parameter of the 'ordered' clause must be greater than or equal to the parameter of the 'collapse' clause
the value of 'simdlen' parameter must be less than or equal to the value of the 'safelen' parameter
only %select{'omp_priv' or 'omp_orig'|'omp_in' or 'omp_out'}0 variables are allowed in %select{initializer|combiner}0 expression
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
variables in the %0 address space can only be declared in the outermost scope of a kernel function
atomic variable can be %select{assigned|initialized}0 to a variable only in global address space
bit-fields are not supported in OpenCL
cannot refer to a block inside block
the __block storage type is not permitted
illegal call to %0, expected %1 argument type
invalid number of arguments to function: %0
first argument to %0 must be a pipe type
invalid pipe access modifier (expecting %0)
invalid argument type to function %0 (expecting %1 having %2)
invalid argument %0 to function: %1, expecting a generic pointer argument
cannot cast non-zero value '%0' to 'event_t'
casting to type %0 is not allowed
variable in constant address space must be initialized
blocks with parameters are not accepted in this prototype of enqueue_kernel call
blocks used in enqueue_kernel call are expected to have parameters of type 'local void*'
illegal call to enqueue_kernel, incorrect argument types
illegal call to enqueue_kernel, parameter needs to be specified as integer type
mismatch in number of block parameters and local size arguments passed
vector component access has invalid length %0.  Supported: 1,2,3,4,8,16.
invalid block variable declaration - using 'extern' storage class is disallowed
pointers to functions are not allowed
%select{non-kernel function|function scope}0 variable cannot be declared in %1 address space
%select{program scope|static local|extern}0 variable must reside in %1 address space
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 requires cl_khr_fp16. Use vector data %select{load|store}0 builtin functions instead
declaring function parameter of type %0 is not allowed; did you forget * ?
implicit declaration of function %0 is invalid in OpenCL
implicit conversions between vector types (%0 and %1) are not permitted
access qualifier can only be used for pipe and image type
invalid block variable declaration - must be %select{const qualified|initialized}0
access qualifier %0 can not be used for %1 %select{|prior to OpenCL version 2.0}2
declaring function return value of type %0 is not allowed %select{; did you forget * ?|}1
array of %0 type is invalid in OpenCL
attribute %0 can only be applied to an OpenCL kernel function
multiple access qualifiers
%select{function|kernel}0 cannot be called 'main'
global sampler requires a const or constant address space qualifier
pointer to type %0 is invalid in OpenCL
kernel parameter cannot be declared as a pointer to a pointer
use of %select{type|declaration}0 %1 requires %2 extension to be enabled
return value cannot be qualified with address space
scalar operand type has greater rank than the type of the vector element. (%0 and %1)
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align|__alignof}0' to a void type
taking address of a capture is not allowed
block type cannot be used as expression in ternary expression in OpenCL
type %0 can only be used as a function parameter in OpenCL
the %0 type cannot be used to declare a structure or union field
invalid prototype, variadic arguments are not allowed in OpenCL
variable length arrays are not supported in OpenCL
invalid application of '__builtin_omp_required_simd_align' to an expression, only type is allowed
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
os_log() argument %0 is too big (%1 bytes, max %2)
os_log() format argument is not a string constant
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context
operand argument to overflow builtin must be an integer (%0 invalid)
result argument to overflow builtin must be a pointer to a non-const integer (%0 invalid)
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to deleted function %0
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function
call to deleted constructor of %0
call to deleted member function %0
call to deleted function call operator in type %0
overload resolution selected deleted operator '%0'
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
static and non-static member functions with the same parameter types cannot be overloaded
reference to %select{overloaded|multiversioned}1 function could not be resolved; did you mean to call it%select{| with no arguments}0?
'ownership_returns' attribute index does not match; here it is %0
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion contains parameter pack %0 that has a different length (at least %1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
parameter pack cannot have a default argument
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
argument may not have 'void' type
parameter name omitted
a lambda parameter cannot shadow an explicitly captured entity
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
this builtin is only valid on POWER7 or later CPUs
'#pragma clang attribute' attribute with no matching '#pragma clang attribute push'
attribute %0 can't be applied to %1
negated attribute subject matcher sub-rule '%0' contradicts sub-rule '%1'
redundant attribute subject matcher sub-rule '%0'; '%1' already matches those declarations
unterminated '#pragma clang attribute push' at end of file
'#pragma clang attribute %select{%1.|}0pop' with no matching '#pragma clang attribute %select{%1.|}0push'
%select{incompatible|duplicate}0 directives '%1' and '%2'
invalid argument of type %0; expected an integer type
%select{invalid value '%0'; must be positive|value '%0' is too large}1
expected a for, while, or do-while loop to follow '%0'
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
instance variable %0 is private
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 found on object of type %1; did you mean to access it with the "." operator?
use of Objective-C property in function nested in Objective-C container not supported, move function outside its container
property %0 is already implemented
property %0 has a variably modified type
type of property %0 (%1) does not match type of instance variable %2 (%3)
property access is using %0 method which is unavailable
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
property cannot have array or function type %0
instance variable %0 is protected
protocol has circular dependency
property %select{of type %1|with attribute '%1'|without attribute '%1'|with getter %1|with setter %1}0 was selected for synthesis
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
discriminator argument to ptrauth_sign_constant must be a constant integer, the address of the global variable where the result will be stored, or a blend of the two
argument to ptrauth_sign_constant must refer to a global variable or function
pointer authentication is disabled for the current target
this target does not support pointer authentication
%0 does not identify a valid pointer authentication key for the current target
address discrimination flag for __ptrauth must be 0 or 1; value is %0
argument to __ptrauth must be an integer constant expression
__ptrauth qualifier must take between 1 and 3 arguments
cast types may not be qualified with __ptrauth; type is %0
extra discriminator for __ptrauth must between 0 and %1; value is %0
__ptrauth qualifier may only be applied to pointer types; type here is %0
parameter types may not be qualified with __ptrauth; type is %0
type %0 is already __ptrauth-qualified
return types may not be qualified with __ptrauth; type is %0
argument must be a string literal%select{| of char type}0
%select{signed value|extra discriminator|blended pointer|blended integer}0 must have %select{pointer|integer|pointer or integer}1 type; type here is %2
friend declaration cannot have a pure-specifier
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
no function named %0 with type %1 was found in the specified scope
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
assigning to 'readonly' return result of an Objective-C message not allowed
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
recursive evaluation of default argument
trying to recursively use %0 as superclass of %1
redeclaration of %0 with a different type%diff{: $ vs $|}1,2
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 as an alias for a different namespace
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in global initializer
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding value %diff{of type $ to reference to type $|to reference}0,1 drops %select{<<ERROR>>|'const'|'restrict'|'const' and 'restrict'|'volatile'|'const' and 'volatile'|'restrict' and 'volatile'|'const', 'restrict', and 'volatile'}2 qualifier%plural{1:|2:|4:|:s}2
reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2
reference to type %0 cannot bind to an initializer list
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
pipes packet types cannot be of reference type
reference to local %select{variable|binding}1 %0 declared in enclosing %select{%3|block literal|lambda expression|context}2
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
variable does not have a constant initializer
cannot subclass a class that was declared with the 'objc_subclassing_restricted' attribute
returning block that lives on the local stack
@throw (rethrow) used outside of a @catch block
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
return statement not allowed in coroutine; did you mean 'co_return'?
%select{void function|void method|constructor|destructor}1 %0 must not return a value
%0 cannot use 'super' because it is a root class
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
sampler_t initialization requires 32-bit integer, not %0
second argument to __builtin_call_with_static_chain must be of pointer type
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
%0 causes a section type conflict with %1
cannot use SEH '__try' in a coroutine when C++ exceptions are enabled
cannot use SEH '__try' in blocks, captured regions, or Obj-C method decls
SEH '__try' is not supported on this target
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant l-value expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
initialization is not supported for __shared__ variables.
requested shift is a vector of type %0 but the first operand is not a vector (%1)
index for __builtin_shufflevector must be less than the total number of vector elements
index for __builtin_shufflevector must be a constant integer
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align|__alignof}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step|__builtin_omp_required_simd_align|__alignof}0' to an incomplete type %1
invalid application of '%select{sizeof|alignof|typeof}0' to bit-field
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
argument to 'operator<=>' %select{cannot be narrowed from type %1 to %2|evaluates to %1, which cannot be narrowed to type %2}0
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot reference member of primary template because deduced class template specialization %0 is %select{instantiated from a partial|an explicit}1 specialization
cannot specialize %select{|(with 'template<>') }0a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed%select{ %1|}0
static_assert failed due to requirement '%0'%select{ %2|}1
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous struct
static data member %0 not allowed in local class %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
interface type cannot be statically allocated
standard library implementation of %0 is not supported; %select{member '%2' does not have expected form|member '%2' is missing|the type is not trivially copyable|the type does not have the expected form}1
unsupported standard library implementation: 'std::%0' is not a class template
%0 attribute cannot be applied to a declaration
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
existing instance variable %1 for strong property %0 may not be __weak
subscript of pointer to function type %0
subscript of pointer to incomplete type %0
subscript requires size of interface %0, which is not constant for this architecture and platform
use of '__super' inside a lambda is unsupported
'%0' parameter must have pointer%select{| to unqualified pointer}1 type; type here is %2
'swift_error_result' parameter must follow 'swift_context' parameter
'swift_indirect_result' parameters must be first parameters of function
'%0' parameter can only be used with swiftcall calling convention
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
cannot jump from switch statement to this case label
multiple conversions from switch condition type %0 to an integral or enumeration type
@synthesize not allowed in a category's implementation
@synthesize not allowed on a class property %0
synthesized property with variable size type %0 requires an existing instance variable
cannot synthesize weak property in file using manual reference counting
cannot synthesize weak property because the current deployment target does not support weak references
invalid transaction abort code
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
%select{type tag|argument}0 index %1 is greater than the number of arguments specified
implicit declaration introduced by elaborated type conflicts with a %select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}0 of the same name
%select{non-struct type|non-class type|non-union type|non-enum type|typedef|type alias|template|type alias template|template template argument}1 %0 cannot be referenced with a %select{struct|interface|union|class|enum}2 specifier
friend type templates must use an elaborated type
ambiguous constructor call when %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
deduced incomplete pack %0 for template parameter %1
non-type template argument refers to non-static data member %0
%select{too few|too many}0 template arguments for %select{class template|function template|variable template|alias template|template template parameter|template}1 %2
sorry, non-type template argument of pointer-to-member type %1 that refers to member %q0 of a different class is not supported yet
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
template argument does not refer to a class or alias template, or template template parameter
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
associated constraints differ in template redeclaration
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0 following the 'template' keyword does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of %select{class template|function template|variable template|alias template|template template parameter|template}0 %1 requires template arguments
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is not supported for the current target
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
alignment (%0) of thread-local variable %1 is greater than the maximum supported alignment (%2) for a thread-local variable on this target
only one element declaration is allowed
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 cannot be defined in a type alias template
%0 cannot be defined in a condition
%0 cannot be defined in an enumeration
types may not be defined in a for range declaration
%0 cannot be defined in a parameter type
%0 cannot be defined in the result type of a function
%0 cannot be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
a parameter pack may not be accessed at an out of bounds index
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
%0 is not supported on this target
address of %select{bit-field|vector element|property expression|register variable}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
variable declared with 'objc_externally_retained' cannot be modified in ARC
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to an incomplete type %0
fast enumeration variables cannot be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
%select{cannot assign to return value because function %1 returns a const value|cannot assign to variable %1 with const-qualified type %2|cannot assign to %select{non-|}1static data member %2 with const-qualified type %3|cannot assign to non-static data member within const member function %1|cannot assign to %select{variable %2|non-static data member %2|lvalue}1 with %select{|nested }3const-qualified data member %4|read-only variable is not assignable}0
value of type %0 is not contextually convertible to 'bool'
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where integer or floating point type is required
used type %0 where floating point type is not allowed
used type %0 where arithmetic or pointer type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
__ptrauth qualification mismatch%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)|: different exception specifications}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
conversion from %0 to %1 in converted constant expression would bind reference to a temporary
variable has incomplete type %0
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
used type %0 where integer is required
operand of type %0 where arithmetic or pointer type is required
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes pointer-authentication of pointee type
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
logical expression with vector %select{type %1 and non-vector type %2|types %1 and %2}0 is only supported in C++
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; did you mean to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%select{%diff{ from $ to $|}1,2|%diff{ from returned value of type $ to function return type $|}1,2}0
no viable conversion%diff{ from $ to incomplete type $|}0,1
%select{comparison between %diff{ ($ and $)|}0,1|arithmetic operation with operands of type %diff{ ($ and $)|}0,1|conditional operator with the second and third operands of type %diff{ ($ and $)|}0,1}2 which are pointers to non-overlapping address spaces
ordered comparison between pointer and zero (%0 and %1)
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
invalid argument type %0 to unary expression
vector operands do not have the same number of elements (%0 and %1)
cannot convert between vector values of different size (%0 and %1)
cannot convert between %select{scalar|vector}0 type %1 and vector type %2 as implicit conversion would cause truncation
cannot convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
unsupported: typedef changes linkage of anonymous type, but linkage was already computed
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
missing 'typename' prior to dependent type template name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
failed requirement '%0'; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable in ARC
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
use of undeclared label %0
definition of class %0 must be available to use Objective-C %select{array literals|dictionary literals|numeric literals|boxed expressions|string literals}1
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
inline variable %q0 is not defined
%select{function|variable}0 %q1 is used but not defined in this translation unit, and cannot be defined in any other translation unit because its type does not have linkage
cannot determine underlying type of incomplete enumeration type %0
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains%plural{0: an|:}1 unexpanded parameter pack%plural{0:|1: %2|2:s %2 and %3|:s %2, %3, ...}1
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 cannot use copy assignment operator
%select{constructor for %1|implicit default constructor for %1|cannot use constructor inherited from %1:}0 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
address-of operator cannot be applied to a call to a function with unknown return type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
call to unsupported expression with unknown type
%0 has unknown type, which is not supported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
use of %0 with tag type that does not match previous declaration
using declaration cannot refer to class member
using declaration cannot refer to a namespace
using declaration cannot refer to a scoped enumerator
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration cannot refer to a constructor
%0 is not a direct base of %1, cannot inherit constructors
using declaration cannot refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using declaration
using declaration pack expansion at block scope produces multiple values
using declaration cannot refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
%select{|member}0 using declaration %1 instantiates to an empty pack
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
CUDA device code does not support va_arg
'va_start' cannot be used in a captured statement
'va_start' used in function with fixed args
'va_start' cannot be used outside a function
'va_start' used in %select{System V|Win64}0 ABI function
array types cannot be value-initialized
variable concept declaration must be initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
no variable template matches specialization; did you mean to use %0 as function template instead?
declared type of variable concept must be 'bool'
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
'typeid' of variably modified type %0
CUDA device code does not support variadic functions
first two arguments to %0 must have the same type
first two arguments to %0 must be vectors
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
unions cannot have virtual functions
'virtual' cannot be specified on member function templates
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration cannot have 'extern' linkage
variable length array declaration cannot have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length arrays are not supported for the current target
variably modified type declaration cannot have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 to %1 must be a 2-bit unsigned literal (i.e. 0, 1, 2 or 3)
existing instance variable %1 for __weak property %0 must be __weak
sampler type cannot be used with the __local and __global address space qualifiers
invalid rounding argument
scale argument must be 1, 2, 4, or 8
asm-specifier for input or output variable conflicts with asm clobber list
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
ISO C++ standards before C++17 do not allow new expression for type %0 to use list-initialization
'auto' type specifier is a C++11 extension
ISO C++ does not allow %select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 because it casts away qualifiers, even though the source and destination types are unrelated
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
'trivial_abi' cannot be applied to %0
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size|constexpr if condition}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++14 extension
use of this statement in a constexpr %select{function|constructor}0 is a C++2a extension
multiple return statements in constexpr function is a C++14 extension
constexpr %select{function|constructor}0 never produces a constant expression
function try block in constexpr %select{function|constructor}0 is a C++2a extension
variable declaration in a constexpr %select{function|constructor}0 is a C++14 extension
type definition in a constexpr %select{function|constructor}0 is a C++14 extension
use of the %0 attribute is a C++14 extension
use of the %0 attribute is a C++17 extension
decomposition declarations are a C++17 extension
ISO C++17 does not permit structured binding declaration in a condition
default initialization of an object of const type %0%select{| without a user-provided default constructor}1 is a Microsoft extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
enumeration values exceed range of largest integer
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
incremented enumerator value %0 is not representable in the largest integer type
explicit capture of 'this' with a capture default of '=' is a C++2a extension
ambiguous use of internal linkage declaration %0 defined in multiple modules
explicit conversion functions are a C++11 extension
duplicate explicit instantiation of %0 ignored as a Microsoft extension
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
'begin' and 'end' returning different types (%0 and %1) is a C++17 extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
complex numbers are an extension in a freestanding C99 implementation
unqualified friend declaration referring to type outside of the nearest enclosing namespace is a Microsoft extension; add a nested name specifier
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
jump from this goto statement to its label is a Microsoft extension
imaginary constants are a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
ISO C++17 does not allow incrementing expression of type bool
initialized lambda captures are a C++14 extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
inline variables are a C++17 extension
ISO C does not support '~' for complex conjugation of %0
complex integer types are a GNU extension
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around scalar initializer
declaration specifier missing, defaulting to 'int'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
import of C++ module '%0' appears within extern "C" language linkage specification
redundant #include of module '%0' appears within %1
accessing inaccessible direct base %0 of %1 is a Microsoft extension
anonymous %select{structs|unions}0 are a Microsoft extension
static_cast between pointer-to-function and pointer-to-object is a Microsoft extension
using the undeclared type %0 as a default template argument is a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
implicit conversion between pointer-to-function and pointer-to-object is a Microsoft extension
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in %select{a namespace enclosing %2|class %2 or an enclosing namespace}3 is a Microsoft extension
template argument for template type parameter must be a type; omitted 'typename' is a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
'mutable' on a reference type is a Microsoft extension
lookup of %0 in member access expression is ambiguous; using member of %1
use of enumeration in a nested name specifier is a C++11 extension
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
offset of on non-POD type %0
offset of on non-standard-layout type %0
vector component name '%0' is an OpenCL version 2.2 feature
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
ISO C++ specifies that qualified reference to %0 is a constructor name rather than a %select{template name|type}1 in this context, despite preceding %select{'typename'|'template'}2 keyword
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
%select{class|variable}0 template partial specialization is not more specialized than the primary template
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that cannot be deduced; this partial specialization will never be used
plain '_Complex' requires a type specifier; assuming '_Complex double'
invoking a pointer to a 'const &' member function on an rvalue is a C++2a extension
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
function definition with pure-specifier is a Microsoft extension
redefinition of typedef %0 is a C11 feature
ISO C++17 does not allow 'register' storage class specifier
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
'%0' is not permitted on a declaration of a type
capture of '*this' by copy is a C++17 extension
static data member %0 in union is a C++11 extension
redeclaring non-static %0 as static is a Microsoft extension
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
default template arguments for a function template are a C++11 extension
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
incompatible operand types (%0 and %1)
pointer type mismatch%diff{ ($ and $)|}0,1
C99 forbids conditional expressions with only one void side
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible function pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ISO C++ does not allow indirection on operand of type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
'typename' occurs outside of a template
use of undeclared identifier %0; unqualified lookup into dependent bases of class template %1 is a Microsoft extension
ISO C++ requires a definition in this translation unit for %select{function|variable}0 %q1 because its type does not have linkage
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
use of out-of-scope declaration of %0%select{| whose type is not compatible with that of an implicit declaration}1
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++14 extension
'main' is not allowed to be declared variadic
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add stubs for missing protocol requirements
call 'std::move' explicitly to avoid copying
call 'std::move' explicitly to avoid copying on older compilers
add a '@synthesize' directive
add a pair of parentheses to declare a variable
candidate function made ineligible by enable_if
declared with %0 attribute here
allocated with 'new%select{[]|}0' here
lookup in the object type %0 refers here
lookup from the current scope refers here
candidate found by name lookup is %q0
inherited from base class %0 here
member found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
field has non-trivial ownership qualification
declaration uses type that is ill-formed in ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
init method must return a type related to its receiver type
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
declaration uses __weak, but ARC is disabled
declaration uses __weak, which the current deployment target does not support
array %0 declared here
add 'u8' prefix to form a 'char8_t' string literal
conversion to %select{integral|enumeration}0 type %1 declared here
constraint '%0' is already present here
use constraint modifier "%0"
type %0 is incomplete
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
attribute is here
previous %select{unmarked |}0overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
return type of 'await_ready' is required to be contextually convertible to 'bool'
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
did you mean to use __block %0?
called by %0
%0 declared here
callee declares array parameter as static here
declaration missing '[[carries_dependency]]' attribute is here
cast expression to void to silence warning
%select{category|class extension}0 conforms to protocol %1 which defines method %2
consider making the bitfield type %select{unsigned|signed}0
consider defining %0 with the '%1' calling convention
class is declared here
explicitly declare getter %objcinstance0 with '%1' to return an 'unowned' object
parameter of the 'collapse' clause
compatible type %0 specified here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
conflicting attribute is here
conflicting %0 here
previous return statement is here
member not initialized by constructor
virtual base class declared here
type conversion function declared here
use 'static' to give inline function %0 internal linkage
call to %0 implicitly required by coroutine function here
call to 'await_transform' implicitly required by 'co_await' here
call to '%select{initial_suspend|final_suspend}0' implicitly required by the %select{initial suspend point|final suspend point}0
conflicting __device__ function declared here
candidate template ignored: target attributes do not match
remove 'u8' prefix to avoid a change of behavior; Clang encodes unprefixed narrow string literals as UTF-8
annotate %select{%1|anonymous %1}0 with an availability attribute to silence this warning
this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
declare the parameter __strong or capture a __block __strong variable to keep values alive across autorelease pools
function is a coroutine due to use of '%0' here
declared %select{'returns_nonnull'|'nonnull'}0 here
required by 'require_constant_initialization' attribute here
during template argument deduction for %select{class|variable}0 template %select{partial specialization |}1%2 %3
deduction guide declared %0 by intervening access specifier
member template declared %0 here
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
%0 defined here
conversion to pointer type %0
qualify call to silence this warning
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because all %select{data members|data members of an anonymous union member}2 are const-qualified
%select{default constructor of|constructor inherited by}0 %1 is implicitly deleted because field %2 of %select{reference|const-qualified}4 type %3 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor of|copy constructor of|move constructor of|copy assignment operator of|move assignment operator of|destructor of|constructor inherited by}0 %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 %select{has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|%select{default|corresponding|default|default|default}4 constructor}0|destructor}5%select{||s||}4|is an ObjC pointer|has an address-discriminated ptrauth qualifier}6
function is implicitly deleted because its declared type does not match the type of an implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
candidate ignored: %select{not a function template|not a member of the enclosing namespace; did you mean to explicitly qualify the specialization?}0
template parameter is used in default argument declared here
must qualify identifier to find this declaration in dependent base class
add an explicit capture of 'this' to capture '*this' by reference
type %0 is declared here
due to %0 being dllexported%select{|; try compiling in C++11 mode}1
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which captures a C struct that is non-trivial to destroy
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
declared here%select{ in module '%1'|}0
place parentheses around comparison expression to evaluate it first
in evaluation of exception specification for %q0 needed here
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which captures a C struct that is non-trivial to destroy
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of __strong variable
jump exits @synchronized block
jump exits @try block
jump exits scope of __weak variable
jump exits __except block
jump exits __finally block
jump exits __try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit %select{constructor|deduction guide}0 declared here
explicit instantiation candidate function %q0 template here %1
explicit instantiation definition is here
explicit instantiation refers here
explicit specialization declared here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
extern "C" language linkage specification begins here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
field designator refers here
add missing switch cases
final overrider of %q0 in %1
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
member is not a candidate because range type %0 has no '%select{end|begin}1' member
did you mean to use '%0'?
treat the string as an argument to avoid this
format string is defined here
forward declaration of class here
forward declaration of template entity is here
found near match '%0'
from 'diagnose_if' attribute on %0:
add enclosing parentheses to perform a function-style cast
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template %q0 matches specialization %1
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
inline assembly label %0 declared here
Guarded_by declared here.
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}2 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3)|: different exception specifications}1
type declaration hidden
declaration hides type
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
while checking implicit 'delete this' for virtual destructor
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 inferred target collision: call to both %select{__device__|__global__|__host__|__host__ __device__}1 and %select{__device__|__global__|__host__|__host__ __device__}2 members
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
in implicit initialization of binding declaration %0
add 'constexpr'
default member initializer declared here
while declaring the implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 for %0
when looking up '%select{begin|end}0' function for range expression of type %1
in implicit initialization of %select{array element %1 with omitted initializer|field %1 with omitted initializer|trailing array elements in runtime-sized array new}0
in initialization of temporary of type %0 created to list-initialize this reference
include the header <%0> or explicitly provide a declaration for '%1'
conformance of forward class %0 to protocol %1 can not be confirmed
possible target of indirect goto statement
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
insert an explicit cast to silence this issue
initializing field %0 with default member initializer
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
add an explicit instantiation declaration to suppress this warning if %q0 is explicitly instantiated in another translation unit
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
%select{%select{reference|'std::initializer_list'}0 member|member with %select{reference|'std::initializer_list'}0 subobject}1 declared here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
%select{via initialization of|binding reference}0 variable %select{%2 |}1here
the other acquisition of %0 '%1' is here
%0 acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the %select{comparison|bitwise operator}0 first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member is declared here
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
member %0 first declared here
'->' applied to return value of the operator->() declared here
in implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
%0 begins here
function multiversioning caused by this declaration
namespace %0 defined here
consider using vld1_%0%1() to initialize a vector from memory, or vcreate_%0%1() to initialize from an integer constant
consider using vld1q_%0%1() to initialize a vector from memory, or vcombine_%0%1(vcreate_%0%1(), vcreate_%0%1()) to initialize from integer constants
next field declaration is here
next %select{instance variable declaration|synthesized instance variable}0 is here
non-deducible template parameter %0
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
lambda closure types are non-literal types before C++17
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-template declaration found by name lookup
non-usual %0 declared here
non-templated declaration is here
because it has a default argument
field is non-trivial to %select{copy|default-initialize}0
because type %0 has a virtual %select{member function|base class}1
because field %0 has an initializer
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
insert '%select{_Nonnull|_Nullable|_Null_unspecified}0' if the %select{pointer|block pointer|member pointer|array parameter}1 %select{should never be null|may be null|should not declare nullability}0
%0 specified here
use nullability type specifier %0 to affect the innermost pointer type of %1
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
type parameter %0 declared here
method %0 that returns %1 declared here
%select{expected assignment expression|expected compound statement|expected exactly two expression statements|expected in right hand side of the first expression}0
'%0' clause used here
%select{expected an expression statement|expected built-in assignment operator|expected expression of scalar type|expected lvalue expression}0
%select{expected an expression statement|expected built-in binary or unary operator|expected unary decrement/increment operation|expected expression of scalar type|expected assignment expression|expected built-in binary operator|expected one of '+', '*', '-', '/', '&', '^', '%|', '<<', or '>>' built-in operations|expected in right hand side of expression}0
as specified in %select{'collapse'|'ordered'|'collapse' and 'ordered'}0 clause%select{||s}0
%select{|previous }0'hint' clause with value '%1'
%select{|previous }0directive with no 'hint' clause specified
defined as %0
implicitly determined as %0
expected length on mapping of 'this' array section expression to be '1'
expected lower bound on mapping of 'this' array section expression to be '0' or not specified
expected 'this' subscript expression on map clause to be 'this[0]'
loop step is expected to be %select{negative|positive}0 due to this condition
%select{statement|directive}0 outside teams construct here
nested teams construct here
'nowait' clause is here
'ordered' clause with specified parameter
%select{static data member is predetermined as shared|variable with static storage duration is predetermined as shared|loop iteration variable is predetermined as private|loop iteration variable is predetermined as linear|loop iteration variable is predetermined as lastprivate|constant variable is predetermined as shared|global variable is predetermined as shared|non-shared variable in a task construct is predetermined as firstprivate|variable with automatic storage duration is predetermined as private}0%select{|; perhaps you forget to enclose 'omp %2' directive into a parallel or another task region?}1
previous 'critical' region starts here
'%0' clause is specified here
previous clause with directive name modifier specified here
previously marked as task_reduction with different reduction operation
previously referenced here
%0 clause previously used here
predetermined as a firstprivate in a task construct here
previously declared '%0' here
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
parameter of overridden method is annotated with __attribute__((noescape))
overridden method is here
overridden virtual function is here
built-in candidate %0
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %3}1%select{| has different class%diff{ (expected $ but has $)|}5,6| has different number of parameters (expected %5 but has %6)| has type mismatch at %ordinal5 parameter%diff{ (expected $ but has $)|}6,7| has different return type%diff{ ($ expected but has $)|}5,6| has different qualifiers (expected %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 but found %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)| has different exception specification}4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: requires%select{ at least| at most|}3 %4 argument%s4, but %5 %plural{1:was|:were}5 provided
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{requires at least|allows at most single|requires single}3 argument %4, but %plural{0:no|:%5}5 arguments were provided
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: address space mismatch in %select{%ordinal6|'this'}5 argument (%3), parameter type must be %4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5 under ARC
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot %select{convert from|convert from|bind}3 %select{base class pointer|superclass|base class object of type}3 %4 to %select{derived class pointer|subclass|derived class reference}3 %5 for %ordinal6 argument
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}3,4 for %select{%ordinal6 argument|object argument}5%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}7
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4 qualifier%select{||s||s|s|s}4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: 'this' argument has type %3, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}4
candidate template ignored: failed template argument deduction
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__weak|__strong}4 ownership, but parameter has %select{no|__weak|__strong}5 ownership
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: cannot convert initializer list argument to %4
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: expects an l-value for %select{%ordinal4 argument|object argument}3
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: no overload of %4 matching %3 for %ordinal5 argument
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %select{%ordinal7|'this'}6 argument (%3) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}5 ownership
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: call to %select{__device__|__global__|__host__|__host__ __device__|invalid}3 function from %select{__device__|__global__|__host__|__host__ __device__|invalid}4 function
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 not viable: %ordinal5 argument (%3) would lose __unaligned qualifier
candidate template ignored: deduced type %diff{$ of %select{|element of }4%ordinal0 parameter does not match adjusted type $ of %select{|element of }4argument|of %select{|element of }4%ordinal0 parameter does not match adjusted type of %select{|element of }4argument}1,2%3
candidate %select{function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|inherited constructor}0%select{| template| %2}1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}3
candidate template ignored: disabled by %0%1
candidate unavailable as it requires OpenCL extension '%0' to be enabled
candidate disabled: %0
candidate template ignored: requirement '%0' was not satisfied%1
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate address cannot be taken because parameter %0 has pass_object_size attribute
candidate %select{constructor|template}0 ignored: instantiation %select{takes|would take}0 its own class type by value
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced too few arguments for expanded pack %0; no argument for %ordinal1 expanded parameter in deduced argument pack %2
candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3
candidate template ignored: deduced values %diff{of conflicting types for parameter %0 (%1 of type $ vs. %3 of type $)|%1 and %3 of conflicting types for parameter %0}2,4
constructor from base class %0 inherited here
candidate %select{constructor|template}0 ignored: inherited constructor cannot be used to %select{copy|move}1 object
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: cannot deduce a type for %0 that would make %2 equal %1
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
declared with index %0 here
passing argument to parameter here
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
%0 has been marked as being introduced in %1 %2 here, but the deployment target is %1 %3
partial specialization matches %0
inline function performs a conversion which is forbidden in ARC
possible target for call
when applied to this declaration
'#pragma clang attribute push' regions ends here
previous '#pragma pack' directive that modifies alignment is here
did you intend to use '#pragma pack (pop)' instead of '#pragma pack()'?
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous module declaration is here
module loaded from '%0'
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
for type %0
previous explicit instantiation is here
previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0
previous inheritance model specified here
previously defined as an alias for %0
previous template specialization is here
previous uuid specified here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
property %0 is declared %select{deprecated|unavailable|partial}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump enters controlled statement of constexpr if
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump enters controlled statement of if available
jump bypasses initialization of variable of non-trivial C struct type
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump enters Objective-C fast enumeration loop
jump bypasses initialization of @finally block
jump bypasses initialization of __strong variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses initialization of __weak variable
jump bypasses initialization of __except block
jump bypasses initialization of __finally block
jump bypasses initialization of __try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
protocol %0 has no definition
protocol method is here
it could also be property %select{of type %1|without attribute '%1'|with attribute '%1'|with getter %1|with setter %1}0 declared here
qualified call to %0::%1 is treated as a virtual call to %1 due to -fapple-kext
unimplemented pure virtual method %0 in %1
add a variable name to declare a %0 initialized with %1
receiver is instance of class declared here
receiver expression is here
receiver is treated with 'id' type for purpose of method lookup
'%0' included multiple times, additional include site here
'%0' included multiple times, additional include site in header from module '%1'
%select{reference|pointer}0 member declared here
%select{const|reference}0 member %1 will never be initialized
%0 returns a reference
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
remove the call to '%0' since unsigned values cannot be negative
remove call to max function and unsigned zero argument
remove std::move call here
remove parentheses to silence this warning
use function '%0' instead
repeated RISC-V 'interrupt' attribute is here
%select{function|method|block}0 has been explicitly marked sentinel here
if you supply your own aligned allocation functions, use -faligned-allocation to silence this diagnostic
attempt to specialize declaration here
explicitly specialized declaration is here
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
parenthesize the second argument to silence
%select{parenthesize the third argument|cast the second argument to 'int'}0 to silence
conversion to %select{integral|enumeration}0 type %1
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
class template %0 was explicitly specialized here
in instantiation of template class %q0 requested here
class template %0 was instantiated here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
declared as a non-template here
in instantiation of member class %q0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
in instantiation of default member initializer %q0 requested here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
Thread warning in function %0
%select{destructor|deallocator}0 has a %select{non-throwing|implicit non-throwing}1 exception specification
function declared non-throwing here
required alignment of type %0 (%1 bytes) is larger than the supported alignment of C++ exception objects on this target (%2 bytes)
%select{alignment|size}0 of first field is %1 bits
%0 is incomplete
%select{function %1 which returns const-qualified type %2 declared here|variable %1 declared const here|%select{non-|}1static data member %2 declared const here|member function %q1 is declared const here|%select{|nested }1data member %2 declared const here}0
%select{first|second}0 operand was implicitly converted to type %1
did you mean to use '.' instead?
use a tag name here to establish linkage prior to definition
referenced member %0 is declared here
enclose %0 in %select{an @available|a __builtin_available}1 check to silence this warning
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
%select{uninitialized use occurs|variable is captured by block}0 here
silence by adding parentheses to mark code as explicitly dead
unguarded header; consider using #ifdef guards or #pragma once
use non-reference type %0
use reference type %0 to prevent copying
use 'thread_local' to allow this
use non-reference type %0 to keep the copy or type %1 to prevent copying
used here
used in initialization here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
use %select{an alias declaration|a typedef declaration|a reference|a const variable|a constexpr variable}0 instead
conflicting declaration
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
variable %0 is declared here
variable %0 is%select{| explicitly}1 captured here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
which delegates to
detected while default synthesizing properties in class implementation
widen this field to %0 bits to store all values of %1
within field of type %0 declared here
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
absolute value function %0 given an argument of type %1 but has parameter of type %2 which may cause truncation of value
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
acquiring %0 '%1' requires negative capability '%2'
%0 '%1' must be acquired before '%2'
Cycle in acquired_before/after dependencies, starting with '%0'
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
reference cannot be bound to dereferenced null pointer in well-defined C++ code; pointer may be assumed to always convert to true
reference cannot be bound to dereferenced null pointer in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
second argument to __builtin_alloca_with_align is supposed to be in bits
multiple suitable %0 functions for %1; no 'operator delete' function will be invoked if initialization throws an exception
width of anonymous bit-field (%0 bits) exceeds width of its type; value will be truncated to %1 bit%s1
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
call to function without interrupt attribute could clobber interruptee's VFP registers
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
the argument to %0 has side effects that will be discarded
%select{@available|__builtin_available}0 does not guard availability here; use if (%select{@available|__builtin_available}0) instead
specifying 'uuid' as an ATL attribute is deprecated; use __declspec instead
implicit use of sequentially-consistent atomic may incur stronger memory barriers than necessary
memory order argument to atomic operation is invalid
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
@protocol is using a forward protocol declaration of %0
'abi_tag' attribute on %select{non-inline|anonymous}0 namespace ignored
consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable
%0 attribute has invalid identifier for base name
%0 attribute has invalid identifier for context name
%0 attribute cannot be applied to this declaration
parameter of %0 attribute must be a Swift function name string
%0 attribute can only be applied to function declarations with prototypes
%0 attribute for getter must not take any parameters besides 'self:'
%0 attribute is missing parameter label clause
%0 attribute cannot specify more than one 'self:' parameter
too %select{few|many}0 parameters in %1 attribute (expected %2; got %3)
%0 attribute has invalid identifier for parameter name
%0 attribute for setter must take one parameter for new value
%0 attribute for 'subscript' must take a 'self:' parameter
%0 attribute for 'subscript' getter cannot take a 'newValue:' parameter
%0 attribute for 'subscript' must take at least one parameter
%0 attribute for 'subscript' must be a getter or setter
%0 attribute for 'subscript' setter cannot take multiple 'newValue:' parameters
%0 attribute for 'subscript' setter must take a 'newValue:' parameter
multiple identical address spaces specified for type
attribute %0 after definition is ignored
%0 attribute parameter %1 is negative and will be ignored
propagating dll attribute to %select{already instantiated|explicitly specialized}0 base class template without dll attribute is not supported
redeclaration of %q0 should not add %q1 attribute
explicit instantiation declaration should not be 'dllexport'
definition of dllimport static field
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
%0 attribute ignored on inline function
'%0' attribute cannot be specified on a definition
'noescape' attribute ignored on parameter of non-pointer type %0
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
'packed' attribute was ignored on bit-fields with single-byte alignment in older versions of GCC and Clang
%0 attribute only applies to a pointer or reference (%1 is invalid)
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 attribute only applies to return values that are pointers
%0 attribute only applies to return values that are pointers or references
section attribute is specified on redeclared variable
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
'auto' storage class specifier is redundant and incompatible with C++11
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
auto property synthesis will not synthesize property %0; it will be implemented by its superclass, use @dynamic to acknowledge intention
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
ignoring availability attribute %select{on '+load' method|with constructor attribute|with destructor attribute}0
only 'unavailable' and 'deprecated' are supported for Swift availability
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
base class %0 is uninitialized when used here to access %q1
binding reference member %0 to stack allocated %select{variable|parameter}2 %1
binding dereferenced null pointer to reference has undefined behavior
bit-field %0 is not wide enough to store all enumerators of %1
width of bit-field %0 (%1 bits) exceeds the width of its type; value will be truncated to %2 bit%s2
'%0' within '%1'
block captures an autoreleasing out-parameter, which may result in use-after-free bugs
attribute %0 ignored, because it cannot be applied to omitted return type
'%0' qualifier on omitted return type %1 has no effect
switch condition has boolean value
braces around scalar initializer
'break' is bound to loop, GCC binds it to switch
use of unknown builtin %0
call to pure virtual member function %0 has undefined behavior; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast between incompatible calling conventions '%0' and '%1'; calls through this pointer may abort at runtime
nonnull %select{function call|parameter}0 '%1' will evaluate to 'true' on first encounter
cast of type %0 to %1 is deprecated; use sel_getName instead
cast from %0 to %1 drops %select{const and volatile qualifiers|const qualifier|volatile qualifier}2
cast from %0 to %1 must have all intermediate pointers const qualified to be safe
category is implementing a method which will also be implemented by its primary class
calling convention %0 ignored for this target
%0 calling convention ignored on constructor/destructor
%0 calling convention ignored on variadic function
cannot refer to a non-static member from the handler of a %select{constructor|destructor}0 function try block
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
%select{class|category}0 %1 does not conform to protocol%plural{1: %3|2:s %3 and %4|3:s %3, %4 and %5|:s %3, %4, %5, ...}2
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
collection expression type %0 may not respond to %1
possible misuse of comma operator here
%select{self-|array }0comparison always evaluates to %select{a constant|%2}1
bitwise comparison always evaluates to %select{false|true}0
comparison of two values with different enumeration types%diff{ ($ and $)|}0,1
comparison of two values with different enumeration types in switch statement%diff{ ($ and $)|}0,1
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
%0 is required to declare the member 'unhandled_exception()' when exceptions are enabled
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to record %2 that is not trivial to %select{primitive-default-initialize|primitive-copy}3
constructor parameter %0 shadows the field %1 of %2
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
multiple return statements in constexpr function is incompatible with C++ standards before C++14
constexpr function with no return statements is incompatible with C++ standards before C++14
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++14
return type deduction is incompatible with C++ standards before C++14
generic lambdas are incompatible with C++11
initialized lambda captures are incompatible with C++ standards before C++14
variable templates are incompatible with C++ standards before C++14
attribute %0 ignored, because it cannot be applied to a type
class template argument deduction is incompatible with C++ standards before C++17%select{|; for compatibility, use explicit type name %1}0
'constexpr' non-static member function will not be implicitly 'const' in C++14; add 'const' to avoid a change in behavior
decomposition declarations are incompatible with C++ standards before C++17
inline variables are incompatible with C++ standards before C++17
by value capture of '*this' is incompatible with C++ standards before C++17
non-type template parameters declared with %0 are incompatible with C++ standards before C++17
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2a
function try block in constexpr %select{function|constructor}0 is incompatible with C++ standards before C++2a
explicitly defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 with a type different from the implicit type is incompatible with C++ standards before C++2a
explicit capture of 'this' with a capture default of '=' is incompatible with C++ standards before C++2a
mangled name of %0 will change in C++17 due to non-throwing exception specification in function signature
%select{default construction|assignment}0 of lambda is incompatible with C++ standards before C++2a
invoking a pointer to a 'const &' member function on an rvalue is incompatible with C++ standards before C++2a
'char8_t' type specifier is incompatible with C++ standards before C++20
aggregate initialization of type %0 with user-declared constructors is incompatible with C++2a
type of UTF-8 string literal will change from array of const char to array of const char8_t in C++2a
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
jump from this goto statement to its label is incompatible with C++98
jump from this indirect goto statement to one of its possible targets is incompatible with C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
jump from switch statement to this case label is incompatible with C++98
%select{copying variable|copying parameter|returning object|initializing statement expression result|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
ms_struct may not produce Microsoft-compatible layouts for classes with base classes or virtual functions
%select{reference|backing array for 'std::initializer_list'}2 %select{|subobject of }1member %0 %select{binds to|is}2 a temporary object whose lifetime is shorter than the lifetime of the constructed object
%select{temporary %select{whose address is used as value of|%select{|implicitly }2bound to}4 %select{%select{|reference }4member of local variable|local %select{variable|reference}4}1|array backing %select{initializer list subobject of local variable|local initializer list}1}0 %select{%3 |}2will be destroyed at the end of the full-expression
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2|typedef in %2|type alias in %2}1
attribute %0 is ignored, place it after "%select{class|struct|interface|union|enum}1" to apply attribute to type declaration
%plural{1:enumeration value %1 not explicitly handled in switch|2:enumeration values %1 and %2 not explicitly handled in switch|3:enumeration values %1, %2, and %3 not explicitly handled in switch|:%0 enumeration values not explicitly handled in switch: %1, %2, %3...}0
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 is implicitly deleted
constructor for %0 creates a delegation cycle
%select{delete|destructor}0 called on %1 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as 'delete[]'
deleting pointer to incomplete type %0 may cause undefined behavior
%select{delete|destructor}0 called on non-final %1 that has virtual functions but non-virtual destructor
%0 is deprecated
'deprecated' attribute on anonymous namespace ignored
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2
implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 is deprecated: %1
out-of-line definition of constexpr static data member is redundant in C++17 and is deprecated
'register' storage class specifier is deprecated and incompatible with C++17
conversion from string literal to %0 is deprecated
implicit capture of 'this' with a capture default of '=' is deprecated
dereferencing %0; was declared with a 'noderef' type
dereferencing expression marked as 'noderef'
%0 overrides a destructor but is not marked 'override'
explicit call to +initialize results in duplicate call to +initialize
instance variable %0 is being directly accessed
explicit call to [super initialize] should only be in implementation of +initialize
body of cpu_dispatch function will be ignored
'%0' will return the size of the pointer, not the array itself
%q0 redeclared inline; %1 attribute ignored
double precision constant requires cl_khr_fp64, casting to single precision
acquiring %0 '%1' that is already held
attribute %0 is already applied with different parameters
attribute %0 is already applied
duplicate code segment specifiers
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to %select{|class containing a }2dynamic class %3; vtable pointer will be %select{overwritten|copied|moved|compared}4
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
overflow in enumeration value
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
declaration requires an exit-time destructor
expecting %0 '%1' to be held at start of each loop
expecting %0 '%1' to be held at the end of function
explicit instantiation of %0 that occurs after an explicit specialization has no effect
'extern' variable has an initializer
control reaches end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control reaches end of non-void function
control reaches end of non-void lambda
function declared 'noreturn' should not return
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
enumeration value %0 is out of range of flags in enumeration type %1
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
'begin' and 'end' returning different types (%0 and %1) is incompatible with C++ standards before C++17
loop variable %0 %diff{has type $ but is initialized with type $| is initialized with a value of a different type}1,2 resulting in a copy
loop variable %0 of type %1 creates a copy from type %2
loop variable %0 is always a copy because the range of type %1 does not return a reference
using '%%P' format specifier without precision
%select{values of type|enum values with underlying type}2 '%0' should not be used as format arguments; add an explicit cast to %1 instead
format specifies type %0 but the argument has %select{type|underlying type}2 %1
using '%0' format specifier annotation outside of os_log()/os_trace()
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
redefinition of forward class %0 of a typedef name of an object type is ignored
cannot call function '%1' while %0 '%2' is held
calling function %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of function %q0 required here, but no definition is available
function definition inside an Objective-C container is deprecated
%0 overrides a member function but is not marked 'override'
Objective-C GC does not allow weak variables on the stack
GCC does not allow the %0 attribute to be written on a type
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
arithmetic on a null pointer treated as a cast from integer to pointer is a GNU extension
passing variable %1 by reference requires holding %0 %select{'%2'|'%2' exclusively}3
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
inheritance model ignored on %select{primary template|partial specialization}0
'objc_externally_retained' can only be applied to local variables %select{of retainable type|with strong ownership}0
size of static array must be an integer constant expression
implicit truncation from %2 to bit-field changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion increases floating-point precision: %0 to %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion when assigning computation result loses floating-point precision: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of out of range value from %0 to %1 is undefined
implicit conversion from %0 to %1 changes non-zero value from %2 to %3
implicit conversion turns floating-point number into bool: %0 to %1
higher order bits are zeroes after implicit conversion
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
the resulting value is always non-negative after implicit conversion
implicit conversion of %select{NULL|nullptr}0 constant to %1
implicit boolean conversion of Objective-C object literal always evaluates to true
address of%select{| function| array}0 '%1' will always evaluate to 'true'
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this class implementation
class property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%1' requires inclusion of the header <%0>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
direct base %0 is inaccessible due to ambiguity:%1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
encoding of %0 type is incomplete because %1 component has unknown encoding
incrementing expression of type bool is deprecated and incompatible with C++17
'objc_independent_class' attribute may be put on a typedef only; attribute is ignored
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of %select{variable|parameter}2 %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer overrides prior initialization of this subobject
inline namespace reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
'internal_linkage' attribute on a non-static local variable is ignored
invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
invalid capability name '%0'; capability name must be 'mutex' or 'role'
invalid constructor form class in system header, should not be explicit
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
jump out of __finally block has undefined behavior
ignored 'inline' attribute on kernel function %0
kernel function %0 is a member function; this may not be accepted by nvcc
%0 '%1' is acquired exclusively and shared in the same scope
%0 '%1' is not held on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this %select{comparison|bitwise operator}0
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
only one parameter on 'main' declaration
variable named 'main' with external linkage has undefined behavior
bool literal returned from 'main'
taking the max of %select{a value and unsigned zero|unsigned zero and a value}0 is always equal to the other value
control may reach end of coroutine; which is undefined behavior because the promise type %0 does not declare 'return_void()'
control may reach end of non-void function
control may reach end of non-void lambda
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
'%0' will always overflow; destination buffer has size %1, but size argument is %2
size argument in %0 call is a comparison
messaging unqualified id
'mig_server_routine' attribute only applies to routines that return a kern_return_t
MIPS 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0
availability does not match previous declaration
%select{|overriding }4method %select{introduced after|deprecated before|obsoleted before}0 %select{the protocol method it implements|overridden method}4 on %1 (%2 vs. %3)
%select{|overriding }1method cannot be unavailable on %0 when %select{the protocol method it implements|its overridden method}1 is available
'delete%select{|[]}0' applied to a pointer that was allocated with 'new%select{[]|}0'; did you mean 'delete%select{[]|}0'?
%select{codeseg|section}0 does not match previous declaration
suggest braces around initialization of subobject
%plural{1:enumeration value %1 not handled in switch|2:enumeration values %1 and %2 not handled in switch|3:enumeration values %1, %2, and %3 not handled in switch|:%0 enumeration values not handled in switch: %1, %2, %3...}0
no case matching constant switch condition '%0'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comparison of integers of different signs: %0 and %1
modifying constructor parameter %0 that shadows a field of %1
multiple methods named %0 found
several methods with selector %0 of mismatched types are found for the @selector expression
CPU list contains duplicate entries; attribute ignored
vector initializers are not compatible with NEON intrinsics in big endian mode
array backing %select{initializer list subobject of the allocated object|the allocated initializer list}0 will be destroyed at the end of the full-expression
temporary bound to reference member of allocated object will be destroyed at the end of the full-expression
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
enums in the Microsoft ABI are signed integers by default; consider giving the enum %0 an unsigned underlying type to make this code portable
%0 '%1' is still held at the end of function
'nocf_check' attribute ignored; use -fcf-protection to enable the attribute
'noderef' can only be used on an array or pointer type
casting to dereferenceable pointer removes 'noderef' attribute
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
comparison of nonnull %select{function call|parameter}0 '%1' %select{not |}2equal to a null pointer is '%select{true|false}2' on first encounter
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
%0 attribute only applies to %select{Objective-C object|pointer|pointer-to-CF-pointer|pointer/reference-to-OSObject-pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
'NSObject' attribute may be put on a typedef only; attribute is ignored
null passed to a callee that requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
comparison of %select{address of|function|array}0 '%1' %select{not |}2equal to a null pointer is always %select{true|false}2
synthesized setter %0 for null_resettable property %1 does not handle nil
null returned from %select{function|method}0 that requires a non-null return value
nullability specifier %0 cannot be applied to non-pointer type %1; did you mean to apply the specifier to the %select{pointer|block pointer|member pointer|function pointer|member function pointer}2?
inferring '_Nonnull' for pointer type within %select{array|reference}0 is deprecated
implicit conversion from nullable pointer %0 to non-nullable pointer type %1
%select{pointer|block pointer|member pointer}0 is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
array parameter is missing a nullability type specifier (_Nonnull, _Nullable, or _Null_unspecified)
string is ill-formed as UTF-8 and will become a null %0 when boxed
using %0 directive in %select{NSString|CFString}1 which is being passed as a formatting argument to the formatting %select{method|CFfunction}2
adding %0 to %1 might cause circular dependency in container
object of type %0 is not compatible with %select{array element type|dictionary key type|dictionary value type}1 %2
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
cannot catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'assign' property of object type may become a dangling reference; consider using 'unsafe_unretained'
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
parameterized class %0 already conforms to the protocols listed; did you forget a '*'?
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
convenience initializer missing a 'self' call to another initializer
convenience initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
%0 is incompatible with selectors that return a %select{struct|union|vector}1 type
the meaning of __weak has changed in manual reference-counting
%0 was declared with __weak, but __weak is ignored in files using manual reference counting
ignoring __weak in file using manual reference counting
use of old-style cast
aligned clause will be ignored because the requested alignment is not a power of 2
zero linear step (%0 %select{|and other variables in clause }1should probably be const)
OpenMP loop iteration variable cannot have more than 64 bits size and will be narrowed
OpenMP only allows an ordered construct with the simd clause nested in a simd construct
Non-trivial type %0 is mapped, only trivial types are guaranteed to be mapped correctly
declaration is not declared in any declare target region
array section %select{lower bound|length}0 is of type 'char'
class implementation may not have super class
%0 attribute is deprecated and ignored in OpenCL version %1
passing non-generic address space pointer to %0 may cause dynamic conversion affecting performance
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
os_log() '%%n' format specifier is not allowed
result of comparison of %select{constant %0|true|false}1 with %select{expression of type %2|boolean expression}3 is always %4
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has higher precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
parameter of overriding method should be annotated with __attribute__((noescape))
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
parentheses were disambiguated as redundant parentheses around declaration of variable named %0
passing object of class type %0 through variadic %select{function|block|method|constructor}1%select{|; did you mean to call '%3'?}2
moving a temporary object prevents copy elision
moving a local object in a return statement prevents copy elision
taking the absolute value of %select{pointer|function|array}0 type %1 is suspicious
performing pointer arithmetic on a null pointer has undefined behavior%select{| if the offset is nonzero}0
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
unused attribute %0 in '#pragma clang attribute push' region
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
the current #pragma pack alignment value is modified in the included file
unterminated '#pragma pack (push, ...)' at end of file
non-default #pragma pack value changes the alignment of struct or union members in the included file
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
#pragma %0(pop, ...) failed: %1
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
object format flags cannot be used with '%0' conversion specifier
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
data argument not used by format string
missing object format flag
format string contains '\0' within the string body
format string is not null-terminated
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
'%0' is not a valid object format flag
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property %0 not found on object of type %1; did you mean to access property %2?
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property access is using %0 method which is deprecated
getter name mismatch between property redeclaration (%1) and its original declaration (%0)
property type %0 is incompatible with type %1 inherited from %2
passing the value that %1 points to by reference requires holding %0 %select{'%2'|'%2' exclusively}3
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
'objc_independent_class' attribute may be put on Objective-C object pointer type only; attribute is ignored
authenticating a null pointer will almost certainly trap
signing a null pointer will yield a non-null pointer
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
incompatible redeclaration of library function %0
%q0 redeclared without %1 attribute: previous %1 ignored
%q0 redeclared without 'dllimport' attribute: 'dllexport' attribute added
#pragma redefine_extname is applicable to external C declarations only; not applied to %select{function|variable}0 %1
redefinition of %0 will not be visible outside of this function
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
redundant move in return statement
redundant parentheses surrounding declarator
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
%select{remainder|division}0 by zero is undefined
returning address of label, which is local
returning %select{address of|reference to}0 local temporary object
%select{address of|reference to}0 stack memory associated with %select{local variable|parameter}2 %1 returned
local variable %0 will be copied despite being %select{returned|thrown}1 by name
prior to the resolution of a defect report against ISO C++11, local variable %0 would have been copied despite being returned by name, due to its not matching the function return type%diff{ ($ vs $)|}1,2
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
RISC-V 'interrupt' attribute only applies to functions that have %select{no parameters|a 'void' return type}0
repeated RISC-V 'interrupt' attribute
instance method %0 is being used on 'Class' which is not in the root class
sampler initializer has invalid %0 bits
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second argument to 'va_start' is not the last named parameter
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning value of variable of type %0 to itself
explicitly moving variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
%select{parameter|non-static data member}3 %0 %select{|of %1 }3shadows member inherited from type %2
shift count >= width of type
shifting a negative signed value is undefined
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
expression with side effects will be evaluated despite being used as an operand to 'typeid'
expression with side effects has no effect in an unevaluated context
signed bit-field %0 needs an extra bit to represent the largest positive enumerators of %1
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; %select{contains %0 elements|is of size %0}2, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
this %select{function declaration is not|block declaration is not|old-style function definition is not preceded by}0 a prototype
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1; this is valid, but may result in linker errors under the Microsoft C++ ABI
subtraction of pointers to type %0 of zero size has undefined behavior
subobject initialization overrides initialization of other fields within its enclosing subobject
array subscript is of type 'char'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
field %0 can overwrite instance variable %1 with variable sized type %2 in superclass %3
'size' argument to bzero is '0'
%select{'size' argument to memset is '0'|setting buffer to a 'sizeof' expression}0; did you mean to transpose the last two arguments?
'swift_newtype' attribute may be put on a typedef only; attribute is ignored
the semantics of this intrinsic changed with GCC version 4.4 - the newer semantics are provided here
taking address of packed member %0 of class or structure %q1 may result in an unaligned pointer value
result of comparison %select{%3|%1}0 %2 %select{%1|%3}0 is always %4
overlapping comparisons always evaluate to %select{false|true}0
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
tentative array definition assumed to have one element
'this' pointer cannot be null in well-defined C++ code; pointer may be assumed to always convert to true
'this' pointer cannot be null in well-defined C++ code; comparison may be assumed to always evaluate to %select{true|false}0
%0 attribute requires arguments whose type is annotated with 'capability' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'capability("mutex")' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
%0 attribute without capability arguments refers to 'this', but %1 isn't annotated with 'capability' or 'scoped_lockable' attribute
%0 attribute without capability arguments can only be applied to non-static methods of a class
Thread safety beta warning.
Thread safety verbose warning.
%0 has a non-throwing exception specification but can still throw
underaligned exception object thrown
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
'%0' qualifier on function type %1 has no effect
'%0' qualifier on function type %1 has unspecified behavior
'%0' qualifier on reference type %1 has no effect
vector operands do not have the same elements sizes (%0 and %1)
'static' has no effect on zero-length arrays
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
implementing unavailable method
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
%0 is only available on %1 %2 or newer
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is %select{uninitialized|null}1 when captured by block
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown sanitizer '%0' ignored
releasing %0 '%1' that was not held
releasing %0 '%1' using %select{shared|exclusive}2 access, expected %select{shared|exclusive}3 access
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
code will never be executed
'break' will never be executed
default label in switch which covers all enumeration values
loop will run at most once (loop increment never executed)
'return' will never be executed
multiple unsequenced modifications to %0
unsequenced modification and access to %0
taking the absolute value of unsigned type %0 has no effect
result of comparison of %select{%3|unsigned expression}0 %2 %select{unsigned expression|%3}0 is always %4
assigning value of signed enum type %1 to unsigned bit-field %0; negative enumerators of enum %1 will be converted to positive values
result of comparison of %select{%3|unsigned enum expression}0 %2 %select{unsigned enum expression|%3}0 is always %4
sorry, lifetime extension of %select{temporary|backing array of initializer list}0 created by aggregate initialization using default member initializer is not supported; lifetime of %select{temporary|backing array}0 will end at the end of the full-expression
%select{unsupported|duplicate}0%select{| architecture}1 '%2' in the 'target' attribute string; 'target' attribute ignored
ignoring return value of function declared with %0 attribute
%select{equality|inequality|relational|three-way}0 comparison result unused
unused variable %0
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
lambda capture %0 is not %select{used|required to be captured for this use}1
unused %select{typedef|type alias}0 %1
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
unused %select{function|variable}0 template %1
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
using namespace directive in global context in header
passing %select{an object that undergoes default argument promotion|an object of reference type|a parameter declared with the 'register' keyword}0 to 'va_start' has undefined behavior
%select{reading|writing}1 the value pointed to by %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 the value pointed to by %1 requires holding %0 %select{'%2'|'%2' exclusively}3
instantiation of variable %q0 required here, but no definition is available
%select{reading|writing}1 variable %0 requires holding %select{any mutex|any mutex exclusively}1
%select{reading|writing}3 variable %1 requires holding %0 %select{'%2'|'%2' exclusively}3
field %0 with variable sized type %1 is not visible to subclasses and can conflict with their instance variables
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
Use of 'long' with '__vector' is deprecated
specifying vector types with the 'mode' attribute is deprecated; use the 'vector_size' attribute instead
variable length array used
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
using %select{integer|floating point|complex}1 absolute value function %0 when argument is of %select{integer|floating point|complex}2 type
zero as null pointer constant
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
%0 is only available on %1 %2 and %3 %4 or newer
the selected methods are already implemented
method %0 cannot be renamed because it overrides a method declared in a system framework
no %select{implementation file|@implementation declaration}0 for the selected %select{declaration|@interface}0 %1; please add one and run the refactoring action again
the selected code is not a part of a function's / method's body
the selected expression can't be extracted
the selected expression is too simple to extract
refactoring action can't be initiated without a selection
the provided selection does not overlap with the AST nodes of interest
there is no symbol at the given location
%0 is a builtin function that cannot be renamed
%0 is declared in a %1 file; rename can be initiated in a %1 file only
%0 cannot be renamed because it is declared in a system header
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
break
case
continue
goto
inline
signed
switch
unsigned
while
_Generic
_Imaginary
_Static_assert
_Thread_local
__func__
catch
delete
explicit
export
friend
mutable
typeid
virtual
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
constexpr
decltype
noexcept
static_assert
thread_local
concept
requires
co_await
co_yield
module
import
_Sat
_Decimal32
_Decimal64
_Decimal128
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_va_arg
__label__
__thread
__FUNCTION__
__PRETTY_FUNCTION__
typeof
__FUNCDNAME__
__FUNCSIG__
L__FUNCTION__
L__FUNCSIG__
__is_literal_type
__underlying_type
__module_private__
__declspec
__forceinline
__builtin_astype
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
pipe
__pixel
__bool
__bridge_retain
__covariant
__contravariant
__alignof__
__asm
__attribute__
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__w64
__uuidof
__try
__finally
__leave
__if_exists
__if_not_exists
__interface
__int8
_int8
__int16
_int16
_int32
_int64
_asm
_alignof
__builtin_alignof
_uuidof
_inline
_declspec
__char16_t
__char32_t
__builtin_available
not_keyword
compatibility_alias
defs
encode
implementation
selector
finally
synchronized
autoreleasepool
package
required
optional
synthesize
dynamic
__unknown_anytype
elif
endif
ident
ifdef
undef
assert
ifndef
pragma
defined
include
include_next
__public_macro
__private_macro
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
autorelease
dealloc
finalize
release
retainCount
self
initialize
performSelector
performSelectorInBackground
performSelectorOnMainThread
stringByAppendingFormat
stringWithFormat
new[]
delete[]
nullable
null_unspecified
_Builtin_stddef_max_align_t
framework 
module 
 [system]
 [extern_c]
 [swift_infer_import_as_member]
requires 
umbrella header "
umbrella "
config_macros 
[exhaustive]
textual 
private 
private textual 
exclude 
header "
" { size 
 mtime 
 size 
export_as
export 
use 
link 
conflict 
module * {
export *
Allocation failed
altivec
objc
macabi
simulator
macosx
macosx-fragile
gnustep
objfw
threadprivate
parallel
task
sections
single
master
critical
taskyield
barrier
taskwait
taskgroup
flush
teams
cancel
target data
target enter data
target exit data
target parallel
target parallel for
target update
parallel for
parallel for simd
parallel sections
for simd
cancellation point
declare reduction
taskloop
taskloop simd
end declare target
distribute parallel for
distribute parallel for simd
distribute simd
target parallel for simd
target simd
teams distribute
teams distribute simd
teams distribute parallel for simd
teams distribute parallel for
target teams
target teams distribute
target teams distribute parallel for
target teams distribute parallel for simd
target teams distribute simd
num_threads
safelen
simdlen
collapse
reduction
proc_bind
schedule
depend
num_teams
thread_limit
priority
grainsize
num_tasks
hint
dist_schedule
defaultmap
task_reduction
in_reduction
atomic_default_mem_order
uniform
threadprivate or thread local
close
spread
guided
runtime
monotonic
nonmonotonic
source
sink
uval
tofrom
always
scalar
acq_rel
relaxed
type
address
kernel-address
hwaddress
kernel-hwaddress
memory
kernel-memory
fuzzer
fuzzer-no-link
leak
alignment
array-bounds
builtin
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
nonnull-attribute
nullability-arg
nullability-assign
nullability-return
nullability
object-size
pointer-overflow
returns-nonnull-attribute
shift-base
shift-exponent
shift
signed-integer-overflow
unreachable
vla-bound
vptr
unsigned-integer-overflow
dataflow
cfi-cast-strict
cfi-derived-cast
cfi-icall
cfi-mfcall
cfi-unrelated-cast
cfi-nvcall
cfi-vcall
safe-stack
shadow-call-stack
undefined
undefined-trap
implicit-unsigned-integer-truncation
implicit-signed-integer-truncation
implicit-integer-truncation
implicit-integer-sign-change
implicit-integer-arithmetic-value-change
implicit-conversion
integer
local-bounds
bounds
efficiency-cache-frag
efficiency-working-set
efficiency-all
scudo
<invalid loc>
<invalid>
 <Spelling=
<<<MISSING SOURCE FILE>>>
<invalid>
UTF-16 (BE)
UTF-16 (LE)
UTF-32 (BE)
UTF-32 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SDSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
<inline asm>
<scratch space>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
Allocation failed
mcount
cf-protection=branch
cf-protection=return
signed char
unsigned char
short
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
__tune_
__declspec(a)
__attribute__((a))
__))
WIN32
WINNT
WIN64
__MINGW64__
__MSVCRT__
__MINGW32__
#define 
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i32:32:32-f32:32:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
e-m:e-p:32:32:32-a:0-n16:32-i64:64:64-i32:32:32-i16:16:16-i1:8:8-f32:32:32-f64:64:64-v32:32:32-v64:64:64-v512:512:512-v1024:1024:1024-v2048:2048:2048
E-m:e-p:32:32-i64:64-a:0:32-n32-S64
e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8
E-m:e-p:64:64-i64:64-n32:64-S128
e-m:e-p:64:64-i64:64-n32:64-S128
e-m:e-p:16:16-i32:16-i64:16-f32:16-f64:16-a:8-n8:16-S16
mips32r2
mips64r2
e-m:e-v128:32-v16:16-v32:32-v96:32-n8:16:32:64-S128
E-m:o-p:32:32-f64:32:64-n32
mcount
E-m:e-p:32:32-i64:64-n32
603e
603ev
604e
7400
7450
power3
pwr3
power4
pwr4
power5
pwr5
power5x
pwr5x
power6
pwr6
power6x
pwr6x
power7
pwr7
power8
pwr8
ppc64le
power9
pwr9
__TEXT,__StaticInit,regular,pure_instructions
E-m:o-i64:64-n32:64
e-m:e-i64:64-n32:64
elfv2
E-m:e-i64:64-n32:64
elfv1
e-m:e-p:32:32-i64:64-n32-S128
ilp32
e-m:e-p:64:64-i64:64-i128:128-n64-S128
lp64
E-m:e-p:32:32-i64:64-f128:64-n32-S64
e-m:e-p:32:32-i64:64-f128:64-n32-S64
+soft-float
E-m:e-i64:64-n32:64-S128
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
E-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-p:32:32:32-i1:8:8-i8:8:32-i16:16:32-i32:32:32-i64:32:32-f32:32:32-f64:32:32-v64:32:32-v128:32:32-v256:32:32-v512:32:32-v1024:32:32-a0:0:32-n32
e-m:o-p:32:32-f64:32:64-f80:128-n8:16:32-S128
e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128
xmm0
~{dirflag},~{fpsr},~{flags}
avx512
no-mmx
avx512f
_mcount
.text.startup
unix
linux
__gnu_linux__
__ELF__
__ANDROID__
__ANDROID_API__
_REENTRANT
_GNU_SOURCE
__FLOAT128__
__mcount
__NetBSD__
__unix__
__OpenBSD__
e-m:x-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
_X86_
__CYGWIN__
__CYGWIN32__
e-m:e-p:32:32-i64:64-f80:32-n8:16:32-a:0:32-S32
_WIN32
_WIN64
_M_IX86
_CPPRTTI
_CPPUNWIND
__BOOL_DEFINED
_CHAR_UNSIGNED
_MSC_VER
_MSC_FULL_VER
_MSC_BUILD
_HAS_CHAR16_T_LANGUAGE_SUPPORT
_MSVC_LANG
201704L
201703L
201402L
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
__INTEL__
__HAIKU__
__rtems__
e-m:e-p:32:32-i64:32-f64:32-f128:32-n8:16:32-a:0:32-S32
__iamcu
__iamcu__
e-m:o-i64:64-f80:128-n8:16:32:64-S128
e-m:e-p:32:32-i64:64-f80:128-n8:16:32:64-S128
e-m:w-i64:64-f80:128-n8:16:32:64-S128
e-m:e-i64:64-f80:128-n8:16:32:64-S128
cx16
__x86_64__
__CYGWIN64__
_M_X64
_M_AMD64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
__CloudABI__
__STDC_ISO_10646__
201206L
__STDC_UTF_16__
__STDC_UTF_32__
.mcount
__FreeBSD__
__FreeBSD_cc_version
__KPRINTF_ATTRIBUTE__
__STDC_MB_MIGHT_NEQ_WC__
__Fuchsia__
e-m:e-p:32:32-i64:64-n8:16:32-S128
e-m:e-p:32:32-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
E-p:32:32:32-i8:8:32-i16:16:32-n32
e-p:32:32:32-i8:8:32-i16:16:32-n32
nios2r2mandatory
nios2r2bmx
nios2r2mpx
nios2r2cdx
nios2r1
nios2r2
eabi
ctl0
ctl1
ctl2
ctl3
ctl4
ctl5
ctl6
ctl7
ctl8
ctl9
ctl10
ctl11
ctl12
ctl13
ctl14
ctl15
zero
status
estatus
bstatus
ienable
ipending
cpuid
pteaddr
tlbacc
tlbmisc
badaddr
config
mpubase
mpuacc
~{$1}
octeon
cnmips
+single-float
+mips16
+micromips
+dsp
+dspr2
+msa
+nomadd4
+fp64
-fp64
+fpxx
+nan2008
-nan2008
+abs2008
-abs2008
+noabicalls
+use-indirect-jump-hazard
mips32r6
mips64r6
m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
m:e-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
m:e-i8:8:32-i16:16:32-i64:64-n32:64-S128
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$ac1hi
$ac1lo
$ac2hi
$ac2lo
$ac3hi
$ac3lo
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
E-m:e-p:32:32-i64:64-n32:64
__PPC__
__PPU__
__CELLOS_LV2__
__LP32__
_ARCH_PPC64
__powerpc64__
__svr4__
__SVR4
_XOPEN_SOURCE
__C99FEATURES__
_LARGEFILE_SOURCE
_LARGEFILE64_SOURCE
__EXTENSIONS__
transactional-execution
vector
vector-enhancements-1
+transactional-execution
+vector
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64
__Ananas__
__DragonFly__
__DragonFly_cc_version
100001
__tune_i386__
__FreeBSD_kernel__
__GLIBC__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
__GNU__
__gnu_hurd__
__MACH__
900001
__ORBIS__
e-m:e-p:32:32-i64:64-n32:64-S128
bleeding-edge
simd128
nontrapping-fptoint
sign-ext
__builtin_neon_vabd_v
V8ScV8ScV8Sci
__builtin_neon_vabdd_f64
__builtin_neon_vabdq_v
V16ScV16ScV16Sci
__builtin_neon_vabds_f32
__builtin_neon_vabs_v
V8ScV8Sci
__builtin_neon_vabsd_s64
WiWi
__builtin_neon_vabsq_v
V16ScV16Sci
__builtin_neon_vaddd_s64
WiWiWi
__builtin_neon_vaddd_u64
UWiUWiUWi
__builtin_neon_vaddhn_v
V8ScV16ScV16Sci
__builtin_neon_vaddlv_s16
iV4s
__builtin_neon_vaddlv_s32
WiV2i
__builtin_neon_vaddlv_s8
sV8Sc
__builtin_neon_vaddlv_u16
UiV4Us
__builtin_neon_vaddlv_u32
UWiV2Ui
__builtin_neon_vaddlv_u8
UsV8Sc
__builtin_neon_vaddlvq_s16
iV8s
__builtin_neon_vaddlvq_s32
WiV4i
__builtin_neon_vaddlvq_s8
sV16Sc
__builtin_neon_vaddlvq_u16
UiV8Us
__builtin_neon_vaddlvq_u32
UWiV4Ui
__builtin_neon_vaddlvq_u8
UsV16Sc
__builtin_neon_vaddv_f32
fV2f
__builtin_neon_vaddv_s16
sV4s
__builtin_neon_vaddv_s32
iV2i
__builtin_neon_vaddv_s8
ScV8Sc
__builtin_neon_vaddv_u16
UsV4Us
__builtin_neon_vaddv_u32
UiV2Ui
__builtin_neon_vaddv_u8
__builtin_neon_vaddvq_f32
fV4f
__builtin_neon_vaddvq_f64
dV2d
__builtin_neon_vaddvq_s16
sV8s
__builtin_neon_vaddvq_s32
iV4i
__builtin_neon_vaddvq_s64
WiV2Wi
__builtin_neon_vaddvq_s8
ScV16Sc
__builtin_neon_vaddvq_u16
UsV8Us
__builtin_neon_vaddvq_u32
UiV4Ui
__builtin_neon_vaddvq_u64
UWiV2UWi
__builtin_neon_vaddvq_u8
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbsl_v
V8ScV8ScV8ScV8Sci
__builtin_neon_vbslq_v
V16ScV16ScV16ScV16Sci
__builtin_neon_vcage_v
__builtin_neon_vcaged_f64
UWidd
__builtin_neon_vcageq_v
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcagt_v
__builtin_neon_vcagtd_f64
__builtin_neon_vcagtq_v
__builtin_neon_vcagts_f32
__builtin_neon_vcale_v
__builtin_neon_vcaled_f64
__builtin_neon_vcaleq_v
__builtin_neon_vcales_f32
__builtin_neon_vcalt_v
__builtin_neon_vcaltd_f64
__builtin_neon_vcaltq_v
__builtin_neon_vcalts_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqd_s64
__builtin_neon_vceqd_u64
__builtin_neon_vceqs_f32
__builtin_neon_vceqz_v
__builtin_neon_vceqzd_f64
UWid
__builtin_neon_vceqzd_s64
__builtin_neon_vceqzd_u64
__builtin_neon_vceqzq_v
__builtin_neon_vceqzs_f32
__builtin_neon_vcged_f64
__builtin_neon_vcged_s64
__builtin_neon_vcged_u64
__builtin_neon_vcges_f32
__builtin_neon_vcgez_v
__builtin_neon_vcgezd_f64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgezq_v
__builtin_neon_vcgezs_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzd_f64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtzq_v
__builtin_neon_vcgtzs_f32
__builtin_neon_vcled_f64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vcles_f32
__builtin_neon_vclez_v
__builtin_neon_vclezd_f64
__builtin_neon_vclezd_s64
__builtin_neon_vclezq_v
__builtin_neon_vclezs_f32
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vcltd_f64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vclts_f32
__builtin_neon_vcltz_v
__builtin_neon_vcltzd_f64
__builtin_neon_vcltzd_s64
__builtin_neon_vcltzq_v
__builtin_neon_vcltzs_f32
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvt_f16_f32
V8ScV16Sci
__builtin_neon_vcvt_f16_v
V4hV8Sci
__builtin_neon_vcvt_f32_f16
V16ScV8Sci
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f32_v
V2fV8Sci
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_f64_v
V1dV8Sci
__builtin_neon_vcvt_n_f16_v
V4hV8ScIii
__builtin_neon_vcvt_n_f32_v
V2fV8ScIii
__builtin_neon_vcvt_n_f64_v
V1dV8ScIii
__builtin_neon_vcvt_n_s16_v
V8ScV8ScIii
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvt_n_u16_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvt_s16_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvt_u16_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvta_s16_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvta_u16_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtaq_s16_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvtaq_u16_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvtd_f64_u64
dUWi
__builtin_neon_vcvtd_n_f64_s64
dWiIi
__builtin_neon_vcvtd_n_f64_u64
dUWiIi
__builtin_neon_vcvtd_n_s64_f64
WidIi
__builtin_neon_vcvtd_n_u64_f64
UWidIi
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvtm_s16_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtm_u16_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtmq_s16_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtmq_u16_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtn_s16_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtn_u16_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtnq_s16_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtnq_u16_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtp_s16_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtp_u16_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtpq_s16_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtpq_u16_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtq_f16_v
V8hV16Sci
__builtin_neon_vcvtq_f32_v
V4fV16Sci
__builtin_neon_vcvtq_f64_v
V2dV16Sci
__builtin_neon_vcvtq_n_f16_v
V8hV16ScIii
__builtin_neon_vcvtq_n_f32_v
V4fV16ScIii
__builtin_neon_vcvtq_n_f64_v
V2dV16ScIii
__builtin_neon_vcvtq_n_s16_v
V16ScV16ScIii
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvtq_n_u16_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vcvtq_s16_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvtq_u16_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_f32_u32
__builtin_neon_vcvts_n_f32_s32
fiIi
__builtin_neon_vcvts_n_f32_u32
fUiIi
__builtin_neon_vcvts_n_s32_f32
ifIi
__builtin_neon_vcvts_n_u32_f32
UifIi
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvtx_f32_v
V2fV16Sci
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vdot_v
__builtin_neon_vdotq_v
__builtin_neon_vdupb_lane_i8
ScV8ScIi
__builtin_neon_vdupb_laneq_i8
ScV16ScIi
__builtin_neon_vdupd_lane_f64
dV1dIi
__builtin_neon_vdupd_lane_i64
UWiV1WiIi
__builtin_neon_vdupd_laneq_f64
dV2dIi
__builtin_neon_vdupd_laneq_i64
UWiV2WiIi
__builtin_neon_vduph_lane_f16
hV4hIi
__builtin_neon_vduph_lane_i16
UsV4sIi
__builtin_neon_vduph_laneq_f16
hV8hIi
__builtin_neon_vduph_laneq_i16
UsV8sIi
__builtin_neon_vdups_lane_f32
fV2fIi
__builtin_neon_vdups_lane_i32
UiV2iIi
__builtin_neon_vdups_laneq_f32
fV4fIi
__builtin_neon_vdups_laneq_i32
UiV4iIi
__builtin_neon_vext_v
V8ScV8ScV8ScIii
__builtin_neon_vextq_v
V16ScV16ScV16ScIii
__builtin_neon_vfma_lane_v
V8ScV8ScV8ScV8ScIii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16ScIii
__builtin_neon_vfma_v
__builtin_neon_vfmad_lane_f64
dddV1dIi
__builtin_neon_vfmad_laneq_f64
dddV2dIi
__builtin_neon_vfmah_lane_f16
hhhV4hIi
__builtin_neon_vfmah_laneq_f16
hhhV8hIi
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8ScIii
__builtin_neon_vfmaq_laneq_v
V16ScV16ScV16ScV16ScIii
__builtin_neon_vfmaq_v
__builtin_neon_vfmas_lane_f32
fffV2fIi
__builtin_neon_vfmas_laneq_f32
fffV4fIi
__builtin_neon_vfmlal_high_v
V2fV2fV8ScV8Sci
__builtin_neon_vfmlal_low_v
__builtin_neon_vfmlalq_high_v
V4fV4fV16ScV16Sci
__builtin_neon_vfmlalq_low_v
__builtin_neon_vfmlsl_high_v
__builtin_neon_vfmlsl_low_v
__builtin_neon_vfmlslq_high_v
__builtin_neon_vfmlslq_low_v
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vget_lane_i8
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vld1_dup_v
V8ScvC*i
__builtin_neon_vld1_lane_v
V8ScvC*V8ScIii
__builtin_neon_vld1_v
__builtin_neon_vld1_x2_v
vv*vC*i
__builtin_neon_vld1_x3_v
__builtin_neon_vld1_x4_v
__builtin_neon_vld1q_dup_v
V16ScvC*i
__builtin_neon_vld1q_lane_v
V16ScvC*V16ScIii
__builtin_neon_vld1q_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2_lane_v
vv*vC*V8ScV8ScIii
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2q_lane_v
vv*vC*V16ScV16ScIii
__builtin_neon_vld2q_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3_lane_v
vv*vC*V8ScV8ScV8ScIii
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3q_lane_v
vv*vC*V16ScV16ScV16ScIii
__builtin_neon_vld3q_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8ScIii
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16ScIii
__builtin_neon_vld4q_v
__builtin_neon_vldrq_p128
ULLLivC*
__builtin_neon_vmax_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vmaxnmv_f16
hV8Sc
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f16
hV16Sc
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
__builtin_neon_vmaxq_v
__builtin_neon_vmaxv_f16
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxvq_f16
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmin_v
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vminnmv_f16
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f16
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vminq_v
__builtin_neon_vminv_f16
__builtin_neon_vminv_f32
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_s8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminv_u8
__builtin_neon_vminvq_f16
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_u8
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16ScIii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vmul_v
__builtin_neon_vmull_p64
ULLLiUWiUWi
__builtin_neon_vmull_v
V16ScV8ScV8Sci
__builtin_neon_vmulq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxd_f64
__builtin_neon_vmulxh_lane_f16
hhV4hIi
__builtin_neon_vmulxh_laneq_f16
hhV8hIi
__builtin_neon_vmulxq_v
__builtin_neon_vmulxs_f32
__builtin_neon_vnegd_s64
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_u64
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vpaddq_v
__builtin_neon_vpadds_f32
__builtin_neon_vpmax_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxq_v
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmin_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminq_v
__builtin_neon_vpminqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vqabs_v
__builtin_neon_vqabsb_s8
ScSc
__builtin_neon_vqabsd_s64
__builtin_neon_vqabsh_s16
__builtin_neon_vqabsq_v
__builtin_neon_vqabss_s32
__builtin_neon_vqadd_v
__builtin_neon_vqaddb_s8
ScScSc
__builtin_neon_vqaddb_u8
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddd_u64
__builtin_neon_vqaddh_s16
__builtin_neon_vqaddh_u16
__builtin_neon_vqaddq_v
__builtin_neon_vqadds_s32
__builtin_neon_vqadds_u32
__builtin_neon_vqdmlal_v
V16ScV16ScV8ScV8Sci
__builtin_neon_vqdmlalh_lane_s16
iisV4sIi
__builtin_neon_vqdmlalh_laneq_s16
iisV8sIi
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_lane_s32
WiWiiV2iIi
__builtin_neon_vqdmlals_laneq_s32
WiWiiV4iIi
__builtin_neon_vqdmlals_s32
WiWiii
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmull_v
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
Wiii
__builtin_neon_vqmovn_v
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovnd_u64
UiUWi
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovnh_u16
ScUs
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovns_u32
UsUi
__builtin_neon_vqmovun_v
__builtin_neon_vqmovund_s64
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqneg_v
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegd_s64
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegq_v
__builtin_neon_vqnegs_s32
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlb_u8
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshld_u64
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshlh_u16
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshls_u32
__builtin_neon_vqrshrn_n_v
V8ScV16ScIii
__builtin_neon_vqrshrnd_n_s64
iWiIi
__builtin_neon_vqrshrnd_n_u64
UiUWiIi
__builtin_neon_vqrshrnh_n_s16
ScsIi
__builtin_neon_vqrshrnh_n_u16
ScUsIi
__builtin_neon_vqrshrns_n_s32
siIi
__builtin_neon_vqrshrns_n_u32
UsUiIi
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqshl_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlb_n_s8
ScScIi
__builtin_neon_vqshlb_n_u8
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlb_u8
__builtin_neon_vqshld_n_s64
WiWiIi
__builtin_neon_vqshld_n_u64
UWiUWiIi
__builtin_neon_vqshld_s64
__builtin_neon_vqshld_u64
__builtin_neon_vqshlh_n_s16
ssIi
__builtin_neon_vqshlh_n_u16
UsUsIi
__builtin_neon_vqshlh_s16
__builtin_neon_vqshlh_u16
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshls_n_s32
iiIi
__builtin_neon_vqshls_n_u32
UiUiIi
__builtin_neon_vqshls_s32
__builtin_neon_vqshls_u32
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshlub_n_s8
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrun_n_v
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqsub_v
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubd_u64
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubq_v
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubs_u32
__builtin_neon_vqtbl1_v
V8ScV16ScV8Sci
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
V8ScV16ScV16ScV8Sci
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbl4_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vqtbx1_v
V8ScV8ScV16ScV8Sci
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_neon_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_neon_vraddhn_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecped_f64
__builtin_neon_vrecpeq_v
__builtin_neon_vrecpes_f32
__builtin_neon_vrecps_v
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpsq_v
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrnd_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndns_f32
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vrshlq_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vrsqrtsq_v
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsra_n_v
__builtin_neon_vrsrad_n_s64
WiWiWiIi
__builtin_neon_vrsrad_n_u64
UWiUWiUWiIi
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vset_lane_f32
V2ffV2fIi
__builtin_neon_vset_lane_f64
V1ddV1dIi
__builtin_neon_vset_lane_i16
V4ssV4sIi
__builtin_neon_vset_lane_i32
V2iiV2iIi
__builtin_neon_vset_lane_i64
V1WiWiV1WiIi
__builtin_neon_vset_lane_i8
V8ScScV8ScIi
__builtin_neon_vsetq_lane_f32
V4ffV4fIi
__builtin_neon_vsetq_lane_f64
V2ddV2dIi
__builtin_neon_vsetq_lane_i16
V8ssV8sIi
__builtin_neon_vsetq_lane_i32
V4iiV4iIi
__builtin_neon_vsetq_lane_i64
V2WiWiV2WiIi
__builtin_neon_vsetq_lane_i8
V16ScScV16ScIi
__builtin_neon_vsha1cq_u32
V4iV4UiUiV4Ui
__builtin_neon_vsha1h_u32
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vshl_n_v
__builtin_neon_vshl_v
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshll_n_v
V16ScV8ScIii
__builtin_neon_vshlq_n_v
__builtin_neon_vshlq_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vshrn_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsli_n_v
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
__builtin_neon_vsliq_n_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddd_u64
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqaddq_v
__builtin_neon_vsqadds_u32
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vsra_n_v
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsraq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vsriq_n_v
__builtin_neon_vst1_lane_v
vv*V8ScIii
__builtin_neon_vst1_v
vv*V8Sci
__builtin_neon_vst1_x2_v
vv*V8ScV8Sci
__builtin_neon_vst1_x3_v
vv*V8ScV8ScV8Sci
__builtin_neon_vst1_x4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_neon_vst1q_lane_v
vv*V16ScIii
__builtin_neon_vst1q_v
vv*V16Sci
__builtin_neon_vst1q_x2_v
vv*V16ScV16Sci
__builtin_neon_vst1q_x3_v
vv*V16ScV16ScV16Sci
__builtin_neon_vst1q_x4_v
vv*V16ScV16ScV16ScV16Sci
__builtin_neon_vst2_lane_v
vv*V8ScV8ScIii
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
vv*V16ScV16ScIii
__builtin_neon_vst2q_v
__builtin_neon_vst3_lane_v
vv*V8ScV8ScV8ScIii
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
vv*V16ScV16ScV16ScIii
__builtin_neon_vst3q_v
__builtin_neon_vst4_lane_v
vv*V8ScV8ScV8ScV8ScIii
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
vv*V16ScV16ScV16ScV16ScIii
__builtin_neon_vst4q_v
__builtin_neon_vstrq_p128
vv*ULLLi
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vtst_v
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vtstq_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddb_s8
__builtin_neon_vuqaddd_s64
__builtin_neon_vuqaddh_s16
__builtin_neon_vuqaddq_v
__builtin_neon_vuqadds_s32
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
__builtin_neon_vabdh_f16
__builtin_neon_vabsh_f16
__builtin_neon_vaddh_f16
__builtin_neon_vcageh_f16
Ushh
__builtin_neon_vcagth_f16
__builtin_neon_vcaleh_f16
__builtin_neon_vcalth_f16
__builtin_neon_vceqh_f16
__builtin_neon_vceqzh_f16
__builtin_neon_vcgeh_f16
__builtin_neon_vcgezh_f16
__builtin_neon_vcgth_f16
__builtin_neon_vcgtzh_f16
__builtin_neon_vcleh_f16
__builtin_neon_vclezh_f16
__builtin_neon_vclth_f16
__builtin_neon_vcltzh_f16
__builtin_neon_vcvtah_s16_f16
__builtin_neon_vcvtah_s32_f16
__builtin_neon_vcvtah_s64_f16
__builtin_neon_vcvtah_u16_f16
__builtin_neon_vcvtah_u32_f16
__builtin_neon_vcvtah_u64_f16
UWih
__builtin_neon_vcvth_f16_s16
__builtin_neon_vcvth_f16_s32
__builtin_neon_vcvth_f16_s64
__builtin_neon_vcvth_f16_u16
__builtin_neon_vcvth_f16_u32
__builtin_neon_vcvth_f16_u64
hUWi
__builtin_neon_vcvth_n_f16_s16
hsIi
__builtin_neon_vcvth_n_f16_s32
hiIi
__builtin_neon_vcvth_n_f16_s64
hWiIi
__builtin_neon_vcvth_n_f16_u16
hUsIi
__builtin_neon_vcvth_n_f16_u32
hUiIi
__builtin_neon_vcvth_n_f16_u64
hUWiIi
__builtin_neon_vcvth_n_s16_f16
shIi
__builtin_neon_vcvth_n_s32_f16
ihIi
__builtin_neon_vcvth_n_s64_f16
WihIi
__builtin_neon_vcvth_n_u16_f16
UshIi
__builtin_neon_vcvth_n_u32_f16
UihIi
__builtin_neon_vcvth_n_u64_f16
UWihIi
__builtin_neon_vcvth_s16_f16
__builtin_neon_vcvth_s32_f16
__builtin_neon_vcvth_s64_f16
__builtin_neon_vcvth_u16_f16
__builtin_neon_vcvth_u32_f16
__builtin_neon_vcvth_u64_f16
__builtin_neon_vcvtmh_s16_f16
__builtin_neon_vcvtmh_s32_f16
__builtin_neon_vcvtmh_s64_f16
__builtin_neon_vcvtmh_u16_f16
__builtin_neon_vcvtmh_u32_f16
__builtin_neon_vcvtmh_u64_f16
__builtin_neon_vcvtnh_s16_f16
__builtin_neon_vcvtnh_s32_f16
__builtin_neon_vcvtnh_s64_f16
__builtin_neon_vcvtnh_u16_f16
__builtin_neon_vcvtnh_u32_f16
__builtin_neon_vcvtnh_u64_f16
__builtin_neon_vcvtph_s16_f16
__builtin_neon_vcvtph_s32_f16
__builtin_neon_vcvtph_s64_f16
__builtin_neon_vcvtph_u16_f16
__builtin_neon_vcvtph_u32_f16
__builtin_neon_vcvtph_u64_f16
__builtin_neon_vdivh_f16
__builtin_neon_vfmah_f16
hhhh
__builtin_neon_vfmsh_f16
__builtin_neon_vmaxh_f16
__builtin_neon_vmaxnmh_f16
__builtin_neon_vminh_f16
__builtin_neon_vminnmh_f16
__builtin_neon_vmulh_f16
__builtin_neon_vmulxh_f16
__builtin_neon_vnegh_f16
__builtin_neon_vrecpeh_f16
__builtin_neon_vrecpsh_f16
__builtin_neon_vrecpxh_f16
__builtin_neon_vrndah_f16
__builtin_neon_vrndh_f16
__builtin_neon_vrndih_f16
__builtin_neon_vrndmh_f16
__builtin_neon_vrndnh_f16
__builtin_neon_vrndph_f16
__builtin_neon_vrndxh_f16
__builtin_neon_vrsqrteh_f16
__builtin_neon_vrsqrtsh_f16
__builtin_neon_vsqrth_f16
__builtin_neon_vsubh_f16
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_ldaex
__builtin_arm_strex
__builtin_arm_stlex
__builtin_arm_clrex
__builtin_arm_rbit
__builtin_arm_rbit64
LLUiLLUi
__builtin_arm_nop
__builtin_arm_yield
__builtin_arm_wfe
__builtin_arm_wfi
__builtin_arm_sev
__builtin_arm_sevl
__builtin_arm_crc32b
UiUiUc
__builtin_arm_crc32cb
__builtin_arm_crc32h
UiUiUs
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiLUi
__builtin_arm_crc32cd
__builtin_arm_dmb
__builtin_arm_dsb
__builtin_arm_isb
__builtin_arm_prefetch
vvC*UiUiUiUi
__builtin_arm_rsr
UicC*
__builtin_arm_rsr64
LLUicC*
__builtin_arm_rsrp
v*cC*
__builtin_arm_wsr
vcC*Ui
__builtin_arm_wsr64
vcC*LLUi
__builtin_arm_wsrp
vcC*vC*
__dmb
__dsb
__isb
__yield
__wfe
__wfi
__sev
__sevl
__iso_volatile_load8
ccCD*
__iso_volatile_load16
ssCD*
__iso_volatile_load32
iiCD*
__iso_volatile_load64
LLiLLiCD*
__iso_volatile_store8
vcD*c
__iso_volatile_store16
vsD*s
__iso_volatile_store32
viD*i
__iso_volatile_store64
vLLiD*LLi
_BitScanForward
UcUNi*UNi
intrin.h
_BitScanReverse
_BitScanForward64
UcUNi*ULLi
_BitScanReverse64
_InterlockedAdd
_InterlockedAnd64
LLiLLiD*LLi
_InterlockedDecrement64
LLiLLiD*
_InterlockedExchange64
_InterlockedExchangeAdd64
_InterlockedExchangeSub64
_InterlockedIncrement64
_InterlockedOr64
_InterlockedXor64
_InterlockedExchangeAdd_acq
_InterlockedExchangeAdd_rel
_InterlockedExchangeAdd_nf
_InterlockedExchangeAdd8_acq
_InterlockedExchangeAdd8_rel
_InterlockedExchangeAdd8_nf
_InterlockedExchangeAdd16_acq
_InterlockedExchangeAdd16_rel
_InterlockedExchangeAdd16_nf
_InterlockedExchangeAdd64_acq
_InterlockedExchangeAdd64_rel
_InterlockedExchangeAdd64_nf
_InterlockedExchange8_acq
_InterlockedExchange8_nf
_InterlockedExchange8_rel
_InterlockedExchange16_acq
_InterlockedExchange16_nf
_InterlockedExchange16_rel
_InterlockedExchange_acq
_InterlockedExchange_nf
_InterlockedExchange_rel
_InterlockedExchange64_acq
_InterlockedExchange64_nf
_InterlockedExchange64_rel
_InterlockedCompareExchange8_acq
_InterlockedCompareExchange8_nf
_InterlockedCompareExchange8_rel
_InterlockedCompareExchange16_acq
_InterlockedCompareExchange16_nf
_InterlockedCompareExchange16_rel
_InterlockedCompareExchange_acq
_InterlockedCompareExchange_nf
_InterlockedCompareExchange_rel
_InterlockedCompareExchange64_acq
_InterlockedCompareExchange64_nf
_InterlockedCompareExchange64_rel
_InterlockedOr8_acq
_InterlockedOr8_nf
_InterlockedOr8_rel
_InterlockedOr16_acq
_InterlockedOr16_nf
_InterlockedOr16_rel
_InterlockedOr_acq
_InterlockedOr_nf
_InterlockedOr_rel
_InterlockedOr64_acq
_InterlockedOr64_nf
_InterlockedOr64_rel
_InterlockedXor8_acq
_InterlockedXor8_nf
_InterlockedXor8_rel
_InterlockedXor16_acq
_InterlockedXor16_nf
_InterlockedXor16_rel
_InterlockedXor_acq
_InterlockedXor_nf
_InterlockedXor_rel
_InterlockedXor64_acq
_InterlockedXor64_nf
_InterlockedXor64_rel
_InterlockedAnd8_acq
_InterlockedAnd8_nf
_InterlockedAnd8_rel
_InterlockedAnd16_acq
_InterlockedAnd16_nf
_InterlockedAnd16_rel
_InterlockedAnd_acq
_InterlockedAnd_nf
_InterlockedAnd_rel
_InterlockedAnd64_acq
_InterlockedAnd64_nf
_InterlockedAnd64_rel
_InterlockedIncrement16_acq
_InterlockedIncrement16_nf
_InterlockedIncrement16_rel
_InterlockedIncrement_acq
_InterlockedIncrement_nf
_InterlockedIncrement_rel
_InterlockedIncrement64_acq
_InterlockedIncrement64_nf
_InterlockedIncrement64_rel
_InterlockedDecrement16_acq
_InterlockedDecrement16_nf
_InterlockedDecrement16_rel
_InterlockedDecrement_acq
_InterlockedDecrement_nf
_InterlockedDecrement_rel
_InterlockedDecrement64_acq
_InterlockedDecrement64_nf
_InterlockedDecrement64_rel
_ReadWriteBarrier
__getReg
ULLii
_ReadStatusReg
LLii
_WriteStatusReg
viLLi
_AddressOfReturnAddress
_mcount
darwinpcs
__ARM_FEATURE_QRDMX
__ARM_ARCH_8_3__
__aarch64__
_LP64
__LP64__
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_LDREX
__ARM_FEATURE_IDIV
__ARM_FEATURE_DIV
__ARM_FEATURE_NUMERIC_MAXMIN
__ARM_FEATURE_DIRECTED_ROUNDING
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP16_ARGS
__ARM_FP_FAST
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_SVE
__ARM_FEATURE_CRC32
__ARM_FEATURE_CRYPTO
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_FP16_VECTOR_ARITHMETIC
__ARM_FEATURE_FP16_SCALAR_ARITHMETIC
__ARM_FEATURE_DOTPROD
__ARM_FEATURE_FP16FML
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
aarch64
arm64
neon
+neon
+sve
+crc
+crypto
+strict-align
+v8.1a
+v8.2a
+v8.3a
+fullfp16
+dotprod
+fp16fml
e-m:o-p:32:32-i64:64-i128:128-n32:64-S128
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
__AARCH64EL__
__AARCH64EB__
__AARCH_BIG_ENDIAN
__ARM_BIG_ENDIAN
E-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128
e-m:w-p:64:64-i32:32-i64:64-i128:128-n32:64-S128
_M_ARM64
__AARCH64_SIMD__
__ARM64_ARCH_8_32__
__ARM64_ARCH_8__
__ARM_NEON__
__LITTLE_ENDIAN__
__REGISTER_PREFIX__
__arm64
__arm64__
arm64e
__arm64e__
__RENDERSCRIPT__
__builtin_amdgcn_dispatch_ptr
__builtin_amdgcn_kernarg_segment_ptr
__builtin_amdgcn_implicitarg_ptr
__builtin_amdgcn_queue_ptr
__builtin_amdgcn_workgroup_id_x
__builtin_amdgcn_workgroup_id_y
__builtin_amdgcn_workgroup_id_z
__builtin_amdgcn_workitem_id_x
__builtin_amdgcn_workitem_id_y
__builtin_amdgcn_workitem_id_z
__builtin_amdgcn_s_getreg
UiIi
__builtin_amdgcn_s_getpc
__builtin_amdgcn_s_waitcnt
__builtin_amdgcn_s_sendmsg
vIiUi
__builtin_amdgcn_s_sendmsghalt
__builtin_amdgcn_s_barrier
__builtin_amdgcn_wave_barrier
__builtin_amdgcn_s_dcache_inv
__builtin_amdgcn_buffer_wbinvl1
__builtin_amdgcn_div_scale
dddbb*
__builtin_amdgcn_div_scalef
fffbb*
__builtin_amdgcn_div_fmas
ddddb
__builtin_amdgcn_div_fmasf
ffffb
__builtin_amdgcn_div_fixup
__builtin_amdgcn_div_fixupf
__builtin_amdgcn_trig_preop
__builtin_amdgcn_trig_preopf
__builtin_amdgcn_rcp
__builtin_amdgcn_rcpf
__builtin_amdgcn_rsq
__builtin_amdgcn_rsqf
__builtin_amdgcn_rsq_clamp
__builtin_amdgcn_rsq_clampf
__builtin_amdgcn_sinf
__builtin_amdgcn_cosf
__builtin_amdgcn_log_clampf
__builtin_amdgcn_ldexp
__builtin_amdgcn_ldexpf
__builtin_amdgcn_frexp_mant
__builtin_amdgcn_frexp_mantf
__builtin_amdgcn_frexp_exp
__builtin_amdgcn_frexp_expf
__builtin_amdgcn_fract
__builtin_amdgcn_fractf
__builtin_amdgcn_lerp
UiUiUiUi
__builtin_amdgcn_class
__builtin_amdgcn_classf
__builtin_amdgcn_cubeid
__builtin_amdgcn_cubesc
__builtin_amdgcn_cubetc
__builtin_amdgcn_cubema
__builtin_amdgcn_s_memtime
__builtin_amdgcn_s_sleep
__builtin_amdgcn_s_incperflevel
__builtin_amdgcn_s_decperflevel
__builtin_amdgcn_uicmp
LUiUiUiIi
__builtin_amdgcn_uicmpl
LUiLUiLUiIi
__builtin_amdgcn_sicmp
LUiiiIi
__builtin_amdgcn_sicmpl
LUiLiLiIi
__builtin_amdgcn_fcmp
LUiddIi
__builtin_amdgcn_fcmpf
LUiffIi
__builtin_amdgcn_ds_swizzle
__builtin_amdgcn_ds_permute
__builtin_amdgcn_ds_bpermute
__builtin_amdgcn_readfirstlane
__builtin_amdgcn_readlane
__builtin_amdgcn_fmed3f
__builtin_amdgcn_ds_faddf
ff*3fIiIiIb
__builtin_amdgcn_ds_fminf
__builtin_amdgcn_ds_fmaxf
__builtin_amdgcn_s_dcache_inv_vol
ci-insts
__builtin_amdgcn_buffer_wbinvl1_vol
__builtin_amdgcn_div_fixuph
16-bit-insts
__builtin_amdgcn_rcph
__builtin_amdgcn_rsqh
__builtin_amdgcn_sinh
__builtin_amdgcn_cosh
__builtin_amdgcn_ldexph
__builtin_amdgcn_frexp_manth
__builtin_amdgcn_frexp_exph
__builtin_amdgcn_fracth
__builtin_amdgcn_classh
__builtin_amdgcn_s_memrealtime
s-memrealtime
__builtin_amdgcn_mov_dpp
iiIiIiIiIb
__builtin_amdgcn_update_dpp
iiiIiIiIiIb
__builtin_amdgcn_s_dcache_wb
vi-insts
__builtin_amdgcn_fmed3h
gfx9-insts
__builtin_amdgcn_fdot2
fV2hV2hfIb
dl-insts
__builtin_amdgcn_sdot2
SiV2SsV2SsSiIb
__builtin_amdgcn_udot2
UiV2UsV2UsUiIb
__builtin_amdgcn_sdot4
SiSiSiSiIb
__builtin_amdgcn_udot4
UiUiUiUiIb
__builtin_amdgcn_sdot8
__builtin_amdgcn_udot8
__builtin_amdgcn_read_exec
__builtin_amdgcn_read_exec_lo
__builtin_amdgcn_read_exec_hi
__builtin_r600_implicitarg_ptr
Uc*7
__builtin_r600_read_tgid_x
__builtin_r600_read_tgid_y
__builtin_r600_read_tgid_z
__builtin_r600_read_tidig_x
__builtin_r600_read_tidig_y
__builtin_r600_read_tidig_z
__builtin_r600_recipsqrt_ieee
__builtin_r600_recipsqrt_ieeef
v100
v101
v102
v103
v104
v105
v106
v107
v108
v109
v110
v111
v112
v113
v114
v115
v116
v117
v118
v119
v120
v121
v122
v123
v124
v125
v126
v127
v128
v129
v130
v131
v132
v133
v134
v135
v136
v137
v138
v139
v140
v141
v142
v143
v144
v145
v146
v147
v148
v149
v150
v151
v152
v153
v154
v155
v156
v157
v158
v159
v160
v161
v162
v163
v164
v165
v166
v167
v168
v169
v170
v171
v172
v173
v174
v175
v176
v177
v178
v179
v180
v181
v182
v183
v184
v185
v186
v187
v188
v189
v190
v191
v192
v193
v194
v195
v196
v197
v198
v199
v200
v201
v202
v203
v204
v205
v206
v207
v208
v209
v210
v211
v212
v213
v214
v215
v216
v217
v218
v219
v220
v221
v222
v223
v224
v225
v226
v227
v228
v229
v230
v231
v232
v233
v234
v235
v236
v237
v238
v239
v240
v241
v242
v243
v244
v245
v246
v247
v248
v249
v250
v251
v252
v253
v254
v255
s100
s101
s102
s103
s104
s105
s106
s107
s108
s109
s110
s111
s112
s113
s114
s115
s116
s117
s118
s119
s120
s121
s122
s123
s124
s125
s126
s127
exec
flat_scratch
exec_lo
exec_hi
vcc_lo
vcc_hi
flat_scratch_lo
flat_scratch_hi
r600
+fp32-denormals
-fp32-denormals
+fp64-fp16-denormals
-fp64-fp16-denormals
fp32-denormals
e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5
__AMD__
__AMDGPU__
__AMDGCN__
__R600__
__HAS_FMAF__
FP_FAST_FMAF
__HAS_LDEXPF__
__HAS_FP64__
FP_FAST_FMA
tma_lo
tma_hi
tba_lo
tba_hi
cl_clang_storage_class_specifiers
cl_khr_icd
cl_khr_fp64
cl_khr_byte_addressable_store
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_fp16
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_mipmap_image
cl_khr_subgroups
cl_khr_3d_image_writes
cl_amd_media_ops
cl_amd_media_ops2
__arc__
ilink1
blink
E-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:w-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S128
E-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-i64:64-a:0:32-n32-S128
E-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
E-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
8M_BASE
8_1A
8_2A
8_3A
8_4A
8_5A
8M_MAIN
aapcs16
apcs-gnu
aapcs-linux
__gnu_mcount_nc
thumb-mode
+arm
-thumb-mode
+thumb
+thumb-mode
+soft-float-abi
+vfp2
+vfp3
+vfp4
+fp-armv8
+hwdiv
+hwdiv-arm
+fp-only-sp
+fp16
thumb
hwdiv
hwdiv-arm
vfp2
vfp3
vfp4
__arm
__arm__
__ARM_ARCH_7K__
__ARM_ARCH_7A__
__ARM_ARCH_
__ARM_ARCH_ISA_ARM
__ARM_ARCH_ISA_THUMB
__ARM_32BIT_STATE
__THUMB_INTERWORK__
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_FEATURE_SIMD32
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FPV5__
__ARM_FEATURE_DSP
__ARM_FEATURE_SAT
__ARM_FEATURE_QBIT
__builtin_arm_smulbb
__builtin_arm_smulbt
__builtin_arm_smultb
__builtin_arm_smultt
__builtin_arm_smulwb
__builtin_arm_smulwt
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_qdbl
__builtin_arm_ssat
iiUi
__builtin_arm_usat
UiiUi
__builtin_arm_smlabb
iiii
__builtin_arm_smlabt
__builtin_arm_smlatb
__builtin_arm_smlatt
__builtin_arm_smlawb
__builtin_arm_smlawt
__builtin_arm_ssat16
__builtin_arm_usat16
__builtin_arm_sxtab16
__builtin_arm_sxtb16
__builtin_arm_uxtab16
__builtin_arm_uxtb16
__builtin_arm_sel
__builtin_arm_qadd8
__builtin_arm_qsub8
__builtin_arm_sadd8
__builtin_arm_shadd8
__builtin_arm_shsub8
__builtin_arm_ssub8
__builtin_arm_uadd8
__builtin_arm_uhadd8
__builtin_arm_uhsub8
__builtin_arm_uqadd8
__builtin_arm_uqsub8
__builtin_arm_usub8
__builtin_arm_usad8
__builtin_arm_usada8
__builtin_arm_qadd16
__builtin_arm_qasx
__builtin_arm_qsax
__builtin_arm_qsub16
__builtin_arm_sadd16
__builtin_arm_sasx
__builtin_arm_shadd16
__builtin_arm_shasx
__builtin_arm_shsax
__builtin_arm_shsub16
__builtin_arm_ssax
__builtin_arm_ssub16
__builtin_arm_uadd16
__builtin_arm_uasx
__builtin_arm_uhadd16
__builtin_arm_uhasx
__builtin_arm_uhsax
__builtin_arm_uhsub16
__builtin_arm_uqadd16
__builtin_arm_uqasx
__builtin_arm_uqsax
__builtin_arm_uqsub16
__builtin_arm_usax
__builtin_arm_usub16
__builtin_arm_smlad
__builtin_arm_smladx
__builtin_arm_smlald
LLiiiLLi
__builtin_arm_smlaldx
__builtin_arm_smlsd
__builtin_arm_smlsdx
__builtin_arm_smlsld
__builtin_arm_smlsldx
__builtin_arm_smuad
__builtin_arm_smuadx
__builtin_arm_smusd
__builtin_arm_smusdx
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_ldc
vUIiUIivC*
__builtin_arm_ldcl
__builtin_arm_ldc2
__builtin_arm_ldc2l
__builtin_arm_stc
vUIiUIiv*
__builtin_arm_stcl
__builtin_arm_stc2
__builtin_arm_stc2l
__builtin_arm_cdp
vUIiUIiUIiUIiUIiUIi
__builtin_arm_cdp2
__builtin_arm_mcr
vUIiUIiUiUIiUIiUIi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUIiUIiUIiUIiUIi
__builtin_arm_mrc2
__builtin_arm_mcrr
vUIiUIiLLUiUIi
__builtin_arm_mcrr2
__builtin_arm_mrrc
LLUiUIiUIiUIi
__builtin_arm_mrrc2
UiUiLLUi
__builtin_arm_dbg
vvC*UiUi
__emit
vIUiC
__ldrexd
WiWiCD*
_MoveFromCoprocessor
UiIUiIUiIUiIUiIUi
_MoveFromCoprocessor2
_MoveToCoprocessor
vUiIUiIUiIUiIUiIUi
_MoveToCoprocessor2
__ARMEL__
__ARMEB__
_M_ARM_NT
_M_ARMT
_M_ARM
_M_THUMB
_M_ARM_FP
_ARM_
armv7
__AVR
__AVR__
avr1
avr2
avr25
avr3
avr31
avr35
avr4
avr5
avr51
avr6
avrxmega1
avrxmega2
avrxmega3
avrxmega4
avrxmega5
avrxmega6
avrxmega7
avrtiny
at90s1200
__AVR_AT90S1200__
attiny11
__AVR_ATtiny11__
attiny12
__AVR_ATtiny12__
attiny15
__AVR_ATtiny15__
attiny28
__AVR_ATtiny28__
at90s2313
__AVR_AT90S2313__
at90s2323
__AVR_AT90S2323__
at90s2333
__AVR_AT90S2333__
at90s2343
__AVR_AT90S2343__
attiny22
__AVR_ATtiny22__
attiny26
__AVR_ATtiny26__
at86rf401
__AVR_AT86RF401__
at90s4414
__AVR_AT90S4414__
at90s4433
__AVR_AT90S4433__
at90s4434
__AVR_AT90S4434__
at90s8515
__AVR_AT90S8515__
at90c8534
__AVR_AT90c8534__
at90s8535
__AVR_AT90S8535__
ata5272
__AVR_ATA5272__
attiny13
__AVR_ATtiny13__
attiny13a
__AVR_ATtiny13A__
attiny2313
__AVR_ATtiny2313__
attiny2313a
__AVR_ATtiny2313A__
attiny24
__AVR_ATtiny24__
attiny24a
__AVR_ATtiny24A__
attiny4313
__AVR_ATtiny4313__
attiny44
__AVR_ATtiny44__
attiny44a
__AVR_ATtiny44A__
attiny84
__AVR_ATtiny84__
attiny84a
__AVR_ATtiny84A__
attiny25
__AVR_ATtiny25__
attiny45
__AVR_ATtiny45__
attiny85
__AVR_ATtiny85__
attiny261
__AVR_ATtiny261__
attiny261a
__AVR_ATtiny261A__
attiny461
__AVR_ATtiny461__
attiny461a
__AVR_ATtiny461A__
attiny861
__AVR_ATtiny861__
attiny861a
__AVR_ATtiny861A__
attiny87
__AVR_ATtiny87__
attiny43u
__AVR_ATtiny43U__
attiny48
__AVR_ATtiny48__
attiny88
__AVR_ATtiny88__
attiny828
__AVR_ATtiny828__
at43usb355
__AVR_AT43USB355__
at76c711
__AVR_AT76C711__
atmega103
__AVR_ATmega103__
at43usb320
__AVR_AT43USB320__
attiny167
__AVR_ATtiny167__
at90usb82
__AVR_AT90USB82__
at90usb162
__AVR_AT90USB162__
ata5505
__AVR_ATA5505__
atmega8u2
__AVR_ATmega8U2__
atmega16u2
__AVR_ATmega16U2__
atmega32u2
__AVR_ATmega32U2__
attiny1634
__AVR_ATtiny1634__
atmega8
__AVR_ATmega8__
ata6289
__AVR_ATA6289__
atmega8a
__AVR_ATmega8A__
ata6285
__AVR_ATA6285__
ata6286
__AVR_ATA6286__
atmega48
__AVR_ATmega48__
atmega48a
__AVR_ATmega48A__
atmega48pa
__AVR_ATmega48PA__
atmega48p
__AVR_ATmega48P__
atmega88
__AVR_ATmega88__
atmega88a
__AVR_ATmega88A__
atmega88p
__AVR_ATmega88P__
atmega88pa
__AVR_ATmega88PA__
atmega8515
__AVR_ATmega8515__
atmega8535
__AVR_ATmega8535__
atmega8hva
__AVR_ATmega8HVA__
at90pwm1
__AVR_AT90PWM1__
at90pwm2
__AVR_AT90PWM2__
at90pwm2b
__AVR_AT90PWM2B__
at90pwm3
__AVR_AT90PWM3__
at90pwm3b
__AVR_AT90PWM3B__
at90pwm81
__AVR_AT90PWM81__
ata5790
__AVR_ATA5790__
ata5795
__AVR_ATA5795__
atmega16
__AVR_ATmega16__
atmega16a
__AVR_ATmega16A__
atmega161
__AVR_ATmega161__
atmega162
__AVR_ATmega162__
atmega163
__AVR_ATmega163__
atmega164a
__AVR_ATmega164A__
atmega164p
__AVR_ATmega164P__
atmega164pa
__AVR_ATmega164PA__
atmega165
__AVR_ATmega165__
atmega165a
__AVR_ATmega165A__
atmega165p
__AVR_ATmega165P__
atmega165pa
__AVR_ATmega165PA__
atmega168
__AVR_ATmega168__
atmega168a
__AVR_ATmega168A__
atmega168p
__AVR_ATmega168P__
atmega168pa
__AVR_ATmega168PA__
atmega169
__AVR_ATmega169__
atmega169a
__AVR_ATmega169A__
atmega169p
__AVR_ATmega169P__
atmega169pa
__AVR_ATmega169PA__
atmega32
__AVR_ATmega32__
atmega32a
__AVR_ATmega32A__
atmega323
__AVR_ATmega323__
atmega324a
__AVR_ATmega324A__
atmega324p
__AVR_ATmega324P__
atmega324pa
__AVR_ATmega324PA__
atmega325
__AVR_ATmega325__
atmega325a
__AVR_ATmega325A__
atmega325p
__AVR_ATmega325P__
atmega325pa
__AVR_ATmega325PA__
atmega3250
__AVR_ATmega3250__
atmega3250a
__AVR_ATmega3250A__
atmega3250p
__AVR_ATmega3250P__
atmega3250pa
__AVR_ATmega3250PA__
atmega328
__AVR_ATmega328__
atmega328p
__AVR_ATmega328P__
atmega329
__AVR_ATmega329__
atmega329a
__AVR_ATmega329A__
atmega329p
__AVR_ATmega329P__
atmega329pa
__AVR_ATmega329PA__
atmega3290
__AVR_ATmega3290__
atmega3290a
__AVR_ATmega3290A__
atmega3290p
__AVR_ATmega3290P__
atmega3290pa
__AVR_ATmega3290PA__
atmega406
__AVR_ATmega406__
atmega64
__AVR_ATmega64__
atmega64a
__AVR_ATmega64A__
atmega640
__AVR_ATmega640__
atmega644
__AVR_ATmega644__
atmega644a
__AVR_ATmega644A__
atmega644p
__AVR_ATmega644P__
atmega644pa
__AVR_ATmega644PA__
atmega645
__AVR_ATmega645__
atmega645a
__AVR_ATmega645A__
atmega645p
__AVR_ATmega645P__
atmega649
__AVR_ATmega649__
atmega649a
__AVR_ATmega649A__
atmega649p
__AVR_ATmega649P__
atmega6450
__AVR_ATmega6450__
atmega6450a
__AVR_ATmega6450A__
atmega6450p
__AVR_ATmega6450P__
atmega6490
__AVR_ATmega6490__
atmega6490a
__AVR_ATmega6490A__
atmega6490p
__AVR_ATmega6490P__
atmega64rfr2
__AVR_ATmega64RFR2__
atmega644rfr2
__AVR_ATmega644RFR2__
atmega16hva
__AVR_ATmega16HVA__
atmega16hva2
__AVR_ATmega16HVA2__
atmega16hvb
__AVR_ATmega16HVB__
atmega16hvbrevb
__AVR_ATmega16HVBREVB__
atmega32hvb
__AVR_ATmega32HVB__
atmega32hvbrevb
__AVR_ATmega32HVBREVB__
atmega64hve
__AVR_ATmega64HVE__
at90can32
__AVR_AT90CAN32__
at90can64
__AVR_AT90CAN64__
at90pwm161
__AVR_AT90PWM161__
at90pwm216
__AVR_AT90PWM216__
at90pwm316
__AVR_AT90PWM316__
atmega32c1
__AVR_ATmega32C1__
atmega64c1
__AVR_ATmega64C1__
atmega16m1
__AVR_ATmega16M1__
atmega32m1
__AVR_ATmega32M1__
atmega64m1
__AVR_ATmega64M1__
atmega16u4
__AVR_ATmega16U4__
atmega32u4
__AVR_ATmega32U4__
atmega32u6
__AVR_ATmega32U6__
at90usb646
__AVR_AT90USB646__
at90usb647
__AVR_AT90USB647__
at90scr100
__AVR_AT90SCR100__
at94k
__AVR_AT94K__
m3000
__AVR_AT000__
atmega128
__AVR_ATmega128__
atmega128a
__AVR_ATmega128A__
atmega1280
__AVR_ATmega1280__
atmega1281
__AVR_ATmega1281__
atmega1284
__AVR_ATmega1284__
atmega1284p
__AVR_ATmega1284P__
atmega128rfa1
__AVR_ATmega128RFA1__
atmega128rfr2
__AVR_ATmega128RFR2__
atmega1284rfr2
__AVR_ATmega1284RFR2__
at90can128
__AVR_AT90CAN128__
at90usb1286
__AVR_AT90USB1286__
at90usb1287
__AVR_AT90USB1287__
atmega2560
__AVR_ATmega2560__
atmega2561
__AVR_ATmega2561__
atmega256rfr2
__AVR_ATmega256RFR2__
atmega2564rfr2
__AVR_ATmega2564RFR2__
atxmega16a4
__AVR_ATxmega16A4__
atxmega16a4u
__AVR_ATxmega16a4U__
atxmega16c4
__AVR_ATxmega16C4__
atxmega16d4
__AVR_ATxmega16D4__
atxmega32a4
__AVR_ATxmega32A4__
atxmega32a4u
__AVR_ATxmega32A4U__
atxmega32c4
__AVR_ATxmega32C4__
atxmega32d4
__AVR_ATxmega32D4__
atxmega32e5
__AVR_ATxmega32E5__
atxmega16e5
__AVR_ATxmega16E5__
atxmega8e5
__AVR_ATxmega8E5__
atxmega32x1
__AVR_ATxmega32X1__
atxmega64a3
__AVR_ATxmega64A3__
atxmega64a3u
__AVR_ATxmega64A3U__
atxmega64a4u
__AVR_ATxmega64A4U__
atxmega64b1
__AVR_ATxmega64B1__
atxmega64b3
__AVR_ATxmega64B3__
atxmega64c3
__AVR_ATxmega64C3__
atxmega64d3
__AVR_ATxmega64D3__
atxmega64d4
__AVR_ATxmega64D4__
atxmega64a1
__AVR_ATxmega64A1__
atxmega64a1u
__AVR_ATxmega64A1U__
atxmega128a3
__AVR_ATxmega128A3__
atxmega128a3u
__AVR_ATxmega128A3U__
atxmega128b1
__AVR_ATxmega128B1__
atxmega128b3
__AVR_ATxmega128B3__
atxmega128c3
__AVR_ATxmega128C3__
atxmega128d3
__AVR_ATxmega128D3__
atxmega128d4
__AVR_ATxmega128D4__
atxmega192a3
__AVR_ATxmega192A3__
atxmega192a3u
__AVR_ATxmega192A3U__
atxmega192c3
__AVR_ATxmega192C3__
atxmega192d3
__AVR_ATxmega192D3__
atxmega256a3
__AVR_ATxmega256A3__
atxmega256a3u
__AVR_ATxmega256A3U__
atxmega256a3b
__AVR_ATxmega256A3B__
atxmega256a3bu
__AVR_ATxmega256A3BU__
atxmega256c3
__AVR_ATxmega256C3__
atxmega256d3
__AVR_ATxmega256D3__
atxmega384c3
__AVR_ATxmega384C3__
atxmega384d3
__AVR_ATxmega384D3__
atxmega128a1
__AVR_ATxmega128A1__
atxmega128a1u
__AVR_ATxmega128A1U__
atxmega128a4u
__AVR_ATxmega128a4U__
attiny4
__AVR_ATtiny4__
attiny5
__AVR_ATtiny5__
attiny9
__AVR_ATtiny9__
attiny10
__AVR_ATtiny10__
attiny20
__AVR_ATtiny20__
attiny40
__AVR_ATtiny40__
attiny102
__AVR_ATtiny102__
attiny104
__AVR_ATtiny104__
__BPF__
probe
__qdsp6__
__hexagon__
hexagonv5
__HEXAGON_V5__
__HEXAGON_ARCH__
__QDSP6_V5__
__QDSP6_ARCH__
hexagonv55
__HEXAGON_V55__
__QDSP6_V55__
hexagonv60
__HEXAGON_V60__
__QDSP6_V60__
hexagonv62
__HEXAGON_V62__
hexagonv65
__HEXAGON_V65__
hexagonv66
__HEXAGON_V66__
hvx-length64b
__HVX__
__HVX_ARCH__
__HVX_LENGTH__
hvx-length128b
__HVXDBL__
long-calls
+hvx-length64b
+hvx-length128b
-hvx
+long-calls
-long-calls
__builtin_brev_ldd
v*LLi*CLLi*iC
__builtin_brev_ldw
v*i*Ci*iC
__builtin_brev_ldh
v*s*Cs*iC
__builtin_brev_lduh
v*Us*CUs*iC
__builtin_brev_ldb
v*Sc*CSc*iC
__builtin_brev_ldub
v*Uc*CUc*iC
__builtin_circ_ldd
LLi*LLi*LLi*iIi
__builtin_circ_ldw
i*i*i*iIi
__builtin_circ_ldh
s*s*s*iIi
__builtin_circ_lduh
Us*Us*Us*iIi
__builtin_circ_ldb
c*c*c*iIi
__builtin_circ_ldub
Uc*Uc*Uc*iIi
__builtin_brev_std
LLi*CLLi*LLiiC
__builtin_brev_stw
i*Ci*iiC
__builtin_brev_sth
s*Cs*iiC
__builtin_brev_sthhi
__builtin_brev_stb
c*Cc*iiC
__builtin_circ_std
LLi*LLi*LLiiIi
__builtin_circ_stw
i*i*iiIi
__builtin_circ_sth
s*s*iiIi
__builtin_circ_sthhi
__builtin_circ_stb
c*c*iiIi
__builtin_HEXAGON_L2_loadrub_pci
iv*IiivC*
__builtin_HEXAGON_L2_loadrb_pci
__builtin_HEXAGON_L2_loadruh_pci
__builtin_HEXAGON_L2_loadrh_pci
__builtin_HEXAGON_L2_loadri_pci
__builtin_HEXAGON_L2_loadrd_pci
LLiv*IiivC*
__builtin_HEXAGON_L2_loadrub_pcr
iv*ivC*
__builtin_HEXAGON_L2_loadrb_pcr
__builtin_HEXAGON_L2_loadruh_pcr
__builtin_HEXAGON_L2_loadrh_pcr
__builtin_HEXAGON_L2_loadri_pcr
__builtin_HEXAGON_L2_loadrd_pcr
LLiv*ivC*
__builtin_HEXAGON_S2_storerb_pci
vv*IiiivC*
__builtin_HEXAGON_S2_storerh_pci
__builtin_HEXAGON_S2_storerf_pci
__builtin_HEXAGON_S2_storeri_pci
__builtin_HEXAGON_S2_storerd_pci
vv*IiiLLivC*
__builtin_HEXAGON_S2_storerb_pcr
vv*iivC*
__builtin_HEXAGON_S2_storerh_pcr
__builtin_HEXAGON_S2_storerf_pcr
__builtin_HEXAGON_S2_storeri_pcr
__builtin_HEXAGON_S2_storerd_pcr
vv*iLLivC*
__builtin_HEXAGON_prefetch
__builtin_HEXAGON_Y2_dccleana
__builtin_HEXAGON_Y2_dccleaninva
__builtin_HEXAGON_Y2_dcinva
__builtin_HEXAGON_Y2_dczeroa
__builtin_HEXAGON_Y4_l2fetch
vv*Ui
__builtin_HEXAGON_Y5_l2fetch
vv*LLUi
__builtin_HEXAGON_V6_vS32b_qpred_ai
vV16iv*V16i
__builtin_HEXAGON_V6_vS32b_nqpred_ai
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai
__builtin_HEXAGON_V6_vS32b_qpred_ai_128B
vV32iv*V32i
__builtin_HEXAGON_V6_vS32b_nqpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_qpred_ai_128B
__builtin_HEXAGON_V6_vS32b_nt_nqpred_ai_128B
__builtin_HEXAGON_V6_vmaskedstoreq
__builtin_HEXAGON_V6_vmaskedstorenq
__builtin_HEXAGON_V6_vmaskedstorentq
__builtin_HEXAGON_V6_vmaskedstorentnq
__builtin_HEXAGON_V6_vmaskedstoreq_128B
__builtin_HEXAGON_V6_vmaskedstorenq_128B
__builtin_HEXAGON_V6_vmaskedstorentq_128B
__builtin_HEXAGON_V6_vmaskedstorentnq_128B
__builtin_HEXAGON_V6_vgathermw
vv*iiV16i
__builtin_HEXAGON_V6_vgathermw_128B
vv*iiV32i
__builtin_HEXAGON_V6_vgathermh
__builtin_HEXAGON_V6_vgathermh_128B
__builtin_HEXAGON_V6_vgathermhw
__builtin_HEXAGON_V6_vgathermhw_128B
vv*iiV64i
__builtin_HEXAGON_V6_vgathermwq
vv*V16iiiV16i
__builtin_HEXAGON_V6_vgathermwq_128B
vv*V32iiiV32i
__builtin_HEXAGON_V6_vgathermhq
__builtin_HEXAGON_V6_vgathermhq_128B
__builtin_HEXAGON_V6_vgathermhwq
vv*V16iiiV32i
__builtin_HEXAGON_V6_vgathermhwq_128B
vv*V32iiiV64i
__builtin_HEXAGON_V6_vscattermw
viiV16iV16i
__builtin_HEXAGON_V6_vscattermw_128B
viiV32iV32i
__builtin_HEXAGON_V6_vscattermh
__builtin_HEXAGON_V6_vscattermh_128B
__builtin_HEXAGON_V6_vscattermw_add
__builtin_HEXAGON_V6_vscattermw_add_128B
__builtin_HEXAGON_V6_vscattermh_add
__builtin_HEXAGON_V6_vscattermh_add_128B
__builtin_HEXAGON_V6_vscattermwq
vV16iiiV16iV16i
__builtin_HEXAGON_V6_vscattermwq_128B
vV32iiiV32iV32i
__builtin_HEXAGON_V6_vscattermhq
__builtin_HEXAGON_V6_vscattermhq_128B
__builtin_HEXAGON_V6_vscattermhw
viiV32iV16i
__builtin_HEXAGON_V6_vscattermhw_128B
viiV64iV32i
__builtin_HEXAGON_V6_vscattermhwq
vV16iiiV32iV16i
__builtin_HEXAGON_V6_vscattermhwq_128B
vV32iiiV64iV32i
__builtin_HEXAGON_V6_vscattermhw_add
__builtin_HEXAGON_V6_vscattermhw_add_128B
__builtin_HEXAGON_S2_asr_r_p_or
LLiLLiLLii
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_tableidxd_goodsyntax
iiiUIiUIi
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
LLiLLiii
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_cmpysc_s1
LLiii
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M4_cmpyi_whc
iLLii
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_shuffoh
LLiLLiLLi
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_S2_asr_i_r
iiUIi
__builtin_HEXAGON_S2_asr_i_p
LLiLLiUIi
__builtin_HEXAGON_A4_combineri
LLiiIi
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A4_vcmphgti
iLLiIi
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_vcmpwgtu
iLLiLLi
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_S2_lsr_i_r_xacc
iiiUIi
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_S2_extractup
LLiLLiUIiUIi
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_M2_mpyu_up
Uiii
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_A2_pxorf
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_M2_mpysip
__builtin_HEXAGON_M2_mpysin
__builtin_HEXAGON_A4_boundscheck
iiLLi
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_M2_vrcmpys_s1rp
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_asl_r_p
LLiLLii
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_F2_conv_ud2df
dLLi
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S4_subi_lsr_ri
iUIiiUIi
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_S2_insert
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_deinterleave
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mmacuhs_s1
LLiLLiLLiLLi
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_asl_i_p_acc
LLiLLiLLiUIi
__builtin_HEXAGON_A4_vcmpwgtui
iLLiUIi
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_mpyrr_addi
iUIiii
__builtin_HEXAGON_S4_or_andi
iiiIi
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A4_tfrpcp
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_A4_addp_c
LLiLLiLLiv*
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_S4_subaddi
iiIii
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S4_vrcrotate
LLiLLiiUIi
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_M2_vdmpyrs_s0
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_combineii
LLiIiUIi
__builtin_HEXAGON_A4_combineir
LLiIii
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_F2_sfimm_p
fUIi
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_F2_conv_d2sf
fLLi
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S4_extract_rp
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_A4_tfrcpp
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_S2_insertp
LLiLLiLLiUIiUIi
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_F2_sfinvsqrta
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_M2_vmac2es_s0
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_C2_cmpeqp
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_A2_tfrcrr
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_C2_mask
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_tfrrcr
__builtin_HEXAGON_M2_vrcmpys_acc_s1
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_F2_sfclass
ifUIi
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_F2_conv_sf2ud
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_C4_and_and
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_A4_subp_c
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
ULLiii
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A4_bitspliti
LLiiUIi
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_M2_mpyud_hh_s0
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_F2_dfimm_n
dUIi
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M4_mpyri_addr_u2
iiUIii
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_F2_sfrecipa
__builtin_HEXAGON_A2_combineii
LLiIiIi
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_A4_vcmpbeqi
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_M2_vrcmpys_s1
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_C2_muxii
iiIiIi
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_S4_extract
iiUIiUIi
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_F2_conv_ud2sf
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_A2_subri
iIii
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiiUIi
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_dfclass
idUIi
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_A2_tfrpi
LLiIi
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_A5_ACS
__builtin_HEXAGON_S6_rol_i_p_and
__builtin_HEXAGON_S6_rol_i_r_xacc
__builtin_HEXAGON_S6_rol_i_r_and
__builtin_HEXAGON_S6_rol_i_r_acc
__builtin_HEXAGON_S6_rol_i_p_xacc
__builtin_HEXAGON_S6_rol_i_p
__builtin_HEXAGON_S6_rol_i_p_nac
__builtin_HEXAGON_S6_rol_i_p_acc
__builtin_HEXAGON_S6_rol_i_r_or
__builtin_HEXAGON_S6_rol_i_r
__builtin_HEXAGON_S6_rol_i_r_nac
__builtin_HEXAGON_S6_rol_i_p_or
__builtin_HEXAGON_S6_vtrunehb_ppp
__builtin_HEXAGON_V6_ldntnt0
V16ii
__builtin_HEXAGON_M6_vabsdiffub
__builtin_HEXAGON_S6_vtrunohb_ppp
__builtin_HEXAGON_M6_vabsdiffb
__builtin_HEXAGON_A6_vminub_RdP
__builtin_HEXAGON_S6_vsplatrbp
__builtin_HEXAGON_A6_vcmpbeq_notany
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_M2_mnaci
__builtin_HEXAGON_S2_mask
iUIiUIi
__builtin_HEXAGON_V6_veqb_or
V16iV16iV16iV16i
__builtin_HEXAGON_V6_veqb_or_128B
V32iV32iV32iV32i
__builtin_HEXAGON_V6_vminub
V16iV16iV16i
__builtin_HEXAGON_V6_vminub_128B
V32iV32iV32i
__builtin_HEXAGON_V6_vaslw_acc
V16iV16iV16ii
__builtin_HEXAGON_V6_vaslw_acc_128B
V32iV32iV32ii
__builtin_HEXAGON_V6_vmpyhvsrs
__builtin_HEXAGON_V6_vmpyhvsrs_128B
__builtin_HEXAGON_V6_vsathub
__builtin_HEXAGON_V6_vsathub_128B
__builtin_HEXAGON_V6_vaddh_dv
__builtin_HEXAGON_V6_vaddh_dv_128B
V64iV64iV64i
__builtin_HEXAGON_V6_vrmpybusi
V32iV32iiUIi
__builtin_HEXAGON_V6_vrmpybusi_128B
V64iV64iiUIi
__builtin_HEXAGON_V6_vshufoh
__builtin_HEXAGON_V6_vshufoh_128B
__builtin_HEXAGON_V6_vasrwv
__builtin_HEXAGON_V6_vasrwv_128B
__builtin_HEXAGON_V6_vdmpyhsuisat
V16iV32ii
__builtin_HEXAGON_V6_vdmpyhsuisat_128B
V32iV64ii
__builtin_HEXAGON_V6_vrsadubi_acc
V32iV32iV32iiUIi
__builtin_HEXAGON_V6_vrsadubi_acc_128B
V64iV64iV64iiUIi
__builtin_HEXAGON_V6_vnavgw
__builtin_HEXAGON_V6_vnavgw_128B
__builtin_HEXAGON_V6_vnavgh
__builtin_HEXAGON_V6_vnavgh_128B
__builtin_HEXAGON_V6_vavgub
__builtin_HEXAGON_V6_vavgub_128B
__builtin_HEXAGON_V6_vsubb
__builtin_HEXAGON_V6_vsubb_128B
__builtin_HEXAGON_V6_vgtw_and
__builtin_HEXAGON_V6_vgtw_and_128B
__builtin_HEXAGON_V6_vavgubrnd
__builtin_HEXAGON_V6_vavgubrnd_128B
__builtin_HEXAGON_V6_vrmpybusv
__builtin_HEXAGON_V6_vrmpybusv_128B
__builtin_HEXAGON_V6_vsubbnq
__builtin_HEXAGON_V6_vsubbnq_128B
__builtin_HEXAGON_V6_vroundhb
__builtin_HEXAGON_V6_vroundhb_128B
__builtin_HEXAGON_V6_vadduhsat_dv
__builtin_HEXAGON_V6_vadduhsat_dv_128B
__builtin_HEXAGON_V6_vsububsat
__builtin_HEXAGON_V6_vsububsat_128B
__builtin_HEXAGON_V6_vmpabus_acc
__builtin_HEXAGON_V6_vmpabus_acc_128B
V64iV64iV64ii
__builtin_HEXAGON_V6_vmux
__builtin_HEXAGON_V6_vmux_128B
__builtin_HEXAGON_V6_vmpyhus
V32iV16iV16i
__builtin_HEXAGON_V6_vmpyhus_128B
V64iV32iV32i
__builtin_HEXAGON_V6_vpackeb
__builtin_HEXAGON_V6_vpackeb_128B
__builtin_HEXAGON_V6_vsubhnq
__builtin_HEXAGON_V6_vsubhnq_128B
__builtin_HEXAGON_V6_vavghrnd
__builtin_HEXAGON_V6_vavghrnd_128B
__builtin_HEXAGON_V6_vtran2x2_map
V16iV16iv*i
__builtin_HEXAGON_V6_vtran2x2_map_128B
V32iV32iv*i
__builtin_HEXAGON_V6_vdelta
__builtin_HEXAGON_V6_vdelta_128B
__builtin_HEXAGON_V6_vgtuh_and
__builtin_HEXAGON_V6_vgtuh_and_128B
__builtin_HEXAGON_V6_vtmpyhb
V32iV32ii
__builtin_HEXAGON_V6_vtmpyhb_128B
V64iV64ii
__builtin_HEXAGON_V6_vpackob
__builtin_HEXAGON_V6_vpackob_128B
__builtin_HEXAGON_V6_vmaxh
__builtin_HEXAGON_V6_vmaxh_128B
__builtin_HEXAGON_V6_vtmpybus_acc
__builtin_HEXAGON_V6_vtmpybus_acc_128B
__builtin_HEXAGON_V6_vsubuhsat
__builtin_HEXAGON_V6_vsubuhsat_128B
__builtin_HEXAGON_V6_vasrw_acc
__builtin_HEXAGON_V6_vasrw_acc_128B
__builtin_HEXAGON_V6_pred_or
__builtin_HEXAGON_V6_pred_or_128B
__builtin_HEXAGON_V6_vrmpyub_acc
__builtin_HEXAGON_V6_vrmpyub_acc_128B
__builtin_HEXAGON_V6_lo
V16iV32i
__builtin_HEXAGON_V6_lo_128B
V32iV64i
__builtin_HEXAGON_V6_vsubb_dv
__builtin_HEXAGON_V6_vsubb_dv_128B
__builtin_HEXAGON_V6_vsubhsat_dv
__builtin_HEXAGON_V6_vsubhsat_dv_128B
__builtin_HEXAGON_V6_vmpyiwh
V16iV16ii
__builtin_HEXAGON_V6_vmpyiwh_128B
__builtin_HEXAGON_V6_vmpyiwb
__builtin_HEXAGON_V6_vmpyiwb_128B
__builtin_HEXAGON_V6_ldu0
__builtin_HEXAGON_V6_ldu0_128B
V32ii
__builtin_HEXAGON_V6_vgtuh_xor
__builtin_HEXAGON_V6_vgtuh_xor_128B
__builtin_HEXAGON_V6_vgth_or
__builtin_HEXAGON_V6_vgth_or_128B
__builtin_HEXAGON_V6_vavgh
__builtin_HEXAGON_V6_vavgh_128B
__builtin_HEXAGON_V6_vlalignb
__builtin_HEXAGON_V6_vlalignb_128B
__builtin_HEXAGON_V6_vsh
V32iV16i
__builtin_HEXAGON_V6_vsh_128B
V64iV32i
__builtin_HEXAGON_V6_pred_and_n
__builtin_HEXAGON_V6_pred_and_n_128B
__builtin_HEXAGON_V6_vsb
__builtin_HEXAGON_V6_vsb_128B
__builtin_HEXAGON_V6_vroundwuh
__builtin_HEXAGON_V6_vroundwuh_128B
__builtin_HEXAGON_V6_vasrhv
__builtin_HEXAGON_V6_vasrhv_128B
__builtin_HEXAGON_V6_vshuffh
V16iV16i
__builtin_HEXAGON_V6_vshuffh_128B
V32iV32i
__builtin_HEXAGON_V6_vaddhsat_dv
__builtin_HEXAGON_V6_vaddhsat_dv_128B
__builtin_HEXAGON_V6_vnavgub
__builtin_HEXAGON_V6_vnavgub_128B
__builtin_HEXAGON_V6_vrmpybv
__builtin_HEXAGON_V6_vrmpybv_128B
__builtin_HEXAGON_V6_vnormamth
__builtin_HEXAGON_V6_vnormamth_128B
__builtin_HEXAGON_V6_vdmpyhb
__builtin_HEXAGON_V6_vdmpyhb_128B
__builtin_HEXAGON_V6_vavguh
__builtin_HEXAGON_V6_vavguh_128B
__builtin_HEXAGON_V6_vlsrwv
__builtin_HEXAGON_V6_vlsrwv_128B
__builtin_HEXAGON_V6_vlsrhv
__builtin_HEXAGON_V6_vlsrhv_128B
__builtin_HEXAGON_V6_vdmpyhisat
__builtin_HEXAGON_V6_vdmpyhisat_128B
__builtin_HEXAGON_V6_vdmpyhvsat
__builtin_HEXAGON_V6_vdmpyhvsat_128B
__builtin_HEXAGON_V6_vaddw
__builtin_HEXAGON_V6_vaddw_128B
__builtin_HEXAGON_V6_vzh
__builtin_HEXAGON_V6_vzh_128B
__builtin_HEXAGON_V6_vaddh
__builtin_HEXAGON_V6_vaddh_128B
__builtin_HEXAGON_V6_vmaxub
__builtin_HEXAGON_V6_vmaxub_128B
__builtin_HEXAGON_V6_vmpyhv_acc
V32iV32iV16iV16i
__builtin_HEXAGON_V6_vmpyhv_acc_128B
V64iV64iV32iV32i
__builtin_HEXAGON_V6_vadduhsat
__builtin_HEXAGON_V6_vadduhsat_128B
__builtin_HEXAGON_V6_vshufoeh
__builtin_HEXAGON_V6_vshufoeh_128B
__builtin_HEXAGON_V6_vmpyuhv_acc
__builtin_HEXAGON_V6_vmpyuhv_acc_128B
__builtin_HEXAGON_V6_veqh
__builtin_HEXAGON_V6_veqh_128B
__builtin_HEXAGON_V6_vmpabuuv
__builtin_HEXAGON_V6_vmpabuuv_128B
__builtin_HEXAGON_V6_vasrwhsat
__builtin_HEXAGON_V6_vasrwhsat_128B
__builtin_HEXAGON_V6_vminuh
__builtin_HEXAGON_V6_vminuh_128B
__builtin_HEXAGON_V6_vror
__builtin_HEXAGON_V6_vror_128B
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc
__builtin_HEXAGON_V6_vmpyowh_rnd_sacc_128B
__builtin_HEXAGON_V6_vmaxuh
__builtin_HEXAGON_V6_vmaxuh_128B
__builtin_HEXAGON_V6_vabsh_sat
__builtin_HEXAGON_V6_vabsh_sat_128B
__builtin_HEXAGON_V6_pred_or_n
__builtin_HEXAGON_V6_pred_or_n_128B
__builtin_HEXAGON_V6_vdealb
__builtin_HEXAGON_V6_vdealb_128B
__builtin_HEXAGON_V6_vmpybusv
__builtin_HEXAGON_V6_vmpybusv_128B
__builtin_HEXAGON_V6_vzb
__builtin_HEXAGON_V6_vzb_128B
__builtin_HEXAGON_V6_vdmpybus_dv
__builtin_HEXAGON_V6_vdmpybus_dv_128B
__builtin_HEXAGON_V6_vaddbq
__builtin_HEXAGON_V6_vaddbq_128B
__builtin_HEXAGON_V6_vaddb
__builtin_HEXAGON_V6_vaddb_128B
__builtin_HEXAGON_V6_vaddwq
__builtin_HEXAGON_V6_vaddwq_128B
__builtin_HEXAGON_V6_vasrhubrndsat
__builtin_HEXAGON_V6_vasrhubrndsat_128B
__builtin_HEXAGON_V6_vasrhubsat
__builtin_HEXAGON_V6_vasrhubsat_128B
__builtin_HEXAGON_V6_vshufoeb
__builtin_HEXAGON_V6_vshufoeb_128B
__builtin_HEXAGON_V6_vpackhub_sat
__builtin_HEXAGON_V6_vpackhub_sat_128B
__builtin_HEXAGON_V6_vmpyiwh_acc
__builtin_HEXAGON_V6_vmpyiwh_acc_128B
__builtin_HEXAGON_V6_vtmpyb
__builtin_HEXAGON_V6_vtmpyb_128B
__builtin_HEXAGON_V6_vmpabusv
__builtin_HEXAGON_V6_vmpabusv_128B
__builtin_HEXAGON_V6_pred_and
__builtin_HEXAGON_V6_pred_and_128B
__builtin_HEXAGON_V6_vsubwnq
__builtin_HEXAGON_V6_vsubwnq_128B
__builtin_HEXAGON_V6_vpackwuh_sat
__builtin_HEXAGON_V6_vpackwuh_sat_128B
__builtin_HEXAGON_V6_vswap
V32iV16iV16iV16i
__builtin_HEXAGON_V6_vswap_128B
V64iV32iV32iV32i
__builtin_HEXAGON_V6_vrmpyubv_acc
__builtin_HEXAGON_V6_vrmpyubv_acc_128B
__builtin_HEXAGON_V6_vgtb_and
__builtin_HEXAGON_V6_vgtb_and_128B
__builtin_HEXAGON_V6_vaslw
__builtin_HEXAGON_V6_vaslw_128B
__builtin_HEXAGON_V6_vpackhb_sat
__builtin_HEXAGON_V6_vpackhb_sat_128B
__builtin_HEXAGON_V6_vmpyih_acc
__builtin_HEXAGON_V6_vmpyih_acc_128B
__builtin_HEXAGON_V6_vshuffvdd
V32iV16iV16ii
__builtin_HEXAGON_V6_vshuffvdd_128B
V64iV32iV32ii
__builtin_HEXAGON_V6_vaddb_dv
__builtin_HEXAGON_V6_vaddb_dv_128B
__builtin_HEXAGON_V6_vunpackub
__builtin_HEXAGON_V6_vunpackub_128B
__builtin_HEXAGON_V6_vgtuw
__builtin_HEXAGON_V6_vgtuw_128B
__builtin_HEXAGON_V6_vlutvwh
__builtin_HEXAGON_V6_vlutvwh_128B
__builtin_HEXAGON_V6_vgtub
__builtin_HEXAGON_V6_vgtub_128B
__builtin_HEXAGON_V6_vmpyowh
__builtin_HEXAGON_V6_vmpyowh_128B
__builtin_HEXAGON_V6_vmpyieoh
__builtin_HEXAGON_V6_vmpyieoh_128B
__builtin_HEXAGON_V6_extractw
iV16ii
__builtin_HEXAGON_V6_extractw_128B
iV32ii
__builtin_HEXAGON_V6_vavgwrnd
__builtin_HEXAGON_V6_vavgwrnd_128B
__builtin_HEXAGON_V6_vdmpyhsat_acc
__builtin_HEXAGON_V6_vdmpyhsat_acc_128B
__builtin_HEXAGON_V6_vgtub_xor
__builtin_HEXAGON_V6_vgtub_xor_128B
__builtin_HEXAGON_V6_vmpyub
V32iV16ii
__builtin_HEXAGON_V6_vmpyub_128B
V64iV32ii
__builtin_HEXAGON_V6_vmpyuh
__builtin_HEXAGON_V6_vmpyuh_128B
__builtin_HEXAGON_V6_vunpackob
V32iV32iV16i
__builtin_HEXAGON_V6_vunpackob_128B
V64iV64iV32i
__builtin_HEXAGON_V6_vmpahb
__builtin_HEXAGON_V6_vmpahb_128B
__builtin_HEXAGON_V6_veqw_or
__builtin_HEXAGON_V6_veqw_or_128B
__builtin_HEXAGON_V6_vandqrt
__builtin_HEXAGON_V6_vandqrt_128B
__builtin_HEXAGON_V6_vxor
__builtin_HEXAGON_V6_vxor_128B
__builtin_HEXAGON_V6_vasrwhrndsat
__builtin_HEXAGON_V6_vasrwhrndsat_128B
__builtin_HEXAGON_V6_vmpyhsat_acc
V32iV32iV16ii
__builtin_HEXAGON_V6_vmpyhsat_acc_128B
V64iV64iV32ii
__builtin_HEXAGON_V6_vrmpybus_acc
__builtin_HEXAGON_V6_vrmpybus_acc_128B
__builtin_HEXAGON_V6_vsubhw
__builtin_HEXAGON_V6_vsubhw_128B
__builtin_HEXAGON_V6_vdealb4w
__builtin_HEXAGON_V6_vdealb4w_128B
__builtin_HEXAGON_V6_vmpyowh_sacc
__builtin_HEXAGON_V6_vmpyowh_sacc_128B
__builtin_HEXAGON_V6_vmpybv
__builtin_HEXAGON_V6_vmpybv_128B
__builtin_HEXAGON_V6_vabsdiffh
__builtin_HEXAGON_V6_vabsdiffh_128B
__builtin_HEXAGON_V6_vshuffob
__builtin_HEXAGON_V6_vshuffob_128B
__builtin_HEXAGON_V6_vmpyub_acc
__builtin_HEXAGON_V6_vmpyub_acc_128B
__builtin_HEXAGON_V6_vnormamtw
__builtin_HEXAGON_V6_vnormamtw_128B
__builtin_HEXAGON_V6_vunpackuh
__builtin_HEXAGON_V6_vunpackuh_128B
__builtin_HEXAGON_V6_vgtuh_or
__builtin_HEXAGON_V6_vgtuh_or_128B
__builtin_HEXAGON_V6_vmpyiewuh_acc
__builtin_HEXAGON_V6_vmpyiewuh_acc_128B
__builtin_HEXAGON_V6_vunpackoh
__builtin_HEXAGON_V6_vunpackoh_128B
__builtin_HEXAGON_V6_vdmpyhsat
__builtin_HEXAGON_V6_vdmpyhsat_128B
__builtin_HEXAGON_V6_vmpyubv
__builtin_HEXAGON_V6_vmpyubv_128B
__builtin_HEXAGON_V6_vmpyhss
__builtin_HEXAGON_V6_vmpyhss_128B
__builtin_HEXAGON_V6_hi
__builtin_HEXAGON_V6_hi_128B
__builtin_HEXAGON_V6_vasrwuhsat
__builtin_HEXAGON_V6_vasrwuhsat_128B
__builtin_HEXAGON_V6_veqw
__builtin_HEXAGON_V6_veqw_128B
__builtin_HEXAGON_V6_vdsaduh
__builtin_HEXAGON_V6_vdsaduh_128B
__builtin_HEXAGON_V6_vsubw
__builtin_HEXAGON_V6_vsubw_128B
__builtin_HEXAGON_V6_vsubw_dv
__builtin_HEXAGON_V6_vsubw_dv_128B
__builtin_HEXAGON_V6_veqb_and
__builtin_HEXAGON_V6_veqb_and_128B
__builtin_HEXAGON_V6_vmpyih
__builtin_HEXAGON_V6_vmpyih_128B
__builtin_HEXAGON_V6_vtmpyb_acc
__builtin_HEXAGON_V6_vtmpyb_acc_128B
__builtin_HEXAGON_V6_vrmpybus
__builtin_HEXAGON_V6_vrmpybus_128B
__builtin_HEXAGON_V6_vmpybus_acc
__builtin_HEXAGON_V6_vmpybus_acc_128B
__builtin_HEXAGON_V6_vgth_xor
__builtin_HEXAGON_V6_vgth_xor_128B
__builtin_HEXAGON_V6_vsubhsat
__builtin_HEXAGON_V6_vsubhsat_128B
__builtin_HEXAGON_V6_vrmpyubi_acc
__builtin_HEXAGON_V6_vrmpyubi_acc_128B
__builtin_HEXAGON_V6_vabsw
__builtin_HEXAGON_V6_vabsw_128B
__builtin_HEXAGON_V6_vaddwsat_dv
__builtin_HEXAGON_V6_vaddwsat_dv_128B
__builtin_HEXAGON_V6_vlsrw
__builtin_HEXAGON_V6_vlsrw_128B
__builtin_HEXAGON_V6_vabsh
__builtin_HEXAGON_V6_vabsh_128B
__builtin_HEXAGON_V6_vlsrh
__builtin_HEXAGON_V6_vlsrh_128B
__builtin_HEXAGON_V6_valignb
__builtin_HEXAGON_V6_valignb_128B
__builtin_HEXAGON_V6_vsubhq
__builtin_HEXAGON_V6_vsubhq_128B
__builtin_HEXAGON_V6_vpackoh
__builtin_HEXAGON_V6_vpackoh_128B
__builtin_HEXAGON_V6_vdmpybus_acc
__builtin_HEXAGON_V6_vdmpybus_acc_128B
__builtin_HEXAGON_V6_vdmpyhvsat_acc
__builtin_HEXAGON_V6_vdmpyhvsat_acc_128B
__builtin_HEXAGON_V6_vrmpybv_acc
__builtin_HEXAGON_V6_vrmpybv_acc_128B
__builtin_HEXAGON_V6_vaddhsat
__builtin_HEXAGON_V6_vaddhsat_128B
__builtin_HEXAGON_V6_vcombine
__builtin_HEXAGON_V6_vcombine_128B
__builtin_HEXAGON_V6_vandqrt_acc
__builtin_HEXAGON_V6_vandqrt_acc_128B
__builtin_HEXAGON_V6_vaslhv
__builtin_HEXAGON_V6_vaslhv_128B
__builtin_HEXAGON_V6_vinsertwr
__builtin_HEXAGON_V6_vinsertwr_128B
__builtin_HEXAGON_V6_vsubh_dv
__builtin_HEXAGON_V6_vsubh_dv_128B
__builtin_HEXAGON_V6_vshuffb
__builtin_HEXAGON_V6_vshuffb_128B
__builtin_HEXAGON_V6_vand
__builtin_HEXAGON_V6_vand_128B
__builtin_HEXAGON_V6_vmpyhv
__builtin_HEXAGON_V6_vmpyhv_128B
__builtin_HEXAGON_V6_vdmpyhsuisat_acc
V16iV16iV32ii
__builtin_HEXAGON_V6_vdmpyhsuisat_acc_128B
V32iV32iV64ii
__builtin_HEXAGON_V6_vsububsat_dv
__builtin_HEXAGON_V6_vsububsat_dv_128B
__builtin_HEXAGON_V6_vgtb_xor
__builtin_HEXAGON_V6_vgtb_xor_128B
__builtin_HEXAGON_V6_vdsaduh_acc
__builtin_HEXAGON_V6_vdsaduh_acc_128B
__builtin_HEXAGON_V6_vrmpyub
__builtin_HEXAGON_V6_vrmpyub_128B
__builtin_HEXAGON_V6_vmpyuh_acc
__builtin_HEXAGON_V6_vmpyuh_acc_128B
__builtin_HEXAGON_V6_vcl0h
__builtin_HEXAGON_V6_vcl0h_128B
__builtin_HEXAGON_V6_vmpyhus_acc
__builtin_HEXAGON_V6_vmpyhus_acc_128B
__builtin_HEXAGON_V6_vmpybv_acc
__builtin_HEXAGON_V6_vmpybv_acc_128B
__builtin_HEXAGON_V6_vrsadubi
__builtin_HEXAGON_V6_vrsadubi_128B
__builtin_HEXAGON_V6_vdmpyhb_dv_acc
__builtin_HEXAGON_V6_vdmpyhb_dv_acc_128B
__builtin_HEXAGON_V6_vshufeh
__builtin_HEXAGON_V6_vshufeh_128B
__builtin_HEXAGON_V6_vmpyewuh
__builtin_HEXAGON_V6_vmpyewuh_128B
__builtin_HEXAGON_V6_vmpyhsrs
__builtin_HEXAGON_V6_vmpyhsrs_128B
__builtin_HEXAGON_V6_vdmpybus_dv_acc
__builtin_HEXAGON_V6_vdmpybus_dv_acc_128B
__builtin_HEXAGON_V6_vaddubh
__builtin_HEXAGON_V6_vaddubh_128B
__builtin_HEXAGON_V6_vasrwh
__builtin_HEXAGON_V6_vasrwh_128B
__builtin_HEXAGON_V6_ld0
__builtin_HEXAGON_V6_ld0_128B
__builtin_HEXAGON_V6_vpopcounth
__builtin_HEXAGON_V6_vpopcounth_128B
__builtin_HEXAGON_V6_ldnt0
__builtin_HEXAGON_V6_ldnt0_128B
__builtin_HEXAGON_V6_vgth_and
__builtin_HEXAGON_V6_vgth_and_128B
__builtin_HEXAGON_V6_vaddubsat_dv
__builtin_HEXAGON_V6_vaddubsat_dv_128B
__builtin_HEXAGON_V6_vpackeh
__builtin_HEXAGON_V6_vpackeh_128B
__builtin_HEXAGON_V6_vmpyh
__builtin_HEXAGON_V6_vmpyh_128B
__builtin_HEXAGON_V6_vminh
__builtin_HEXAGON_V6_vminh_128B
__builtin_HEXAGON_V6_pred_scalar2
__builtin_HEXAGON_V6_pred_scalar2_128B
__builtin_HEXAGON_V6_vdealh
__builtin_HEXAGON_V6_vdealh_128B
__builtin_HEXAGON_V6_vpackwh_sat
__builtin_HEXAGON_V6_vpackwh_sat_128B
__builtin_HEXAGON_V6_vaslh
__builtin_HEXAGON_V6_vaslh_128B
__builtin_HEXAGON_V6_vgtuw_and
__builtin_HEXAGON_V6_vgtuw_and_128B
__builtin_HEXAGON_V6_vor
__builtin_HEXAGON_V6_vor_128B
__builtin_HEXAGON_V6_vlutvvb
__builtin_HEXAGON_V6_vlutvvb_128B
__builtin_HEXAGON_V6_vmpyiowh
__builtin_HEXAGON_V6_vmpyiowh_128B
__builtin_HEXAGON_V6_vlutvvb_oracc
V16iV16iV16iV16ii
__builtin_HEXAGON_V6_vlutvvb_oracc_128B
V32iV32iV32iV32ii
__builtin_HEXAGON_V6_vandvrt
__builtin_HEXAGON_V6_vandvrt_128B
__builtin_HEXAGON_V6_veqh_xor
__builtin_HEXAGON_V6_veqh_xor_128B
__builtin_HEXAGON_V6_vadduhw
__builtin_HEXAGON_V6_vadduhw_128B
__builtin_HEXAGON_V6_vcl0w
__builtin_HEXAGON_V6_vcl0w_128B
__builtin_HEXAGON_V6_vmpyihb
__builtin_HEXAGON_V6_vmpyihb_128B
__builtin_HEXAGON_V6_vtmpybus
__builtin_HEXAGON_V6_vtmpybus_128B
__builtin_HEXAGON_V6_vd0
V16i
__builtin_HEXAGON_V6_vd0_128B
V32i
__builtin_HEXAGON_V6_veqh_or
__builtin_HEXAGON_V6_veqh_or_128B
__builtin_HEXAGON_V6_vgtw_or
__builtin_HEXAGON_V6_vgtw_or_128B
__builtin_HEXAGON_V6_vdmpybus
__builtin_HEXAGON_V6_vdmpybus_128B
__builtin_HEXAGON_V6_vgtub_or
__builtin_HEXAGON_V6_vgtub_or_128B
__builtin_HEXAGON_V6_vmpybus
__builtin_HEXAGON_V6_vmpybus_128B
__builtin_HEXAGON_V6_vdmpyhb_acc
__builtin_HEXAGON_V6_vdmpyhb_acc_128B
__builtin_HEXAGON_V6_vandvrt_acc
__builtin_HEXAGON_V6_vandvrt_acc_128B
__builtin_HEXAGON_V6_vassign
__builtin_HEXAGON_V6_vassign_128B
__builtin_HEXAGON_V6_vaddwnq
__builtin_HEXAGON_V6_vaddwnq_128B
__builtin_HEXAGON_V6_vgtub_and
__builtin_HEXAGON_V6_vgtub_and_128B
__builtin_HEXAGON_V6_vdmpyhb_dv
__builtin_HEXAGON_V6_vdmpyhb_dv_128B
__builtin_HEXAGON_V6_vunpackb
__builtin_HEXAGON_V6_vunpackb_128B
__builtin_HEXAGON_V6_vunpackh
__builtin_HEXAGON_V6_vunpackh_128B
__builtin_HEXAGON_V6_vmpahb_acc
__builtin_HEXAGON_V6_vmpahb_acc_128B
__builtin_HEXAGON_V6_vaddbnq
__builtin_HEXAGON_V6_vaddbnq_128B
__builtin_HEXAGON_V6_vlalignbi
V16iV16iV16iUIi
__builtin_HEXAGON_V6_vlalignbi_128B
V32iV32iV32iUIi
__builtin_HEXAGON_V6_vsatwh
__builtin_HEXAGON_V6_vsatwh_128B
__builtin_HEXAGON_V6_vgtuh
__builtin_HEXAGON_V6_vgtuh_128B
__builtin_HEXAGON_V6_vmpyihb_acc
__builtin_HEXAGON_V6_vmpyihb_acc_128B
__builtin_HEXAGON_V6_vrmpybusv_acc
__builtin_HEXAGON_V6_vrmpybusv_acc_128B
__builtin_HEXAGON_V6_vrdelta
__builtin_HEXAGON_V6_vrdelta_128B
__builtin_HEXAGON_V6_vroundwh
__builtin_HEXAGON_V6_vroundwh_128B
__builtin_HEXAGON_V6_vaddw_dv
__builtin_HEXAGON_V6_vaddw_dv_128B
__builtin_HEXAGON_V6_vmpyiwb_acc
__builtin_HEXAGON_V6_vmpyiwb_acc_128B
__builtin_HEXAGON_V6_vsubbq
__builtin_HEXAGON_V6_vsubbq_128B
__builtin_HEXAGON_V6_veqh_and
__builtin_HEXAGON_V6_veqh_and_128B
__builtin_HEXAGON_V6_valignbi
__builtin_HEXAGON_V6_valignbi_128B
__builtin_HEXAGON_V6_vaddwsat
__builtin_HEXAGON_V6_vaddwsat_128B
__builtin_HEXAGON_V6_veqw_and
__builtin_HEXAGON_V6_veqw_and_128B
__builtin_HEXAGON_V6_vabsdiffub
__builtin_HEXAGON_V6_vabsdiffub_128B
__builtin_HEXAGON_V6_vshuffeb
__builtin_HEXAGON_V6_vshuffeb_128B
__builtin_HEXAGON_V6_vabsdiffuh
__builtin_HEXAGON_V6_vabsdiffuh_128B
__builtin_HEXAGON_V6_veqw_xor
__builtin_HEXAGON_V6_veqw_xor_128B
__builtin_HEXAGON_V6_vgth
__builtin_HEXAGON_V6_vgth_128B
__builtin_HEXAGON_V6_vgtuw_xor
__builtin_HEXAGON_V6_vgtuw_xor_128B
__builtin_HEXAGON_V6_vgtb
__builtin_HEXAGON_V6_vgtb_128B
__builtin_HEXAGON_V6_vgtw
__builtin_HEXAGON_V6_vgtw_128B
__builtin_HEXAGON_V6_vsubwq
__builtin_HEXAGON_V6_vsubwq_128B
__builtin_HEXAGON_V6_vnot
__builtin_HEXAGON_V6_vnot_128B
__builtin_HEXAGON_V6_vgtb_or
__builtin_HEXAGON_V6_vgtb_or_128B
__builtin_HEXAGON_V6_vgtuw_or
__builtin_HEXAGON_V6_vgtuw_or_128B
__builtin_HEXAGON_V6_vaddubsat
__builtin_HEXAGON_V6_vaddubsat_128B
__builtin_HEXAGON_V6_vmaxw
__builtin_HEXAGON_V6_vmaxw_128B
__builtin_HEXAGON_V6_vaslwv
__builtin_HEXAGON_V6_vaslwv_128B
__builtin_HEXAGON_V6_vabsw_sat
__builtin_HEXAGON_V6_vabsw_sat_128B
__builtin_HEXAGON_V6_vsubwsat_dv
__builtin_HEXAGON_V6_vsubwsat_dv_128B
__builtin_HEXAGON_V6_vroundhub
__builtin_HEXAGON_V6_vroundhub_128B
__builtin_HEXAGON_V6_vdmpyhisat_acc
__builtin_HEXAGON_V6_vdmpyhisat_acc_128B
__builtin_HEXAGON_V6_vmpabus
__builtin_HEXAGON_V6_vmpabus_128B
__builtin_HEXAGON_V6_vassignp
__builtin_HEXAGON_V6_vassignp_128B
V64iV64i
__builtin_HEXAGON_V6_veqb
__builtin_HEXAGON_V6_veqb_128B
__builtin_HEXAGON_V6_vsububh
__builtin_HEXAGON_V6_vsububh_128B
__builtin_HEXAGON_V6_lvsplatw
__builtin_HEXAGON_V6_lvsplatw_128B
__builtin_HEXAGON_V6_vaddhnq
__builtin_HEXAGON_V6_vaddhnq_128B
__builtin_HEXAGON_V6_vdmpyhsusat
__builtin_HEXAGON_V6_vdmpyhsusat_128B
__builtin_HEXAGON_V6_pred_not
__builtin_HEXAGON_V6_pred_not_128B
__builtin_HEXAGON_V6_vlutvwh_oracc
V32iV32iV16iV16ii
__builtin_HEXAGON_V6_vlutvwh_oracc_128B
V64iV64iV32iV32ii
__builtin_HEXAGON_V6_vmpyiewh_acc
__builtin_HEXAGON_V6_vmpyiewh_acc_128B
__builtin_HEXAGON_V6_vdealvdd
__builtin_HEXAGON_V6_vdealvdd_128B
__builtin_HEXAGON_V6_vavgw
__builtin_HEXAGON_V6_vavgw_128B
__builtin_HEXAGON_V6_vdmpyhsusat_acc
__builtin_HEXAGON_V6_vdmpyhsusat_acc_128B
__builtin_HEXAGON_V6_vgtw_xor
__builtin_HEXAGON_V6_vgtw_xor_128B
__builtin_HEXAGON_V6_vtmpyhb_acc
__builtin_HEXAGON_V6_vtmpyhb_acc_128B
__builtin_HEXAGON_V6_vaddhw
__builtin_HEXAGON_V6_vaddhw_128B
__builtin_HEXAGON_V6_vaddhq
__builtin_HEXAGON_V6_vaddhq_128B
__builtin_HEXAGON_V6_vrmpyubv
__builtin_HEXAGON_V6_vrmpyubv_128B
__builtin_HEXAGON_V6_vsubh
__builtin_HEXAGON_V6_vsubh_128B
__builtin_HEXAGON_V6_vrmpyubi
__builtin_HEXAGON_V6_vrmpyubi_128B
__builtin_HEXAGON_V6_vminw
__builtin_HEXAGON_V6_vminw_128B
__builtin_HEXAGON_V6_vmpyubv_acc
__builtin_HEXAGON_V6_vmpyubv_acc_128B
__builtin_HEXAGON_V6_pred_xor
__builtin_HEXAGON_V6_pred_xor_128B
__builtin_HEXAGON_V6_veqb_xor
__builtin_HEXAGON_V6_veqb_xor_128B
__builtin_HEXAGON_V6_vmpyiewuh
__builtin_HEXAGON_V6_vmpyiewuh_128B
__builtin_HEXAGON_V6_vmpybusv_acc
__builtin_HEXAGON_V6_vmpybusv_acc_128B
__builtin_HEXAGON_V6_vavguhrnd
__builtin_HEXAGON_V6_vavguhrnd_128B
__builtin_HEXAGON_V6_vmpyowh_rnd
__builtin_HEXAGON_V6_vmpyowh_rnd_128B
__builtin_HEXAGON_V6_vsubwsat
__builtin_HEXAGON_V6_vsubwsat_128B
__builtin_HEXAGON_V6_vsubuhw
__builtin_HEXAGON_V6_vsubuhw_128B
__builtin_HEXAGON_V6_vrmpybusi_acc
__builtin_HEXAGON_V6_vrmpybusi_acc_128B
__builtin_HEXAGON_V6_vasrw
__builtin_HEXAGON_V6_vasrw_128B
__builtin_HEXAGON_V6_vasrh
__builtin_HEXAGON_V6_vasrh_128B
__builtin_HEXAGON_V6_vmpyuhv
__builtin_HEXAGON_V6_vmpyuhv_128B
__builtin_HEXAGON_V6_vasrhbrndsat
__builtin_HEXAGON_V6_vasrhbrndsat_128B
__builtin_HEXAGON_V6_vsubuhsat_dv
__builtin_HEXAGON_V6_vsubuhsat_dv_128B
__builtin_HEXAGON_V6_vabsdiffw
__builtin_HEXAGON_V6_vabsdiffw_128B
__builtin_HEXAGON_V6_vandnqrt_acc
__builtin_HEXAGON_V6_vandnqrt_acc_128B
__builtin_HEXAGON_V6_vaddclbh
__builtin_HEXAGON_V6_vaddclbh_128B
__builtin_HEXAGON_V6_vmpyowh_64_acc
__builtin_HEXAGON_V6_vmpyowh_64_acc_128B
__builtin_HEXAGON_V6_vmpyewuh_64
__builtin_HEXAGON_V6_vmpyewuh_64_128B
__builtin_HEXAGON_V6_vsatuwuh
__builtin_HEXAGON_V6_vsatuwuh_128B
__builtin_HEXAGON_V6_shuffeqh
__builtin_HEXAGON_V6_shuffeqh_128B
__builtin_HEXAGON_V6_shuffeqw
__builtin_HEXAGON_V6_shuffeqw_128B
__builtin_HEXAGON_V6_ldcnpnt0
V16iii
__builtin_HEXAGON_V6_ldcnpnt0_128B
V32iii
__builtin_HEXAGON_V6_vsubcarry
V16iV16iV16iv*
__builtin_HEXAGON_V6_vsubcarry_128B
V32iV32iV32iv*
__builtin_HEXAGON_V6_vasrhbsat
__builtin_HEXAGON_V6_vasrhbsat_128B
__builtin_HEXAGON_V6_vminb
__builtin_HEXAGON_V6_vminb_128B
__builtin_HEXAGON_V6_vmpauhb_acc
__builtin_HEXAGON_V6_vmpauhb_acc_128B
__builtin_HEXAGON_V6_vaddhw_acc
__builtin_HEXAGON_V6_vaddhw_acc_128B
__builtin_HEXAGON_V6_vlsrb
__builtin_HEXAGON_V6_vlsrb_128B
__builtin_HEXAGON_V6_vlutvwhi
V32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwhi_128B
V64iV32iV32iUIi
__builtin_HEXAGON_V6_vaddububb_sat
__builtin_HEXAGON_V6_vaddububb_sat_128B
__builtin_HEXAGON_V6_vsubbsat_dv
__builtin_HEXAGON_V6_vsubbsat_dv_128B
__builtin_HEXAGON_V6_ldtp0
__builtin_HEXAGON_V6_ldtp0_128B
__builtin_HEXAGON_V6_vlutvvb_oracci
V16iV16iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvvb_oracci_128B
V32iV32iV32iV32iUIi
__builtin_HEXAGON_V6_vsubuwsat_dv
__builtin_HEXAGON_V6_vsubuwsat_dv_128B
__builtin_HEXAGON_V6_ldpnt0
__builtin_HEXAGON_V6_ldpnt0_128B
__builtin_HEXAGON_V6_vandvnqv
__builtin_HEXAGON_V6_vandvnqv_128B
__builtin_HEXAGON_V6_lvsplatb
__builtin_HEXAGON_V6_lvsplatb_128B
__builtin_HEXAGON_V6_lvsplath
__builtin_HEXAGON_V6_lvsplath_128B
__builtin_HEXAGON_V6_ldtpnt0
__builtin_HEXAGON_V6_ldtpnt0_128B
__builtin_HEXAGON_V6_vlutvwh_nm
__builtin_HEXAGON_V6_vlutvwh_nm_128B
__builtin_HEXAGON_V6_ldnpnt0
__builtin_HEXAGON_V6_ldnpnt0_128B
__builtin_HEXAGON_V6_vmpauhb
__builtin_HEXAGON_V6_vmpauhb_128B
__builtin_HEXAGON_V6_ldtnp0
__builtin_HEXAGON_V6_ldtnp0_128B
__builtin_HEXAGON_V6_vrounduhub
__builtin_HEXAGON_V6_vrounduhub_128B
__builtin_HEXAGON_V6_vadduhw_acc
__builtin_HEXAGON_V6_vadduhw_acc_128B
__builtin_HEXAGON_V6_ldcp0
__builtin_HEXAGON_V6_ldcp0_128B
__builtin_HEXAGON_V6_vadduwsat
__builtin_HEXAGON_V6_vadduwsat_128B
__builtin_HEXAGON_V6_ldtnpnt0
__builtin_HEXAGON_V6_ldtnpnt0_128B
__builtin_HEXAGON_V6_vaddbsat
__builtin_HEXAGON_V6_vaddbsat_128B
__builtin_HEXAGON_V6_vandnqrt
__builtin_HEXAGON_V6_vandnqrt_128B
__builtin_HEXAGON_V6_vmpyiwub_acc
__builtin_HEXAGON_V6_vmpyiwub_acc_128B
__builtin_HEXAGON_V6_vmaxb
__builtin_HEXAGON_V6_vmaxb_128B
__builtin_HEXAGON_V6_vandvqv
__builtin_HEXAGON_V6_vandvqv_128B
__builtin_HEXAGON_V6_vaddcarry
__builtin_HEXAGON_V6_vaddcarry_128B
__builtin_HEXAGON_V6_vasrwuhrndsat
__builtin_HEXAGON_V6_vasrwuhrndsat_128B
__builtin_HEXAGON_V6_vlutvvbi
__builtin_HEXAGON_V6_vlutvvbi_128B
__builtin_HEXAGON_V6_vsubuwsat
__builtin_HEXAGON_V6_vsubuwsat_128B
__builtin_HEXAGON_V6_vaddbsat_dv
__builtin_HEXAGON_V6_vaddbsat_dv_128B
__builtin_HEXAGON_V6_ldnp0
__builtin_HEXAGON_V6_ldnp0_128B
__builtin_HEXAGON_V6_vasruwuhrndsat
__builtin_HEXAGON_V6_vasruwuhrndsat_128B
__builtin_HEXAGON_V6_vrounduwuh
__builtin_HEXAGON_V6_vrounduwuh_128B
__builtin_HEXAGON_V6_vlutvvb_nm
__builtin_HEXAGON_V6_vlutvvb_nm_128B
__builtin_HEXAGON_V6_pred_scalar2v2
__builtin_HEXAGON_V6_pred_scalar2v2_128B
__builtin_HEXAGON_V6_ldp0
__builtin_HEXAGON_V6_ldp0_128B
__builtin_HEXAGON_V6_vaddubh_acc
__builtin_HEXAGON_V6_vaddubh_acc_128B
__builtin_HEXAGON_V6_vaddclbw
__builtin_HEXAGON_V6_vaddclbw_128B
__builtin_HEXAGON_V6_ldcpnt0
__builtin_HEXAGON_V6_ldcpnt0_128B
__builtin_HEXAGON_V6_vadduwsat_dv
__builtin_HEXAGON_V6_vadduwsat_dv_128B
__builtin_HEXAGON_V6_vmpyiwub
__builtin_HEXAGON_V6_vmpyiwub_128B
__builtin_HEXAGON_V6_vsubububb_sat
__builtin_HEXAGON_V6_vsubububb_sat_128B
__builtin_HEXAGON_V6_ldcnp0
__builtin_HEXAGON_V6_ldcnp0_128B
__builtin_HEXAGON_V6_vlutvwh_oracci
V32iV32iV16iV16iUIi
__builtin_HEXAGON_V6_vlutvwh_oracci_128B
V64iV64iV32iV32iUIi
__builtin_HEXAGON_V6_vsubbsat
__builtin_HEXAGON_V6_vsubbsat_128B
__builtin_HEXAGON_V6_vasruhubrndsat
__builtin_HEXAGON_V6_vasruhubrndsat_128B
__builtin_HEXAGON_V6_vrmpybub_rtt
V32iV16iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_128B
V64iV32iLLi
__builtin_HEXAGON_V6_vmpahhsat
V16iV16iV16iLLi
__builtin_HEXAGON_V6_vmpahhsat_128B
V32iV32iV32iLLi
__builtin_HEXAGON_V6_vavguwrnd
__builtin_HEXAGON_V6_vavguwrnd_128B
__builtin_HEXAGON_V6_vnavgb
__builtin_HEXAGON_V6_vnavgb_128B
__builtin_HEXAGON_V6_vasrh_acc
__builtin_HEXAGON_V6_vasrh_acc_128B
__builtin_HEXAGON_V6_vmpauhuhsat
__builtin_HEXAGON_V6_vmpauhuhsat_128B
__builtin_HEXAGON_V6_vmpyh_acc
__builtin_HEXAGON_V6_vmpyh_acc_128B
__builtin_HEXAGON_V6_vrmpybub_rtt_acc
V32iV32iV16iLLi
__builtin_HEXAGON_V6_vrmpybub_rtt_acc_128B
V64iV64iV32iLLi
__builtin_HEXAGON_V6_vavgb
__builtin_HEXAGON_V6_vavgb_128B
__builtin_HEXAGON_V6_vaslh_acc
__builtin_HEXAGON_V6_vaslh_acc_128B
__builtin_HEXAGON_V6_vavguw
__builtin_HEXAGON_V6_vavguw_128B
__builtin_HEXAGON_V6_vlut4
V16iV16iLLi
__builtin_HEXAGON_V6_vlut4_128B
V32iV32iLLi
__builtin_HEXAGON_V6_vmpyuhe_acc
__builtin_HEXAGON_V6_vmpyuhe_acc_128B
__builtin_HEXAGON_V6_vrmpyub_rtt
__builtin_HEXAGON_V6_vrmpyub_rtt_128B
__builtin_HEXAGON_V6_vmpsuhuhsat
__builtin_HEXAGON_V6_vmpsuhuhsat_128B
__builtin_HEXAGON_V6_vasruhubsat
__builtin_HEXAGON_V6_vasruhubsat_128B
__builtin_HEXAGON_V6_vmpyuhe
__builtin_HEXAGON_V6_vmpyuhe_128B
__builtin_HEXAGON_V6_vrmpyub_rtt_acc
__builtin_HEXAGON_V6_vrmpyub_rtt_acc_128B
__builtin_HEXAGON_V6_vasruwuhsat
__builtin_HEXAGON_V6_vasruwuhsat_128B
__builtin_HEXAGON_V6_vmpabuu_acc
__builtin_HEXAGON_V6_vmpabuu_acc_128B
__builtin_HEXAGON_V6_vprefixqw
__builtin_HEXAGON_V6_vprefixqw_128B
__builtin_HEXAGON_V6_vprefixqh
__builtin_HEXAGON_V6_vprefixqh_128B
__builtin_HEXAGON_V6_vprefixqb
__builtin_HEXAGON_V6_vprefixqb_128B
__builtin_HEXAGON_V6_vabsb
__builtin_HEXAGON_V6_vabsb_128B
__builtin_HEXAGON_V6_vavgbrnd
__builtin_HEXAGON_V6_vavgbrnd_128B
__builtin_HEXAGON_V6_vdd0
__builtin_HEXAGON_V6_vdd0_128B
V64i
__builtin_HEXAGON_V6_vmpabuu
__builtin_HEXAGON_V6_vmpabuu_128B
__builtin_HEXAGON_V6_vabsb_sat
__builtin_HEXAGON_V6_vabsb_sat_128B
__builtin_HEXAGON_V6_vaddcarrysat
__builtin_HEXAGON_V6_vaddcarrysat_128B
__builtin_HEXAGON_V6_vasr_into
__builtin_HEXAGON_V6_vasr_into_128B
__builtin_HEXAGON_V6_vsatdw
__builtin_HEXAGON_V6_vsatdw_128B
__builtin_HEXAGON_V6_vrotr
__builtin_HEXAGON_V6_vrotr_128B
hvxv
hexagon
__lanai__
__LANAI_V11__
le64
MSP430
__MSP430__
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
iV2s
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
V2si
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_precr_sra_r_ph_w
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
__builtin_msa_add_a_w
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
__builtin_msa_adds_u_w
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
V16cV16cV16c
__builtin_msa_addv_h
V8sV8sV8s
__builtin_msa_addv_w
V4iV4iV4i
__builtin_msa_addv_d
V2LLiV2LLiV2LLi
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
__builtin_msa_binsl_h
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
__builtin_msa_binsl_d
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
V4fV4fV4f
__builtin_msa_fadd_d
V2dV2dV2d
__builtin_msa_fcaf_w
V4iV4fV4f
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
V4iV4f
__builtin_msa_fclass_d
V2LLiV2d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
V4fV4fV4i
__builtin_msa_fexp2_d
V2dV2dV2LLi
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
V2dV4f
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
V4fV4f
__builtin_msa_flog2_d
V2dV2d
__builtin_msa_fmadd_w
V4fV4fV4fV4f
__builtin_msa_fmadd_d
V2dV2dV2dV2d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
V16cV16cV16cV16c
__builtin_msa_vshf_h
V8sV8sV8sV8s
__builtin_msa_vshf_w
V4iV4iV4iV4i
__builtin_msa_vshf_d
V2LLiV2LLiV2LLiV2LLi
__builtin_msa_xor_v
__builtin_msa_xori_b
mips3
mips4
mips5
mips64
mips64r3
mips64r5
mips32
mips32r3
mips32r5
MIPSEB
_MIPSEB
MIPSEL
_MIPSEL
__mips__
_mips
mips
__mips
_MIPS_ISA
_MIPS_ISA_MIPS32
__mips64
__mips64__
_MIPS_ISA_MIPS64
__mips_isa_rev
__mips_o32
_ABIO32
_MIPS_SIM
__mips_n32
_ABIN32
__mips_n64
_ABI64
__mips_abicalls
__ABICALLS__
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_abs2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
__mips_no_madd4
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_
-mfpxx
-mfp32
mips1
mips2
-mfp64
p5600
__nvvm_read_ptx_sreg_tid_x
__nvvm_read_ptx_sreg_tid_y
__nvvm_read_ptx_sreg_tid_z
__nvvm_read_ptx_sreg_tid_w
__nvvm_read_ptx_sreg_ntid_x
__nvvm_read_ptx_sreg_ntid_y
__nvvm_read_ptx_sreg_ntid_z
__nvvm_read_ptx_sreg_ntid_w
__nvvm_read_ptx_sreg_ctaid_x
__nvvm_read_ptx_sreg_ctaid_y
__nvvm_read_ptx_sreg_ctaid_z
__nvvm_read_ptx_sreg_ctaid_w
__nvvm_read_ptx_sreg_nctaid_x
__nvvm_read_ptx_sreg_nctaid_y
__nvvm_read_ptx_sreg_nctaid_z
__nvvm_read_ptx_sreg_nctaid_w
__nvvm_read_ptx_sreg_laneid
__nvvm_read_ptx_sreg_warpid
__nvvm_read_ptx_sreg_nwarpid
__nvvm_read_ptx_sreg_smid
__nvvm_read_ptx_sreg_nsmid
__nvvm_read_ptx_sreg_gridid
__nvvm_read_ptx_sreg_lanemask_eq
__nvvm_read_ptx_sreg_lanemask_le
__nvvm_read_ptx_sreg_lanemask_lt
__nvvm_read_ptx_sreg_lanemask_ge
__nvvm_read_ptx_sreg_lanemask_gt
__nvvm_read_ptx_sreg_clock
__nvvm_read_ptx_sreg_clock64
__nvvm_read_ptx_sreg_pm0
__nvvm_read_ptx_sreg_pm1
__nvvm_read_ptx_sreg_pm2
__nvvm_read_ptx_sreg_pm3
__nvvm_prmt
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
ULLid
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
dULLi
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__nvvm_fns
UiUiUii
ptx60|ptx61
__syncthreads
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_bar_sync
__nvvm_bar_warp_sync
__nvvm_barrier_sync
__nvvm_barrier_sync_cnt
vUiUi
__nvvm_shfl_down_i32
__nvvm_shfl_down_f32
ffii
__nvvm_shfl_up_i32
__nvvm_shfl_up_f32
__nvvm_shfl_bfly_i32
__nvvm_shfl_bfly_f32
__nvvm_shfl_idx_i32
__nvvm_shfl_idx_f32
__nvvm_shfl_sync_down_i32
iUiiii
__nvvm_shfl_sync_down_f32
fUifii
__nvvm_shfl_sync_up_i32
__nvvm_shfl_sync_up_f32
__nvvm_shfl_sync_bfly_i32
__nvvm_shfl_sync_bfly_f32
__nvvm_shfl_sync_idx_i32
__nvvm_shfl_sync_idx_f32
__nvvm_vote_all
__nvvm_vote_any
__nvvm_vote_uni
__nvvm_vote_ballot
__nvvm_vote_all_sync
bUib
__nvvm_vote_any_sync
__nvvm_vote_uni_sync
__nvvm_vote_ballot_sync
UiUib
__nvvm_match_any_sync_i32
__nvvm_match_any_sync_i64
WiUiWi
__nvvm_match_all_sync_i32p
UiUiUii*
__nvvm_match_all_sync_i64p
WiUiWii*
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
V4fiiii
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
V4iiiii
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
viiiffff
__builtin_ptx_write_image2Di_
viiiiiii
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_gen_i
__nvvm_atom_cta_add_gen_i
sm_60|sm_61|sm_62|sm_70|sm_71
__nvvm_atom_sys_add_gen_i
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_cta_add_gen_l
__nvvm_atom_sys_add_gen_l
__nvvm_atom_add_gen_ll
__nvvm_atom_cta_add_gen_ll
__nvvm_atom_sys_add_gen_ll
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_cta_add_gen_f
__nvvm_atom_sys_add_gen_f
__nvvm_atom_add_gen_d
ddD*d
__nvvm_atom_cta_add_gen_d
__nvvm_atom_sys_add_gen_d
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_gen_i
__nvvm_atom_cta_xchg_gen_i
__nvvm_atom_sys_xchg_gen_i
__nvvm_atom_xchg_gen_l
__nvvm_atom_cta_xchg_gen_l
__nvvm_atom_sys_xchg_gen_l
__nvvm_atom_xchg_gen_ll
__nvvm_atom_cta_xchg_gen_ll
__nvvm_atom_sys_xchg_gen_ll
__nvvm_atom_max_gen_i
__nvvm_atom_cta_max_gen_i
__nvvm_atom_sys_max_gen_i
__nvvm_atom_max_gen_ui
__nvvm_atom_cta_max_gen_ui
__nvvm_atom_sys_max_gen_ui
__nvvm_atom_max_gen_l
__nvvm_atom_cta_max_gen_l
__nvvm_atom_sys_max_gen_l
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_cta_max_gen_ul
__nvvm_atom_sys_max_gen_ul
__nvvm_atom_max_gen_ll
__nvvm_atom_cta_max_gen_ll
__nvvm_atom_sys_max_gen_ll
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_cta_max_gen_ull
__nvvm_atom_sys_max_gen_ull
__nvvm_atom_min_gen_i
__nvvm_atom_cta_min_gen_i
__nvvm_atom_sys_min_gen_i
__nvvm_atom_min_gen_ui
__nvvm_atom_cta_min_gen_ui
__nvvm_atom_sys_min_gen_ui
__nvvm_atom_min_gen_l
__nvvm_atom_cta_min_gen_l
__nvvm_atom_sys_min_gen_l
__nvvm_atom_min_gen_ul
__nvvm_atom_cta_min_gen_ul
__nvvm_atom_sys_min_gen_ul
__nvvm_atom_min_gen_ll
__nvvm_atom_cta_min_gen_ll
__nvvm_atom_sys_min_gen_ll
__nvvm_atom_min_gen_ull
__nvvm_atom_cta_min_gen_ull
__nvvm_atom_sys_min_gen_ull
__nvvm_atom_inc_gen_ui
__nvvm_atom_cta_inc_gen_ui
__nvvm_atom_sys_inc_gen_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_cta_dec_gen_ui
__nvvm_atom_sys_dec_gen_ui
__nvvm_atom_and_gen_i
__nvvm_atom_cta_and_gen_i
__nvvm_atom_sys_and_gen_i
__nvvm_atom_and_gen_l
__nvvm_atom_cta_and_gen_l
__nvvm_atom_sys_and_gen_l
__nvvm_atom_and_gen_ll
__nvvm_atom_cta_and_gen_ll
__nvvm_atom_sys_and_gen_ll
__nvvm_atom_or_gen_i
__nvvm_atom_cta_or_gen_i
__nvvm_atom_sys_or_gen_i
__nvvm_atom_or_gen_l
__nvvm_atom_cta_or_gen_l
__nvvm_atom_sys_or_gen_l
__nvvm_atom_or_gen_ll
__nvvm_atom_cta_or_gen_ll
__nvvm_atom_sys_or_gen_ll
__nvvm_atom_xor_gen_i
__nvvm_atom_cta_xor_gen_i
__nvvm_atom_sys_xor_gen_i
__nvvm_atom_xor_gen_l
__nvvm_atom_cta_xor_gen_l
__nvvm_atom_sys_xor_gen_l
__nvvm_atom_xor_gen_ll
__nvvm_atom_cta_xor_gen_ll
__nvvm_atom_sys_xor_gen_ll
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cta_cas_gen_i
__nvvm_atom_sys_cas_gen_i
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cta_cas_gen_l
__nvvm_atom_sys_cas_gen_l
__nvvm_atom_cas_gen_ll
__nvvm_atom_cta_cas_gen_ll
__nvvm_atom_sys_cas_gen_ll
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
__nvvm_ldg_c
ccC*
__nvvm_ldg_s
ssC*
__nvvm_ldg_i
iiC*
__nvvm_ldg_l
LiLiC*
__nvvm_ldg_ll
LLiLLiC*
__nvvm_ldg_uc
UcUcC*
__nvvm_ldg_us
UsUsC*
__nvvm_ldg_ui
UiUiC*
__nvvm_ldg_ul
ULiULiC*
__nvvm_ldg_ull
ULLiULLiC*
__nvvm_ldg_f
ffC*
__nvvm_ldg_d
ddC*
__nvvm_ldg_c2
E2cE2cC*
__nvvm_ldg_c4
E4cE4cC*
__nvvm_ldg_s2
E2sE2sC*
__nvvm_ldg_s4
E4sE4sC*
__nvvm_ldg_i2
E2iE2iC*
__nvvm_ldg_i4
E4iE4iC*
__nvvm_ldg_ll2
E2LLiE2LLiC*
__nvvm_ldg_uc2
E2UcE2UcC*
__nvvm_ldg_uc4
E4UcE4UcC*
__nvvm_ldg_us2
E2UsE2UsC*
__nvvm_ldg_us4
E4UsE4UsC*
__nvvm_ldg_ui2
E2UiE2UiC*
__nvvm_ldg_ui4
E4UiE4UiC*
__nvvm_ldg_ull2
E2ULLiE2ULLiC*
__nvvm_ldg_f2
E2fE2fC*
__nvvm_ldg_f4
E4fE4fC*
__nvvm_ldg_d2
E2dE2dC*
__hmma_m16n16k16_ld_a
vi*iC*UiIi
sm_70|sm_71,ptx60|ptx61
__hmma_m16n16k16_ld_b
__hmma_m16n16k16_ld_c_f16
__hmma_m16n16k16_ld_c_f32
vf*fC*UiIi
__hmma_m16n16k16_st_c_f16
vi*i*UiIi
__hmma_m16n16k16_st_c_f32
vf*f*UiIi
__hmma_m32n8k16_ld_a
sm_70|sm_71,ptx61
__hmma_m32n8k16_ld_b
__hmma_m32n8k16_ld_c_f16
__hmma_m32n8k16_ld_c_f32
__hmma_m32n8k16_st_c_f16
__hmma_m32n8k16_st_c_f32
__hmma_m8n32k16_ld_a
__hmma_m8n32k16_ld_b
__hmma_m8n32k16_ld_c_f16
__hmma_m8n32k16_ld_c_f32
__hmma_m8n32k16_st_c_f16
__hmma_m8n32k16_st_c_f32
__hmma_m16n16k16_mma_f16f16
vi*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f16
vf*iC*iC*iC*IiIi
__hmma_m16n16k16_mma_f32f32
vf*iC*iC*fC*IiIi
__hmma_m16n16k16_mma_f16f32
vi*iC*iC*fC*IiIi
__hmma_m32n8k16_mma_f16f16
__hmma_m32n8k16_mma_f32f16
__hmma_m32n8k16_mma_f32f32
__hmma_m32n8k16_mma_f16f32
__hmma_m8n32k16_mma_f16f16
__hmma_m8n32k16_mma_f32f16
__hmma_m8n32k16_mma_f32f32
__hmma_m8n32k16_mma_f16f32
+ptx61
+ptx60
+ptx42
e-p:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64
e-i64:64-i128:128-v16:16-v32:32-n16:32:64
__PTX__
__NVPTX__
__CUDA_ARCH__
cl_khr_gl_sharing
__builtin_ldbio
ivDC*
__builtin_ldbuio
__builtin_ldhio
__builtin_ldhuio
__builtin_ldwio
__builtin_ldwuio
__builtin_rdctl
__builtin_wrctl
__builtin_rdprs
__builtin_stbio
__builtin_sthio
__builtin_stwio
__builtin_sync
__builtin_flushd
vvD*
__builtin_flushda
__builtin_wrpie
__builtin_eni
__builtin_ldex
__builtin_stex
ivD*i
__builtin_ldsex
__builtin_stsex
ivDC*i
nios2
NIOS2
__nios2
__NIOS2
__nios2__
__NIOS2__
__APPLE_CC__
6000
__APPLE__
__STDC_NO_THREADS__
OBJC_NEW_PROPERTIES
_FORTIFY_SOURCE
__PTRAUTH_INTRINSICS__
__MATRIX_TYPE__
__apple_build_version__
__attribute__((objc_gc(weak)))
__STATIC__
__DYNAMIC__
__ENVIRONMENT_TV_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_WATCH_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_BRIDGE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_DRIVERKIT_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__le32__
__pnacl__
__builtin_ppc_get_timebase
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vaddeuqm
V1ULLLiV1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddcuq
V1ULLLiV1ULLLiV1ULLLi
__builtin_altivec_vaddecuq
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vsubeuqm
__builtin_altivec_vsubcuq
__builtin_altivec_vsubecuq
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4iIi
__builtin_altivec_vcfux
__builtin_altivec_vctsxs
V4SiV4fIi
__builtin_altivec_vctuxs
V4UiV4fIi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16civC*
__builtin_altivec_lvehx
V8sivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
V4UiV8UsV8UsV4Ui
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuleuw
__builtin_altivec_vmulesw
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vmulouw
__builtin_altivec_vmulosw
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V16ScV8SsV8Ss
__builtin_altivec_vpkuwus
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V8SsV4SiV4Si
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vpksdss
V4SiV2SLLiV2SLLi
__builtin_altivec_vpksdus
V4UiV2SLLiV2SLLi
__builtin_altivec_vpkudus
V4UiV2ULLiV2ULLi
__builtin_altivec_vpkudum
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16civ*
__builtin_altivec_stvehx
vV8siv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpequd
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpneb
__builtin_altivec_vcmpneh
__builtin_altivec_vcmpnew
__builtin_altivec_vcmpnezb
__builtin_altivec_vcmpnezh
__builtin_altivec_vcmpnezw
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtsd
__builtin_altivec_vcmpgtud
V2LLiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxsd
__builtin_altivec_vmaxud
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminsd
__builtin_altivec_vminud
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vrld
V2LLiV2LLiV2ULLi
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
V8sV16c
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
V4iV8s
__builtin_altivec_vupkhsw
V2LLiV4i
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vupklsw
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpequd_p
iiV2LLiV2LLi
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpneb_p
__builtin_altivec_vcmpneh_p
__builtin_altivec_vcmpnew_p
__builtin_altivec_vcmpned_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtsd_p
__builtin_altivec_vcmpgtud_p
iiV2ULLiV2ULLi
__builtin_altivec_vcmpgtfp_p
__builtin_altivec_vgbbd
V16UcV16Uc
__builtin_altivec_vbpermq
V2ULLiV16UcV16Uc
__builtin_altivec_crypto_vsbox
V2ULLiV2ULLi
__builtin_altivec_crypto_vpermxor
__builtin_altivec_crypto_vshasigmaw
V4UiV4UiIiIi
__builtin_altivec_crypto_vshasigmad
V2ULLiV2ULLiIiIi
__builtin_altivec_crypto_vcipher
__builtin_altivec_crypto_vcipherlast
__builtin_altivec_crypto_vncipher
__builtin_altivec_crypto_vncipherlast
__builtin_altivec_crypto_vpmsumb
__builtin_altivec_crypto_vpmsumh
__builtin_altivec_crypto_vpmsumw
__builtin_altivec_crypto_vpmsumd
__builtin_altivec_vclzb
__builtin_altivec_vclzh
V8UsV8Us
__builtin_altivec_vclzw
V4UiV4Ui
__builtin_altivec_vclzd
__builtin_altivec_vctzb
__builtin_altivec_vctzh
__builtin_altivec_vctzw
__builtin_altivec_vctzd
__builtin_altivec_vclzlsbb
SiV16Uc
__builtin_altivec_vctzlsbb
__builtin_altivec_vprtybw
__builtin_altivec_vprtybd
__builtin_altivec_vprtybq
V1ULLLiV1ULLLi
__builtin_altivec_vpopcntb
__builtin_altivec_vpopcnth
__builtin_altivec_vpopcntw
__builtin_altivec_vpopcntd
__builtin_altivec_vabsdub
__builtin_altivec_vabsduh
__builtin_altivec_vabsduw
__builtin_altivec_vslv
__builtin_altivec_vsrv
__builtin_altivec_vrlwmi
__builtin_altivec_vrldmi
__builtin_altivec_vrlwnm
__builtin_altivec_vrldnm
__builtin_vsx_lxvd2x
V2divC*
__builtin_vsx_lxvw4x
__builtin_vsx_lxvd2x_be
V2dSLLivC*
__builtin_vsx_lxvw4x_be
V4iSLLivC*
__builtin_vsx_stxvd2x
vV2div*
__builtin_vsx_stxvw4x
__builtin_vsx_stxvd2x_be
vV2dSLLivC*
__builtin_vsx_stxvw4x_be
vV4iSLLivC*
__builtin_vsx_lxvl
V4ivC*ULLi
__builtin_vsx_lxvll
__builtin_vsx_stxvl
vV4iv*ULLi
__builtin_vsx_stxvll
__builtin_vsx_xvmaxdp
__builtin_vsx_xvmaxsp
__builtin_vsx_xsmaxdp
__builtin_vsx_xvmindp
__builtin_vsx_xvminsp
__builtin_vsx_xsmindp
__builtin_vsx_xvdivdp
__builtin_vsx_xvdivsp
__builtin_vsx_xvrdpip
__builtin_vsx_xvrspip
__builtin_vsx_xvcmpeqdp
__builtin_vsx_xvcmpeqsp
__builtin_vsx_xvcmpeqdp_p
iiV2dV2d
__builtin_vsx_xvcmpeqsp_p
__builtin_vsx_xvcmpgedp
__builtin_vsx_xvcmpgesp
__builtin_vsx_xvcmpgedp_p
__builtin_vsx_xvcmpgesp_p
__builtin_vsx_xvcmpgtdp
__builtin_vsx_xvcmpgtsp
__builtin_vsx_xvcmpgtdp_p
__builtin_vsx_xvcmpgtsp_p
__builtin_vsx_xvrdpim
__builtin_vsx_xvrspim
__builtin_vsx_xvrdpi
__builtin_vsx_xvrspi
__builtin_vsx_xvrdpic
__builtin_vsx_xvrspic
__builtin_vsx_xvrdpiz
__builtin_vsx_xvrspiz
__builtin_vsx_xvmaddadp
__builtin_vsx_xvmaddasp
__builtin_vsx_xvmsubadp
__builtin_vsx_xvmsubasp
__builtin_vsx_xvmuldp
__builtin_vsx_xvmulsp
__builtin_vsx_xvnmaddadp
__builtin_vsx_xvnmaddasp
__builtin_vsx_xvnmsubadp
__builtin_vsx_xvnmsubasp
__builtin_vsx_xvredp
__builtin_vsx_xvresp
__builtin_vsx_xvrsqrtedp
__builtin_vsx_xvrsqrtesp
__builtin_vsx_xvsqrtdp
__builtin_vsx_xvsqrtsp
__builtin_vsx_xxleqv
__builtin_vsx_xvcpsgndp
__builtin_vsx_xvcpsgnsp
__builtin_vsx_xvabssp
__builtin_vsx_xvabsdp
__builtin_vsx_xviexpdp
V2dV2ULLiV2ULLi
__builtin_vsx_xviexpsp
V4fV4UiV4Ui
__builtin_vsx_xvxexpdp
__builtin_vsx_xvxexpsp
__builtin_vsx_xvxsigdp
__builtin_vsx_xvxsigsp
__builtin_vsx_xvcvdpsxws
V4SiV2d
__builtin_vsx_xvcvdpuxws
V4UiV2d
__builtin_vsx_xvcvsxwdp
__builtin_vsx_xvcvuxwdp
V2dV4Ui
__builtin_vsx_xvcvspdp
__builtin_vsx_xvcvsxdsp
V4fV2SLLi
__builtin_vsx_xvcvuxdsp
V4fV2ULLi
__builtin_vsx_xvcvdpsp
V4fV2d
__builtin_vsx_xvcvsphp
__builtin_vsx_xvcvhpsp
V4fV8Us
__builtin_vsx_xvtstdcdp
V2ULLiV2dIi
__builtin_vsx_xvtstdcsp
__builtin_vsx_insertword
V16UcV4UiV16UcIi
__builtin_vsx_extractuword
V2ULLiV16UcIi
__builtin_vsx_xxpermdi
__builtin_vsx_xxsldwi
__builtin_sqrtf128_round_to_odd
__builtin_addf128_round_to_odd
__builtin_subf128_round_to_odd
__builtin_mulf128_round_to_odd
__builtin_divf128_round_to_odd
__builtin_fmaf128_round_to_odd
LLdLLdLLdLLd
__builtin_truncf128_round_to_odd
dLLd
__builtin_vsx_scalar_extract_expq
ULLiLLd
__builtin_vsx_scalar_insert_exp_qp
LLdLLdULLi
__builtin_tbegin
UiUIi
__builtin_tend
__builtin_tabort
__builtin_tabortdc
__builtin_tabortdci
__builtin_tabortwc
__builtin_tabortwci
__builtin_tcheck
__builtin_treclaim
__builtin_trechkpt
__builtin_tsr
__builtin_tendall
__builtin_tresume
__builtin_tsuspend
__builtin_get_texasr
__builtin_get_texasru
__builtin_get_tfhar
__builtin_get_tfiar
__builtin_set_texasr
vLUi
__builtin_set_texasru
__builtin_set_tfhar
__builtin_set_tfiar
__builtin_ttest
__builtin_divwe
SiSiSi
__builtin_divweu
__builtin_divde
SLLiSLLiSLLi
__builtin_divdeu
__builtin_bpermd
__builtin_unpack_vector_int128
ULLiV1LLLii
__builtin_pack_vector_int128
V1LLLiULLiULLi
+altivec
+vsx
+bpermd
+extdiv
+power8-vector
+direct-move
+qpx
+htm
+float128
+power9-vector
__ppc__
_ARCH_PPC
__powerpc__
__POWERPC__
__ppc64__
__PPC64__
_LITTLE_ENDIAN
_BIG_ENDIAN
_CALL_ELF
_CALL_LINUX
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__LONGDOUBLE128
__STRUCT_PARM_ALIGN__
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_PWR8
_ARCH_PWR9
_ARCH_A2
_ARCH_A2Q
_ARCH_QP
__bg__
__THW_BLUEGENE__
__bgq__
__TOS_BGQ__
__VEC__
10206
__ALTIVEC__
__VSX__
__POWER8_VECTOR__
__CRYPTO__
__HTM__
__POWER9_VECTOR__
__HAVE_BSWAP__
ppc64
power9-vector
crypto
power8-vector
bpermd
extdiv
direct-move
-mfloat128
powerpc
float128
vrsave
vscr
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
-vsx
-mpower8-vector
-mno-vsx
-mdirect-move
-mpower9-vector
vs10
vs11
vs12
vs13
vs14
vs15
vs16
vs17
vs18
vs19
vs20
vs21
vs22
vs23
vs24
vs25
vs26
vs27
vs28
vs29
vs30
vs31
vs32
vs33
vs34
vs35
vs36
vs37
vs38
vs39
vs40
vs41
vs42
vs43
vs44
vs45
vs46
vs47
vs48
vs49
vs50
vs51
vs52
vs53
vs54
vs55
vs56
vs57
vs58
vs59
vs60
vs61
vs62
vs63
e500mc
e5500
powerpc64
powerpc64le
__riscv
__riscv_xlen
__riscv_cmodel_medlow
__riscv_float_abi_soft
__riscv_mul
__riscv_div
__riscv_muldiv
__riscv_atomic
__riscv_flen
__riscv_fdiv
__riscv_fsqrt
__riscv_compressed
riscv
SPIR32
SPIR64
sparc
SOFT_FLOAT
__sparcv8
__sparcv8__
__sparcv9
__sparcv9__
__sparc_v9__
__sparc_v8__
__leon__
__ma2100
__ma2150
__ma2155
__ma2450
__ma2455
__ma2080
__ma2085
__ma2480
__ma2485
__ma2x5x
__ma2x5x__
__ma2x8x
__ma2x8x__
__myriad2__
__myriad2
__arch64__
__sparc64__
supersparc
sparclite
f934
hypersparc
sparclite86x
sparclet
tsc701
ultrasparc
ultrasparc3
niagara
niagara2
niagara3
niagara4
ma2100
ma2150
ma2155
ma2450
ma2455
ma2x5x
ma2080
ma2085
ma2480
ma2485
ma2x8x
myriad2
myriad2.1
myriad2.2
myriad2.3
leon2
at697e
at697f
leon3
ut699
gr712rc
leon4
gr740
__builtin_tbegin_nofloat
__builtin_tbeginc
__builtin_tx_nesting_depth
__builtin_tx_assist
__builtin_non_tx_store
vULi*ULi
__builtin_s390_lcbb
UivC*Ii
__builtin_s390_vlbb
V16ScvC*Ii
__builtin_s390_vll
V16ScUivC*
__builtin_s390_vstl
vV16ScUiv*
__builtin_s390_vperm
__builtin_s390_vpdi
V2ULLiV2ULLiV2ULLiIi
__builtin_s390_vpksh
__builtin_s390_vpkshs
V16ScV8SsV8Ssi*
__builtin_s390_vpksf
__builtin_s390_vpksfs
V8SsV4SiV4Sii*
__builtin_s390_vpksg
__builtin_s390_vpksgs
V4SiV2SLLiV2SLLii*
__builtin_s390_vpklsh
__builtin_s390_vpklshs
V16UcV8UsV8Usi*
__builtin_s390_vpklsf
__builtin_s390_vpklsfs
V8UsV4UiV4Uii*
__builtin_s390_vpklsg
__builtin_s390_vpklsgs
V4UiV2ULLiV2ULLii*
__builtin_s390_vuphb
V8SsV16Sc
__builtin_s390_vuphh
V4SiV8Ss
__builtin_s390_vuphf
V2SLLiV4Si
__builtin_s390_vuplb
__builtin_s390_vuplhw
__builtin_s390_vuplf
__builtin_s390_vuplhb
V8UsV16Uc
__builtin_s390_vuplhh
V4UiV8Us
__builtin_s390_vuplhf
V2ULLiV4Ui
__builtin_s390_vupllb
__builtin_s390_vupllh
__builtin_s390_vupllf
__builtin_s390_vaq
__builtin_s390_vacq
__builtin_s390_vaccb
__builtin_s390_vacch
__builtin_s390_vaccf
__builtin_s390_vaccg
__builtin_s390_vaccq
__builtin_s390_vacccq
__builtin_s390_vavgb
__builtin_s390_vavgh
__builtin_s390_vavgf
__builtin_s390_vavgg
__builtin_s390_vavglb
__builtin_s390_vavglh
__builtin_s390_vavglf
__builtin_s390_vavglg
__builtin_s390_vceqbs
V16ScV16ScV16Sci*
__builtin_s390_vceqhs
V8SsV8SsV8Ssi*
__builtin_s390_vceqfs
V4SiV4SiV4Sii*
__builtin_s390_vceqgs
V2SLLiV2SLLiV2SLLii*
__builtin_s390_vchbs
__builtin_s390_vchhs
__builtin_s390_vchfs
__builtin_s390_vchgs
__builtin_s390_vchlbs
V16ScV16UcV16Uci*
__builtin_s390_vchlhs
V8SsV8UsV8Usi*
__builtin_s390_vchlfs
V4SiV4UiV4Uii*
__builtin_s390_vchlgs
V2SLLiV2ULLiV2ULLii*
__builtin_s390_vcksm
__builtin_s390_vclzb
__builtin_s390_vclzh
__builtin_s390_vclzf
__builtin_s390_vclzg
__builtin_s390_vctzb
__builtin_s390_vctzh
__builtin_s390_vctzf
__builtin_s390_vctzg
__builtin_s390_verimb
V16UcV16UcV16UcV16UcIi
__builtin_s390_verimh
V8UsV8UsV8UsV8UsIi
__builtin_s390_verimf
V4UiV4UiV4UiV4UiIi
__builtin_s390_verimg
V2ULLiV2ULLiV2ULLiV2ULLiIi
__builtin_s390_verllb
V16UcV16UcUi
__builtin_s390_verllh
V8UsV8UsUi
__builtin_s390_verllf
V4UiV4UiUi
__builtin_s390_verllg
V2ULLiV2ULLiUi
__builtin_s390_verllvb
__builtin_s390_verllvh
__builtin_s390_verllvf
__builtin_s390_verllvg
__builtin_s390_vgfmb
__builtin_s390_vgfmh
__builtin_s390_vgfmf
__builtin_s390_vgfmg
V16UcV2ULLiV2ULLi
__builtin_s390_vgfmab
V8UsV16UcV16UcV8Us
__builtin_s390_vgfmah
__builtin_s390_vgfmaf
V2ULLiV4UiV4UiV2ULLi
__builtin_s390_vgfmag
V16UcV2ULLiV2ULLiV16Uc
__builtin_s390_vmahb
__builtin_s390_vmahh
__builtin_s390_vmahf
__builtin_s390_vmalhb
__builtin_s390_vmalhh
__builtin_s390_vmalhf
__builtin_s390_vmaeb
V8SsV16ScV16ScV8Ss
__builtin_s390_vmaeh
__builtin_s390_vmaef
V2SLLiV4SiV4SiV2SLLi
__builtin_s390_vmaleb
__builtin_s390_vmaleh
__builtin_s390_vmalef
__builtin_s390_vmaob
__builtin_s390_vmaoh
__builtin_s390_vmaof
__builtin_s390_vmalob
__builtin_s390_vmaloh
__builtin_s390_vmalof
__builtin_s390_vmhb
__builtin_s390_vmhh
__builtin_s390_vmhf
__builtin_s390_vmlhb
__builtin_s390_vmlhh
__builtin_s390_vmlhf
__builtin_s390_vmeb
__builtin_s390_vmeh
__builtin_s390_vmef
__builtin_s390_vmleb
__builtin_s390_vmleh
__builtin_s390_vmlef
__builtin_s390_vmob
__builtin_s390_vmoh
__builtin_s390_vmof
__builtin_s390_vmlob
__builtin_s390_vmloh
__builtin_s390_vmlof
__builtin_s390_vpopctb
__builtin_s390_vpopcth
__builtin_s390_vpopctf
__builtin_s390_vpopctg
__builtin_s390_vsq
__builtin_s390_vsbcbiq
__builtin_s390_vsbiq
__builtin_s390_vscbib
__builtin_s390_vscbih
__builtin_s390_vscbif
__builtin_s390_vscbig
__builtin_s390_vscbiq
__builtin_s390_vsl
__builtin_s390_vslb
__builtin_s390_vsldb
V16UcV16UcV16UcIi
__builtin_s390_vsra
__builtin_s390_vsrab
__builtin_s390_vsrl
__builtin_s390_vsrlb
__builtin_s390_vsumb
V4UiV16UcV16Uc
__builtin_s390_vsumh
__builtin_s390_vsumgh
V2ULLiV8UsV8Us
__builtin_s390_vsumgf
__builtin_s390_vsumqf
V16UcV4UiV4Ui
__builtin_s390_vsumqg
__builtin_s390_vtm
iV16UcV16Uc
__builtin_s390_vfaeb
__builtin_s390_vfaebs
V16UcV16UcV16UcIii*
__builtin_s390_vfaeh
V8UsV8UsV8UsIi
__builtin_s390_vfaehs
V8UsV8UsV8UsIii*
__builtin_s390_vfaef
V4UiV4UiV4UiIi
__builtin_s390_vfaefs
V4UiV4UiV4UiIii*
__builtin_s390_vfaezb
__builtin_s390_vfaezbs
__builtin_s390_vfaezh
__builtin_s390_vfaezhs
__builtin_s390_vfaezf
__builtin_s390_vfaezfs
__builtin_s390_vfeeb
__builtin_s390_vfeebs
V16UcV16UcV16Uci*
__builtin_s390_vfeeh
__builtin_s390_vfeehs
V8UsV8UsV8Usi*
__builtin_s390_vfeef
__builtin_s390_vfeefs
V4UiV4UiV4Uii*
__builtin_s390_vfeezb
__builtin_s390_vfeezbs
__builtin_s390_vfeezh
__builtin_s390_vfeezhs
__builtin_s390_vfeezf
__builtin_s390_vfeezfs
__builtin_s390_vfeneb
__builtin_s390_vfenebs
__builtin_s390_vfeneh
__builtin_s390_vfenehs
__builtin_s390_vfenef
__builtin_s390_vfenefs
__builtin_s390_vfenezb
__builtin_s390_vfenezbs
__builtin_s390_vfenezh
__builtin_s390_vfenezhs
__builtin_s390_vfenezf
__builtin_s390_vfenezfs
__builtin_s390_vistrb
__builtin_s390_vistrbs
V16UcV16Uci*
__builtin_s390_vistrh
__builtin_s390_vistrhs
V8UsV8Usi*
__builtin_s390_vistrf
__builtin_s390_vistrfs
V4UiV4Uii*
__builtin_s390_vstrcb
__builtin_s390_vstrcbs
V16UcV16UcV16UcV16UcIii*
__builtin_s390_vstrch
__builtin_s390_vstrchs
V8UsV8UsV8UsV8UsIii*
__builtin_s390_vstrcf
__builtin_s390_vstrcfs
V4UiV4UiV4UiV4UiIii*
__builtin_s390_vstrczb
__builtin_s390_vstrczbs
__builtin_s390_vstrczh
__builtin_s390_vstrczhs
__builtin_s390_vstrczf
__builtin_s390_vstrczfs
__builtin_s390_vfcedbs
V2SLLiV2dV2di*
__builtin_s390_vfchdbs
__builtin_s390_vfchedbs
__builtin_s390_vfidb
V2dV2dIiIi
__builtin_s390_vflndb
__builtin_s390_vflpdb
__builtin_s390_vfmadb
__builtin_s390_vfmsdb
__builtin_s390_vfsqdb
__builtin_s390_vftcidb
V2SLLiV2dIii*
__builtin_s390_vlrl
__builtin_s390_vstrl
__builtin_s390_vbperm
__builtin_s390_vmslg
V16UcV2ULLiV2ULLiV16UcIi
__builtin_s390_vfmaxdb
V2dV2dV2dIi
__builtin_s390_vfmindb
__builtin_s390_vfnmadb
__builtin_s390_vfnmsdb
__builtin_s390_vfcesbs
V4SiV4fV4fi*
__builtin_s390_vfchsbs
__builtin_s390_vfchesbs
__builtin_s390_vfisb
V4fV4fIiIi
__builtin_s390_vfmaxsb
V4fV4fV4fIi
__builtin_s390_vfminsb
__builtin_s390_vflnsb
__builtin_s390_vflpsb
__builtin_s390_vfmasb
__builtin_s390_vfmssb
__builtin_s390_vfnmasb
__builtin_s390_vfnmssb
__builtin_s390_vfsqsb
__builtin_s390_vftcisb
V4SiV4fIii*
arch8
arch9
arch10
arch11
arch12
__s390__
__s390x__
__zarch__
__ARCH__
__VX__
10302
z196
zEC12
__TCE__
__TCE_V1__
tcele
__TCELE__
__TCELE_V1__
__builtin_wasm_memory_size
__builtin_wasm_memory_grow
zIiz
__builtin_wasm_mem_size
__builtin_wasm_mem_grow
__builtin_wasm_current_memory
__builtin_wasm_grow_memory
__builtin_wasm_throw
vUiv*
__builtin_wasm_rethrow
__builtin_wasm_atomic_wait_i32
ii*iLLi
__builtin_wasm_atomic_wait_i64
iLLi*LLiLLi
__builtin_wasm_atomic_notify
Uii*Ui
__builtin_wasm_trunc_saturate_s_i32_f32
__builtin_wasm_trunc_saturate_u_i32_f32
__builtin_wasm_trunc_saturate_s_i32_f64
__builtin_wasm_trunc_saturate_u_i32_f64
__builtin_wasm_trunc_saturate_s_i64_f32
__builtin_wasm_trunc_saturate_u_i64_f32
__builtin_wasm_trunc_saturate_s_i64_f64
__builtin_wasm_trunc_saturate_u_i64_f64
__builtin_wasm_min_f32
__builtin_wasm_max_f32
__builtin_wasm_min_f64
__builtin_wasm_max_f64
__builtin_wasm_extract_lane_s_i8x16
iV16cIi
__builtin_wasm_extract_lane_u_i8x16
__builtin_wasm_extract_lane_s_i16x8
iV8sIi
__builtin_wasm_extract_lane_u_i16x8
__builtin_wasm_extract_lane_i32x4
iV4iIi
__builtin_wasm_extract_lane_i64x2
LLiV2LLiIi
__builtin_wasm_extract_lane_f32x4
__builtin_wasm_extract_lane_f64x2
__builtin_wasm_replace_lane_i8x16
V16cV16cIii
__builtin_wasm_replace_lane_i16x8
V8sV8sIii
__builtin_wasm_replace_lane_i32x4
V4iV4iIii
__builtin_wasm_replace_lane_i64x2
V2LLiV2LLiIiLLi
__builtin_wasm_replace_lane_f32x4
V4fV4fIif
__builtin_wasm_replace_lane_f64x2
V2dV2dIid
__builtin_wasm_add_saturate_s_i8x16
__builtin_wasm_add_saturate_u_i8x16
__builtin_wasm_add_saturate_s_i16x8
__builtin_wasm_add_saturate_u_i16x8
__builtin_wasm_sub_saturate_s_i8x16
__builtin_wasm_sub_saturate_u_i8x16
__builtin_wasm_sub_saturate_s_i16x8
__builtin_wasm_sub_saturate_u_i16x8
__builtin_wasm_bitselect
__builtin_wasm_any_true_i8x16
iV16c
__builtin_wasm_any_true_i16x8
__builtin_wasm_any_true_i32x4
__builtin_wasm_any_true_i64x2
iV2LLi
__builtin_wasm_all_true_i8x16
__builtin_wasm_all_true_i16x8
__builtin_wasm_all_true_i32x4
__builtin_wasm_all_true_i64x2
__builtin_wasm_abs_f32x4
__builtin_wasm_abs_f64x2
__builtin_wasm_min_f32x4
__builtin_wasm_max_f32x4
__builtin_wasm_min_f64x2
__builtin_wasm_max_f64x2
__builtin_wasm_sqrt_f32x4
__builtin_wasm_sqrt_f64x2
__builtin_wasm_trunc_saturate_s_i32x4_f32x4
__builtin_wasm_trunc_saturate_u_i32x4_f32x4
__builtin_wasm_trunc_saturate_s_i64x2_f64x2
__builtin_wasm_trunc_saturate_u_i64x2_f64x2
exception-handling
wasm
__wasm_simd128__
+simd128
-simd128
+nontrapping-fptoint
-nontrapping-fptoint
+sign-ext
-sign-ext
+exception-handling
-exception-handling
-target-feature
wasm32
wasm64
sse2
pconfig
wbnoinvd
vaes
gfni
vpclmulqdq
avx512bitalg
avx512vbmi2
avx512vpopcntdq
rdpid
avx512ifma
avx512vbmi
avx512vnni
avx512cd
avx512dq
avx512bw
avx512vl
clwb
xsavec
xsaves
clflushopt
rdseed
prfchw
avx2
lzcnt
bmi2
invpcid
movbe
rdrnd
f16c
fsgsbase
xsave
xsaveopt
pclmul
sse4.2
sse4.1
ssse3
sahf
sse3
fxsr
cldemote
movdiri
movdir64b
waitpkg
ptwrite
avx512er
avx512pf
prefetchwt1
3dnow
sse4a
popcnt
3dnowa
clzero
mwaitx
-popcnt
-prfchw
-mmx
fma4
+aes
+vaes
+pclmul
+vpclmulqdq
+lzcnt
+rdrnd
+fsgsbase
+bmi
+bmi2
+popcnt
+rtm
+prfchw
+rdseed
+adx
+tbm
+lwp
+fma
+f16c
+gfni
+avx512cd
+avx512vpopcntdq
+avx512vnni
+avx512er
+avx512pf
+avx512dq
+avx512bitalg
+avx512bw
+avx512vl
+avx512vbmi
+avx512vbmi2
+avx512ifma
+sha
+mpx
+shstk
+movbe
+sgx
+cx16
+fxsr
+xsave
+xsaveopt
+xsavec
+xsaves
+mwaitx
+pku
+clflushopt
+clwb
+wbnoinvd
+prefetchwt1
+clzero
+cldemote
+rdpid
+retpoline-indirect-calls
+retpoline-indirect-branches
+retpoline-external-thunk
+sahf
+waitpkg
+movdiri
+movdir64b
+pconfig
+ptwrite
+invpcid
+sse4.2
+ssse3
+sse2
+mmx
small
__code_model_
__amd64__
__amd64
__x86_64
__x86_64h
__x86_64h__
i386
i486
__pentium_mmx__
__tune_pentium_mmx__
i586
pentium
__tune_pentium3__
__tune_pentium2__
i686
pentiumpro
pentium4
nocona
core2
atom
goldmont
goldmont_plus
tremont
corei7
__tune_lakemont__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
athlon
__athlon_sse__
__tune_athlon_sse__
amdfam10
btver1
btver2
bdver1
bdver2
bdver3
bdver4
znver1
geode
__NO_MATH_INLINES
__AES__
__VAES__
__PCLMUL__
__VPCLMULQDQ__
__LZCNT__
__RDRND__
__FSGSBASE__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__ADX__
__TBM__
__LWP__
__MWAITX__
__MOVBE__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__GFNI__
__AVX512CD__
__AVX512VPOPCNTDQ__
__AVX512VNNI__
__AVX512ER__
__AVX512PF__
__AVX512DQ__
__AVX512BITALG__
__AVX512BW__
__AVX512VL__
__AVX512VBMI__
__AVX512VBMI2__
__AVX512IFMA__
__SHA__
__FXSR__
__XSAVE__
__XSAVEOPT__
__XSAVEC__
__XSAVES__
__PKU__
__CLFLUSHOPT__
__CLWB__
__WBNOINVD__
__MPX__
__SHSTK__
__SGX__
__PREFETCHWT1__
__CLZERO__
__RDPID__
__CLDEMOTE__
__WAITPKG__
__MOVDIRI__
__MOVDIR64B__
__PCONFIG__
__PTWRITE__
__INVPCID__
__RETPOLINE__
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__SIZEOF_FLOAT128__
shstk
retpoline-indirect-calls
retpoline-indirect-branches
retpoline-external-thunk
x86_64
cmov
sandybridge
ivybridge
haswell
broadwell
skylake
cannonlake
+cmov
+cmov,+mmx
+cmov,+mmx,+sse
+cmov,+sse
+cmov,+mmx,+sse,+sse2
+cmov,+mmx,+sse,+sse2,+sse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+movbe
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+popcnt,+f16c,+avx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+adx,+mpx
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512cd,+avx512bw,+avx512vl,+clwb
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512dq,+avx512f,+adx,+avx512ifma,+avx512cd,+avx512bw,+avx512vl,+avx512vbmi
+cmov,+mmx,+sse,+sse2,+sse3,+ssse3,+sse4.1,+sse4.2,+movbe,+popcnt,+f16c,+avx,+fma,+bmi,+lzcnt,+avx2,+avx512f,+adx,+avx512er,+avx512pf,+avx512cd,+avx5124fmaps,+avx5124vnniw,+avx512vpopcntdq
winchip-c6
winchip2
pentium-mmx
pentium2
pentium3
pentium-m
c3-2
yonah
prescott
penryn
bonnell
silvermont
goldmont-plus
nehalem
westmere
skylake-avx512
cascadelake
icelake-client
icelake-server
lakemont
k6-2
k6-3
athlon-xp
k8-sse3
x86-64
intel
barcelona
pentium3m
pentium4m
corei7-avx
core-avx-i
core-avx2
athlon-tbird
athlon-mp
athlon-4
athlon64
athlon-fx
opteron
athlon64-sse3
opteron-sse3
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
fpcr
fpsr
dirflag
frame
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
xmm16
xmm17
xmm18
xmm19
xmm20
xmm21
xmm22
xmm23
xmm24
xmm25
xmm26
xmm27
xmm28
xmm29
xmm30
xmm31
ymm16
ymm17
ymm18
ymm19
ymm20
ymm21
ymm22
ymm23
ymm24
ymm25
ymm26
ymm27
ymm28
ymm29
ymm30
ymm31
zmm0
zmm1
zmm2
zmm3
zmm4
zmm5
zmm6
zmm7
zmm8
zmm9
zmm10
zmm11
zmm12
zmm13
zmm14
zmm15
zmm16
zmm17
zmm18
zmm19
zmm20
zmm21
zmm22
zmm23
zmm24
zmm25
zmm26
zmm27
zmm28
zmm29
zmm30
zmm31
bnd0
bnd1
bnd2
bnd3
r10d
r10w
r10b
r11d
r11w
r11b
r12d
r12w
r12b
r13d
r13w
r13b
r14d
r14w
r14b
r15d
r15w
r15b
__builtin_cpu_init
__builtin_cpu_supports
bcC*
__builtin_cpu_is
__builtin_ia32_undef128
ncV:128:
__builtin_ia32_undef256
ncV:256:
__builtin_ia32_undef512
ncV:512:
__builtin_ia32_readeflags_u32
__builtin_ia32_writeeflags_u32
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
ncV:64:
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
_mm_prefetch
vcC*i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1LLiV1LLiV1LLi
__builtin_ia32_pandn
__builtin_ia32_por
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1LLi
__builtin_ia32_pslld
V2iV2iV1LLi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1LLiV1LLii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
nV:64:
__builtin_ia32_movntq
vV1LLi*V1LLi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
mmx,sse
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_vec_ext_v4hi
iV4sIi
__builtin_ia32_vec_set_v4hi
V4sV4siIi
__builtin_ia32_cvtpd2pi
V2iV2d
mmx,sse2
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1LLiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
mmx,ssse3
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
iV4fV4f
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
iV2dV2d
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpeqps
__builtin_ia32_cmpltps
__builtin_ia32_cmpleps
__builtin_ia32_cmpunordps
__builtin_ia32_cmpneqps
__builtin_ia32_cmpnltps
__builtin_ia32_cmpnleps
__builtin_ia32_cmpordps
__builtin_ia32_cmpeqss
__builtin_ia32_cmpltss
__builtin_ia32_cmpless
__builtin_ia32_cmpunordss
__builtin_ia32_cmpneqss
__builtin_ia32_cmpnltss
__builtin_ia32_cmpnless
__builtin_ia32_cmpordss
__builtin_ia32_minps
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmpeqpd
__builtin_ia32_cmpltpd
__builtin_ia32_cmplepd
__builtin_ia32_cmpunordpd
__builtin_ia32_cmpneqpd
__builtin_ia32_cmpnltpd
__builtin_ia32_cmpnlepd
__builtin_ia32_cmpordpd
__builtin_ia32_cmpeqsd
__builtin_ia32_cmpltsd
__builtin_ia32_cmplesd
__builtin_ia32_cmpunordsd
__builtin_ia32_cmpneqsd
__builtin_ia32_cmpnltsd
__builtin_ia32_cmpnlesd
__builtin_ia32_cmpordsd
__builtin_ia32_minpd
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
__builtin_ia32_paddsw128
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
V8sV4iV4i
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_vec_ext_v4si
__builtin_ia32_vec_ext_v4sf
__builtin_ia32_vec_ext_v8hi
sV8sIi
__builtin_ia32_vec_set_v8hi
V8sV8ssIi
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
V16cV16c
__builtin_ia32_pabsw128
V8sV8s
__builtin_ia32_pabsd128
V4iV4i
__builtin_ia32_ldmxcsr
_mm_setcsr
xmmintrin.h
__builtin_ia32_stmxcsr
_mm_getcsr
__builtin_ia32_cvtss2si
iV4f
__builtin_ia32_cvttss2si
__builtin_ia32_storehps
vV2i*V4f
nV:128:
__builtin_ia32_storelps
__builtin_ia32_movmskps
__builtin_ia32_sfence
_mm_sfence
__builtin_ia32_rcpps
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_shufps
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_movmskpd
iV2d
__builtin_ia32_pmovmskb128
__builtin_ia32_movnti
vi*i
__builtin_ia32_pshufd
V4iV4iIi
__builtin_ia32_pshuflw
V8sV8sIi
__builtin_ia32_pshufhw
__builtin_ia32_psadbw128
V2LLiV16cV16c
__builtin_ia32_sqrtpd
__builtin_ia32_sqrtsd
__builtin_ia32_shufpd
__builtin_ia32_cvtpd2dq
__builtin_ia32_cvtpd2ps
__builtin_ia32_cvttpd2dq
V4iV2d
__builtin_ia32_cvtsd2si
__builtin_ia32_cvttsd2si
__builtin_ia32_cvtsd2ss
V4fV4fV2d
__builtin_ia32_cvtps2dq
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
vvC*
_mm_clflush
emmintrin.h
__builtin_ia32_lfence
_mm_lfence
__builtin_ia32_mfence
_mm_mfence
__builtin_ia32_pause
_mm_pause
__builtin_ia32_pmuludq128
V2LLiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_psrlq128
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllq128
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psllqi128
V2LLiV2LLii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
V4iV8sV8s
__builtin_ia32_pslldqi128_byteshift
V2LLiV2LLiIi
__builtin_ia32_psrldqi128_byteshift
__builtin_ia32_monitor
vv*UiUi
__builtin_ia32_mwait
__builtin_ia32_lddqu
V16ccC*
__builtin_ia32_palignr128
V16cV16cV16cIi
__builtin_ia32_insertps128
V4fV4fV4fIc
__builtin_ia32_pblendvb128
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
__builtin_ia32_blendps
__builtin_ia32_blendvpd
__builtin_ia32_blendvps
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmuldq128
__builtin_ia32_roundps
V4fV4fIi
__builtin_ia32_roundss
__builtin_ia32_roundsd
__builtin_ia32_roundpd
V2dV2dIi
__builtin_ia32_dpps
__builtin_ia32_dppd
V2dV2dV2dIc
__builtin_ia32_ptestz128
iV2LLiV2LLi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16cIc
__builtin_ia32_phminposuw128
__builtin_ia32_vec_ext_v16qi
cV16cIi
__builtin_ia32_vec_set_v16qi
V16cV16ccIi
__builtin_ia32_vec_set_v4si
V4iV4iiIi
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
__builtin_ia32_crc32hi
__builtin_ia32_crc32si
__builtin_ia32_extrqi
V2LLiV2LLiIcIc
__builtin_ia32_extrq
V2LLiV2LLiV16c
__builtin_ia32_insertqi
V2LLiV2LLiV2LLiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
vd*V2d
__builtin_ia32_movntss
vf*V4f
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2LLiV2LLi
__builtin_ia32_aeskeygenassist128
V2LLiV2LLiIc
__builtin_ia32_aesenc256
V4LLiV4LLiV4LLi
__builtin_ia32_aesenc512
V8LLiV8LLiV8LLi
avx512f,vaes
__builtin_ia32_aesenclast256
__builtin_ia32_aesenclast512
__builtin_ia32_aesdec256
__builtin_ia32_aesdec512
__builtin_ia32_aesdeclast256
__builtin_ia32_aesdeclast512
__builtin_ia32_vgf2p8affineinvqb_v16qi
__builtin_ia32_vgf2p8affineinvqb_v32qi
V32cV32cV32cIc
avx,gfni
__builtin_ia32_vgf2p8affineinvqb_v64qi
V64cV64cV64cIc
avx512bw,gfni
__builtin_ia32_vgf2p8affineqb_v16qi
__builtin_ia32_vgf2p8affineqb_v32qi
__builtin_ia32_vgf2p8affineqb_v64qi
__builtin_ia32_vgf2p8mulb_v16qi
__builtin_ia32_vgf2p8mulb_v32qi
V32cV32cV32c
__builtin_ia32_vgf2p8mulb_v64qi
V64cV64cV64c
__builtin_ia32_pclmulqdq128
V2LLiV2LLiV2LLiIc
__builtin_ia32_pclmulqdq256
V4LLiV4LLiV4LLiIc
__builtin_ia32_pclmulqdq512
V8LLiV8LLiV8LLiIc
avx512f,vpclmulqdq
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
__builtin_ia32_vpermilvarps
__builtin_ia32_vpermilvarpd256
V4dV4dV4LLi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_shufpd256
__builtin_ia32_shufps256
__builtin_ia32_dpps256
V8fV8fV8fIc
__builtin_ia32_cmppd
__builtin_ia32_cmppd256
V4dV4dV4dIc
__builtin_ia32_cmpps
__builtin_ia32_cmpps256
__builtin_ia32_cmpsd
__builtin_ia32_cmpss
__builtin_ia32_vextractf128_pd256
V2dV4dIi
__builtin_ia32_vextractf128_ps256
V4fV8fIi
__builtin_ia32_vextractf128_si256
V4iV8iIi
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
__builtin_ia32_vperm2f128_ps256
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIi
__builtin_ia32_vpermilpd
__builtin_ia32_vpermilps
__builtin_ia32_vpermilpd256
V4dV4dIi
__builtin_ia32_vpermilps256
V8fV8fIi
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIi
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIi
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIi
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
__builtin_ia32_roundps256
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4LLiV4LLi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_lddqu256
V32ccC*
nV:256:
__builtin_ia32_maskloadpd
V2dV2dC*V2LLi
__builtin_ia32_maskloadps
V4fV4fC*V4i
__builtin_ia32_maskloadpd256
V4dV4dC*V4LLi
__builtin_ia32_maskloadps256
V8fV8fC*V8i
__builtin_ia32_maskstorepd
vV2d*V2LLiV2d
__builtin_ia32_maskstoreps
vV4f*V4iV4f
__builtin_ia32_maskstorepd256
vV4d*V4LLiV4d
__builtin_ia32_maskstoreps256
vV8f*V8iV8f
__builtin_ia32_vec_ext_v32qi
cV32cIi
__builtin_ia32_vec_ext_v16hi
sV16sIi
__builtin_ia32_vec_ext_v8si
iV8iIi
__builtin_ia32_vec_set_v32qi
V32cV32ccIi
__builtin_ia32_vec_set_v16hi
V16sV16ssIi
__builtin_ia32_vec_set_v8si
V8iV8iiIi
__builtin_ia32_mpsadbw256
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIi
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmuldq256
V4LLiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4LLiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_pshufd256
V8iV8iIi
__builtin_ia32_pshuflw256
V16sV16sIi
__builtin_ia32_pshufhw256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldqi256_byteshift
V4LLiV4LLiIi
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4LLiV4LLii
__builtin_ia32_psllq256
V4LLiV4LLiV2LLi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256_byteshift
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
__builtin_ia32_permvarsi256
__builtin_ia32_permdf256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4LLiV4LLiV4LLiIi
__builtin_ia32_permdi256
__builtin_ia32_extract128i256
V2LLiV4LLiIi
__builtin_ia32_insert128i256
V4LLiV4LLiV2LLiIi
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4LLiV4LLiC*V4LLi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2LLiV2LLiC*V2LLi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4LLi*V4LLiV4LLi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2LLi*V2LLiV2LLi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2ddC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4ddC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2ddC*V2LLiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4ddC*V4LLiV4dIc
__builtin_ia32_gatherd_ps
V4fV4ffC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8ffC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4ffC*V2LLiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4ffC*V4LLiV4fIc
__builtin_ia32_gatherd_q
V2LLiV2LLiLLiC*V4iV2LLiIc
__builtin_ia32_gatherd_q256
V4LLiV4LLiLLiC*V4iV4LLiIc
__builtin_ia32_gatherq_q
V2LLiV2LLiLLiC*V2LLiV2LLiIc
__builtin_ia32_gatherq_q256
V4LLiV4LLiLLiC*V4LLiV4LLiIc
__builtin_ia32_gatherd_d
V4iV4iiC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iiC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iiC*V2LLiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iiC*V4LLiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
UiUi*
__builtin_ia32_fxrstor
__builtin_ia32_fxsave
__builtin_ia32_xsave
vv*ULLi
__builtin_ia32_xrstor
__builtin_ia32_xsaveopt
__builtin_ia32_xrstors
__builtin_ia32_xsavec
__builtin_ia32_xsaves
__builtin_ia32_incsspd
__builtin_ia32_rdsspd
__builtin_ia32_saveprevssp
__builtin_ia32_rstorssp
__builtin_ia32_wrssd
__builtin_ia32_wrussd
__builtin_ia32_setssbsy
__builtin_ia32_clrssbsy
__builtin_ia32_clflushopt
__builtin_ia32_clwb
__builtin_ia32_wbinvd
__builtin_ia32_wbnoinvd
__builtin_ia32_addcarryx_u32
UcUcUiUiUi*
__builtin_ia32_subborrow_u32
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_lzcnt_u16
__builtin_ia32_lzcnt_u32
__builtin_ia32_bextr_u32
__builtin_ia32_tzcnt_u16
__builtin_ia32_tzcnt_u32
__builtin_ia32_bzhi_si
__builtin_ia32_pdep_si
__builtin_ia32_pext_si
__builtin_ia32_bextri_u32
UiUiIUi
__builtin_ia32_llwpcb
__builtin_ia32_slwpcb
__builtin_ia32_lwpins32
UcUiUiUi
__builtin_ia32_lwpval32
vUiUiUi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
fma|fma4
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss3
__builtin_ia32_vfmaddsd3
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmaddpd512_mask
V8dV8dV8dV8dUcIi
__builtin_ia32_vfmaddpd512_maskz
__builtin_ia32_vfmaddpd512_mask3
__builtin_ia32_vfmsubpd512_mask3
__builtin_ia32_vfmaddps512_mask
V16fV16fV16fV16fUsIi
__builtin_ia32_vfmaddps512_maskz
__builtin_ia32_vfmaddps512_mask3
__builtin_ia32_vfmsubps512_mask3
__builtin_ia32_vfmaddsubpd512_mask
__builtin_ia32_vfmaddsubpd512_maskz
__builtin_ia32_vfmaddsubpd512_mask3
__builtin_ia32_vfmsubaddpd512_mask3
__builtin_ia32_vfmaddsubps512_mask
__builtin_ia32_vfmaddsubps512_maskz
__builtin_ia32_vfmaddsubps512_mask3
__builtin_ia32_vfmsubaddps512_mask3
__builtin_ia32_vpmacssww
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2LLiV4iV4iV2LLi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
__builtin_ia32_vphaddbd
V4iV16c
__builtin_ia32_vphaddbq
V2LLiV16c
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
V2LLiV8s
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2LLiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4LLiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
__builtin_ia32_rdpmc
__builtin_ia32_rdtsc
__rdtsc
__builtin_ia32_rdtscp
ULLiUi*
__builtin_ia32_rdpid
__builtin_ia32_rdpkru
__builtin_ia32_wrpkru
__builtin_ia32_sqrtpd512
V8dV8dIi
__builtin_ia32_sqrtps512
V16fV16fIi
__builtin_ia32_rsqrt14sd_mask
V2dV2dV2dV2dUc
__builtin_ia32_rsqrt14ss_mask
V4fV4fV4fV4fUc
__builtin_ia32_rsqrt14pd512_mask
V8dV8dV8dUc
__builtin_ia32_rsqrt14ps512_mask
V16fV16fV16fUs
__builtin_ia32_rsqrt28sd_round_mask
V2dV2dV2dV2dUcIi
__builtin_ia32_rsqrt28ss_round_mask
V4fV4fV4fV4fUcIi
__builtin_ia32_rsqrt28pd_mask
V8dV8dV8dUcIi
__builtin_ia32_rsqrt28ps_mask
V16fV16fV16fUsIi
__builtin_ia32_rcp14sd_mask
__builtin_ia32_rcp14ss_mask
__builtin_ia32_rcp14pd512_mask
__builtin_ia32_rcp14ps512_mask
__builtin_ia32_rcp28sd_round_mask
__builtin_ia32_rcp28ss_round_mask
__builtin_ia32_rcp28pd_mask
__builtin_ia32_rcp28ps_mask
__builtin_ia32_exp2pd_mask
__builtin_ia32_exp2ps_mask
__builtin_ia32_cvttps2dq512_mask
V16iV16fV16iUsIi
__builtin_ia32_cvttps2udq512_mask
__builtin_ia32_cvttpd2dq512_mask
V8iV8dV8iUcIi
__builtin_ia32_cvttpd2udq512_mask
__builtin_ia32_cmpps512_mask
UsV16fV16fIiUsIi
__builtin_ia32_cmpps256_mask
UcV8fV8fIiUc
__builtin_ia32_cmpps128_mask
UcV4fV4fIiUc
__builtin_ia32_cmppd512_mask
UcV8dV8dIiUcIi
__builtin_ia32_cmppd256_mask
UcV4dV4dIiUc
__builtin_ia32_cmppd128_mask
UcV2dV2dIiUc
__builtin_ia32_rndscaleps_mask
V16fV16fIiV16fUsIi
__builtin_ia32_rndscalepd_mask
V8dV8dIiV8dUcIi
__builtin_ia32_cvtps2dq512_mask
__builtin_ia32_cvtpd2dq512_mask
__builtin_ia32_cvtps2udq512_mask
__builtin_ia32_cvtpd2udq512_mask
__builtin_ia32_minps512
V16fV16fV16fIi
__builtin_ia32_minpd512
V8dV8dV8dIi
__builtin_ia32_maxps512
__builtin_ia32_maxpd512
__builtin_ia32_cvtdq2ps512_mask
V16fV16iV16fUsIi
__builtin_ia32_cvtudq2ps512_mask
__builtin_ia32_cvtpd2ps512_mask
V8fV8dV8fUcIi
__builtin_ia32_vcvtps2ph512_mask
V16sV16fIiV16sUs
__builtin_ia32_vcvtph2ps512_mask
V16fV16sV16fUsIi
__builtin_ia32_pabsd512
__builtin_ia32_pabsq512
V8LLiV8LLi
__builtin_ia32_pmaxsd512
__builtin_ia32_pmaxsq512
__builtin_ia32_pmaxud512
__builtin_ia32_pmaxuq512
__builtin_ia32_pminsd512
__builtin_ia32_pminsq512
__builtin_ia32_pminud512
__builtin_ia32_pminuq512
__builtin_ia32_pmuldq512
V8LLiV16iV16i
__builtin_ia32_pmuludq512
__builtin_ia32_loaddqusi512_mask
V16iiC*V16iUs
nV:512:
__builtin_ia32_loaddqudi512_mask
V8LLiLLiC*V8LLiUc
__builtin_ia32_loadups512_mask
V16ffC*V16fUs
__builtin_ia32_loadaps512_mask
V16fV16fC*V16fUs
__builtin_ia32_loadupd512_mask
V8ddC*V8dUc
__builtin_ia32_loadapd512_mask
V8dV8dC*V8dUc
__builtin_ia32_storedqudi512_mask
vLLi*V8LLiUc
__builtin_ia32_storedqusi512_mask
vi*V16iUs
__builtin_ia32_storeupd512_mask
vd*V8dUc
__builtin_ia32_storeapd512_mask
vV8d*V8dUc
__builtin_ia32_storeups512_mask
vf*V16fUs
__builtin_ia32_storeaps512_mask
vV16f*V16fUs
__builtin_ia32_alignq512
V8LLiV8LLiV8LLiIi
__builtin_ia32_alignd512
V16iV16iV16iIi
__builtin_ia32_alignd128
__builtin_ia32_alignd256
__builtin_ia32_alignq128
V2LLiV2LLiV2LLiIi
__builtin_ia32_alignq256
__builtin_ia32_extractf64x4_mask
V4dV8dIiV4dUc
__builtin_ia32_extractf32x4_mask
V4fV16fIiV4fUc
__builtin_ia32_vpdpbusd128
avx512vl,avx512vnni
__builtin_ia32_vpdpbusd256
V8iV8iV8iV8i
__builtin_ia32_vpdpbusd512
__builtin_ia32_vpdpbusds128
__builtin_ia32_vpdpbusds256
__builtin_ia32_vpdpbusds512
__builtin_ia32_vpdpwssd128
__builtin_ia32_vpdpwssd256
__builtin_ia32_vpdpwssd512
__builtin_ia32_vpdpwssds128
__builtin_ia32_vpdpwssds256
__builtin_ia32_vpdpwssds512
__builtin_ia32_gather3div2df
V2dV2ddC*V2LLiUcIi
__builtin_ia32_gather3div2di
V2LLiV2LLiLLiC*V2LLiUcIi
__builtin_ia32_gather3div4df
V4dV4ddC*V4LLiUcIi
__builtin_ia32_gather3div4di
V4LLiV4LLiLLiC*V4LLiUcIi
__builtin_ia32_gather3div4sf
V4fV4ffC*V2LLiUcIi
__builtin_ia32_gather3div4si
V4iV4iiC*V2LLiUcIi
__builtin_ia32_gather3div8sf
V4fV4ffC*V4LLiUcIi
__builtin_ia32_gather3div8si
V4iV4iiC*V4LLiUcIi
__builtin_ia32_gather3siv2df
V2dV2ddC*V4iUcIi
__builtin_ia32_gather3siv2di
V2LLiV2LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4df
V4dV4ddC*V4iUcIi
__builtin_ia32_gather3siv4di
V4LLiV4LLiLLiC*V4iUcIi
__builtin_ia32_gather3siv4sf
V4fV4ffC*V4iUcIi
__builtin_ia32_gather3siv4si
V4iV4iiC*V4iUcIi
__builtin_ia32_gather3siv8sf
V8fV8ffC*V8iUcIi
__builtin_ia32_gather3siv8si
V8iV8iiC*V8iUcIi
__builtin_ia32_gathersiv8df
V8dV8ddC*V8iUcIi
__builtin_ia32_gathersiv16sf
V16fV16ffC*V16fUsIi
__builtin_ia32_gatherdiv8df
V8dV8ddC*V8LLiUcIi
__builtin_ia32_gatherdiv16sf
V8fV8ffC*V8LLiUcIi
__builtin_ia32_gathersiv8di
V8LLiV8LLiLLiC*V8iUcIi
__builtin_ia32_gathersiv16si
V16iV16iiC*V16iUsIi
__builtin_ia32_gatherdiv8di
V8LLiV8LLiLLiC*V8LLiUcIi
__builtin_ia32_gatherdiv16si
V8iV8iiC*V8LLiUcIi
__builtin_ia32_scattersiv8df
vd*UcV8iV8dIi
__builtin_ia32_scattersiv16sf
vf*UsV16iV16fIi
__builtin_ia32_scatterdiv8df
vd*UcV8LLiV8dIi
__builtin_ia32_scatterdiv16sf
vf*UcV8LLiV8fIi
__builtin_ia32_scattersiv8di
vLLi*UcV8iV8LLiIi
__builtin_ia32_scattersiv16si
vi*UsV16iV16iIi
__builtin_ia32_scatterdiv8di
vLLi*UcV8LLiV8LLiIi
__builtin_ia32_scatterdiv16si
vi*UcV8LLiV8iIi
__builtin_ia32_gatherpfdpd
vUcV8iLLiC*IiIi
__builtin_ia32_gatherpfdps
vUsV16iiC*IiIi
__builtin_ia32_gatherpfqpd
vUcV8LLiLLiC*IiIi
__builtin_ia32_gatherpfqps
vUcV8LLiiC*IiIi
__builtin_ia32_scatterpfdpd
vUcV8iLLi*IiIi
__builtin_ia32_scatterpfdps
vUsV16ii*IiIi
__builtin_ia32_scatterpfqpd
vUcV8LLiLLi*IiIi
__builtin_ia32_scatterpfqps
vUcV8LLii*IiIi
__builtin_ia32_knotqi
__builtin_ia32_knothi
__builtin_ia32_knotsi
__builtin_ia32_knotdi
__builtin_ia32_cmpb128_mask
UsV16cV16cIiUs
avx512vl,avx512bw
__builtin_ia32_cmpd128_mask
UcV4iV4iIiUc
__builtin_ia32_cmpq128_mask
UcV2LLiV2LLiIiUc
__builtin_ia32_cmpw128_mask
UcV8sV8sIiUc
__builtin_ia32_cmpb256_mask
UiV32cV32cIiUi
__builtin_ia32_cmpd256_mask
UcV8iV8iIiUc
__builtin_ia32_cmpq256_mask
UcV4LLiV4LLiIiUc
__builtin_ia32_cmpw256_mask
UsV16sV16sIiUs
__builtin_ia32_cmpb512_mask
ULLiV64cV64cIiULLi
__builtin_ia32_cmpd512_mask
UsV16iV16iIiUs
__builtin_ia32_cmpq512_mask
UcV8LLiV8LLiIiUc
__builtin_ia32_cmpw512_mask
UiV32sV32sIiUi
__builtin_ia32_ucmpb128_mask
__builtin_ia32_ucmpd128_mask
__builtin_ia32_ucmpq128_mask
__builtin_ia32_ucmpw128_mask
__builtin_ia32_ucmpb256_mask
__builtin_ia32_ucmpd256_mask
__builtin_ia32_ucmpq256_mask
__builtin_ia32_ucmpw256_mask
__builtin_ia32_ucmpb512_mask
__builtin_ia32_ucmpd512_mask
__builtin_ia32_ucmpq512_mask
__builtin_ia32_ucmpw512_mask
__builtin_ia32_pabsb512
V64cV64c
__builtin_ia32_pabsw512
V32sV32s
__builtin_ia32_packssdw512
V32sV16iV16i
__builtin_ia32_packsswb512
V64cV32sV32s
__builtin_ia32_packusdw512
__builtin_ia32_packuswb512
__builtin_ia32_paddsb512
__builtin_ia32_paddsw512
V32sV32sV32s
__builtin_ia32_paddusb512
__builtin_ia32_paddusw512
__builtin_ia32_pmaxsb512
__builtin_ia32_pmaxsw512
__builtin_ia32_pmaxub512
__builtin_ia32_pmaxuw512
__builtin_ia32_pminsb512
__builtin_ia32_pminsw512
__builtin_ia32_pminub512
__builtin_ia32_pminuw512
__builtin_ia32_pshufb512
__builtin_ia32_psubsb512
__builtin_ia32_psubsw512
__builtin_ia32_psubusb512
__builtin_ia32_psubusw512
__builtin_ia32_vpconflictdi_128_mask
V2LLiV2LLiV2LLiUc
avx512cd,avx512vl
__builtin_ia32_vpconflictdi_256_mask
V4LLiV4LLiV4LLiUc
__builtin_ia32_vpconflictsi_128_mask
V4iV4iV4iUc
__builtin_ia32_vpconflictsi_256_mask
V8iV8iV8iUc
__builtin_ia32_vpconflictdi_512_mask
V8LLiV8LLiV8LLiUc
__builtin_ia32_vpconflictsi_512_mask
V16iV16iV16iUs
__builtin_ia32_vplzcntd_512
__builtin_ia32_vplzcntq_512
__builtin_ia32_vpopcntd_128
avx512vpopcntdq,avx512vl
__builtin_ia32_vpopcntq_128
__builtin_ia32_vpopcntd_256
__builtin_ia32_vpopcntq_256
V4LLiV4LLi
__builtin_ia32_vpopcntd_512
__builtin_ia32_vpopcntq_512
__builtin_ia32_vpopcntb_128
avx512vl,avx512bitalg
__builtin_ia32_vpopcntw_128
__builtin_ia32_vpopcntb_256
__builtin_ia32_vpopcntw_256
__builtin_ia32_vpopcntb_512
__builtin_ia32_vpopcntw_512
__builtin_ia32_vpshufbitqmb128_mask
UsV16cV16cUs
__builtin_ia32_vpshufbitqmb256_mask
UiV32cV32cUi
__builtin_ia32_vpshufbitqmb512_mask
ULLiV64cV64cULLi
__builtin_ia32_pmulhrsw512
__builtin_ia32_pmulhuw512
__builtin_ia32_pmulhw512
__builtin_ia32_addpd512
__builtin_ia32_addps512
__builtin_ia32_divpd512
__builtin_ia32_divps512
__builtin_ia32_mulpd512
__builtin_ia32_mulps512
__builtin_ia32_subpd512
__builtin_ia32_subps512
__builtin_ia32_pmaddubsw512
V32sV64cV64c
__builtin_ia32_pmaddwd512
V16iV32sV32s
__builtin_ia32_addss_round_mask
__builtin_ia32_divss_round_mask
__builtin_ia32_mulss_round_mask
__builtin_ia32_subss_round_mask
__builtin_ia32_maxss_round_mask
__builtin_ia32_minss_round_mask
__builtin_ia32_addsd_round_mask
__builtin_ia32_divsd_round_mask
__builtin_ia32_mulsd_round_mask
__builtin_ia32_subsd_round_mask
__builtin_ia32_maxsd_round_mask
__builtin_ia32_minsd_round_mask
__builtin_ia32_compressdf128_mask
V2dV2dV2dUc
__builtin_ia32_compressdf256_mask
V4dV4dV4dUc
__builtin_ia32_compressdi128_mask
__builtin_ia32_compressdi256_mask
__builtin_ia32_compresshi128_mask
V8sV8sV8sUc
avx512vl,avx512vbmi2
__builtin_ia32_compresshi256_mask
V16sV16sV16sUs
__builtin_ia32_compressqi128_mask
V16cV16cV16cUs
__builtin_ia32_compressqi256_mask
V32cV32cV32cUi
__builtin_ia32_compresssf128_mask
V4fV4fV4fUc
__builtin_ia32_compresssf256_mask
V8fV8fV8fUc
__builtin_ia32_compresssi128_mask
__builtin_ia32_compresssi256_mask
__builtin_ia32_compressstoredf128_mask
vV2d*V2dUc
__builtin_ia32_compressstoredf256_mask
vV4d*V4dUc
__builtin_ia32_compressstoredi128_mask
vV2LLi*V2LLiUc
__builtin_ia32_compressstoredi256_mask
vV4LLi*V4LLiUc
__builtin_ia32_compressstorehi128_mask
vV8s*V8sUc
__builtin_ia32_compressstorehi256_mask
vV16s*V16sUs
__builtin_ia32_compressstoreqi128_mask
vV16c*V16cUs
__builtin_ia32_compressstoreqi256_mask
vV32c*V32cUi
__builtin_ia32_compressstoresf128_mask
vV4f*V4fUc
__builtin_ia32_compressstoresf256_mask
vV8f*V8fUc
__builtin_ia32_compressstoresi128_mask
vV4i*V4iUc
__builtin_ia32_compressstoresi256_mask
vV8i*V8iUc
__builtin_ia32_cvtpd2dq128_mask
V4iV2dV4iUc
__builtin_ia32_cvtpd2ps_mask
V4fV2dV4fUc
__builtin_ia32_cvtpd2udq128_mask
__builtin_ia32_cvtpd2udq256_mask
V4iV4dV4iUc
__builtin_ia32_cvtps2udq128_mask
V4iV4fV4iUc
__builtin_ia32_cvtps2udq256_mask
V8iV8fV8iUc
__builtin_ia32_cvttpd2dq128_mask
__builtin_ia32_cvttpd2udq128_mask
__builtin_ia32_cvttpd2udq256_mask
__builtin_ia32_cvttps2udq128_mask
__builtin_ia32_cvttps2udq256_mask
__builtin_ia32_expanddf128_mask
__builtin_ia32_expanddf256_mask
__builtin_ia32_expanddi128_mask
__builtin_ia32_expanddi256_mask
__builtin_ia32_expandhi128_mask
__builtin_ia32_expandhi256_mask
__builtin_ia32_expandqi128_mask
__builtin_ia32_expandqi256_mask
__builtin_ia32_expandloaddf128_mask
V2dV2dC*V2dUc
__builtin_ia32_expandloaddf256_mask
V4dV4dC*V4dUc
__builtin_ia32_expandloaddi128_mask
V4iV2LLiC*V2LLiUc
__builtin_ia32_expandloaddi256_mask
V4LLiV4LLiC*V4LLiUc
__builtin_ia32_expandloadhi128_mask
V8sV8sC*V8sUc
__builtin_ia32_expandloadhi256_mask
V16sV16sC*V16sUs
__builtin_ia32_expandloadqi128_mask
V16cV16cC*V16cUs
__builtin_ia32_expandloadqi256_mask
V32cV32cC*V32cUi
__builtin_ia32_expandloadsf128_mask
V4fV4fC*V4fUc
__builtin_ia32_expandloadsf256_mask
V8fV8fC*V8fUc
__builtin_ia32_expandloadsi128_mask
V4iV4iC*V4iUc
__builtin_ia32_expandloadsi256_mask
V8iV8iC*V8iUc
__builtin_ia32_expandsf128_mask
__builtin_ia32_expandsf256_mask
__builtin_ia32_expandsi128_mask
__builtin_ia32_expandsi256_mask
__builtin_ia32_getexppd128_mask
__builtin_ia32_getexppd256_mask
__builtin_ia32_getexpps128_mask
__builtin_ia32_getexpps256_mask
__builtin_ia32_pabsq128
__builtin_ia32_pabsq256
__builtin_ia32_pmaxsq128
__builtin_ia32_pmaxsq256
__builtin_ia32_pmaxuq128
__builtin_ia32_pmaxuq256
__builtin_ia32_pminsq128
__builtin_ia32_pminsq256
__builtin_ia32_pminuq128
__builtin_ia32_pminuq256
__builtin_ia32_rndscalepd_128_mask
V2dV2dIiV2dUc
__builtin_ia32_rndscalepd_256_mask
V4dV4dIiV4dUc
__builtin_ia32_rndscaleps_128_mask
V4fV4fIiV4fUc
__builtin_ia32_rndscaleps_256_mask
V8fV8fIiV8fUc
__builtin_ia32_scalefpd128_mask
__builtin_ia32_scalefpd256_mask
V4dV4dV4dV4dUc
__builtin_ia32_scalefps128_mask
__builtin_ia32_scalefps256_mask
V8fV8fV8fV8fUc
__builtin_ia32_scatterdiv2df
vd*UcV2LLiV2dIi
__builtin_ia32_scatterdiv2di
vLLi*UcV2LLiV2LLiIi
__builtin_ia32_scatterdiv4df
vd*UcV4LLiV4dIi
__builtin_ia32_scatterdiv4di
vLLi*UcV4LLiV4LLiIi
__builtin_ia32_scatterdiv4sf
vf*UcV2LLiV4fIi
__builtin_ia32_scatterdiv4si
vi*UcV2LLiV4iIi
__builtin_ia32_scatterdiv8sf
vf*UcV4LLiV4fIi
__builtin_ia32_scatterdiv8si
vi*UcV4LLiV4iIi
__builtin_ia32_scattersiv2df
vd*UcV4iV2dIi
__builtin_ia32_scattersiv2di
vLLi*UcV4iV2LLiIi
__builtin_ia32_scattersiv4df
vd*UcV4iV4dIi
__builtin_ia32_scattersiv4di
vLLi*UcV4iV4LLiIi
__builtin_ia32_scattersiv4sf
vf*UcV4iV4fIi
__builtin_ia32_scattersiv4si
vi*UcV4iV4iIi
__builtin_ia32_scattersiv8sf
vf*UcV8iV8fIi
__builtin_ia32_scattersiv8si
vi*UcV8iV8iIi
__builtin_ia32_vpermi2vard128
__builtin_ia32_vpermi2vard256
__builtin_ia32_vpermi2vard512
__builtin_ia32_vpermi2varpd128
V2dV2dV2LLiV2d
__builtin_ia32_vpermi2varpd256
V4dV4dV4LLiV4d
__builtin_ia32_vpermi2varpd512
V8dV8dV8LLiV8d
__builtin_ia32_vpermi2varps128
V4fV4fV4iV4f
__builtin_ia32_vpermi2varps256
V8fV8fV8iV8f
__builtin_ia32_vpermi2varps512
V16fV16fV16iV16f
__builtin_ia32_vpermi2varq128
__builtin_ia32_vpermi2varq256
V4LLiV4LLiV4LLiV4LLi
__builtin_ia32_vpermi2varq512
V8LLiV8LLiV8LLiV8LLi
__builtin_ia32_vpermi2varqi128
avx512vbmi,avx512vl
__builtin_ia32_vpermi2varqi256
__builtin_ia32_vpermi2varqi512
V64cV64cV64cV64c
__builtin_ia32_vpermi2varhi128
__builtin_ia32_vpermi2varhi256
V16sV16sV16sV16s
__builtin_ia32_vpermi2varhi512
V32sV32sV32sV32s
__builtin_ia32_vpshldd128
__builtin_ia32_vpshldd256
__builtin_ia32_vpshldd512
__builtin_ia32_vpshldq128
__builtin_ia32_vpshldq256
__builtin_ia32_vpshldq512
__builtin_ia32_vpshldw128
__builtin_ia32_vpshldw256
__builtin_ia32_vpshldw512
V32sV32sV32sIi
__builtin_ia32_vpshldvd128_mask
V4iV4iV4iV4iUc
__builtin_ia32_vpshldvd256_mask
V8iV8iV8iV8iUc
__builtin_ia32_vpshldvd512_mask
V16iV16iV16iV16iUs
__builtin_ia32_vpshldvq128_mask
V2LLiV2LLiV2LLiV2LLiUc
__builtin_ia32_vpshldvq256_mask
V4LLiV4LLiV4LLiV4LLiUc
__builtin_ia32_vpshldvq512_mask
V8LLiV8LLiV8LLiV8LLiUc
__builtin_ia32_vpshldvw128_mask
V8sV8sV8sV8sUc
__builtin_ia32_vpshldvw256_mask
V16sV16sV16sV16sUs
__builtin_ia32_vpshldvw512_mask
V32sV32sV32sV32sUi
__builtin_ia32_vpshldvd128_maskz
__builtin_ia32_vpshldvd256_maskz
__builtin_ia32_vpshldvd512_maskz
__builtin_ia32_vpshldvq128_maskz
__builtin_ia32_vpshldvq256_maskz
__builtin_ia32_vpshldvq512_maskz
__builtin_ia32_vpshldvw128_maskz
__builtin_ia32_vpshldvw256_maskz
__builtin_ia32_vpshldvw512_maskz
__builtin_ia32_vpshrdvd128_mask
__builtin_ia32_vpshrdvd256_mask
__builtin_ia32_vpshrdvd512_mask
__builtin_ia32_vpshrdvq128_mask
__builtin_ia32_vpshrdvq256_mask
__builtin_ia32_vpshrdvq512_mask
__builtin_ia32_vpshrdvw128_mask
__builtin_ia32_vpshrdvw256_mask
__builtin_ia32_vpshrdvw512_mask
__builtin_ia32_vpshrdvd128_maskz
__builtin_ia32_vpshrdvd256_maskz
__builtin_ia32_vpshrdvd512_maskz
__builtin_ia32_vpshrdvq128_maskz
__builtin_ia32_vpshrdvq256_maskz
__builtin_ia32_vpshrdvq512_maskz
__builtin_ia32_vpshrdvw128_maskz
__builtin_ia32_vpshrdvw256_maskz
__builtin_ia32_vpshrdvw512_maskz
__builtin_ia32_vpshrdd128
__builtin_ia32_vpshrdd256
__builtin_ia32_vpshrdd512
__builtin_ia32_vpshrdq128
__builtin_ia32_vpshrdq256
__builtin_ia32_vpshrdq512
__builtin_ia32_vpshrdw128
__builtin_ia32_vpshrdw256
__builtin_ia32_vpshrdw512
__builtin_ia32_pmovswb512_mask
V32cV32sV32cUi
__builtin_ia32_pmovuswb512_mask
__builtin_ia32_pmovwb512_mask
__builtin_ia32_cvtpd2qq128_mask
V2LLiV2dV2LLiUc
avx512vl,avx512dq
__builtin_ia32_cvtpd2qq256_mask
V4LLiV4dV4LLiUc
__builtin_ia32_cvtpd2uqq128_mask
__builtin_ia32_cvtpd2uqq256_mask
__builtin_ia32_cvtps2qq128_mask
V2LLiV4fV2LLiUc
__builtin_ia32_cvtps2qq256_mask
V4LLiV4fV4LLiUc
__builtin_ia32_cvtps2uqq128_mask
__builtin_ia32_cvtps2uqq256_mask
__builtin_ia32_cvtqq2ps128_mask
V4fV2LLiV4fUc
__builtin_ia32_cvtqq2ps256_mask
V4fV4LLiV4fUc
__builtin_ia32_cvttpd2qq128_mask
__builtin_ia32_cvttpd2qq256_mask
__builtin_ia32_cvttpd2uqq128_mask
__builtin_ia32_cvttpd2uqq256_mask
__builtin_ia32_cvttps2qq128_mask
__builtin_ia32_cvttps2qq256_mask
__builtin_ia32_cvttps2uqq128_mask
__builtin_ia32_cvttps2uqq256_mask
__builtin_ia32_cvtuqq2ps128_mask
__builtin_ia32_cvtuqq2ps256_mask
__builtin_ia32_rangepd128_mask
V2dV2dV2dIiV2dUc
__builtin_ia32_rangepd256_mask
V4dV4dV4dIiV4dUc
__builtin_ia32_rangeps128_mask
V4fV4fV4fIiV4fUc
__builtin_ia32_rangeps256_mask
V8fV8fV8fIiV8fUc
__builtin_ia32_rangesd128_round_mask
V2dV2dV2dV2dUcIiIi
__builtin_ia32_rangess128_round_mask
V4fV4fV4fV4fUcIiIi
__builtin_ia32_reducepd128_mask
__builtin_ia32_reducepd256_mask
__builtin_ia32_reduceps128_mask
__builtin_ia32_reduceps256_mask
__builtin_ia32_reducesd_mask
__builtin_ia32_reducess_mask
__builtin_ia32_pmovswb128_mask
V16cV8sV16cUc
__builtin_ia32_pmovswb256_mask
V16cV16sV16cUs
__builtin_ia32_pmovuswb128_mask
__builtin_ia32_pmovuswb256_mask
__builtin_ia32_pmovwb128_mask
__builtin_ia32_cvtpd2qq512_mask
V8LLiV8dV8LLiUcIi
__builtin_ia32_cvtpd2uqq512_mask
__builtin_ia32_cvtps2qq512_mask
V8LLiV8fV8LLiUcIi
__builtin_ia32_cvtps2uqq512_mask
__builtin_ia32_cvtqq2pd512_mask
V8dV8LLiV8dUcIi
__builtin_ia32_cvtqq2ps512_mask
V8fV8LLiV8fUcIi
__builtin_ia32_cvttpd2qq512_mask
__builtin_ia32_cvttpd2uqq512_mask
__builtin_ia32_cvttps2qq512_mask
__builtin_ia32_cvttps2uqq512_mask
__builtin_ia32_cvtuqq2pd512_mask
__builtin_ia32_cvtuqq2ps512_mask
__builtin_ia32_rangepd512_mask
V8dV8dV8dIiV8dUcIi
__builtin_ia32_rangeps512_mask
V16fV16fV16fIiV16fUsIi
__builtin_ia32_reducepd512_mask
__builtin_ia32_reduceps512_mask
__builtin_ia32_prold512
V16iV16iIi
__builtin_ia32_prolq512
V8LLiV8LLiIi
__builtin_ia32_prold128
__builtin_ia32_prold256
__builtin_ia32_prolq128
__builtin_ia32_prolq256
__builtin_ia32_prolvd512
__builtin_ia32_prolvq512
__builtin_ia32_prord512
__builtin_ia32_prorq512
__builtin_ia32_prolvd128
__builtin_ia32_prolvd256
__builtin_ia32_prolvq128
__builtin_ia32_prolvq256
__builtin_ia32_prord128
__builtin_ia32_prord256
__builtin_ia32_prorq128
__builtin_ia32_prorq256
__builtin_ia32_prorvd512
__builtin_ia32_prorvq512
__builtin_ia32_prorvd128
__builtin_ia32_prorvd256
__builtin_ia32_prorvq128
__builtin_ia32_prorvq256
__builtin_ia32_pshufhw512
V32sV32sIi
__builtin_ia32_pshuflw512
__builtin_ia32_psllv32hi
__builtin_ia32_psllw512
V32sV32sV8s
__builtin_ia32_psllwi512
V32sV32si
__builtin_ia32_psllv16hi
avx512bw,avx512vl
__builtin_ia32_psllv8hi
__builtin_ia32_pslldi512
__builtin_ia32_psllqi512
V8LLiV8LLii
__builtin_ia32_psrlv32hi
__builtin_ia32_psrlv16hi
__builtin_ia32_psrlv8hi
__builtin_ia32_psrldi512
__builtin_ia32_psrlqi512
__builtin_ia32_psrav32hi
__builtin_ia32_psrav16hi
__builtin_ia32_psrav8hi
__builtin_ia32_psravq128
__builtin_ia32_psravq256
__builtin_ia32_psraw512
__builtin_ia32_psrawi512
__builtin_ia32_psrlw512
__builtin_ia32_psrlwi512
__builtin_ia32_pslldqi512_byteshift
__builtin_ia32_psrldqi512_byteshift
__builtin_ia32_movdqa32load128_mask
V4iV4i*V4iUc
__builtin_ia32_movdqa32load256_mask
V8iV8i*V8iUc
__builtin_ia32_movdqa32load512_mask
V16iV16iC*V16iUs
__builtin_ia32_movdqa32store512_mask
vV16i*V16iUs
__builtin_ia32_movdqa64load512_mask
V8LLiV8LLiC*V8LLiUc
__builtin_ia32_movdqa64store512_mask
vV8LLi*V8LLiUc
__builtin_ia32_movdqa32store128_mask
__builtin_ia32_movdqa32store256_mask
__builtin_ia32_movdqa64load128_mask
V2LLiV2LLiC*V2LLiUc
__builtin_ia32_movdqa64load256_mask
__builtin_ia32_movdqa64store128_mask
__builtin_ia32_movdqa64store256_mask
__builtin_ia32_vpmadd52huq512
__builtin_ia32_vpmadd52luq512
__builtin_ia32_vpmadd52huq128
avx512ifma,avx512vl
__builtin_ia32_vpmadd52huq256
__builtin_ia32_vpmadd52luq128
__builtin_ia32_vpmadd52luq256
__builtin_ia32_vcomisd
iV2dV2dIiIi
__builtin_ia32_vcomiss
iV4fV4fIiIi
__builtin_ia32_kunpckdi
__builtin_ia32_kunpcksi
__builtin_ia32_loaddquhi512_mask
V32sV32s*V32sUi
__builtin_ia32_loaddquqi512_mask
V64cV64c*V64cULLi
__builtin_ia32_fixupimmpd512_mask
V8dV8dV8dV8LLiIiUcIi
__builtin_ia32_fixupimmpd512_maskz
__builtin_ia32_fixupimmps512_mask
V16fV16fV16fV16iIiUsIi
__builtin_ia32_fixupimmps512_maskz
__builtin_ia32_fixupimmsd_mask
V2dV2dV2dV2LLiIiUcIi
__builtin_ia32_fixupimmsd_maskz
__builtin_ia32_fixupimmss_mask
V4fV4fV4fV4iIiUcIi
__builtin_ia32_fixupimmss_maskz
__builtin_ia32_getexpsd128_round_mask
__builtin_ia32_getexpss128_round_mask
__builtin_ia32_getmantsd_round_mask
V2dV2dV2dIiV2dUcIi
__builtin_ia32_getmantss_round_mask
V4fV4fV4fIiV4fUcIi
__builtin_ia32_loaddquhi128_mask
V8sV8s*V8sUc
__builtin_ia32_loaddquhi256_mask
V16sV16s*V16sUs
__builtin_ia32_loaddquqi128_mask
V16cV16c*V16cUs
__builtin_ia32_loaddquqi256_mask
V32cV32c*V32cUi
__builtin_ia32_fixupimmpd128_mask
V2dV2dV2dV2LLiIiUc
__builtin_ia32_fixupimmpd128_maskz
__builtin_ia32_fixupimmpd256_mask
V4dV4dV4dV4LLiIiUc
__builtin_ia32_fixupimmpd256_maskz
__builtin_ia32_fixupimmps128_mask
V4fV4fV4fV4iIiUc
__builtin_ia32_fixupimmps128_maskz
__builtin_ia32_fixupimmps256_mask
V8fV8fV8fV8iIiUc
__builtin_ia32_fixupimmps256_maskz
__builtin_ia32_loadapd128_mask
V2dV2d*V2dUc
__builtin_ia32_loadsd128_mask
__builtin_ia32_loadapd256_mask
V4dV4d*V4dUc
__builtin_ia32_loadaps128_mask
V4fV4f*V4fUc
__builtin_ia32_loadss128_mask
__builtin_ia32_loadaps256_mask
V8fV8f*V8fUc
__builtin_ia32_loaddqudi128_mask
V2LLiV2LLi*V2LLiUc
__builtin_ia32_loaddqudi256_mask
V4LLiV4LLi*V4LLiUc
__builtin_ia32_loaddqusi128_mask
__builtin_ia32_loaddqusi256_mask
__builtin_ia32_loadupd128_mask
__builtin_ia32_loadupd256_mask
__builtin_ia32_loadups128_mask
__builtin_ia32_loadups256_mask
__builtin_ia32_storedquhi512_mask
vV32s*V32sUi
__builtin_ia32_storedquqi512_mask
vV64c*V64cULLi
__builtin_ia32_storedquhi128_mask
__builtin_ia32_storedquhi256_mask
__builtin_ia32_storedquqi128_mask
__builtin_ia32_storedquqi256_mask
__builtin_ia32_storeapd128_mask
__builtin_ia32_storesd128_mask
__builtin_ia32_storeapd256_mask
__builtin_ia32_storeaps128_mask
__builtin_ia32_storess128_mask
__builtin_ia32_storeaps256_mask
__builtin_ia32_storedqudi128_mask
__builtin_ia32_storedqudi256_mask
__builtin_ia32_storedqusi128_mask
__builtin_ia32_storedqusi256_mask
__builtin_ia32_storeupd128_mask
__builtin_ia32_storeupd256_mask
__builtin_ia32_storeups128_mask
__builtin_ia32_storeups256_mask
__builtin_ia32_rcp14pd128_mask
__builtin_ia32_rcp14pd256_mask
__builtin_ia32_rcp14ps128_mask
__builtin_ia32_rcp14ps256_mask
__builtin_ia32_vplzcntd_128
__builtin_ia32_vplzcntd_256
__builtin_ia32_vplzcntq_128
__builtin_ia32_vplzcntq_256
__builtin_ia32_vcvtsd2si32
iV2dIi
__builtin_ia32_vcvtsd2usi32
UiV2dIi
__builtin_ia32_vcvtss2si32
iV4fIi
__builtin_ia32_vcvtss2usi32
UiV4fIi
__builtin_ia32_vcvttsd2si32
__builtin_ia32_vcvttsd2usi32
__builtin_ia32_vcvttss2si32
__builtin_ia32_vcvttss2usi32
__builtin_ia32_vpermilpd512
__builtin_ia32_vpermilps512
__builtin_ia32_vpermilvarpd512
V8dV8dV8LLi
__builtin_ia32_vpermilvarps512
V16fV16fV16i
__builtin_ia32_rndscalesd_round_mask
__builtin_ia32_rndscaless_round_mask
__builtin_ia32_scalefpd512_mask
__builtin_ia32_scalefps512_mask
__builtin_ia32_scalefsd_round_mask
__builtin_ia32_scalefss_round_mask
__builtin_ia32_psradi512
__builtin_ia32_psraqi512
__builtin_ia32_psraq128
__builtin_ia32_psraq256
__builtin_ia32_psraqi128
__builtin_ia32_psraqi256
__builtin_ia32_pslld512
V16iV16iV4i
__builtin_ia32_psllq512
V8LLiV8LLiV2LLi
__builtin_ia32_psllv16si
__builtin_ia32_psllv8di
__builtin_ia32_psrad512
__builtin_ia32_psraq512
__builtin_ia32_psrav16si
__builtin_ia32_psrav8di
__builtin_ia32_psrld512
__builtin_ia32_psrlq512
__builtin_ia32_psrlv16si
__builtin_ia32_psrlv8di
__builtin_ia32_pternlogd512_mask
V16iV16iV16iV16iIiUs
__builtin_ia32_pternlogd512_maskz
__builtin_ia32_pternlogq512_mask
V8LLiV8LLiV8LLiV8LLiIiUc
__builtin_ia32_pternlogq512_maskz
__builtin_ia32_pternlogd128_mask
V4iV4iV4iV4iIiUc
__builtin_ia32_pternlogd128_maskz
__builtin_ia32_pternlogd256_mask
V8iV8iV8iV8iIiUc
__builtin_ia32_pternlogd256_maskz
__builtin_ia32_pternlogq128_mask
V2LLiV2LLiV2LLiV2LLiIiUc
__builtin_ia32_pternlogq128_maskz
__builtin_ia32_pternlogq256_mask
V4LLiV4LLiV4LLiV4LLiIiUc
__builtin_ia32_pternlogq256_maskz
__builtin_ia32_shuf_f32x4
__builtin_ia32_shuf_f64x2
__builtin_ia32_shuf_i32x4
__builtin_ia32_shuf_i64x2
__builtin_ia32_shufpd512
__builtin_ia32_shufps512
__builtin_ia32_shuf_f32x4_256
__builtin_ia32_shuf_f64x2_256
__builtin_ia32_shuf_i32x4_256
__builtin_ia32_shuf_i64x2_256
__builtin_ia32_sqrtsd_round_mask
__builtin_ia32_sqrtss_round_mask
__builtin_ia32_rsqrt14pd128_mask
__builtin_ia32_rsqrt14pd256_mask
__builtin_ia32_rsqrt14ps128_mask
__builtin_ia32_rsqrt14ps256_mask
__builtin_ia32_cvtb2mask512
ULLiV64c
__builtin_ia32_cvtmask2b512
V64cULLi
__builtin_ia32_cvtmask2w512
V32sUi
__builtin_ia32_cvtd2mask512
UsV16i
__builtin_ia32_cvtmask2d512
V16iUs
__builtin_ia32_cvtmask2q512
V8LLiUc
__builtin_ia32_cvtq2mask512
UcV8LLi
__builtin_ia32_cvtb2mask128
UsV16c
__builtin_ia32_cvtb2mask256
UiV32c
__builtin_ia32_cvtmask2b128
V16cUs
__builtin_ia32_cvtmask2b256
V32cUi
__builtin_ia32_cvtmask2w128
V8sUc
__builtin_ia32_cvtmask2w256
V16sUs
__builtin_ia32_cvtd2mask128
UcV4i
avx512dq,avx512vl
__builtin_ia32_cvtd2mask256
UcV8i
__builtin_ia32_cvtmask2d128
V4iUc
__builtin_ia32_cvtmask2d256
V8iUc
__builtin_ia32_cvtmask2q128
V2LLiUc
__builtin_ia32_cvtmask2q256
V4LLiUc
__builtin_ia32_cvtq2mask128
UcV2LLi
__builtin_ia32_cvtq2mask256
UcV4LLi
__builtin_ia32_pmovsdb512_mask
V16cV16iV16cUs
__builtin_ia32_pmovsdb512mem_mask
vV16c*V16iUs
__builtin_ia32_pmovswb512mem_mask
vV32c*V32sUi
__builtin_ia32_pmovsdw512_mask
V16sV16iV16sUs
__builtin_ia32_pmovsdw512mem_mask
vV16s*V16iUs
__builtin_ia32_pmovsqb512_mask
V16cV8LLiV16cUc
__builtin_ia32_pmovsqb512mem_mask
vV16c*V8LLiUc
__builtin_ia32_pmovsqd512_mask
V8iV8LLiV8iUc
__builtin_ia32_pmovsqd512mem_mask
vV8i*V8LLiUc
__builtin_ia32_pmovsqw512_mask
V8sV8LLiV8sUc
__builtin_ia32_pmovsqw512mem_mask
vV8s*V8LLiUc
__builtin_ia32_pmovsdb128_mask
V16cV4iV16cUc
__builtin_ia32_pmovsdb128mem_mask
vV16c*V4iUc
__builtin_ia32_pmovswb128mem_mask
vV16c*V8sUc
__builtin_ia32_pmovsdb256_mask
V16cV8iV16cUc
__builtin_ia32_pmovsdb256mem_mask
vV16c*V8iUc
__builtin_ia32_pmovswb256mem_mask
vV16c*V16sUs
__builtin_ia32_pmovsdw128_mask
V8sV4iV8sUc
__builtin_ia32_pmovsdw128mem_mask
vV8s*V4iUc
__builtin_ia32_pmovsdw256_mask
V8sV8iV8sUc
__builtin_ia32_pmovsdw256mem_mask
vV8s*V8iUc
__builtin_ia32_pmovsqb128_mask
V16cV2LLiV16cUc
__builtin_ia32_pmovsqb128mem_mask
vV16c*V2LLiUc
__builtin_ia32_pmovsqb256_mask
V16cV4LLiV16cUc
__builtin_ia32_pmovsqb256mem_mask
vV16c*V4LLiUc
__builtin_ia32_pmovsqd128_mask
V4iV2LLiV4iUc
__builtin_ia32_pmovsqd128mem_mask
vV4i*V2LLiUc
__builtin_ia32_pmovsqd256_mask
V4iV4LLiV4iUc
__builtin_ia32_pmovsqd256mem_mask
vV4i*V4LLiUc
__builtin_ia32_pmovsqw128_mask
V8sV2LLiV8sUc
__builtin_ia32_pmovsqw128mem_mask
vV8s*V2LLiUc
__builtin_ia32_pmovsqw256_mask
V8sV4LLiV8sUc
__builtin_ia32_pmovsqw256mem_mask
vV8s*V4LLiUc
__builtin_ia32_pmovusdb512_mask
__builtin_ia32_pmovusdb512mem_mask
__builtin_ia32_pmovuswb512mem_mask
__builtin_ia32_pmovusdw512_mask
__builtin_ia32_pmovusdw512mem_mask
__builtin_ia32_pmovusqb512_mask
__builtin_ia32_pmovusqb512mem_mask
__builtin_ia32_pmovusqd512_mask
__builtin_ia32_pmovusqd512mem_mask
__builtin_ia32_pmovusqw512_mask
__builtin_ia32_pmovusqw512mem_mask
__builtin_ia32_pmovusdb128_mask
__builtin_ia32_pmovusdb128mem_mask
__builtin_ia32_pmovuswb128mem_mask
__builtin_ia32_pmovusdb256_mask
__builtin_ia32_pmovusdb256mem_mask
__builtin_ia32_pmovuswb256mem_mask
__builtin_ia32_pmovusdw128_mask
__builtin_ia32_pmovusdw128mem_mask
__builtin_ia32_pmovusdw256_mask
__builtin_ia32_pmovusdw256mem_mask
__builtin_ia32_pmovusqb128_mask
__builtin_ia32_pmovusqb128mem_mask
__builtin_ia32_pmovusqb256_mask
__builtin_ia32_pmovusqb256mem_mask
__builtin_ia32_pmovusqd128_mask
__builtin_ia32_pmovusqd128mem_mask
__builtin_ia32_pmovusqd256_mask
__builtin_ia32_pmovusqd256mem_mask
__builtin_ia32_pmovusqw128_mask
__builtin_ia32_pmovusqw128mem_mask
__builtin_ia32_pmovusqw256_mask
__builtin_ia32_pmovusqw256mem_mask
__builtin_ia32_pmovdb512_mask
__builtin_ia32_pmovdb512mem_mask
__builtin_ia32_pmovwb512mem_mask
__builtin_ia32_pmovdw512_mask
__builtin_ia32_pmovdw512mem_mask
__builtin_ia32_pmovqb512_mask
__builtin_ia32_pmovqb512mem_mask
__builtin_ia32_pmovqd512_mask
__builtin_ia32_pmovqd512mem_mask
__builtin_ia32_pmovqw512_mask
__builtin_ia32_pmovqw512mem_mask
__builtin_ia32_pmovdb128_mask
__builtin_ia32_pmovwb128mem_mask
__builtin_ia32_pmovdb128mem_mask
__builtin_ia32_pmovdb256_mask
__builtin_ia32_pmovdb256mem_mask
__builtin_ia32_pmovwb256mem_mask
__builtin_ia32_pmovdw128_mask
__builtin_ia32_pmovdw128mem_mask
__builtin_ia32_pmovdw256_mask
__builtin_ia32_pmovdw256mem_mask
__builtin_ia32_pmovqb128_mask
__builtin_ia32_pmovqb128mem_mask
__builtin_ia32_pmovqb256_mask
__builtin_ia32_pmovqb256mem_mask
__builtin_ia32_pmovqd128_mask
__builtin_ia32_pmovqd128mem_mask
__builtin_ia32_pmovqd256mem_mask
__builtin_ia32_pmovqw128_mask
__builtin_ia32_pmovqw128mem_mask
__builtin_ia32_pmovqw256_mask
__builtin_ia32_pmovqw256mem_mask
__builtin_ia32_extractf32x8_mask
V8fV16fIiV8fUc
__builtin_ia32_extractf64x2_512_mask
V2dV8dIiV2dUc
__builtin_ia32_extracti32x8_mask
V8iV16iIiV8iUc
__builtin_ia32_extracti64x2_512_mask
V2LLiV8LLiIiV2LLiUc
__builtin_ia32_extracti32x4_mask
V4iV16iIiV4iUc
__builtin_ia32_extracti64x4_mask
V4LLiV8LLiIiV4LLiUc
__builtin_ia32_extractf64x2_256_mask
V2dV4dIiV2dUc
__builtin_ia32_extracti64x2_256_mask
V2LLiV4LLiIiV2LLiUc
__builtin_ia32_extractf32x4_256_mask
V4fV8fIiV4fUc
__builtin_ia32_extracti32x4_256_mask
V4iV8iIiV4iUc
__builtin_ia32_insertf32x8
V16fV16fV8fIi
__builtin_ia32_insertf64x2_512
V8dV8dV2dIi
__builtin_ia32_inserti32x8
V16iV16iV8iIi
__builtin_ia32_inserti64x2_512
V8LLiV8LLiV2LLiIi
__builtin_ia32_insertf64x4
V8dV8dV4dIi
__builtin_ia32_inserti64x4
V8LLiV8LLiV4LLiIi
__builtin_ia32_insertf64x2_256
__builtin_ia32_inserti64x2_256
__builtin_ia32_insertf32x4_256
__builtin_ia32_inserti32x4_256
__builtin_ia32_insertf32x4
V16fV16fV4fIi
__builtin_ia32_inserti32x4
V16iV16iV4iIi
__builtin_ia32_getmantpd128_mask
__builtin_ia32_getmantpd256_mask
__builtin_ia32_getmantps128_mask
__builtin_ia32_getmantps256_mask
__builtin_ia32_getmantpd512_mask
__builtin_ia32_getmantps512_mask
__builtin_ia32_getexppd512_mask
__builtin_ia32_getexpps512_mask
__builtin_ia32_vfmaddss3_mask
__builtin_ia32_vfmaddss3_maskz
__builtin_ia32_vfmaddss3_mask3
__builtin_ia32_vfmaddsd3_mask
__builtin_ia32_vfmaddsd3_maskz
__builtin_ia32_vfmaddsd3_mask3
__builtin_ia32_vfmsubsd3_mask3
__builtin_ia32_vfmsubss3_mask3
__builtin_ia32_permdf512
__builtin_ia32_permdi512
__builtin_ia32_permvarhi512
__builtin_ia32_permvardf512
__builtin_ia32_permvardi512
__builtin_ia32_permvarsf512
__builtin_ia32_permvarsi512
__builtin_ia32_permvarqi512
__builtin_ia32_permvarqi128
__builtin_ia32_permvarqi256
__builtin_ia32_permvarhi128
__builtin_ia32_permvarhi256
__builtin_ia32_permvardf256
__builtin_ia32_permvardi256
__builtin_ia32_fpclasspd128_mask
UcV2dIiUc
__builtin_ia32_fpclasspd256_mask
UcV4dIiUc
__builtin_ia32_fpclassps128_mask
UcV4fIiUc
__builtin_ia32_fpclassps256_mask
UcV8fIiUc
__builtin_ia32_fpclassps512_mask
UsV16fIiUs
__builtin_ia32_fpclasspd512_mask
UcV8dIiUc
__builtin_ia32_fpclasssd_mask
__builtin_ia32_fpclassss_mask
__builtin_ia32_kaddqi
__builtin_ia32_kaddhi
__builtin_ia32_kaddsi
__builtin_ia32_kadddi
__builtin_ia32_kandqi
__builtin_ia32_kandhi
__builtin_ia32_kandsi
__builtin_ia32_kanddi
__builtin_ia32_kandnqi
__builtin_ia32_kandnhi
__builtin_ia32_kandnsi
__builtin_ia32_kandndi
__builtin_ia32_korqi
__builtin_ia32_korhi
__builtin_ia32_korsi
__builtin_ia32_kordi
__builtin_ia32_kortestcqi
iUcUc
__builtin_ia32_kortestzqi
__builtin_ia32_kortestchi
iUsUs
__builtin_ia32_kortestzhi
__builtin_ia32_kortestcsi
iUiUi
__builtin_ia32_kortestzsi
__builtin_ia32_kortestcdi
iULLiULLi
__builtin_ia32_kortestzdi
__builtin_ia32_ktestcqi
__builtin_ia32_ktestzqi
__builtin_ia32_ktestchi
__builtin_ia32_ktestzhi
__builtin_ia32_ktestcsi
__builtin_ia32_ktestzsi
__builtin_ia32_ktestcdi
__builtin_ia32_ktestzdi
__builtin_ia32_kunpckhi
__builtin_ia32_kxnorqi
__builtin_ia32_kxnorhi
__builtin_ia32_kxnorsi
__builtin_ia32_kxnordi
__builtin_ia32_kxorqi
__builtin_ia32_kxorhi
__builtin_ia32_kxorsi
__builtin_ia32_kxordi
__builtin_ia32_kshiftliqi
UcUcIUi
__builtin_ia32_kshiftlihi
UsUsIUi
__builtin_ia32_kshiftlisi
__builtin_ia32_kshiftlidi
ULLiULLiIUi
__builtin_ia32_kshiftriqi
__builtin_ia32_kshiftrihi
__builtin_ia32_kshiftrisi
__builtin_ia32_kshiftridi
__builtin_ia32_kmovb
__builtin_ia32_kmovw
__builtin_ia32_kmovd
__builtin_ia32_kmovq
__builtin_ia32_palignr512
V64cV64cV64cIi
__builtin_ia32_dbpsadbw128
V8sV16cV16cIi
__builtin_ia32_dbpsadbw256
V16sV32cV32cIi
__builtin_ia32_dbpsadbw512
V32sV64cV64cIi
__builtin_ia32_psadbw512
V8LLiV64cV64c
__builtin_ia32_compressdf512_mask
__builtin_ia32_compressdi512_mask
__builtin_ia32_compresshi512_mask
V32sV32sV32sUi
__builtin_ia32_compressqi512_mask
V64cV64cV64cULLi
__builtin_ia32_compresssf512_mask
__builtin_ia32_compresssi512_mask
__builtin_ia32_cmpsd_mask
UcV2dV2dIiUcIi
__builtin_ia32_cmpss_mask
UcV4fV4fIiUcIi
__builtin_ia32_pshufd512
__builtin_ia32_expanddf512_mask
__builtin_ia32_expanddi512_mask
__builtin_ia32_expandhi512_mask
__builtin_ia32_expandqi512_mask
__builtin_ia32_expandloaddf512_mask
__builtin_ia32_expandloaddi512_mask
__builtin_ia32_expandloadhi512_mask
V32sV32sC*V32sUi
__builtin_ia32_expandloadqi512_mask
V64cV64cC*V64cULLi
__builtin_ia32_expandloadsf512_mask
__builtin_ia32_expandloadsi512_mask
__builtin_ia32_expandsf512_mask
__builtin_ia32_expandsi512_mask
__builtin_ia32_cvtps2pd512_mask
V8dV8fV8dUcIi
__builtin_ia32_compressstoredf512_mask
__builtin_ia32_compressstoredi512_mask
__builtin_ia32_compressstorehi512_mask
__builtin_ia32_compressstoreqi512_mask
__builtin_ia32_compressstoresf512_mask
__builtin_ia32_compressstoresi512_mask
__builtin_ia32_vcvtph2ps_mask
V4fV8sV4fUc
__builtin_ia32_vcvtph2ps256_mask
V8fV8sV8fUc
__builtin_ia32_vcvtps2ph_mask
V8sV4fIiV8sUc
__builtin_ia32_vcvtps2ph256_mask
V8sV8fIiV8sUc
__builtin_ia32_cvtw2mask512
UiV32s
__builtin_ia32_cvtw2mask128
UcV8s
__builtin_ia32_cvtw2mask256
UsV16s
__builtin_ia32_cvtsd2ss_round_mask
V4fV4fV2dV4fUcIi
__builtin_ia32_cvtsi2ss32
V4fV4fiIi
__builtin_ia32_cvtss2sd_round_mask
V2dV2dV4fV2dUcIi
__builtin_ia32_cvtusi2ss32
V4fV4fUiIi
__builtin_ia32_vpmultishiftqb512_mask
V64cV64cV64cV64cULLi
__builtin_ia32_vpmultishiftqb128_mask
V16cV16cV16cV16cUs
__builtin_ia32_vpmultishiftqb256_mask
V32cV32cV32cV32cUi
__builtin_ia32_selectb_128
V16cUsV16cV16c
__builtin_ia32_selectb_256
V32cUiV32cV32c
__builtin_ia32_selectb_512
V64cULLiV64cV64c
__builtin_ia32_selectw_128
V8sUcV8sV8s
__builtin_ia32_selectw_256
V16sUsV16sV16s
__builtin_ia32_selectw_512
V32sUiV32sV32s
__builtin_ia32_selectd_128
V4iUcV4iV4i
__builtin_ia32_selectd_256
V8iUcV8iV8i
__builtin_ia32_selectd_512
V16iUsV16iV16i
__builtin_ia32_selectq_128
V2LLiUcV2LLiV2LLi
__builtin_ia32_selectq_256
V4LLiUcV4LLiV4LLi
__builtin_ia32_selectq_512
V8LLiUcV8LLiV8LLi
__builtin_ia32_selectps_128
V4fUcV4fV4f
__builtin_ia32_selectps_256
V8fUcV8fV8f
__builtin_ia32_selectps_512
V16fUsV16fV16f
__builtin_ia32_selectpd_128
V2dUcV2dV2d
__builtin_ia32_selectpd_256
V4dUcV4dV4d
__builtin_ia32_selectpd_512
V8dUcV8dV8d
__builtin_ia32_selectss_128
__builtin_ia32_selectsd_128
__builtin_ia32_monitorx
__builtin_ia32_mwaitx
__builtin_ia32_umonitor
__builtin_ia32_umwait
__builtin_ia32_tpause
__builtin_ia32_clzero
__builtin_ia32_cldemote
__builtin_ia32_directstore_u32
vUi*Ui
__builtin_ia32_movdir64b
vv*vC*
__builtin_ia32_ptwrite32
__builtin_ia32_invpcid
_ReadBarrier
_WriteBarrier
__emul
__emulu
ULLiUiUi
__stosb
vUc*Ucz
__int2c
__ud2
__readfsbyte
UcUNi
__readfsword
UsUNi
__readfsdword
__readfsqword
ULLiUNi
__readgsbyte
__readgsword
__readgsdword
__readgsqword
__mulh
__umulh
_mul128
LLiLLiLLiLLi*
_umul128
ULLiULLiULLiULLi*
__faststorefence
__shiftleft128
ULLiULLiULLiUc
__shiftright128
_InterlockedCompareExchange128
UcLLiD*LLiLLiLLi*
__builtin_ia32_readeflags_u64
__builtin_ia32_writeeflags_u64
vULLi
__builtin_ia32_cvtss2si64
LLiV4f
__builtin_ia32_cvttss2si64
__builtin_ia32_cvtsd2si64
LLiV2d
__builtin_ia32_cvttsd2si64
__builtin_ia32_movnti64
vLLi*LLi
__builtin_ia32_vec_ext_v2di
__builtin_ia32_vec_set_v2di
V2LLiV2LLiLLiIi
__builtin_ia32_crc32di
__builtin_ia32_vec_ext_v4di
LLiV4LLiIi
__builtin_ia32_vec_set_v4di
V4LLiV4LLiLLiIi
__builtin_ia32_rdfsbase32
__builtin_ia32_rdfsbase64
__builtin_ia32_rdgsbase32
__builtin_ia32_rdgsbase64
__builtin_ia32_wrfsbase32
__builtin_ia32_wrfsbase64
__builtin_ia32_wrgsbase32
__builtin_ia32_wrgsbase64
__builtin_ia32_fxrstor64
__builtin_ia32_fxsave64
__builtin_ia32_xsave64
__builtin_ia32_xrstor64
__builtin_ia32_xsaveopt64
__builtin_ia32_xrstors64
__builtin_ia32_xsavec64
__builtin_ia32_xsaves64
__builtin_ia32_incsspq
__builtin_ia32_rdsspq
__builtin_ia32_wrssq
vULLiv*
__builtin_ia32_wrussq
__builtin_ia32_addcarryx_u64
UcUcULLiULLiULLi*
__builtin_ia32_subborrow_u64
__builtin_ia32_rdrand64_step
UiULLi*
__builtin_ia32_rdseed64_step
__builtin_ia32_lzcnt_u64
__builtin_ia32_bextr_u64
__builtin_ia32_tzcnt_u64
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_di
__builtin_ia32_pext_di
__builtin_ia32_bextri_u64
ULLiULLiIULLi
__builtin_ia32_lwpins64
UcULLiUiUi
__builtin_ia32_lwpval64
vULLiUiUi
__builtin_ia32_vcvtsd2si64
LLiV2dIi
__builtin_ia32_vcvtsd2usi64
ULLiV2dIi
__builtin_ia32_vcvtss2si64
LLiV4fIi
__builtin_ia32_vcvtss2usi64
ULLiV4fIi
__builtin_ia32_vcvttsd2si64
__builtin_ia32_vcvttsd2usi64
__builtin_ia32_vcvttss2si64
__builtin_ia32_vcvttss2usi64
__builtin_ia32_cvtsi2sd64
V2dV2dLLiIi
__builtin_ia32_cvtsi2ss64
V4fV4fLLiIi
__builtin_ia32_cvtusi2sd64
V2dV2dULLiIi
__builtin_ia32_cvtusi2ss64
V4fV4fULLiIi
__builtin_ia32_directstore_u64
__builtin_ia32_ptwrite64
__builtin_bitrev
__builtin_getid
__builtin_getps
__builtin_setps
__XS1B__
code_completion
comment
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf8_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
angle_string_literal
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
exclaim
exclaimequal
slash
slashequal
percent
percentequal
lessless
lessequal
lesslessequal
spaceship
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipepipe
pipeequal
question
colon
semi
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
caretcaret
annot_cxxscope
annot_typename
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_dump
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_fenv_access
annot_pragma_ms_pointers_to_members
annot_pragma_ms_vtordisp
annot_pragma_ms_pragma
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_pragma_loop_hint
annot_pragma_fp
annot_pragma_attribute
annot_module_include
annot_module_begin
annot_module_end
clang-1100.0.33.12
clang
Apple 
 version 11.0.0 
LLVM 11.0.0 
no-format
-Werror
-Werror=
-Wfatal-errors
-Wfatal-errors=
-Rno-
custom
arg1
never
Lookup map is in primary DeclContext 
Not a DeclContext
Dumping 
Printing 
unknown module format
LIBCLANG_TIMING
+++ %u translation units
--- %u translation units
Cache global code completions for 
LIBCLANG_DISABLE_PCH_VALIDATION
Precompiling preamble
Parsing 
Reparsing 
Code completion @ 
-%%%%%%%%
.pch
.pch-final
frontend
Clang front-end time report
Clang front-end timer
clang -cc1 version 11.0.0
 default target 
 warning
 and 
 error
 generated
 when compiling for host
 when compiling for 
reading_modules
Reading modules
preloading.
Preloading 
loading.
Loading 
Private
_Private
.map
cfg-implicit-dtors
cfg-temporary-dtors
cfg-lifetime
cfg-loopexit
cfg-rich-constructors
cfg-scopes
c++-template-inlining
c++-stdlib-inlining
c++-allocator-inlining
c++-shared_ptr-inlining
c++-temp-dtor-inlining
suppress-null-return-paths
avoid-suppressing-null-argument-paths
suppress-inlined-defensive-checks
c++-container-inlining
suppress-c++-stdlib
crosscheck-with-z3
report-in-main-source-file
stable-report-filename
serialize-stats
objc-inlining
prune-paths
cfg-conditional-static-initializers
faux-bodies
elide-constructors
inline-lambdas
widen-loops
unroll-loops
notes-as-events
aggressive-binary-operation-simplification
eagerly-assume
experimental-enable-naive-ctu-analysis
expand-macros
display-ctu-progress
ipa-always-inline-size
graph-trim-interval
min-cfg-size-treat-functions-as-large
max-symbol-complexity
max-times-inline-large
max-inlinable-size
max-nodes
region-store-small-struct-limit
ctu-dir
ctu-index-name
model-path
c++-inlining
exploration_strategy
modules.timestamp
.pcm
.timestamp
modules.idx
LLBUILD_TASK_ID
__inferred_module.map
module_private.map
module.map
module.private.modulemap
module.modulemap
cl_khr_select_fprounding_mode
cl_khr_gl_event
cl_khr_d3d10_sharing
cles_khr_int64
cl_khr_context_abort
cl_khr_d3d11_sharing
cl_khr_depth_images
cl_khr_dx9_media_sharing
cl_khr_image2d_from_buffer
cl_khr_initialize_memory
cl_khr_gl_depth_images
cl_khr_gl_msaa_sharing
cl_khr_spir
cl_khr_egl_event
cl_khr_egl_image
cl_khr_srgb_image_writes
cl_khr_terminate_context
cl_intel_subgroups
cl_intel_subgroups_short
cl_intel_device_side_avc_motion_estimation
msvc
msvc-fallback
-fsanitize=
-verify=
region
range
plist
text
a filename
a boolean
an unsigned
ARC migration
ObjC migration
cuda
objective-c
objective-c++
renderscript
cpp-output
assembler-with-cpp
<stdin>
libc++
iso9899:1990
iso9899:199409
gnu89
gnu90
iso9899:1999
gnu99
iso9899:2011
gnu11
iso9899:2017
iso9899:2018
gnu17
gnu18
c++98
c++03
gnu++98
gnu++03
c++11
gnu++11
c++14
gnu++14
c++17
gnu++17
c++2a
gnu++2a
cl1.0
cl1.1
cl1.2
cl2.0
CL1.2
-fgnu89-inline
unspecified
standalone
swift-5.0
swift-4.2
swift-4.1
-faddress-space-map-mangling=
-fms-memptr-rep=
-fdefault-calling-conv=
-fdefault-calling-conv
fast
pattern
Objective-C
Objective-C++
OpenCL
CUDA
RenderScript
LLVM IR
Accelerate
SVML
split
-fexperimental-new-pass-manager
posix
-x ir
marker
-fxray-instrumentation-bundle=
ieee
preserve-sign
positive-zero
-fdiagnostics-show-hotness
-fdiagnostics-hotness-threshold=
-fsanitize-recover=
-fsanitize-trap=
arguments
non-leaf
a_key
b_key
llvm
ropi
rwpi
ropi-rwpi
dynamic-no-pic
__CET__=1
__CET__=2
__CET__=3
-fsyntax-only
 #${}^!
digraph "dependencies" {
 [ shape="box", label="
header_
expanded from here
expanded from macro '
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
in file included from 
in module '
' imported from 
while building module '
STATISTICS FOR '
extern "C" {
#import "
#include "
.hpp
<module-includes>
PCH DECL: 
%0 was deserialized
Information for module file '
  Module format: 
# 1 "
#pragma clang module contents
"features" : [
{"address_sanitizer" : 
{"hwaddress_sanitizer" : 
{"xray_instrument" : 
{"undefined_behavior_sanitizer" : 
{"assume_nonnull" : 
{"attribute_analyzer_noreturn" : 
{"attribute_availability" : 
{"attribute_availability_with_message" : 
{"attribute_availability_app_extension" : 
{"attribute_availability_with_version_underscores" : 
{"attribute_availability_tvos" : 
{"attribute_availability_watchos" : 
{"attribute_availability_bridgeos" : 
{"attribute_availability_driverkit" : 
{"attribute_availability_swift" : 
{"attribute_availability_with_strict" : 
{"attribute_availability_with_replacement" : 
{"attribute_availability_in_templates" : 
{"attribute_cf_returns_not_retained" : 
{"attribute_cf_returns_retained" : 
{"attribute_cf_returns_on_parameters" : 
{"attribute_deprecated_with_message" : 
{"attribute_deprecated_with_replacement" : 
{"attribute_ext_vector_type" : 
{"attribute_ns_returns_not_retained" : 
{"attribute_ns_returns_retained" : 
{"attribute_ns_consumes_self" : 
{"attribute_ns_consumed" : 
{"attribute_cf_consumed" : 
{"attribute_objc_ivar_unused" : 
{"attribute_objc_method_family" : 
{"attribute_overloadable" : 
{"attribute_unavailable_with_message" : 
{"attribute_unused_on_fields" : 
{"attribute_diagnose_if_objc" : 
{"blocks" : 
{"c_thread_safety_attributes" : 
{"cxx_exceptions" : 
{"cxx_rtti" : 
{"enumerator_attributes" : 
{"generalized_swift_name" : 
{"nullability" : 
{"nullability_on_arrays" : 
{"memory_sanitizer" : 
{"thread_sanitizer" : 
{"dataflow_sanitizer" : 
{"efficiency_sanitizer" : 
{"ptrauth_intrinsics" : 
{"ptrauth_qualifier" : 
{"ptrauth_calls" : 
{"ptrauth_returns" : 
{"ptrauth_indirect_gotos" : 
{"stack_check" : 
{"scudo" : 
{"objc_arr" : 
{"objc_arc" : 
{"objc_arc_fields" : 
{"objc_arc_weak" : 
{"objc_default_synthesize_properties" : 
{"objc_fixed_enum" : 
{"objc_instancetype" : 
{"objc_kindof" : 
{"objc_modules" : 
{"objc_nonfragile_abi" : 
{"objc_property_explicit_atomic" : 
{"objc_protocol_qualifier_mangling" : 
{"objc_weak_class" : 
{"ownership_holds" : 
{"ownership_returns" : 
{"ownership_takes" : 
{"objc_bool" : 
{"objc_subscripting" : 
{"objc_array_literals" : 
{"objc_dictionary_literals" : 
{"objc_boxed_expressions" : 
{"objc_boxed_nsvalue_expressions" : 
{"objc_constant_literals" : 
{"arc_cf_code_audited" : 
{"objc_bridge_id" : 
{"objc_bridge_id_on_typedefs" : 
{"objc_generics" : 
{"objc_generics_variance" : 
{"objc_class_property" : 
{"c_alignas" : 
{"c_alignof" : 
{"c_atomic" : 
{"c_generic_selections" : 
{"c_static_assert" : 
{"c_thread_local" : 
{"cxx_access_control_sfinae" : 
{"cxx_alias_templates" : 
{"cxx_alignas" : 
{"cxx_alignof" : 
{"cxx_atomic" : 
{"cxx_attributes" : 
{"cxx_auto_type" : 
{"cxx_constexpr" : 
{"cxx_constexpr_string_builtins" : 
{"cxx_decltype" : 
{"cxx_decltype_incomplete_return_types" : 
{"cxx_default_function_template_args" : 
{"cxx_defaulted_functions" : 
{"cxx_delegating_constructors" : 
{"cxx_deleted_functions" : 
{"cxx_explicit_conversions" : 
{"cxx_generalized_initializers" : 
{"cxx_implicit_moves" : 
{"cxx_inheriting_constructors" : 
{"cxx_inline_namespaces" : 
{"cxx_lambdas" : 
{"cxx_local_type_template_args" : 
{"cxx_nonstatic_member_init" : 
{"cxx_noexcept" : 
{"cxx_nullptr" : 
{"cxx_override_control" : 
{"cxx_range_for" : 
{"cxx_raw_string_literals" : 
{"cxx_reference_qualified_functions" : 
{"cxx_rvalue_references" : 
{"cxx_strong_enums" : 
{"cxx_static_assert" : 
{"cxx_thread_local" : 
{"cxx_trailing_return" : 
{"cxx_unicode_literals" : 
{"cxx_unrestricted_unions" : 
{"cxx_user_literals" : 
{"cxx_variadic_templates" : 
{"cxx_aggregate_nsdmi" : 
{"cxx_binary_literals" : 
{"cxx_contextual_conversions" : 
{"cxx_decltype_auto" : 
{"cxx_generic_lambdas" : 
{"cxx_init_captures" : 
{"cxx_relaxed_constexpr" : 
{"cxx_return_type_deduction" : 
{"cxx_variable_templates" : 
{"has_nothrow_assign" : 
{"has_nothrow_copy" : 
{"has_nothrow_constructor" : 
{"has_trivial_assign" : 
{"has_trivial_copy" : 
{"has_trivial_constructor" : 
{"has_trivial_destructor" : 
{"has_virtual_destructor" : 
{"is_abstract" : 
{"is_base_of" : 
{"is_class" : 
{"is_constructible" : 
{"is_convertible_to" : 
{"is_empty" : 
{"is_enum" : 
{"is_final" : 
{"is_literal" : 
{"is_standard_layout" : 
{"is_pod" : 
{"is_polymorphic" : 
{"is_sealed" : 
{"is_trivial" : 
{"is_trivially_assignable" : 
{"is_trivially_constructible" : 
{"is_trivially_copyable" : 
{"is_union" : 
{"modules" : 
{"safe_stack" : 
{"shadow_call_stack" : 
{"tls" : 
{"underlying_type" : 
"extensions" : [
{"cxx_fixed_enum" : 
{"overloadable_unmarked" : 
{"pragma_clang_attribute_namespaces" : 
{"pragma_clang_attribute_external_declaration" : 
Generated by 
a different
 Clang: 
Module name: 
Module map file: 
Language options:
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++14
C++17
C++2a
Objective-C App Extension
trigraphs
'//' comments
bool, true, and false keywords
half keyword
wchar_t keyword
char8_t keyword
__declspec keyword
GNU extensions
GNU keywords
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
AltiVec-style vector initializers
System z vector extensions
exception handling
Objective-C exceptions
C++ exceptions
dwarf exception handling
setjmp-longjump exception handling
SEH .xdata exception handling
Assume extern C functions don't unwind
traditional CPP emulation
run-time type information
emit run-time type information data
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
GNU-style inline assembly
C++ coroutines TS
dllexported classes dllexport inline methods
C++17 relaxed matching of template template arguments
pointer authentication intrinsics
function pointer authentication
return pointer authentication
indirect gotos pointer authentication
software emulation of pointer authentication
'[[]]' attributes extension for all language standard modes
POSIX thread support
blocks extension to C
errno in math functions
modules extension to C
C++ Modules TS
require declaration of module uses
requiring declaration of module uses and all headers to be in modules
local submodule visibility
hash out diagnostic errors as part of the module hash
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
default maximum alignment for types
Controls if doubles should be aligned to 8 bytes (x86 only)
__PIC__ level
is pie
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
fast FP math optimizations, and __FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
Unsafe Floating Point Math
width of wchar_t
signed or unsigned wchar_t
member-pointer representation method
default calling convention
short enum types
OpenCL C version
OpenCL C++
OpenCL C++ version
Native half type support
Native half args and returns
half args and returns
OpenMP support and version of OpenMP (31, 40 or 45)
Use SIMD only OpenMP support.
Use TLS for threadprivates or runtime calls
Generate code only for OpenMP target device
Generate code for OpenMP pragmas in SIMT/SPMD mode
Force to use full runtime in all constructs when offloading to CUDA devices
C++ exceptions handling in the host code.
Number of SMs for CUDA devices.
Number of blocks per SM for CUDA devices.
compiling for CUDA device
allowing variadic functions in CUDA device code
treating unattributed constexpr functions as __host__ __device__
using approximate transcendental functions
generate relocatable device code
sized deallocation
aligned allocation
aligned allocation functions are unavailable
maximum alignment guaranteed by '::operator new(size_t)'
enable C++ Extensions for Concepts
no constant CoreFoundation strings
no constant Objective-C literals
no constant number literals
no constant array literals
no constant dictionary literals
hidden visibility for global operator new and delete declaration
check availability for target variant platform
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
FP contraction type
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Objective-C __weak in ARC and MRC files
Ignore ARC-style __weak instead of erroring
Subscripting support in legacy ObjectiveC runtime
Control-Flow Branch Protection enabled
OpenCL fake address space map
OpenCL address space map mangling mode
Include default header file for OpenCL
optional blocks runtime
Require member pointer base types to be complete at the point where the type's inheritance model would be determined under the Microsoft ABI
Objective-C Garbage Collection mode
value symbol visibility
type symbol visibility
stack protector mode
trivial automatic variable initialization
stack checking
controls whether to use strong linking for darwin stack checking (x86 only)
signed integer overflow handling
Microsoft Visual C/C++ Version
How many vtordisps to insert
Apple gcc-compatible #pragma pack handling
retain documentation comments from system headers in the AST
use external API notes
compilation involves pch
controls how aggressive is ASan field padding (0: none, 1:least aggressive, 2: more aggressive)
controls whether to do XRay instrumentation
controls whether to always emit intrinsic calls to __xray_customevent(...) builtin.
controls whether to always emit intrinsic calls to __xray_typedevent(...) builtin.
whether to emit all vtables
version of Clang that we should attempt to be ABI-compatible with
Default alignment for functions
fixed point types
unsigned fixed point types having one extra padding bit
Register C++ static destructors
Enable or disable the builtin matrix type
enable noescape optimized blocks
Module features:
Target options:
  Triple: 
  CPU: 
  ABI: 
Target features:
Diagnostic options:
IgnoreWarnings
NoRewriteMacros
Pedantic
PedanticErrors
ShowColumn
ShowLocation
AbsolutePath
ShowCarets
ShowFixits
ShowSourceRanges
ShowParseableFixits
ShowPresumedLoc
ShowOptionNames
ShowNoteIncludeStack
ShowCategories
ShowColors
ShowOverloads
VerifyDiagnostics
VerifyIgnoreUnexpected
ElideType
ShowTemplateTree
CLFallbackMode
ErrorLimit
MacroBacktraceLimit
TemplateBacktraceLimit
ConstexprBacktraceLimit
SpellCheckingLimit
SnippetLineLimit
TabStop
MessageLength
Diagnostic flags:
Header search options:
System root [-isysroot=]: '
Resource dir [ -resource-dir=]: '
Module Cache: '
Use builtin include directories [-nobuiltininc]
Use standard system include directories [-nostdinc]
Use standard C++ include directories [-nostdinc++]
Use libc++ (rather than libstdc++) [-stdlib=]
Preprocessor options:
Uses compiler/target-specific predefines [-undef]
Uses detailed preprocessing record (for indexing)
Predefined macros:
Input file: 
System
Overridden
ExplicitModule
Imports module '
Module file extension '
Begin
kind
event
orig
cppm
ignoring nonexistent directory "
/usr/include/c++/v1
/System/Library/Frameworks
/Library/Frameworks
/usr/include/c++/4.2.1
powerpc-apple-darwin10
/usr/include/c++/4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
/usr/lib/gcc
i686-pc-cygwin
4.7.3
4.5.3
4.3.4
4.3.2
/usr/include/c++/5.0
amd64
/usr/include/g++
/usr/gnu/include/c++/4.4.3
/backward
/include/c++
/include/c++/
/include/c++/backward
/usr/local/include
../../..
/boot/system/non-packaged/develop/headers
/boot/system/develop/headers/os
/boot/system/develop/headers/os/app
/boot/system/develop/headers/os/arch
/boot/system/develop/headers/os/device
/boot/system/develop/headers/os/drivers
/boot/system/develop/headers/os/game
/boot/system/develop/headers/os/interface
/boot/system/develop/headers/os/kernel
/boot/system/develop/headers/os/locale
/boot/system/develop/headers/os/mail
/boot/system/develop/headers/os/media
/boot/system/develop/headers/os/midi
/boot/system/develop/headers/os/midi2
/boot/system/develop/headers/os/net
/boot/system/develop/headers/os/opengl
/boot/system/develop/headers/os/storage
/boot/system/develop/headers/os/support
/boot/system/develop/headers/os/translation
/boot/system/develop/headers/os/add-ons/graphics
/boot/system/develop/headers/os/add-ons/input_server
/boot/system/develop/headers/os/add-ons/mail_daemon
/boot/system/develop/headers/os/add-ons/registrar
/boot/system/develop/headers/os/add-ons/screen_saver
/boot/system/develop/headers/os/add-ons/tracker
/boot/system/develop/headers/os/be_apps/Deskbar
/boot/system/develop/headers/os/be_apps/NetPositive
/boot/system/develop/headers/os/be_apps/Tracker
/boot/system/develop/headers/3rdparty
/boot/system/develop/headers/bsd
/boot/system/develop/headers/glibc
/boot/system/develop/headers/posix
/boot/system/develop/headers
/usr/include/w32api
SCE_ORBIS_SDK_DIR
/target/include
/target/include_common
/System/DriverKit/usr/include
/include
/XcodeDefault.xctoolchain/usr/include
/usr/include
#include "..." search starts here:
#include <...> search starts here:
 (framework directory)
 (headermap)
End of search list.
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
# 1 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"11.0.0 
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GNUC__
__GXX_ABI_VERSION
1002
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__OPENCL_MEMORY_SCOPE_WORK_ITEM
__OPENCL_MEMORY_SCOPE_WORK_GROUP
__OPENCL_MEMORY_SCOPE_DEVICE
__OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES
__OPENCL_MEMORY_SCOPE_SUB_GROUP
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
"4.2.1 Compatible 
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJC_GNUSTEP_RUNTIME_ABI__
__OBJFW_RUNTIME_ABI__
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
void)__attribute__((ibaction)
IBInspectable
IB_DESIGNABLE
__OBJC_BOOL_IS_BOOL
__CONSTANT_CFSTRINGS__
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__SEH__
__ARM_DWARF_EH__
__DEPRECATED
__GNUG__
__GXX_WEAK__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__BIG_ENDIAN__
_ILP32
__ILP32__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
__WCHAR_MAX__
__WINT_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__UINTMAX_MAX__
__PTRDIFF_MAX__
__INTPTR_MAX__
__UINTPTR_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__INTMAX
__INTMAX_C_SUFFIX__
__UINTMAX_TYPE__
__UINTMAX
__UINTMAX_C_SUFFIX__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__SIG_ATOMIC_MAX__
__CHAR16_TYPE__
__CHAR32_TYPE__
__UINTMAX_WIDTH__
__UINTPTR_TYPE__
__UINTPTR
__UINTPTR_WIDTH__
FLT16
LDBL
__POINTER_WIDTH__
__BIGGEST_ALIGNMENT__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__CLANG_ATOMIC_
__GCC_ATOMIC_
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__LDBL_DECIMAL_DIG__
__SSP__
__SSP_STRONG__
__SSP_ALL__
__clang_analyzer__
__FAST_RELAXED_MATH__
__attribute__((objc_gc(strong)))
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
__nonnull
__null_unspecified
__nullable
__APPLE_EMBEDDED_SIMULATOR__
_OPENMP
201307
201511
201107
__CLANG_CUDA_APPROX_TRANSCENDENTALS__
__IMAGE_SUPPORT__
__GLIBCXX_TYPE_INT_N_0
__GLIBCXX_BITSIZE_INT_N_0
__cpp_rtti
199711L
__cpp_exceptions
__cpp_unicode_characters
200704L
__cpp_raw_strings
200710L
__cpp_unicode_literals
__cpp_user_defined_literals
200809L
__cpp_lambdas
200907L
__cpp_constexpr
201603L
201304L
200704
__cpp_range_based_for
200907
__cpp_static_assert
201411L
200410
__cpp_decltype
200707L
__cpp_attributes
__cpp_rvalue_references
200610L
__cpp_variadic_templates
__cpp_initializer_lists
200806L
__cpp_delegating_constructors
200604L
__cpp_nsdmi
__cpp_inheriting_constructors
201511L
__cpp_ref_qualifiers
__cpp_alias_templates
__cpp_threadsafe_static_init
__cpp_binary_literals
__cpp_digit_separators
201309L
__cpp_init_captures
__cpp_generic_lambdas
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
__cpp_sized_deallocation
__cpp_hex_float
__cpp_inline_variables
201606L
__cpp_noexcept_function_type
201510L
__cpp_capture_star_this
__cpp_if_constexpr
__cpp_deduction_guides
__cpp_template_auto
__cpp_namespace_attributes
__cpp_enumerator_attributes
__cpp_nested_namespace_definitions
__cpp_variadic_using
201611L
__cpp_aggregate_bases
__cpp_structured_bindings
__cpp_nontype_template_args
__cpp_fold_expressions
__cpp_guaranteed_copy_elision
__cpp_nontype_template_parameter_auto
__cpp_aligned_new
__cpp_template_template_args
__cpp_char8_t
201811L
__cpp_experimental_concepts
__cpp_coroutines
ouxX
_FMT
5.9604644775390625e-8
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
9.765625e-4
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
6.103515625e-5
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
6.5504e+4
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
DECIMAL_DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
__INT
__UINT
_TYPE__
_C_SUFFIX__
_MAX__
__INT_LEAST
__UINT_LEAST
__INT_FAST
__UINT_FAST
BOOL_LOCK_FREE
CHAR_LOCK_FREE
CHAR8_T_LOCK_FREE
CHAR16_T_LOCK_FREE
CHAR32_T_LOCK_FREE
WCHAR_T_LOCK_FREE
SHORT_LOCK_FREE
INT_LOCK_FREE
LONG_LOCK_FREE
LLONG_LOCK_FREE
POINTER_LOCK_FREE
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
201710L
201112L
199901L
199409L
__cplusplus
201707L
201103L
__STDCPP_DEFAULT_NEW_ALIGNMENT__
__OBJC__
__OPENCL_CPP_VERSION__
__CL_CPP_VERSION_1_0__
__OPENCL_C_VERSION__
CL_VERSION_1_0
CL_VERSION_1_1
CL_VERSION_1_2
CL_VERSION_2_0
__ENDIAN_LITTLE__
__ASSEMBLER__
__CUDA__
__HIP__
__HIPCC__
__HIP_DEVICE_COMPILE__
#undef 
#__include_macros "
getLangStandardForKind() on unspecified kind
ISO C 1990
ISO C 1990 with amendment 1
ISO C 1990 with GNU extensions
ISO C 1999
ISO C 1999 with GNU extensions
ISO C 2011
ISO C 2011 with GNU extensions
ISO C 2017
ISO C 2017 with GNU extensions
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
ISO C++ 2014 with amendments
ISO C++ 2014 with amendments and GNU extensions
ISO C++ 2017 with amendments
ISO C++ 2017 with amendments and GNU extensions
Working draft for ISO C++ 2020
Working draft for ISO C++ 2020 with GNU extensions
OpenCL 1.0
OpenCL 1.1
OpenCL 1.2
OpenCL 2.0
OpenCL C++ 1.0
NVIDIA CUDA(tm)
*** Dumping AST Record Layout
struct 
union 
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
    <dict>
      <key>level</key>
      
      <key>filename</key>
      <key>line</key>
      <key>column</key>
      <key>message</key>
      <key>ID</key>
      <key>WarningOption</key>
    </dict>
<dict>
  <key>main-file</key>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
  </array>
</dict>
<string>
&amp;
&lt;
&gt;
&apos;
&quot;
</string>
fatal error
<integer>
</integer>
vfs.yaml
CINDEXTEST_PREAMBLE_FILE
preamble
build-preamble.error
/__clang_tmp/___clang_inmemory_preamble___
#pragma
#pragma GCC
#pragma clang
#pragma omp
__VA_ARGS__
#line
 3 4
 /* clang -E -dI */
#pragma clang module import 
 /* clang -E: implicit import for 
#ident 
#pragma clang __debug 
#pragma 
message("
warning "
error "
 diagnostic push
 diagnostic pop
 diagnostic 
#pragma warning(
#pragma warning(push
#pragma warning(pop)
#pragma clang assume_nonnull begin
#pragma clang assume_nonnull end
#pragma clang module begin 
#pragma clang module end /*
Meta
Diag
DiagInfo
SrcRange
CatName
DiagFlag
FileName
FixIt
clang.serialized_diags
Hello from 
Read extension block message: %s
(clang)
In file included from 
In included file:
In module '
While building module '
fix-it:"
  ...
     
 [-ferror-limit=]
 [-Werror
warn
string
regex
  File *
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
_OBJC_METACLASS_
_OBJC_CLASS_
OBJC_METACLASS_$_
OBJC_CLASS_$_
<p class="para-brief">
</p>
<p class="para-returns"><span class="word-returns">Returns</span> 
<dt class="param-name-index-vararg">
<dt class="param-name-index-
<dt class="param-name-index-invalid">
</dt>
<dd class="param-descr-index-vararg">
<dd class="param-descr-index-
<dd class="param-descr-index-invalid">
</dd>
&#39;
&#47;
<dt class="tparam-name-index-
<dt class="tparam-name-index-other">
<dt class="tparam-name-index-invalid">
<dd class="tparam-descr-index-
<dd class="tparam-descr-index-other">
<dd class="tparam-descr-index-invalid">
<pre>
</pre>
<dl>
</dl>
<div class="result-discussion">
</div>
</b>
<tt>
</tt>
<em>
</em>
<Para>
<Para kind="
</Para>
<Parameter><Name>
</Name>
<IsVarArg />
<Index>
</Index>
<Direction isExplicit="
in,out
</Direction><Discussion>
</Discussion></Parameter>
<Discussion>
<Verbatim xml:space="preserve" kind="code">
<Verbatim xml:space="preserve" kind="verbatim">
</Verbatim>
</Other>
<Other
</Function>
<Function
 templateKind="template"
 templateKind="specialization"
 isInstanceMethod="1"
 isClassMethod="1"
</Class>
<Class
 templateKind="partialSpecialization"
</Variable>
<Variable
</Namespace>
<Namespace
</Typedef>
<Typedef
</Enum>
<Enum
 file="
 line="
" column="
<Name>
<Name>&lt;anonymous&gt;</Name>
<USR>
</USR>
<Other><Name>unknown</Name>
<Headerfile>
</Headerfile>
<Declaration>
</Declaration>
<Abstract>
</Abstract>
<TemplateParameters>
</TemplateParameters>
<Parameters>
</Parameters>
<Exceptions>
</Exceptions>
<ResultDiscussion>
</ResultDiscussion>
<Deprecated/>
<Deprecated>
</Deprecated>
<Unavailable/>
<Unavailable>
</Unavailable>
<Availability
 distribution="
<IntroducedInVersion>
</IntroducedInVersion>
<DeprecatedInVersion>
</DeprecatedInVersion>
<RemovedAfterVersion>
</RemovedAfterVersion>
<DeprecationSummary>
</DeprecationSummary>
</Availability>
</Discussion>
xmldecl.xd
<rawHTML
 isMalformed="1"
>&lt;/
&gt;</rawHTML>
</rawHTML>
<![CDATA[
]]]]><![CDATA[>
<bold>
</bold>
<monospaced>
</monospaced>
<emphasized>
</emphasized>
units
records
failed creating index directory %0
failed writing record '%0': %1
failed writing unit data: %0
failed file status check: %0
could not access record '
failed to create directory '
failed to create temporary file: 
failed to write '
failed to rename '
' to '
REC_VERSION_BLOCK
REC_VERSION
REC_DECLS_BLOCK
REC_DECLINFO
REC_DECLOFFSETS_BLOCK
REC_DECLOFFSETS
REC_DECLOCCURRENCES_BLOCK
REC_DECLOCCURRENCE
XCTestCase
test
could not access path '
failed to determine current working directory: 
UNIT_VERSION_BLOCK
UNIT_VERSION
UNIT_INFO_BLOCK
UNIT_INFO
UNIT_DEPENDENCIES_BLOCK
UNIT_DEPENDENCY
UNIT_INCLUDES_BLOCK
UNIT_INCLUDE
UNIT_PATHS_BLOCK
UNIT_PATH
UNIT_PATH_BUFFER
UNIT_MODULES_BLOCK
UNIT_MODULE
UNIT_MODULE_BUFFER
objc(cs)
objc(cy)
(im)
(cm)
(cpy)
(py)
objc(pl)
@macro@
@CM@
objc(ext)
@NA@
@UUT@
@FI@
@FT@
@UUV@
#pragma once
*** HeaderSearch Stats:
%d files tracked.
  %d #import/#pragma once files.
  %d included exactly once.
  %d max times a file is included.
  %d #include/#include_next/#import.
    %d #includes skipped due to the multi-include optimization.
%d framework lookups.
%d subframework lookups.
.framework
Modules
<<<<
>>>>>>>
Allocation failed
MacroInfo 
 builtin
 disabled
 allow_redefinitions_without_warning
 warn_if_unused
 header_guard
    #define <macro>
DefMacroDirective
UndefMacroDirective
VisibilityMacroDirective
 from_pch
float.h
limits.h
stddef.h
stdint.h
tgmath.h
<global>
Frameworks
exclude
framework
header
textual
umbrella
contents
Darwin
size
system
.tbd
.api
.spi
excluded
IOKit
Allocation failed
boost
assert.h
errno.h
fenv.h
inttypes.h
locale.h
signal.h
time.h
uchar.h
wctype.h
cmath
cstdlib
list
functional
locale
future
initializer_list
mutex
stack
unordered_map
complex
unordered_set
iostream
ostream
utility
deque
istream
queue
iterator
random
forward_list
'defined'
 to 
MacroState 
 ambiguous
 overrides
 ModuleMacro 
 undef
 active
 overridden
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__has_cpp_attribute
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__identifier
__pragma
__FILE_NAME__
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_c_attribute
__has_declspec_attribute
__has_include
__has_include_next
__has_warning
__is_identifier
__is_target_arch
__is_target_vendor
__is_target_os
__is_target_environment
__has_target_variant
__is_target_variant_os
__is_target_variant_environment
__building_module
__MODULE__
??? ??? ?? ??:??:?? ????
"%s %2d %4d"
"%02d:%02d:%02d"
attribute_availability_with_message
attribute_availability_app_extension
attribute_availability_with_version_underscores
attribute_availability_with_strict
attribute_availability_with_replacement
attribute_availability_in_templates
attribute_cf_returns_not_retained
attribute_cf_returns_on_parameters
attribute_deprecated_with_message
attribute_deprecated_with_replacement
attribute_ns_returns_not_retained
attribute_unavailable_with_message
objc_default_synthesize_properties
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_reference_qualified_functions
modules
pragma_clang_attribute_namespaces
pragma_clang_attribute_external_declaration
'__has_warning'
unknown-unknown-
pragma hdrstop
pragma once
message
pragma message
pragma warning
pragma error
push
pragma diagnostic
#pragma clang __debug llvm_fatal_error
macro
captured
pragma clang __debug captured
begin
__VA_OPT__
GetExceptionInformation
GetExceptionCode
AbnormalTermination
 [StartOfLine]
 [LeadingSpace]
 [ExpandDisabled]
 [UnClean='
Loc=<
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
[[clang::fallthrough]]
[[fallthrough]]
PREFERRED-TYPE: 
COMPLETION: 
 (requires fix-it:
 to "
Pattern : 
OPENING_PAREN_LOC: 
OVERLOAD: 
unspecified
auto
short
long
long long
imaginary
signed
unsigned
void
char
__wchar_t
wchar_t
char8_t
char16_t
char32_t
__int128
half
float
double
_Accum
_Fract
_Float16
__float128
bool
_Bool
_Decimal32
_Decimal64
_Decimal128
enum
class
union
struct
__interface
type-name
typeof
__auto_type
(decltype)
decltype(auto)
__underlying_type
__unknown_anytype
_Atomic
image1d_t
image1d_array_t
image1d_buffer_t
image2d_t
image2d_array_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
image3d_t
(error)
inline
virtual
explicit
friend
__final
Allocation failed
func
destroy
xclude_from_explicit_instantiation
bjc_arc_weak_reference_unavailable
table
clang::consumable_set_state_on_read
clang::try_acquire_shared_capability
clang::objc_requires_property_definitions
clang::objc_protocol_requires_explicit_implementation
clang::os_returns_retained_on_non_zero
decl
kernel functions
functions
structs, variables, functions, and namespaces
non-static data members and global variables
functions and global variables
variables and typedefs
non-K&R-style functions
variables
functions and function pointers
Objective-C interfaces
inline functions
Objective-C methods and functions
named declarations
parameters
functions and variables
Objective-C methods, functions, and function pointers
structs, unions, classes, and typedefs
parameters, Objective-C methods, and functions
local variables
functions and classes
classes
functions, variables, classes, and Objective-C interfaces
functions, Objective-C methods, and Objective-C properties
functions and Objective-C methods
enums
variables, functions, and classes
typedefs
Objective-C methods, blocks, and non-K&R-style functions
Objective-C methods and non-K&R-style functions
Objective-C instance methods
structs, unions, and classes
parameters and implicit object parameters
functions, Objective-C methods, and blocks
variables, enums, typedefs, and non-static data members
Objective-C methods
functions, function pointers, Objective-C methods, and variables
functions, Objective-C methods, and global variables
functions, methods, and parameters
field in union
non-static member functions
functions, Objective-C methods, Objective-C properties, and parameters
Objective-C protocols
variables, functions, blocks, and Objective-C methods
Objective-C interfaces and Objective-C implementation declarations
Objective-C methods and Objective-C properties
Objective-C interfaces and Objective-C protocols
parameters and typedefs
global variables
non-static non-const member functions
functions and parameters
functions, global variables, Objective-C methods, and Objective-C properties
ExpectedType
thread-local variables
variables, non-static data members, types, enums, enumerators, labels, non-static data members, Objective-C methods, functions, and function pointers
variables with non-local storage, functions, and Objective-C methods
structs, unions, classes, and enums
Objective-C methods, enums, structs, unions, classes, functions, and function pointers
variables and functions
__int128_t
__uint128_t
type_info
atomic_int
atomic_uint
atomic_long
atomic_ulong
atomic_float
atomic_double
atomic_flag
atomic_intptr_t
atomic_uintptr_t
atomic_size_t
atomic_ptrdiff_t
cl_khr_int64_base_atomics cl_khr_int64_extended_atomics
__builtin_ms_va_list
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
NULL
'weak'
bool
stack empty
mac68k
pack
vtordisp
a prior #pragma section
data_seg
bss_seg
const_seg
.CRT$XCU
Allocation failed
, and 
<API Notes>
SwiftName API Note
vector element
property expression
container subscripting expression
    
structure pointer
'int (*)(const char *, ...)'
memccpy
v65,v66
v62,v65,v66
v60,v62,v65,v66
spsel
daifset
daifclr
os_log
c_str
std::abs
sizeof(
) - 
strlen(
) - 1
'kernel_enqueue_flags_t' (i.e. uint)
ndrange_t
'ndrange_t'
c_str()
'std::strong_ordering::equal'
'std::strong_ordering::less'
'std::strong_ordering::greater'
move
statements
condition
expression
sender
instancetype
NS_DESIGNATED_INITIALIZER
args
number
filename
ApplicationExtension
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator<=>
operator&&
operator||
operator++
operator--
operator,
operator->*
operator->
operatorco_await
operator new
operator delete
operator new[]
operator delete[]
operator()
operator[]
(...)
(void)
nonnull 
nullable 
null_unspecified 
, nil
, NULL
, (void*)0
declarations
string-literal
declaration
qualifier
init-statement
init-expression
inc-expression
label
Objective-C type
CF type
std::type_info
expression-or-type
expressions
std::nullptr_t
sizeof...
parameter-pack
@dynamic
@synthesize
@required
@optional
@class
@interface
@protocol
@implementation
@compatibility_alias
@import
@private
@protected
@public
@package
@catch
parameter
@synchronized
char[]
const char[]
@encode
type-name
Protocol *
protocol-name
@selector
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
allocWithZone
struct <anonymous>
__interface <anonymous>
class <anonymous>
union <anonymous>
enum <anonymous>
NSSet
countOf
objectIn
AtIndex
AtIndexes
NSIndexSet *
indexes
object-type
buffer
range:
NSRange
inRange
insertObject:
object
insert
atIndexes
atIndexes:
removeObjectFrom
remove
replaceObjectIn
withObject:
replace
with
NSEnumerator
enumeratorOf
NSEnumerator *
memberOf
Object
NSSet *
objects
intersect
keyPathsForValuesAffecting
NSSet<NSString *> *
automaticallyNotifiesObserversOf
.inc
__promise
initial_suspend
final_suspend
await_transform
yield_value
return_value
return_void
get_return_object_on_allocation_failure
unhandled_exception
get_return_object
__coro_gro
coroutine_traits
std::experimental::coroutine_traits
promise_type
await_ready
await_suspend
await_resume
from_address
coroutine_handle
std::experimental::coroutine_handle
hipConfigureCall
cudaConfigureCall
'ns_returns_retained'
FILE
main
global or constant
  int 
bad_alloc
enum 
__interface 
ucontext.h
intptr_t
uintptr_t
fpmath=
tune=
arch=
'minsize'
'dllimport'
pointer
'interrupt'
'signal'
<no message provided>
a CFString
an NSString
a string type
gcc_tdiag
__CFString
NSMutableString
string type
__declspec(thread)
role
kern_return_t
load
@available
, *)) {
} else {
// Fallback on earlier versions
iOSApplicationExtension
macOSApplicationExtension
tvOSApplicationExtension
watchOSApplicationExtension
macCatalystApplicationExtension
API_AVAILABLE
API_AVAILABLE(
override
sealed
final
const &
 const &
experimental
std::
gets
auto &
constexpr auto 
'const char *'
tuple_size
tuple_element
forwardInvocation
NSProxy
macOS 10.11
iOS 9
swap
priority_queue
throw()
throw(
(void*) 0
cl_khr_fp16
object_getClass
.c_str()
this->
static_cast<void>(
(void)(
object_setClass
(vector of 
' values)
isEqual
00000000-0000-0000-0000-000000000000
_GUID
'size_t'
default new
default delete
even
NSConstantString
valueWithBytes
objCType
bytes
integral
keys
respondsToSelector
CFBridgingRelease
CFBridgingRelease 
__bridge_transfer 
CFBridgingRetain
__bridge 
CFBridgingRetain 
__bridge_retained 
 = {}
L'\0'
u'\0'
U'\0'
Filter Mode
Addressing Mode
multimap
multiset
static_cast<
'this'
lookup results for 
        
__make_integer_seq
__type_pack_element
retain (or strong)
nonatomic, 
__attribute__((objc_method_family(none)))
.global_tid.
.bound_tid.
.part_id.
.privates.
.copy_fn.
.task_t.
.lb.
.ub.
.st.
.liter.
.reductions.
.previous.lb.
.previous.ub.
'map' or 'use_device_ptr'
'map'
.firstprivate.temp
.lastprivate.src
.lastprivate.dst
.linear.start
.linear.step
.copyin.src
.copyin.dst
threadprivate or private in the enclosing context
.copyprivate.src
.copyprivate.dst
'source' or 'sink'
omp_in
omp_out
omp_priv
omp_orig
.devptr.temp
 or 
.omp.lb
.omp.ub
.omp.is_last
.omp.stride
.omp.comb.lb
.omp.comb.ub
.omp.iv
.capture_expr.
.reduction.lhs
.task_red.
'enable_if'
objectForKeyedSubscript
objectAtIndexedSubscript
UNREFERENCED_PARAMETER
countByEnumeratingWithState
std::move(
literal
'__try'
'try'
__context
default captured statement
Objective-C @finally statement
OpenMP region
__MSASMLABEL_.${:uid}__
[with 
Allocation failed
cannot instantiate %0 yet
matrix
NSError
'address_space'
type name
Allocation failed
autoreleasing
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
'static'
type qualifier
va_list
Expected lexical block
Expected visible lookup table block
malformed block record in AST file
malformed source manager block record in AST file
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
could not find file '
' referenced by AST file '
error at end of module block in AST file
malformed preprocessor detail record in AST file
malformed comments block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
ran out of source locations
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate MACRO_OFFSET record in AST file
invalid pragma optimize record
invalid pragma ms_struct record
invalid cuda pragma options record
invalid pragma pack record
' referenced by AST file
invalid record at top-level of AST file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
malformed submodule block record in AST file
submodule metadata record should be at beginning of block
malformed module definition
too many submodules
mismatched umbrella headers in submodule
mismatched umbrella directories in submodule
no preprocessing record
Incorrect encoding of extended qualifier type
Incorrect encoding of complex type
Incorrect encoding of pointer type
Incorrect encoding of decayed type
Decayed type does not decay
Incorrect encoding of adjusted type
Incorrect encoding of block pointer type
Incorrect encoding of lvalue reference type
Incorrect encoding of rvalue reference type
Incorrect encoding of member pointer type
incorrect encoding of vector type in AST file
incorrect encoding of extended vector type in AST file
incorrect encoding of matrix type in AST file
incorrect encoding of no-proto function type
incorrect encoding of typedef type
incorrect encoding of typeof(type) in AST file
incorrect encoding of record type
incorrect encoding of enum type
incorrect encoding of attributed type
incorrect encoding of paren type
incorrect encoding of pack expansion type
Incorrect encoding of atomic type
Incorrect encoding of pipe type
malformed AST file: missing C++ ctor initializers
malformed AST file: missing C++ base specifiers
declaration ID out-of-range for AST file
Corrupted AST file
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no identifier table in AST file
no macro table in AST file
submodule ID out of range in AST file
selector ID out of range in AST file
module features
target Objective-C runtime
block command names
target ABI
target CPU
-Wsystem-headers
-Weverything -Werror
-pedantic-errors
zlib is not available
could not decompress embedded file contents: 
AST record has invalid code
Timestamp file
attempt to read a C++ base-specifier record as a declaration
attempt to read a C++ ctor initializer record as a declaration
MODULE_DIRECTORY
MODULE_MAP_FILE
IMPORTS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
OPTIONS_BLOCK
LANGUAGE_OPTIONS
TARGET_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
MODULAR_CODEGEN_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
UNUSED_FILESCOPED_DECLS
PPD_ENTITIES_OFFSETS
VTABLE_USES
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
OPENCL_EXTENSION_TYPES
OPENCL_EXTENSION_DECLS
DELEGATING_CTORS
KNOWN_NAMESPACES
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
OBJC_CATEGORIES
MACRO_OFFSET
INTERESTING_IDENTIFIERS
UNDEFINED_BUT_USED
LATE_PARSED_TEMPLATE
OPTIMIZE_PRAGMA_OPTIONS
MSSTRUCT_PRAGMA_OPTIONS
POINTERS_TO_MEMBERS_PRAGMA_OPTIONS
UNUSED_LOCAL_TYPEDEF_NAME_CANDIDATES
DELETE_EXPRS_TO_ANALYZE
CUDA_PRAGMA_FORCE_HOST_DEVICE_DEPTH
PP_CONDITIONAL_STACK
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_BUFFER_BLOB_COMPRESSED
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_DIRECTIVE_HISTORY
PP_MACRO_FUNCTION_LIKE
PP_MACRO_OBJECT_LIKE
PP_MODULE_MACRO
PP_TOKEN
SUBMODULE_BLOCK
SUBMODULE_METADATA
SUBMODULE_DEFINITION
SUBMODULE_UMBRELLA_HEADER
SUBMODULE_HEADER
SUBMODULE_TOPHEADER
SUBMODULE_UMBRELLA_DIR
SUBMODULE_IMPORTS
SUBMODULE_EXPORTS
SUBMODULE_REQUIRES
SUBMODULE_EXCLUDED_HEADER
SUBMODULE_LINK_LIBRARY
SUBMODULE_CONFIG_MACRO
SUBMODULE_CONFLICT
SUBMODULE_PRIVATE_HEADER
SUBMODULE_TEXTUAL_HEADER
SUBMODULE_PRIVATE_TEXTUAL_HEADER
SUBMODULE_INITIALIZERS
SUBMODULE_EXPORT_AS
COMMENTS_BLOCK
COMMENTS_RAW_COMMENT
COMMENTS_DECL_TO_COMMENT
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_NO_PROTO
TYPE_FUNCTION_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_OBJC_OBJECT
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_AUTO
TYPE_UNARY_TRANSFORM
TYPE_ATOMIC
TYPE_DECAYED
TYPE_ADJUSTED
TYPE_OBJC_TYPE_PARAM
LOCAL_REDECLARATIONS
DECL_TYPEDEF
DECL_TYPEALIAS
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_INHERITED_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_TYPE_ALIAS_TEMPLATE
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_CXX_CTOR_INITIALIZERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
DECL_EXPANDED_TEMPLATE_TEMPLATE_PARM_PACK
DECL_CLASS_SCOPE_FUNCTION_SPECIALIZATION
DECL_IMPORT
DECL_OMP_THREADPRIVATE
DECL_EMPTY
DECL_OBJC_TYPE_PARAM
DECL_OMP_CAPTUREDEXPR
DECL_PRAGMA_COMMENT
DECL_PRAGMA_DETECT_MISMATCH
DECL_OMP_DECLARE_REDUCTION
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
EXTENSION_BLOCK
EXTENSION_METADATA
UNHASHED_CONTROL_BLOCK
SIGNATURE
DIAGNOSTIC_OPTIONS
HEADER_SEARCH_PATHS
FILE_SYSTEM_OPTIONS
DIAG_PRAGMA_MAPPINGS
STMT_STOP
STMT_NULL_PTR
STMT_REF_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_PAREN_LIST
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_DESIGNATED_INIT_UPDATE
EXPR_IMPLICIT_VALUE_INIT
EXPR_NO_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
STMT_CXX_CATCH
STMT_CXX_TRY
STMT_CXX_FOR_RANGE
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_MEMBER_CALL
EXPR_CXX_CONSTRUCT
EXPR_CXX_TEMPORARY_OBJECT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_DEFAULT_INIT
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_EXPRESSION_TRAIT
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_BINARY_CONDITIONAL_OPERATOR
EXPR_TYPE_TRAIT
EXPR_ARRAY_TYPE_TRAIT
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_FUNCTION_PARM_PACK
EXPR_MATERIALIZE_TEMPORARY
EXPR_CUDA_KERNEL_CALL
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_LAMBDA
serializing
unexpected declaration kind '
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
GLOBAL_INDEX_BLOCK
INDEX_METADATA
MODULE
IDENTIFIER_INDEX
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
module file out of date
module file not found
signature mismatch
could not read module signature
-fcolor-diagnostics
Error while opening fixed database: 
clang-tool
fixed-compilation-database
Reads plain-text flags file
placeholder.cpp
warning: no compile jobs found
-no-integrated-as
compile_flags.txt
Cannot resolve relative paths
Path is ambiguous
/std:
-std=
json-compilation-database
Reads JSON formatted compilation databases
Error while opening JSON database: 
Error while parsing YAML.
Expected array.
Expected object.
Expected strings as key.
Expected value.
Expected sequence as value.
Expected string as value.
directory
Only strings are allowed in 'arguments'.
file
output
Unknown key: "
Missing key: "file".
Missing key: "command" or "arguments".
Missing key: "directory".
compile_commands.json
clang Invocation:
Skipping 
. Error while getting an absolute path: 
Could not get working directory: 
. Compile command not found.
Cannot chdir into "
clang_tool
Error while processing 
Error when trying to restore working dir: 
-resource-dir
-resource-dir=
the selected expression is not in a function
the selected expression is too simple
property setter can't be extracted
superObject
extracted
return 
) copy]
return 
[self 
extractedExpr
<<unsupported declaration>>;
&object
object->
super.self
no appropriate insertion location found
duplicate
The switch doesn't operate on an enum
The enum type is incomplete
All enum cases are already covered
The class has no abstract bases
The class has no missing abstract class methods
  <#code#>
Class extension without suitable @implementation
All of the @required methods are there
if's body contains a 'break'/'default'/'case' statement
unsupported conditional expression
break;
break;
case 
couldn't find the location of ')'
templates are unsupported
the target class is not defined in the continuation AST unit
using namespace 
  <#code#>;
the target @interface is not implemented in the continuation AST unit
  <#code#>;
ast.producer.query
decl.query
file.for.impl.of.decl
decl.predicate
not.decl.predicate
Failed to parse query results
Mismatch in query results size
predicateResults
filenameResult
intValues
NSLocalizedString(
, @"")
Rename
Extract Function
Extract Method
Extract Expression
Convert to Switch
Add Missing Switch Cases
Add Missing Protocol Requirements
Wrap in NSLocalizedString
Extract Repeated Expression
Add Missing Abstract Class Overrides
Generate Missing Function Definitions
Refactoring operation failed: 
Failed to parse the option set
Unknown refactoring option 
nestedNameSpecifierLoc
-Eonly
-dependency-file
/tmp/clang-scan-deps.d
deps
/dev/null
-Wno-error
clang compilation errors:
shards
mem-used
stats
num-cacheable
opens
num-locally-cached
global-cache
Could not find module summary
Error loading index file '
empty
backend data layout '%0' does not match expected target description '%1'
llvm.embedded.module
llvm.cmdline
llvm.compiler.used
llvm.metadata
Error loading imported file '
-debug-pass
-limit-float-precision
Error setting up ThinLTO save-temps: 
soft
hard
Error running ThinLTO backend: 
codegen
Code Generation Time
ThinLTO
default_%m.profraw
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AAManager]
DesiredTypeName = 
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TargetLibraryAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GCOVProfilerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AlwaysInlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BoundsCheckingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor<llvm::BoundsCheckingPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NameAnonGlobalPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ThinLTOBitcodeWriterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BitcodeWriterPass]
PrintModulePass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Module]
__LLVM,__bitcode
.llvmbc
__LLVM,__cmdline
.llvmcmd
.atomictmp
cmpxchg.bool
__atomic_fetch_umin
__atomic_fetch_umax
acquire
acqrel
seqcst
atomic.continue
atomic_bitfield_base
atomic-temp
atomic.scope.continue
cmpxchg.strong
cmxchg.weak
cmpxchg.continue
monotonic_fail
acquire_fail
seqcst_fail
cmpxchg.store_expected
opencl_workgroup
opencl_device
opencl_allsvmdevices
opencl_subgroup
atomic-load
atomic_cont
atomic_exit
block.isa
block.flags
block.reserved
block.size
block.align
block.invoke
block.descriptor
block.captured-this.addr
block.captured
block.capture.addr
byref.capture
block.captured_block
struct.__block_descriptor
struct.__opencl_block_literal_generic
struct.__block_literal_generic
block.literal
byref.addr
.addr
.block_descriptor
block.addr
block.captured-this
block.captured-const
block.source
block.dest
blockcopy.src
forwarding
struct.__block_byref_
byref.isa
byref.forwarding
 Inline flag for BYREF variable layout (%d):
 BLOCK_BYREF_HAS_COPY_DISPOSE
 BLOCK_BYREF_LAYOUT_EXTENDED
 BLOCK_BYREF_LAYOUT_STRONG
 BLOCK_BYREF_LAYOUT_WEAK
 BLOCK_BYREF_LAYOUT_UNRETAINED
 BLOCK_BYREF_LAYOUT_NON_OBJECT
byref.flags
byref.size
byref.copyHelper
byref.disposeHelper
byref.layout
_NSConcreteGlobalBlock
_NSConcreteStackBlock
__block_descriptor_tmp
__block_literal_global
.block_isa_init
entry
.block_isa_init_ptr
.CRT$XCLa
__copy_helper_block_
__destroy_helper_block_
__Block_byref_object_copy_
dest-object
src-object
__Block_byref_object_dispose_
bitscan_end
bitscan_result
bitscan_not_zero
__fastfail call for this architecture
int $$0x29
{cx}
udf #251
{r0}
__os_log_helper
summary
numArgs
argDescriptor
argSize
argData
argDataCast
abscond
isneg
cast
iszero
expval
unreachable.cont
cmpinf
isinf
iseq
isnormal
fpclassify_end
fpclassify_result
fpclassify_not_zero
fpclassify_not_nan
fpclassify_not_inf
wmemcmp.gt
wmemcmp.lt
wmemcmp.next
wmemcmp.exit
builtin_eh_return.cont
extend.cast
extend.sext
extend.zext
longjmp.cont
tobool
was_set
non-UTF16 __annotation argument
__read_pipe_2
__write_pipe_2
__read_pipe_4
__write_pipe_4
__reserve_read_pipe
__reserve_write_pipe
__work_group_reserve_read_pipe
__work_group_reserve_write_pipe
__sub_group_reserve_read_pipe
__sub_group_reserve_write_pipe
__commit_read_pipe
__commit_write_pipe
__work_group_commit_read_pipe
__work_group_commit_write_pipe
__sub_group_commit_read_pipe
__sub_group_commit_write_pipe
__get_pipe_num_packets
__get_pipe_max_packets
__enqueue_kernel_basic
__enqueue_kernel_varargs
__enqueue_kernel_basic_events
__enqueue_kernel_events_varargs
__get_kernel_work_group_size_impl
__get_kernel_preferred_work_group_size_multiple_impl
__get_kernel_max_sub_group_size_for_ndrange_impl
__get_kernel_sub_group_count_for_ndrange_impl
ap.val
builtin function
lane
vabs
vaddhn
vceqz
vcgez
vclez
vcgtz
vcltz
vcvt
vcvt_n
vext
vld1
vld1xN
vmovl
vmovn
vmull
vpaddl
vqdmlal
vqshl_n
vqshlu_n
vrshr_n
vshl_n
vshll_n
vshrn_n
vshr_n
vsubhn
vtrn
vtst
vuzp
vzip
vdot
vfmlal_low
vfmlsl_low
vfmlal_high
vfmlsl_high
.inst.n 0x
.inst 0x
rbit
ldrexd
ldrex
strexd
strex
vget_lane
vrndn
vset_lane
vsha1h
vcvtr
vld1q_lane
vld1_lane
vqrshrn_n
vqrshrun_n
vqshrn_n
vqshrun_n
vrecpe
vrshrn_n
vrsra_n
vsli_n
vsra_n
vtbl1
vtbl2
vtbl3
vtbl4
vtbx1
vtbx2
vtbx3
vtbx4
ldxp
ldxr
stxp
stxr
fcvt
facg
fcvth_n
sext
v2i64
lane0
lane1
vpaddd
v2f64
v2f32
vceqzd
vcmpd
vceqd
vtstd
vgetq_lane
vdups_lane
vdupd_lane
vaddh
vsubh
vmulh
vdivh
vaddd
vsubd
vqdmlXl
shld_n
shrd_n
vbsl
fmla
extract
vmax
vmin
vabd
vpadal
vpmin
vpmax
vminnm
vmaxnm
vrecps
vrnda
vrndi
vrndm
vrndp
vrndx
vrndz
vcvta
vcvtm
vcvtn
vcvtp
vmulx
vnegd
vnegh
vpmaxnm
vpminnm
vsqrt
vrbit
vaddv
vmaxv
vminv
vmaxnmv
vminnmv
vaddlv
vsri_n
vld2
vld3
vld4
vld2_lane
vld3_lane
vld4_lane
vsqadd
vuqadd
__cpu_model
__cpu_features2
__cpu_indicator_init
stmxcsr
widen
blend
pshuflw
pshufhw
permil
shufp
perm
palignr
valign
shuf
vperm
pslldq
psrldq
kshiftl
kshiftr
nontemporal
pswapd
int $$0x2c
tabort
%hhd
%hhu
%lld
%llu
ptrint
offsetcast
offsetptr
maskedptr
maskcond
op.sext
op.zext
bittest.byteidx
bittest.byteaddr
bittest.mask
bittest.byte
bittest.shr
bittest.res
lock 
 $2, ($1)
setc ${0:b}
_setjmp3
block_sizes
vabd_v
vabdq_v
vabs_v
vabsq_v
vaddhn_v
vaesdq_v
vaeseq_v
vaesimcq_v
vaesmcq_v
vbsl_v
vbslq_v
vcage_v
vcageq_v
vcagt_v
vcagtq_v
vcale_v
vcaleq_v
vcalt_v
vcaltq_v
vceqz_v
vceqzq_v
vcgez_v
vcgezq_v
vcgtz_v
vcgtzq_v
vclez_v
vclezq_v
vcls_v
vclsq_v
vcltz_v
vcltzq_v
vclz_v
vclzq_v
vcnt_v
vcntq_v
vcvt_f16_f32
vcvt_f16_v
vcvt_f32_f16
vcvt_f32_v
vcvt_n_f16_v
vcvt_n_f32_v
vcvt_n_s16_v
vcvt_n_s32_v
vcvt_n_s64_v
vcvt_n_u16_v
vcvt_n_u32_v
vcvt_n_u64_v
vcvt_s16_v
vcvt_s32_v
vcvt_s64_v
vcvt_u16_v
vcvt_u32_v
vcvt_u64_v
vcvta_s16_v
vcvta_s32_v
vcvta_s64_v
vcvta_u16_v
vcvta_u32_v
vcvta_u64_v
vcvtaq_s16_v
vcvtaq_s32_v
vcvtaq_s64_v
vcvtaq_u16_v
vcvtaq_u32_v
vcvtaq_u64_v
vcvtm_s16_v
vcvtm_s32_v
vcvtm_s64_v
vcvtm_u16_v
vcvtm_u32_v
vcvtm_u64_v
vcvtmq_s16_v
vcvtmq_s32_v
vcvtmq_s64_v
vcvtmq_u16_v
vcvtmq_u32_v
vcvtmq_u64_v
vcvtn_s16_v
vcvtn_s32_v
vcvtn_s64_v
vcvtn_u16_v
vcvtn_u32_v
vcvtn_u64_v
vcvtnq_s16_v
vcvtnq_s32_v
vcvtnq_s64_v
vcvtnq_u16_v
vcvtnq_u32_v
vcvtnq_u64_v
vcvtp_s16_v
vcvtp_s32_v
vcvtp_s64_v
vcvtp_u16_v
vcvtp_u32_v
vcvtp_u64_v
vcvtpq_s16_v
vcvtpq_s32_v
vcvtpq_s64_v
vcvtpq_u16_v
vcvtpq_u32_v
vcvtpq_u64_v
vcvtq_f16_v
vcvtq_f32_v
vcvtq_n_f16_v
vcvtq_n_f32_v
vcvtq_n_s16_v
vcvtq_n_s32_v
vcvtq_n_s64_v
vcvtq_n_u16_v
vcvtq_n_u32_v
vcvtq_n_u64_v
vcvtq_s16_v
vcvtq_s32_v
vcvtq_s64_v
vcvtq_u16_v
vcvtq_u32_v
vcvtq_u64_v
vdot_v
vdotq_v
vext_v
vextq_v
vfma_v
vfmaq_v
vhadd_v
vhaddq_v
vhsub_v
vhsubq_v
vld1_dup_v
vld1_v
vld1_x2_v
vld1_x3_v
vld1_x4_v
vld1q_dup_v
vld1q_v
vld1q_x2_v
vld1q_x3_v
vld1q_x4_v
vld2_dup_v
vld2_lane_v
vld2_v
vld2q_dup_v
vld2q_lane_v
vld2q_v
vld3_dup_v
vld3_lane_v
vld3_v
vld3q_dup_v
vld3q_lane_v
vld3q_v
vld4_dup_v
vld4_lane_v
vld4_v
vld4q_dup_v
vld4q_lane_v
vld4q_v
vmax_v
vmaxnm_v
vmaxnmq_v
vmaxq_v
vmin_v
vminnm_v
vminnmq_v
vminq_v
vmovl_v
vmovn_v
vmul_v
vmull_v
vmulq_v
vpadal_v
vpadalq_v
vpadd_v
vpaddl_v
vpaddlq_v
vpaddq_v
vpmax_v
vpmin_v
vqabs_v
vqabsq_v
vqadd_v
vqaddq_v
vqdmlal_v
vqdmlsl_v
vqdmulh_v
vqdmulhq_v
vqdmull_v
vqmovn_v
vqmovun_v
vqneg_v
vqnegq_v
vqrdmulh_v
vqrdmulhq_v
vqrshl_v
vqrshlq_v
vqshl_n_v
vqshl_v
vqshlq_n_v
vqshlq_v
vqshlu_n_v
vqshluq_n_v
vqsub_v
vqsubq_v
vraddhn_v
vrecpe_v
vrecpeq_v
vrecps_v
vrecpsq_v
vrhadd_v
vrhaddq_v
vrnd_v
vrnda_v
vrndaq_v
vrndi_v
vrndiq_v
vrndm_v
vrndmq_v
vrndn_v
vrndnq_v
vrndp_v
vrndpq_v
vrndq_v
vrndx_v
vrndxq_v
vrshl_v
vrshlq_v
vrshr_n_v
vrshrq_n_v
vrsqrte_v
vrsqrteq_v
vrsqrts_v
vrsqrtsq_v
vrsubhn_v
vsha1su0q_v
vsha1su1q_v
vsha256h2q_v
vsha256hq_v
vsha256su0q_v
vsha256su1q_v
vshl_n_v
vshl_v
vshll_n_v
vshlq_n_v
vshlq_v
vshr_n_v
vshrn_n_v
vshrq_n_v
vst1_v
vst1_x2_v
vst1_x3_v
vst1_x4_v
vst1q_v
vst1q_x2_v
vst1q_x3_v
vst1q_x4_v
vst2_lane_v
vst2_v
vst2q_lane_v
vst2q_v
vst3_lane_v
vst3_v
vst3q_lane_v
vst3q_v
vst4_lane_v
vst4_v
vst4q_lane_v
vst4q_v
vsubhn_v
vtrn_v
vtrnq_v
vtst_v
vtstq_v
vuzp_v
vuzpq_v
vzip_v
vzipq_v
vabdd_f64
vabds_f32
vabsd_s64
vaddlv_s32
vaddlv_u32
vaddlvq_s32
vaddlvq_u32
vaddv_f32
vaddv_s32
vaddv_u32
vaddvq_f32
vaddvq_f64
vaddvq_s32
vaddvq_s64
vaddvq_u32
vaddvq_u64
vcaged_f64
vcages_f32
vcagtd_f64
vcagts_f32
vcaled_f64
vcales_f32
vcaltd_f64
vcalts_f32
vcvtad_s64_f64
vcvtad_u64_f64
vcvtas_s32_f32
vcvtas_u32_f32
vcvtd_n_f64_s64
vcvtd_n_f64_u64
vcvtd_n_s64_f64
vcvtd_n_u64_f64
vcvtmd_s64_f64
vcvtmd_u64_f64
vcvtms_s32_f32
vcvtms_u32_f32
vcvtnd_s64_f64
vcvtnd_u64_f64
vcvtns_s32_f32
vcvtns_u32_f32
vcvtpd_s64_f64
vcvtpd_u64_f64
vcvtps_s32_f32
vcvtps_u32_f32
vcvts_n_f32_s32
vcvts_n_f32_u32
vcvts_n_s32_f32
vcvts_n_u32_f32
vcvtxd_f32_f64
vmaxnmv_f32
vmaxnmvq_f32
vmaxnmvq_f64
vmaxv_f32
vmaxv_s32
vmaxv_u32
vmaxvq_f32
vmaxvq_f64
vmaxvq_s32
vmaxvq_u32
vminnmv_f32
vminnmvq_f32
vminnmvq_f64
vminv_f32
vminv_s32
vminv_u32
vminvq_f32
vminvq_f64
vminvq_s32
vminvq_u32
vmull_p64
vmulxd_f64
vmulxs_f32
vpaddd_s64
vpaddd_u64
vpmaxnmqd_f64
vpmaxnms_f32
vpmaxqd_f64
vpmaxs_f32
vpminnmqd_f64
vpminnms_f32
vpminqd_f64
vpmins_f32
vqabsb_s8
vqabsd_s64
vqabsh_s16
vqabss_s32
vqaddb_s8
vqaddb_u8
vqaddd_s64
vqaddd_u64
vqaddh_s16
vqaddh_u16
vqadds_s32
vqadds_u32
vqdmulhh_s16
vqdmulhs_s32
vqdmullh_s16
vqdmulls_s32
vqmovnd_s64
vqmovnd_u64
vqmovnh_s16
vqmovnh_u16
vqmovns_s32
vqmovns_u32
vqmovund_s64
vqmovunh_s16
vqmovuns_s32
vqnegb_s8
vqnegd_s64
vqnegh_s16
vqnegs_s32
vqrdmulhh_s16
vqrdmulhs_s32
vqrshlb_s8
vqrshlb_u8
vqrshld_s64
vqrshld_u64
vqrshlh_s16
vqrshlh_u16
vqrshls_s32
vqrshls_u32
vqrshrnd_n_s64
vqrshrnd_n_u64
vqrshrnh_n_s16
vqrshrnh_n_u16
vqrshrns_n_s32
vqrshrns_n_u32
vqrshrund_n_s64
vqrshrunh_n_s16
vqrshruns_n_s32
vqshlb_n_s8
vqshlb_n_u8
vqshlb_s8
vqshlb_u8
vqshld_s64
vqshld_u64
vqshlh_n_s16
vqshlh_n_u16
vqshlh_s16
vqshlh_u16
vqshls_n_s32
vqshls_n_u32
vqshls_s32
vqshls_u32
vqshlub_n_s8
vqshluh_n_s16
vqshlus_n_s32
vqshrnd_n_s64
vqshrnd_n_u64
vqshrnh_n_s16
vqshrnh_n_u16
vqshrns_n_s32
vqshrns_n_u32
vqshrund_n_s64
vqshrunh_n_s16
vqshruns_n_s32
vqsubb_s8
vqsubb_u8
vqsubd_s64
vqsubd_u64
vqsubh_s16
vqsubh_u16
vqsubs_s32
vqsubs_u32
vrecped_f64
vrecpes_f32
vrecpxd_f64
vrecpxs_f32
vrshld_s64
vrshld_u64
vrsqrted_f64
vrsqrtes_f32
vrsqrtsd_f64
vrsqrtss_f32
vsha1cq_u32
vsha1h_u32
vsha1mq_u32
vsha1pq_u32
vshld_s64
vshld_u64
vslid_n_s64
vslid_n_u64
vsqaddb_u8
vsqaddd_u64
vsqaddh_u16
vsqadds_u32
vsrid_n_s64
vsrid_n_u64
vuqaddb_s8
vuqaddd_s64
vuqaddh_s16
vuqadds_s32
vabdh_f16
vcvtah_s32_f16
vcvtah_s64_f16
vcvtah_u32_f16
vcvtah_u64_f16
vcvth_n_f16_s32
vcvth_n_f16_s64
vcvth_n_f16_u32
vcvth_n_f16_u64
vcvth_n_s32_f16
vcvth_n_s64_f16
vcvth_n_u32_f16
vcvth_n_u64_f16
vcvtmh_s32_f16
vcvtmh_s64_f16
vcvtmh_u32_f16
vcvtmh_u64_f16
vcvtnh_s32_f16
vcvtnh_s64_f16
vcvtnh_u32_f16
vcvtnh_u64_f16
vcvtph_s32_f16
vcvtph_s64_f16
vcvtph_u32_f16
vcvtph_u64_f16
vmulxh_f16
vrecpeh_f16
vrecpxh_f16
vrsqrteh_f16
vrsqrtsh_f16
vcvt_n_f64_v
vcvtq_n_f64_v
vcvtx_f32_v
vfmlal_high_v
vfmlal_low_v
vfmlalq_high_v
vfmlalq_low_v
vfmlsl_high_v
vfmlsl_low_v
vfmlslq_high_v
vfmlslq_low_v
vtbx
vpmovm2
.splatinsert
.splat
cond-cleanup.save
setup.end
setup.next
SetupArgument
hipLaunchByPtr
cudaLaunch
RegisterFatBinary
_module_ctor
.hip_fatbin
.hipFatBinSegment
__hip_module_id
__hip_
__hip_fatbin
__NV_CUDA,__nv_relfatbin
__nv_relfatbin
__NV_CUDA,__nv_fatbin
.nv_fatbin
__NV_CUDA,__fatbin
.nvFatBinSegment
__NV_CUDA,__nv_module_id
__nv_module_id
__nv_
_fatbin_wrapper
__hip_gpubin_handle
__cuda_gpubin_handle
%llx
__fatbinwrap
atexit
_register_globals
RegisterFunction
RegisterVar
dummy
__hip
__cuda
UnregisterFatBinary
_module_dtor
kcall.configok
kcall.end
vfnkxt
cannot yet compile %0 in this ABI
calls through member pointers
loads of member pointers
member function pointer conversions
member function pointer comparison
member function pointer null testing
this
array cookie initialization
reading a new[] cookie
complete object detection in ctor
indirect-tls-seg-refs
trap-func-name
no-frame-pointer-elim
no-frame-pointer-elim-non-leaf
less-precise-fpmad
null-pointer-is-valid
denormal-fp-math
no-trapping-math
strict-float-cast-overflow
no-infs-fp-math
no-nans-fp-math
unsafe-fp-math
use-soft-float
stack-protector-buffer-size
no-signed-zeros-fp-math
correctly-rounded-divide-sqrt-fp-math
denorms-are-zero
reciprocal-estimates
prefer-vector-width
stackrealign
backchain
ptrauth-returns
ptrauth-calls
ptrauth-indirect-gotos
nvptx-f32ftz
split-stack
uniform-work-group-size
disable-tail-calls
agg.result
coerce
swifterror.temp
.coerce
sret
nullcheck
no.nullcheck
return.sloc.load
forwarded non-trivially copyable parameter
inalloca.save
agg.tmp
clang.arc.no_objc_arc_exceptions
funclet
invoke.cont
argmem
indirect-arg-temp
byval-temp
call
__asan_handle_no_return
arg.unpromote
coerce.dive
coerce.val
coerce.val.pi
coerce.highbits
coerce.val.ii
coerce.val.ip
icr.temp
icr.isnull
icr.argument
icr.cont
icr.copy
icr.cast
icr.to-use
icr.writeback
icr.done
icr.writeback-cast
alignmentcast
ispositive
positivemask
cast.notnull
cast.end
cast.result
cast.null
sub.ptr
__asan_poison_intra_object_redzone
__asan_unpoison_intra_object_redzone
new.ctorloop
isempty
arrayctor.end
arrayctor.loop
arrayctor.cur
arrayctor.next
arrayctor.done
arrayctor.cont
retval.inhctor
cmp.vtables
vtable
cast.nonnull
cast.check
cast.cont
all-vtables
lambda conversion to variadic function
add.ptr
dtor.call_delete
dtor.continue
__sanitizer_dtor_callback
saved-rvalue
saved-complex
cleanup.cond
tmp.exprcleanup
forwarded-prebranch
cleanup.dest
cleanup.cont
cleanup.dest.slot
cleanup.done
cleanup.action
cleanup.is_active
cleanup.isactive
coro.alloc
coro.init
coro.final
coro.ret
coro.ret.on.failure
coro.resumed.body
coro.resumed.cont
coro.resumed.eh
this builtin expect that __builtin_coro_begin has been used earlier in this function
this builtin expect that __builtin_coro_id has been used earlier in this function
.ready
.suspend
.cleanup
.suspend.bool
resume.eh
await
yield
only one __builtin_coro_id can be used in a function
__builtin_coro_id shall not be used in a C++ coroutine
gro.active
coro.free
after.coro.free
Deallocation expressoin does not refer to coro.free
opencl_image1d_ro_t
opencl_image1d_array_ro_t
opencl_image1d_buffer_ro_t
opencl_image2d_ro_t
opencl_image2d_array_ro_t
opencl_image2d_depth_ro_t
opencl_image2d_array_depth_ro_t
opencl_image2d_msaa_ro_t
opencl_image2d_array_msaa_ro_t
opencl_image2d_msaa_depth_ro_t
opencl_image2d_array_msaa_depth_ro_t
opencl_image3d_ro_t
opencl_image1d_wo_t
opencl_image1d_array_wo_t
opencl_image1d_buffer_wo_t
opencl_image2d_wo_t
opencl_image2d_array_wo_t
opencl_image2d_depth_wo_t
opencl_image2d_array_depth_wo_t
opencl_image2d_msaa_wo_t
opencl_image2d_array_msaa_wo_t
opencl_image2d_msaa_depth_wo_t
opencl_image2d_array_msaa_depth_wo_t
opencl_image3d_wo_t
opencl_image1d_rw_t
opencl_image1d_array_rw_t
opencl_image1d_buffer_rw_t
opencl_image2d_rw_t
opencl_image2d_array_rw_t
opencl_image2d_depth_rw_t
opencl_image2d_array_depth_rw_t
opencl_image2d_msaa_rw_t
opencl_image2d_array_msaa_rw_t
opencl_image2d_msaa_depth_rw_t
opencl_image2d_array_msaa_depth_rw_t
opencl_image3d_rw_t
opencl_sampler_t
opencl_event_t
opencl_clk_event_t
opencl_queue_t
opencl_reserve_id_t
opencl_intel_sub_group_avc_mce_payload_t
opencl_intel_sub_group_avc_ime_payload_t
opencl_intel_sub_group_avc_ref_payload_t
opencl_intel_sub_group_avc_sic_payload_t
opencl_intel_sub_group_avc_mce_result_t
opencl_intel_sub_group_avc_ime_result_t
opencl_intel_sub_group_avc_ref_result_t
opencl_intel_sub_group_avc_sic_result_t
opencl_intel_sub_group_avc_ime_result_single_reference_streamout_t
opencl_intel_sub_group_avc_ime_result_dual_reference_streamout_t
opencl_intel_sub_group_avc_ime_single_reference_streamin_t
opencl_intel_sub_group_avc_ime_dual_reference_streamin_t
long int
long long int
long unsigned int
long long unsigned int
__size
__align
__isa
__flags
__reserved
__FuncPtr
__descriptor
__vtbl_ptr_type
__forwarding
__copy_helper
__destroy_helper
__byref_variable_layout
__block_literal_
constant l-value expression
bss-section
data-section
rodata-section
__vla_expr
fake.use
nrvo
saved_stack
arraydestroy.body
arraydestroy.done
arraydestroy.isempty
arraydestroy.elementPast
arraydestroy.element
vla-setup.loop
vla-init.loop
vla-init.cont
vla.iszerosized
vla.begin
vla.end
vla.cur
vla.next
vla-init.isdone
__const.
expected a function or method
nrvo.unused
nrvo.skipdtor
nrvo.val
pad.arraybegin
pad.arrayend
this initialization requires a guard variable, which the kernel does not support
sign-return-address
sign-return-address-key
branch-target-enforcement
__cxx_init_fn_ptr
_GLOBAL__I_
<null>
_GLOBAL__sub_I_
_GLOBAL__D_a
guard.uninitialized
__cxx_global_array_dtor
_ZSt9terminatev
__std_terminate
?terminate@@YAXXZ
objc_terminate
__gcc_personality_v0
__gcc_personality_sj0
__gcc_personality_seh0
__objc_personality_v0
__gxx_personality_v0
__gxx_personality_sj0
__gxx_personality_seh0
__gnu_objc_personality_v0
__gnu_objc_personality_sj0
__gnu_objc_personality_seh0
__gnustep_objcxx_personality_v0
__gnustep_objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
__gxx_wasm_personality_v0
exn.slot
ehselector.slot
throw.cont
catch.dispatch
ehcleanup
filter.dispatch
terminate
lpad
try.cont
finally.exn
finally.for-eh
finally.catchall
terminate.lpad
terminate.handler
eh.resume
lpad.val
__try.__leave
'this' captured by SEH
VLA captured by SEH
exception_pointers
abnormal_termination
frame_pointer
__except
__except.ret
__try.cont
exception-handling
ehspec.unexpected
ehspec.fails
__cxa_call_unexpected
catch.fallthrough
matches
catch.start
rethrow
__cxa_free_exception
cleanup.dest.saved
finally.rethrow
finally.cont
finally.shouldthrow
finally.endcatch
finally.cleanup.cont
agg-temp
agg.tmp
null
not.null
vptr.null
vptr.not.null
__ubsan_vptr_type_cache
undef.agg.tmp
l-value expression
castToVec4
loadVec4
extractVec
nontemporal
frombool
tobool
storetmp
vecext
bf.load
bf.shl
bf.ashr
bf.lshr
bf.clear
bf.cast
conv.ptr.element
vector.elt
vecins
sub.ptr.rhs.cast
sub.ptr.lhs.cast
ivar.offset
bf.value
bf.set
bf.result.shl
bf.result.ashr
bf.result.cast
.str
.src
cont
handler.
non_fatal.
fatal.
cfi.cont
cfi.slowpath
__cfi_slowpath_diag
__cfi_slowpath
__cfi_check
__cfi_check_fail
trap
trap-func-name
arraydecay
arrayidx
lb_add_len
idx_sub_1
len_sub_1
.compoundliteral
cond.true
cond.false
cond.end
conditional operator
cond-lvalue
unexpected cast lvalue
temp.lvalue
typecheck
callee.knr.cast
.ref.tmp
ref.tmp
add_overflow
builtin_unreachable
cfi_check_fail
divrem_overflow
dynamic_type_cache_miss
float_cast_overflow
function_type_mismatch
implicit_conversion
invalid_builtin
load_invalid_value
missing_return
mul_overflow
negate_overflow
nullability_arg
nullability_return
nonnull_arg
nonnull_return
out_of_bounds
pointer_overflow
shift_out_of_bounds
sub_overflow
type_mismatch
vla_bound_not_positive
__ubsan_handle_
_minimal
_abort
idxprom
aggregate three-way comparison with vector arguments
aggregate three-way comparison
sel.eq
sel.lt
sel.gt
and.eq
cmp.lt
cmp.gt
cmp.eq
agg.tmp.ensured
aggregate expression
arrayinit.begin
arrayinit.body
arrayinit.index
arrayinit.next
arrayinit.done
arrayinit.end
aggregate binary expression
weird std::initializer_list
arraystart
arrayend
non-simple lvalue dynamic_cast
lvalue dynamic_cast with a destination
atomic-to-nonatomic.temp
GNU array range designator extension
constinit
arrayinit.endOfInit
arrayinit.element
arrayinit.start
arrayinit.cur
aggregate va_arg expression
string.init.end
array.init.end
array.exp.next
new.loop
new.loop.end
array.end
array.isempty
array.cur
array.next
array.atend
new.notnull
new.cont
new.isnull
delete.notnull
delete.end
isnull
del.first
dynamic_cast.end
dynamic_cast.null
dynamic_cast.notnull
typeid.bad_typeid
typeid.end
.realp
.imagp
mul_ac
mul_bd
mul_ad
mul_bc
mul_r
mul_i
isnan_cmp
complex_mul_cont
complex_mul_imag_nan
complex_mul_libcall
real_mul_phi
imag_mul_phi
mul.rl
mul.il
mul.ir
mul.rr
mul.r
mul.i
__mulhc3
__mulsc3
__muldc3
__multc3
__mulxc3
__divhc3
__divsc3
__divdc3
__divtc3
__divxc3
add.r
add.i
sub.r
sub.i
neg.r
neg.i
conj.i
cond.r
cond.i
complex expression
complex va_arg expression
.real
.imag
internal error: could not emit constant value "abstractly"
.tmp
.str
cmp.r
cmp.i
and.ri
or.ri
land.ext
land.end
land.rhs
lor.ext
lor.end
lor.rhs
lnot
lnot.ext
cond
scalar expression
vecext
astype
conv
splat
vecinit
virtual base in offsetof
shuf_idx
shuf_elt
shuf_ins
shuffle
va_arg expression
downscale
resize
upscale
satmax
satmin
signchangecheck
.negativitycheck
anyext
truncheck
atomic_op
vla.negsize
vla.inc
incdec.funcptr
incdec.ptr
incdec.conv
incdec.objptr
nooverflow
overflow
idx.ext
idx.neg
vla.index
sub.ptr.sub
sub.ptr.div
sh_prom
shl.mask
check
shl.zeros
shl.check
shr.mask
non-scalar arg to printf
printf_args
llvm.access.group
llvm.loop.vectorize.width
llvm.loop.interleave.count
llvm.loop.unroll.count
llvm.loop.unroll_and_jam.count
llvm.loop.vectorize.enable
llvm.loop.unroll.enable
llvm.loop.unroll.full
llvm.loop.unroll.disable
llvm.loop.unroll_and_jam.enable
llvm.loop.unroll_and_jam.full
llvm.loop.unroll_and_jam.disable
llvm.loop.distribute.enable
llvm.loop.parallel_accesses
__destructor_
__copy_constructor_
__copy_assignment_
__move_constructor_
__move_assignment_
__default_constructor_
dstarray.end
loop.header
addr.cur
loop.exit
loop.body
done
special function 
 for non-trivial C struct has incorrect type
__NSArray0__
__NSDictionary0__
invariant.load
Obj-C getter requiring atomic copy
Obj-C optimized setter - NYI
Obj-C setter requiring atomic copy
Obj-C fast enumeration for this runtime
forcoll.end
state.ptr
items.ptr
forcoll.next
forcoll.empty
forcoll.loopinit
mutationsptr.ptr
mutationsptr
forcoll.initial-mutations
forcoll.loopbody
forcoll.index
forcoll.count
statemutations
forcoll.mutated
forcoll.notmutated
stateitems.ptr
stateitems
currentitem.ptr
currentitem
forcoll.refetch
clang.arc.copy_on_escape
clang.imprecise_release
objc_autoreleasePoolPop
objc_alloc
objc_allocWithZone
objc_alloc_init
drain
objc_autorelease
objc_retain
objc_release
__assign_helper_atomic_property_
__copy_helper_atomic_property_
__isPlatformVersionAtLeast
__isPlatformOrVariantPlatformVersionAtLeast
-framework
CoreFoundation
CFBundleGetVersionNumber
__clang_at_available_requires_core_foundation_framework
objc_opt_new
objc_opt_self
objc_opt_class
isKindOfClass
objc_opt_isKindOfClass
respondsToSelector
objc_opt_respondsToSelector
clang.arc.retainAutoreleasedReturnValueMarker
objc_msg_lookup_super
objc_msg_lookup_sender
objc_slot_lookup_super
objc_exception_rethrow
__cxa_begin_catch
__cxa_end_catch
_Unwind_Resume_or_Rethrow
objc_begin_catch
objc_end_catch
objc_setProperty_atomic
objc_setProperty_atomic_copy
objc_setProperty_nonatomic
objc_setProperty_nonatomic_copy
objc_setCppObjectAtomic
objc_getCppObjectAtomic
GNUObjCMessageSend
objc_getProperty
objc_setProperty
objc_getPropertyStruct
objc_setPropertyStruct
objc_memmove_collectable
.objc_statics_ptr
.objc_load_function
__objc_exec_class
class_registerAlias_np
no_alias
.objc_protocol_list
.objc_method_list
NXConstantString
.objc_static_class_name
.objc_statics
.objc_sel_types
.objc_selector_list
.objc_source_file_name
.objc_str
__objc_class_name_
__objc_ivar_offset_value_
.ivar.offsets
.super_class_name
__objc_class_ref_
.objc_property_list
.class_name
.objc_protocol
ivar
.objc_ivar_list
.objc_protocol_name
._OBJC_PROTOCOL_
.objc_selector_
__objc_ivar_offset_
objc_lookup_class
.objcv2_load_function
.objc_init
__objc_load
.objc_ctor
.CRT$XCLz
.ctors
.objc_null_selector
.objc_null_category
.objc_null_cls_init_ref
.objc_null_class_ref
.objc_null_protocol
.objc_null_protocol_ref
.objc_null_class_alias
.objc_null_constant_string
__objc_selectors
__objc_classes
__objc_class_refs
__objc_cats
__objc_protocols
__objc_protocol_refs
__objc_class_aliases
__objc_constant_string
.objc_section_sentinel
__start_
__stop
__stop_
._OBJC_WEAK_REF_CLASS_
._OBJC_REF_CLASS_
._OBJC_CLASS_
__objc_id_type_info
__objc_eh_typeinfo_
_ZTVN7gnustep7libobjc22__objc_class_type_infoE
.objc_str_
.objc_string
._OBJC_METACLASS_
._OBJC_INIT_CLASS_
msgSend
objc_get_meta_class
objc_get_class
.objc_metaclass_ref
.objc_class_ref
._OBJC_REF_PROTOCOL_
NSAutoreleasePool
.objc_protocol_method_list
.objc_sel_types_
objc_msg_lookup
objc_msg_lookup_stret
objc_msg_lookup_super_stret
struct._objc_method_description
struct._objc_method_description_list
struct._objc_protocol_extension
struct._objc_protocol
struct._objc_protocol_list
struct._objc_ivar
struct._objc_ivar_list
struct._objc_method_list
struct._objc_class_extension
struct._objc_class
struct._objc_category
struct._objc_symtab
struct._objc_module
struct._objc_exception_data
_objc_super
struct._prop_t
struct._prop_list_t
struct._objc_method
struct._objc_cache
__objc_imageinfo
regular,no_dead_strip
Objective-C Version
Objective-C Image Info Version
Objective-C Image Info Section
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Class Properties
__DATA,
.objc_class_name_
.globl .objc_class_name_
.lazy_reference .objc_class_name_
.objc_category_name_
.globl .objc_category_name_
OBJC_MODULES
__OBJC,__module_info,regular,no_dead_strip
OBJC_SYMBOLS
__OBJC,__symbols,regular,no_dead_strip
OBJC_CLASS_NAME_
OBJC_METH_VAR_NAME_
OBJC_METH_VAR_TYPE_
OBJC_PROP_NAME_ATTR_
__TEXT,__objc_classname,cstring_literals
__TEXT,__cstring,cstring_literals
__TEXT,__objc_methname,cstring_literals
__TEXT,__objc_methtype,cstring_literals
OBJC_SELECTOR_REFERENCES_
__OBJC,__message_refs,literal_pointers,no_dead_strip
struct.__builtin_NSString
_unnamed_nsstring_
__OBJC,__cstring_object,regular,no_dead_strip
__DATA,__objc_stringobj,regular,no_dead_strip
__kCFBooleanTrue
__kCFBooleanFalse
struct.__builtin_NSConstantIntegerNumber
_unnamed_nsconstantintegernumber_
__DATA,__objc_intobj,regular,no_dead_strip
__OBJC,__int_object,regular,no_dead_strip
struct.__builtin_NSConstantFloatNumber
_unnamed_nsconstantfloatnumber_
struct.__builtin_NSConstantDoubleNumber
_unnamed_nsconstantdoublenumber_
__DATA,__objc_floatobj,regular,no_dead_strip
__OBJC,__number_object,regular,no_dead_strip
__DATA,__objc_doubleobj,regular,no_dead_strip
struct.__builtin_NSArray
_unnamed_nsarray_
__NSArray0__struct
_unnamed_array_storage
__DATA,__objc_arraydata,regular,no_dead_strip
__OBJC,__array_data,regular,no_dead_strip
__DATA,__objc_arrayobj,regular,no_dead_strip
__OBJC,__array_object,regular,no_dead_strip
struct.__builtin_NSDictionary
_unnamed_nsdictionary_
__NSDictionary0__struct
__DATA,__objc_dictobj,regular,no_dead_strip
__OBJC,__dict_object,regular,no_dead_strip
OBJC_CATEGORY_PROTOCOLS_
l_OBJC_$_PROP_LIST_
l_OBJC_$_CLASS_PROP_LIST_
OBJC_CATEGORY_
__OBJC,__category,regular,no_dead_strip
OBJC_CATEGORY_INSTANCE_METHODS_
__OBJC,__cat_inst_meth,regular,no_dead_strip
OBJC_CATEGORY_CLASS_METHODS_
__OBJC,__cat_cls_meth,regular,no_dead_strip
OBJC_INSTANCE_METHODS_
__OBJC,__inst_meth,regular,no_dead_strip
OBJC_CLASS_METHODS_
__OBJC,__cls_meth,regular,no_dead_strip
OBJC_PROTOCOL_INSTANCE_METHODS_
OBJC_PROTOCOL_CLASS_METHODS_
OBJC_PROTOCOL_INSTANCE_METHODS_OPT_
OBJC_PROTOCOL_CLASS_METHODS_OPT_
__DATA, __objc_const
__OBJC,__property,regular,no_dead_strip
OBJC_CLASS_PROTOCOLS_
OBJC_CLASS_
__OBJC,__class,regular,no_dead_strip
OBJC_METACLASS_
__OBJC,__meta_class,regular,no_dead_strip
OBJC_INSTANCE_VARIABLES_
__OBJC,__instance_vars,regular,no_dead_strip
%s ivar layout for class '%s': 
0x0%x%s
0x%x%s
OBJC_CLASSEXT_
__OBJC,__class_ext,regular,no_dead_strip
objc_msgSendSuper2_stret
objc_msgSendSuper2
msgSend.null-receiver
msgSend.call
msgSend.cont
objc_lookUpClass
OBJC_CLASS_REFERENCES_
__OBJC,__cls_refs,literal_pointers,no_dead_strip
objc_copyStruct
objc_copyCppObjectAtomic
finally.end
sync.arg
exceptiondata.ptr
_call_try_exit
setjmp_buffer
setjmp_result
try.handler
did_catch_exception
caught
propagating_exception
setjmp.result
catch_for_catch
match
catch.next
matched
finally.call_exit
finally.no_call_exit
weakread
weakassign
globalassign
threadlocalassign
objc_assign_threadlocal
strongassign
 block variable layout for block: 
 Inline BYREF variable layout: 
 Inline block variable layout: 
0x0%llx
, BL_STRONG:%d
, BL_BYREF:%d
, BL_WEAK:%d
 Byref variable layout: 
 Block variable layout: 
BL_OPERATOR:
BL_NON_OBJECT_BYTES:
BL_NON_OBJECT_WORD:
BL_STRONG:
BL_BYREF:
BL_WEAK:
BL_UNRETAINED:
OBJC_PROTOCOL_REFS_
OBJC_PROTOCOL_
__OBJC,__protocol,regular,no_dead_strip
OBJC_PROTOCOL_METHOD_TYPES_
OBJC_$_PROP_PROTO_LIST_
OBJC_$_CLASS_PROP_PROTO_LIST_
l_OBJC_PROTOCOLEXT_
ClassReference
struct.__method_list_t
struct._protocol_t
struct._ivar_t
struct._ivar_list_t
struct._class_ro_t
struct._class_t
struct._category_t
_message_ref_t
struct._super_message_ref_t
struct._objc_typeinfo
OBJC_LABEL_CLASS_$
__objc_classlist
OBJC_LABEL_NONLAZY_CLASS_$
__objc_nlclslist
OBJC_LABEL_CATEGORY_$
__objc_catlist
OBJC_LABEL_STUB_CATEGORY_$
__objc_catlist2
OBJC_LABEL_NONLAZY_CATEGORY_$
__objc_nlcatlist
__objc_selrefs
literal_pointers,no_dead_strip
OBJC_EHTYPE_id
OBJC_EHTYPE_$_
__DATA,__objc_const
l_OBJC_CATEGORY_PROTOCOLS_$_
l_OBJC_$_CATEGORY_INSTANCE_METHODS_
l_OBJC_$_CATEGORY_CLASS_METHODS_
l_OBJC_$_INSTANCE_METHODS_
l_OBJC_$_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_
l_OBJC_$_PROTOCOL_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_
l_OBJC_$_PROTOCOL_CLASS_METHODS_OPT_
_objc_empty_cache
_objc_empty_vtable
l_OBJC_CLASS_PROTOCOLS_$_
l_OBJC_METACLASS_RO_$_
l_OBJC_CLASS_RO_$_
l_OBJC_$_INSTANCE_VARIABLES_
__DATA, __objc_ivar
OBJC_IVAR_$_
__DATA, __objc_data
isFlipped
isEqualToString
objc_msgSendSuper2_stret_fixup
objc_msgSend_stret_fixup
objc_msgSend_fpret_fixup
objc_msgSendSuper2_fixup
objc_msgSend_fixup
__objc_msgrefs
coalesced
msgSend_fn
OBJC_CLASSLIST_SUP_REFS_$_
__objc_superrefs
load_classref_result
objc_loadClassref
__objc_protorefs
coalesced,no_dead_strip
OBJC_CLASSLIST_REFERENCES_$_
__objc_classrefs
ivar.conv
l_OBJC_$_PROTOCOL_REFS_
l_OBJC_$_PROTOCOL_METHOD_TYPES_
_OBJC_PROTOCOL_$_
_OBJC_LABEL_PROTOCOL_$_
__objc_protolist
, BL_OPERATOR:0
eh.cont
exn.adjusted
catchret.dest
opencl.image1d_ro_t
opencl.image1d_array_ro_t
opencl.image1d_buffer_ro_t
opencl.image2d_ro_t
opencl.image2d_array_ro_t
opencl.image2d_depth_ro_t
opencl.image2d_array_depth_ro_t
opencl.image2d_msaa_ro_t
opencl.image2d_array_msaa_ro_t
opencl.image2d_msaa_depth_ro_t
opencl.image2d_array_msaa_depth_ro_t
opencl.image3d_ro_t
opencl.image1d_wo_t
opencl.image1d_array_wo_t
opencl.image1d_buffer_wo_t
opencl.image2d_wo_t
opencl.image2d_array_wo_t
opencl.image2d_depth_wo_t
opencl.image2d_array_depth_wo_t
opencl.image2d_msaa_wo_t
opencl.image2d_array_msaa_wo_t
opencl.image2d_msaa_depth_wo_t
opencl.image2d_array_msaa_depth_wo_t
opencl.image3d_wo_t
opencl.image1d_rw_t
opencl.image1d_array_rw_t
opencl.image1d_buffer_rw_t
opencl.image2d_rw_t
opencl.image2d_array_rw_t
opencl.image2d_depth_rw_t
opencl.image2d_array_depth_rw_t
opencl.image2d_msaa_rw_t
opencl.image2d_array_msaa_rw_t
opencl.image2d_msaa_depth_rw_t
opencl.image2d_array_msaa_depth_rw_t
opencl.image3d_rw_t
opencl.event_t
opencl.clk_event_t
opencl.queue_t
opencl.reserve_id_t
opencl.intel_sub_group_avc_mce_payload_t
opencl.intel_sub_group_avc_ime_payload_t
opencl.intel_sub_group_avc_ref_payload_t
opencl.intel_sub_group_avc_sic_payload_t
opencl.intel_sub_group_avc_mce_result_t
opencl.intel_sub_group_avc_ime_result_t
opencl.intel_sub_group_avc_ref_result_t
opencl.intel_sub_group_avc_sic_result_t
opencl.intel_sub_group_avc_ime_result_single_reference_streamout_t
opencl.intel_sub_group_avc_ime_result_dual_reference_streamout_t
opencl.intel_sub_group_avc_ime_single_reference_streamin_t
opencl.intel_sub_group_avc_ime_dual_reference_streamin_t
opencl.pipe_ro_t
opencl.pipe_wo_t
opencl.sampler_t
ident_t
svcpt
.kmpc_loc.addr
__kmpc_fork_call
__kmpc_global_thread_num
__kmpc_threadprivate_cached
__kmpc_critical
__kmpc_critical_with_hint
__kmpc_threadprivate_register
__kmpc_end_critical
__kmpc_cancel_barrier
__kmpc_barrier
__kmpc_for_static_fini
__kmpc_push_num_threads
__kmpc_serialized_parallel
__kmpc_end_serialized_parallel
__kmpc_flush
__kmpc_master
__kmpc_end_master
__kmpc_omp_taskyield
__kmpc_single
__kmpc_end_single
__kmpc_omp_task_alloc
__kmpc_omp_task
__kmpc_copyprivate
__kmpc_reduce
__kmpc_reduce_nowait
__kmpc_end_reduce
__kmpc_end_reduce_nowait
__kmpc_omp_task_begin_if0
__kmpc_omp_task_complete_if0
__kmpc_ordered
__kmpc_end_ordered
__kmpc_omp_taskwait
__kmpc_taskgroup
__kmpc_end_taskgroup
__kmpc_push_proc_bind
__kmpc_omp_task_with_deps
__kmpc_omp_wait_deps
__kmpc_cancellationpoint
__kmpc_cancel
__kmpc_push_num_teams
__kmpc_fork_teams
__kmpc_taskloop
__kmpc_doacross_init
__kmpc_doacross_fini
__kmpc_doacross_post
__kmpc_doacross_wait
__kmpc_task_reduction_init
__kmpc_task_reduction_get_th_data
__tgt_target
__tgt_target_nowait
__tgt_target_teams
__tgt_target_teams_nowait
__tgt_register_lib
__tgt_unregister_lib
__tgt_target_data_begin
__tgt_target_data_begin_nowait
__tgt_target_data_end
__tgt_target_data_end_nowait
__tgt_target_data_update
__tgt_target_data_update_nowait
__kmpc_for_static_init_4
__kmpc_for_static_init_4u
__kmpc_for_static_init_8
__kmpc_for_static_init_8u
__kmpc_dispatch_init_4
__kmpc_dispatch_init_4u
__kmpc_dispatch_init_8
__kmpc_dispatch_init_8u
__kmpc_dispatch_fini_4
__kmpc_dispatch_fini_4u
__kmpc_dispatch_fini_8
__kmpc_dispatch_fini_8u
__kmpc_dispatch_next_4
__kmpc_dispatch_next_4u
__kmpc_dispatch_next_8
__kmpc_dispatch_next_8u
_decl_tgt_link_ptr
cache
__kmpc_global_ctor_
__kmpc_global_dtor_
__omp_threadprivate_init_
__omp_offloading_
_%x_
_ctor
_dtor
omp_if.then
omp_if.else
omp_if.end
.threadid_temp.
gomp_critical_user_
.omp.copyprivate.did_it
.omp.copyprivate.cpr_list
.cancel.exit
.cancel.continue
Unable to find target region on line '%0' in the device code.
omp_offloading
entries_begin
entries_end
img_start
img_end
device_images
descriptor
descriptor_unreg
descriptor_reg
entry_name
entries
omp_offload.info
Offloading entry for target region is incorrect: either the address or the ID is invalid.
Offloading entry for declare target variable is incorrect: the address is invalid.
Unable to parse host IR file '%0':'%1'
__tgt_offload_entry
__tgt_device_image
__tgt_bin_desc
kmp_depend_info
.dep.arr.addr
reduction_func
.omp.reduction.red_list
.omp.reduction.default
.omp.reduction.case1
.omp.reduction.case2
kmp_task_red_input_t
.rd_input.
.rd_input.gep.
reduction_size
__omp_offloading
region_id
kmp_dim
dims
.cnt.addr
omp.arrayinit.body
omp.arrayinit.done
omp.arrayinit.isempty
omp.arraycpy.srcElementPast
omp.arraycpy.destElementPast
omp.arraycpy.dest.element
omp.arraycpy.done
omp_combiner
omp_initializer
__captured_stmt
.untied.done.
.untied.jmp.
.untied.next.
.omp_outlined.
copy_func
kmp_cmplrdata_t
kmp_task_t
kmp_task_t_with_privates
.kmp_privates.t
omp_task_privates_map
omp_task_entry
omp_task_dup
omp_task_destructor
omp.arraycpy.body
omp.arraycpy.isempty
omp.arraycpy.src.element
red_init
red_fini
red_comb
.zero.addr
atomic_reduction
.offload_baseptrs
.offload_ptrs
.offload_sizes
offload_sizes
offload_maptypes
omp_offload.failed
omp_offload.cont
_worker
_openmp_kernel_static_glob_rd$ptr
.worker
.mastercheck
.master
.exit
.termination.notifier
.execute
.omp.deinit
.await.work
.select.workers
.execute.parallel
.terminate.parallel
.barrier.parallel
work_fn
exec_status
should_terminate
is_active
work_match
.execute.fn
.check.next
__kmpc_kernel_init
__kmpc_kernel_deinit
__kmpc_spmd_kernel_init
__kmpc_spmd_kernel_deinit_v2
__kmpc_kernel_prepare_parallel
__kmpc_kernel_parallel
__kmpc_kernel_end_parallel
__kmpc_shuffle_int32
__kmpc_shuffle_int64
__kmpc_nvptx_parallel_reduce_nowait
__kmpc_nvptx_end_reduce_nowait
__kmpc_nvptx_teams_reduce_nowait_simple
__kmpc_nvptx_teams_end_reduce_nowait_simple
__kmpc_data_sharing_init_stack
__kmpc_data_sharing_init_stack_spmd
__kmpc_data_sharing_coalesced_push_stack
__kmpc_data_sharing_pop_stack
__kmpc_begin_sharing_variables
__kmpc_end_sharing_variables
__kmpc_get_shared_variables
__kmpc_parallel_level
__kmpc_is_spmd_exec_mode
__kmpc_get_team_static_memory
__kmpc_restore_team_static_memory
__kmpc_barrier_simple_spmd
nvvm.annotations
.spmd
.non-spmd
_select_stack
_openmp_static_kernel$is_shared
_openmp_static_kernel$size
omp.critical.loop
omp.critical.test
omp.critical.sync
omp.critical.body
omp.critical.exit
critical_counter
.omp.reduction.done
.omp.reduction.then
_wrapper
global_args
Target architecture does not support unified addressing
_openmp_static_memory_type_$_
_shared_openmp_static_memory_type_$_
_openmp_shared_static_glob_rd_$_
_openmp_static_glob_rd_$_
nvptx_tid
nvptx_warp_size
master_tid
_exec_mode
_globalized_locals_ty
nvptx_lane_id
nvptx_num_threads
_omp_reduction_shuffle_and_reduce_func
.omp.reduction.remote_reduce_list
then
ifcont
.omp.reduction.element
.shuffle.pre_cond
.shuffle.then
.shuffle.exit
_omp_reduction_inter_warp_copy_func
__openmp_nvptx_data_transfer_temporary_storage
precond
body
warp_master
is_active_thread
nvptx_warp_id
__omp_outlined__
.sequential
.parcheck
shared_arg_refs
resign.cont
resign.nonnull
.ptrauth
llvm.ptrauth
.base
*** Dumping IRgen Record Layout
Record: 
<CGRecordLayout
  LLVMType:
  NonVirtualBaseLLVMType:
  IsZeroInitializable:
  BitFields:[
<CGBitFieldInfo
 Offset:
 IsSigned:
 StorageSize:
 StorageOffset:
addr
if.then
if.end
if.else
while.cond
while.end
while.body
while.exit
do.end
do.cond
do.body
for.end
for.cond
for.inc
for.cond.cleanup
for.body
sw.bb
sw.caserange
inbounds
sw.epilog
sw.default
srcloc
asmresult
agg.captured
.casted
_debug__
copyin.not.master
copyin.not.master.end
.omp.lastprivate.then
.omp.lastprivate.done
lhs.begin
omp.body.continue
omp.inner.for.end
omp.inner.for.cond
omp.inner.for.cond.cleanup
omp.inner.for.body
omp.inner.for.inc
.omp.linear.pu
.omp.linear.pu.done
.omp.final.then
.omp.final.done
omp.dispatch.end
omp.dispatch.cond
omp.dispatch.cleanup
omp.dispatch.body
omp.dispatch.inc
omp.precond.then
omp.precond.end
omp.loop.exit
.materialized_ref
.ref
.omp.reduction.pu
.omp.reduction.pu.done
cancel.exit
cancel.cont
rhs.begin
simd.if.then
simd.if.end
.omp.sections.lb.
.omp.sections.ub.
.omp.sections.st.
.omp.sections.il.
.omp.sections.iv.
.omp.sections.exit
.omp.sections.case
.priv.ptr.addr
.firstpriv.ptr.addr
.lastpriv.ptr.addr
taskloop.if.then
taskloop.if.end
return-adjusting thunk with incomplete parameter type
non-trivial argument copy for return-adjusting thunk
thunk
adjust.null
adjust.notnull
adjust.end
 (hotness: 
irgen
LLVM IR Generation Time
instrument-function-exit
__cyg_profile_func_exit
instrument-function-exit-inlined
min-legal-vector-width
func_addr.int
global_addr.int
global_addr
decoded_addr
sanitize_thread_no_checking_at_run_time
.cxx_destruct
function-instrument
xray-always
xray-never
xray-log-args
xray-instruction-threshold
no-jump-tables
profile-sample-accurate
allocapt
return.sloc.ptr
instrument-function-entry
__cyg_profile_func_enter
instrument-function-entry-inlined
__cyg_profile_func_enter_bare
fentry-call
retval
skipcount
land.lhs.true
lor.lhs.false
indirectgoto
indirect.goto.dest
array.begin
resolver_entry
resolver_return
resolver_else
ptrauth
kernel_arg_addr_space
kernel_arg_access_qual
kernel_arg_type
kernel_arg_base_type
kernel_arg_type_qual
kernel_arg_name
limited-coverage-experimental
Emit limited coverage mapping information (experimental)
Could not read profile %0: %1
llvm.global_ctors
llvm.global_dtors
NumRegisterParameters
Dwarf Version
CodeView
CodeViewGHash
cfguardtable
StrictVTablePointers
StrictVTablePointersRequirement
Debug Info Version
wchar_size
min_enum_size
Cross-DSO CFI
cf-protection-return
cf-protection-branch
nvvm-reflect-ftz
opencl.spir.version
opencl.ocl.version
cannot compile this %0 yet
target-cpu
target-features
implicit-section-name
llvm.used
llvm.linker.options
llvm.global.annotations
.resolver
.ifunc
.cp.rodata
static initializer
__CFConstantStringClassReference
$s15SwiftFoundation19_NSCFConstantStringCN
$s10Foundation19_NSCFConstantStringCN
$S15SwiftFoundation19_NSCFConstantStringCN
$S10Foundation19_NSCFConstantStringCN
__T015SwiftFoundation19_NSCFConstantStringCN
__T010Foundation19_NSCFConstantStringCN
__TEXT,__ustring
.rodata
_unnamed_cfstring_
cfstring
__DATA,__cfstring
__objcFastEnumerationState
<string literal>
.cxx_construct
linkage spec
clang.decl.ptr
llvm.ident
llvm.commandline
llvm.dbg.cu
llvm.gcov
.virtual
.generalized
__translate_sampler_initializer
__regcall3__
arch_
__cxxabiv1
clang.global.decl.ptrs
enable-value-profiling
Enable value profiling
Simple C++ TBAA
Simple C/C++ TBAA
omnipotent char
any pointer
vtable pointer
anon
Expansion,
Skipped,
Gap,
 (Expanded file = 
__llvm_coverage_mapping
__llvm_coverage_names
File exit not handled before popRegions
__asan_poison_cxx_array_cookie
__asan_load_cxx_array_cookie
memptr.virtual
memptr.nonvirtual
memptr.end
memptr.adj
memptr.adj.shifted
this.adjusted
memptr.ptr
memptr.isvirtual
memptr.virtualfn
memptr.nonvirtualfn
memptr.offset
memptr.isnull
src.adj
lhs.memptr.ptr
rhs.memptr.ptr
cmp.ptr
cmp.ptr.null
lhs.memptr.adj
rhs.memptr.adj
cmp.adj
or.adj
cmp.or.adj
memptr.ne
memptr.eq
memptr.tobool
memptr.virtualbit
complete-offset.ptr
__cxa_rethrow
__cxa_allocate_exception
__cxa_throw
exn.byref.tmp
exn.byref
exn.casted
__cxa_get_exception_ptr
__clang_call_terminate
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN10__cxxabiv123__fundamental_type_infoE
_ZTVN10__cxxabiv117__array_type_infoE
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
__cxa_bad_typeid
dynamic_cast.bad_cast
__dynamic_cast
offset.to.top
__cxa_bad_cast
vbase.offset.ptr
vbase.offset
__cxa_pure_virtual
__cxa_deleted_virtual
init.check
init.end
__cxa_guard_acquire
__cxa_guard_abort
__cxa_guard_release
non-trivial TLS destruction
__tls_init
__tls_guard
__cxa_atexit
_tlv_atexit
__cxa_thread_atexit
__dso_handle
memptr.vadjust
memptr.skip_vadjust
memptr.is_vbase
member pointer representation requires a complete class type for %0 to perform this expression
memptr.base
vbptr
vbtable
vbtindex
vbase_offs
memptr.convert
memptr.converted
lhs.0
rhs.0
memptr.cmp.first
memptr.cmp.rest
memptr.cmp.iszero
memptr.cmp
memptr.cmp0
eh.ThrowInfo
_CxxThrowException
.xdata
is_most_derived
eh.CatchableType
__ImageBase
??_7type_info@@6B@
__RTtypeid
__RTDynamicCast
__RTCastToVoid
is_complete_object
ctor.init_vbases
ctor.skip_vbases
this.int8
vbptr.
vtordisp.value
vtordisp.ptr
should_call_delete
Dtor.dtor_vbases
Dtor.skip_vbases
rtti.CompleteObjectLocator
rtti.ClassHierarchyDescriptor
rtti.BaseClassDescriptor
_purecall
more than 32 guarded initializations
init.attempt
_Init_thread_epoch
_Init_thread_header
_Init_thread_abort
_Init_thread_footer
__tlregdtor
/include:___dyn_tls_init@12
/include:__dyn_tls_init
$initializer$
.CRT$XDU
thread wrappers
target_variant_triple
__clangast
clangast
__clang_ast
__CLANG,__clangast
init
llvm.asan.globals
nosanitize
_kernel
varet
vaarg.promotion-temp
argp.cur
argp.next
.aligned
long-call
short-call
arm64_32
ap.cur
vaarg.maybe_reg
vaarg.in_reg
vaarg.on_stack
vaarg.end
gr_offs_p
gr_offs
vr_offs_p
vr_offs
align_regoffs
aligned_regoffs
new_reg_offs
inreg
reg_top_p
reg_top
stack_p
align_stack
new_stack
vaargs.addr
vaarg.addr
stack-probe-size
no-stack-arg-probe
fp, fp
// marker for objc_retainAutoreleaseReturnValue
/DEFAULTLIB:
.lib
/FAILIFMISMATCH:"
probe-stack
__chkstk_darwin
no-prototype
r7, r7
// marker for objc_retainAutoreleaseReturnValue
numUsedRegs
using_regs
using_overflow
aggr
.vareal
.vaimag
vacplx
maxntidx
minctasm
__isr_
overflow_arg_area_ptr
mem_addr
reg_count_ptr
reg_count
fits_in_regs
vaarg.in_mem
scaled_reg_count
reg_offset
reg_save_area_ptr
raw_reg_addr
reg_addr
raw_mem_addr
va_arg.addr
indirect_arg
opencl.kernel_wg_size_info
={eax}
movl
%ebp, %ebp
// marker for objc_retainAutoreleaseReturnValue
gp_offset_p
fits_in_gp
fp_offset_p
fits_in_fp
overflow_arg_area_p
overflow_arg_area.next
darwin-stkchk-strong-link
___chkstk_darwin
amdgpu-implicitarg-num-bytes
amdgpu-flat-work-group-size
amdgpu-waves-per-eu
amdgpu-num-sgpr
amdgpu-num-vgpr
workgroup
agent
subgroup
block_literal
void*
local_arg
enqueued-block
extend
indirect
indirect.arg
ap.next
arg.addr
xcore.typestrings
crv:
input
bind-arch
offload
preprocessor
precompiler
header-module-precompiler
analyzer
migrator
backend
assembler
lipo
dsymutil
verify-debug-info
verify-pch
clang-offload-bundler
clang-offload-unbundler
-cuda
-hip
-openmp
openmp
SDKSettings.json
invalid SDKSettings.json
VersionMap
macOS_iOSMac
iOSMac_macOS
/etc/lsb-release
maverick
/etc/redhat-release
release 7
release 6
release 5
/etc/debian_version
/etc/SuSE-release
/etc/exherbo-release
/etc/alpine-release
/etc/arch-release
/etc/gentoo-release
Command line argument parsing
--no-demangle
-fopenmp
nvptx64-nvidia-cuda
nvptx-nvidia-cuda
amdgcn-amd-amdhsa
.cfg
Compilation construction
COMPILER_PATH
FORCE_CLANG_DIAGNOSTICS_CRASH
{0} [options] file...
Target: 
Thread model: 
InstalledDir: 
Configuration file: 
4.2.1
System configuration file directory: 
User configuration file directory: 
programs: =
libraries: =
builtins
libgcc.a
Building universal build actions
Building compilation actions
Constructing phase actions
Building compilation jobs
 - "
", inputs: [
], output: 
], outputs: [
a.exe
a.out
Computing output path
-%%%%%%.
-%%%%%%
LLVM_DIAGNOSTIC_DIR
-unknown-gnu
-pc-gnu
hurd
-miamcu
apple
debug.AnalysisOrder,debug.Stats,alpha.security.ArrayBound,alpha.security.ArrayBoundV2,osx.cocoa.AutoreleaseWrite,alpha.unix.BlockInCriticalSection,alpha.core.BoolAssignment,core.builtin.BuiltinFunctions,osx.coreFoundation.CFError,debug.DumpCFG,debug.ViewCFG,osx.coreFoundation.CFNumber,osx.coreFoundation.CFRetainRelease,alpha.unix.cstring.BufferOverlap,unix.cstring.CStringModeling,alpha.unix.cstring.NotNullTerminated,unix.cstring.NullArg,alpha.unix.cstring.OutOfBounds,unix.cstring.BadSizeArg,cplusplus.SelfAssignment,core.CallAndMessage,alpha.core.CallAndMessageUnInitRefArg,debug.DumpCalls,debug.DumpCallGraph,debug.ViewCallGraph,alpha.core.CastSize,alpha.core.CastToStruct,alpha.unix.Chroot,osx.cocoa.ClassRelease,alpha.clone.CloneChecker,debug.ConfigDumper,alpha.core.Conversion,valist.CopyToSelf,deadcode.DeadStores,alpha.cplusplus.DeleteWithNonVirtualDtor,core.NullDereference,alpha.osx.cocoa.DirectIvarAssignment,alpha.osx.cocoa.DirectIvarAssignmentForAnnotatedFunctions,core.DivideZero,debug.DumpDominators,unix.DynamicMemoryModeling,alpha.core.DynamicTypeChecker,core.DynamicTypePropagation,optin.osx.cocoa.localizability.EmptyLocalizationContextChecker,alpha.cplusplus.EnumCastOutOfRange,debug.ViewExplodedGraph,debug.ExprInspection,alpha.core.FixedAddr,security.FloatLoopCounter,optin.performance.GCDAntipattern,apiModeling.google.GTest,alpha.security.taint.TaintPropagation,alpha.core.IdenticalExpr,cplusplus.InnerPointer,alpha.osx.cocoa.InstanceVariableInvalidation,alpha.cplusplus.InvalidatedIterator,alpha.cplusplus.IteratorModeling,alpha.cplusplus.IteratorRange,alpha.osx.cocoa.IvarInvalidationModeling,alpha.llvm.Conventions,debug.DumpLiveStmts,debug.DumpLiveVars,osx.MIG,optin.mpi.MPI-Checker,osx.SecKeychainAPI,osx.API,unix.Malloc,alpha.security.MallocOverflow,unix.MallocSizeof,unix.MismatchedDeallocator,alpha.cplusplus.MismatchedIterator,alpha.osx.cocoa.MissingInvalidationMethod,alpha.security.MmapWriteExec,cplusplus.Move,osx.cocoa.NSAutoreleasePool,osx.cocoa.NSError,osx.NSOrCFErrorDerefChecker,cplusplus.NewDelete,cplusplus.NewDeleteLeaks,osx.cocoa.NilArg,core.builtin.NoReturnFunctions,optin.osx.cocoa.localizability.NonLocalizedStringChecker,core.NonNullParamChecker,core.NonnilStringConstants,nullability.NullPassedToNonnull,nullability.NullReturnedFromNonnull,nullability.NullabilityBase,nullability.NullableDereferenced,nullability.NullablePassedToNonnull,nullability.NullableReturnedFromNonnull,osx.NumberObjectConversion,optin.osx.OSObjectCStyleCast,osx.OSObjectRetainCount,osx.cocoa.AtSync,osx.coreFoundation.containers.PointerSizedValues,osx.coreFoundation.containers.OutOfBounds,osx.cocoa.Dealloc,osx.cocoa.ObjCGenerics,osx.cocoa.Loops,osx.cocoa.IncompatibleMethodTypes,osx.cocoa.NonNilReturnValue,osx.ObjCProperty,osx.cocoa.SelfInit,osx.cocoa.MissingSuperCall,osx.cocoa.SuperDealloc,osx.cocoa.UnusedIvars,optin.performance.Padding,alpha.osx.cocoa.localizability.PluralMisuseChecker,alpha.core.PointerArithm,alpha.core.PointerSub,alpha.unix.PthreadLock,debug.ReportStmts,osx.cocoa.RetainCountBase,osx.cocoa.RetainCount,alpha.security.ReturnPtrRange,core.uninitialized.UndefReturn,osx.cocoa.RunLoopAutoreleaseLeak,security.insecureAPI.SecuritySyntaxChecker,alpha.unix.SimpleStream,alpha.core.SizeofPtr,cplusplus.SmartPtr,alpha.core.StackAddressAsyncEscape,core.StackAddrEscapeBase,core.StackAddressEscape,apiModeling.StdCLibraryFunctions,alpha.unix.Stream,debug.TaintTest,alpha.core.TestAfterDivZero,debug.DumpTraversal,apiModeling.TrustNonnull,security.insecureAPI.UncheckedReturn,core.uninitialized.Branch,core.uninitialized.CapturedBlockVariable,core.UndefinedBinaryOperatorResult,core.uninitialized.ArraySubscript,core.uninitialized.Assign,valist.Uninitialized,alpha.cplusplus.UninitializedObject,unix.API,optin.portability.UnixAPI,alpha.deadcode.UnreachableCode,valist.Unterminated,core.VLASize,valist.ValistBase,osx.cocoa.VariadicMethodTypes,unix.Vfork,optin.cplusplus.VirtualCall,security.insecureAPI.bcmp,security.insecureAPI.bcopy,security.insecureAPI.bzero,security.insecureAPI.getpw,security.insecureAPI.gets,security.insecureAPI.mkstemp,security.insecureAPI.mktemp,security.insecureAPI.rand,security.insecureAPI.strcpy,security.insecureAPI.vfork,alpha.unix.cstring,unix,alpha.clone,alpha,debug,osx.coreFoundation,apiModeling,core,optin,unix.cstring,optin.portability,nullability,core.uninitialized,apiModeling.google,alpha.security.taint,alpha.deadcode,alpha.cplusplus,alpha.osx.cocoa,optin.cplusplus,optin.osx.cocoa,deadcode,optin.performance,cplusplus,osx.coreFoundation.containers,osx.cocoa,core.builtin,alpha.llvm,optin.osx.cocoa.localizability,alpha.osx.cocoa.localizability,optin.osx,valist,alpha.osx,alpha.security,security,alpha.unix,osx,llvm,alpha.core,security.insecureAPI,optin.mpi,
-analyzer-checker
c89,c90,iso9899:1990,iso9899:199409,gnu89,gnu90,c99,iso9899:1999,c9x,iso9899:199x,gnu99,gnu9x,c11,iso9899:2011,c1x,iso9899:201x,gnu11,gnu1x,c17,iso9899:2017,c18,iso9899:2018,gnu17,gnu18,c++98,c++03,gnu++98,gnu++03,c++11,c++0x,gnu++11,gnu++0x,c++14,c++1y,gnu++14,gnu++1y,c++17,c++1z,gnu++17,gnu++1z,c++2a,gnu++2a,cl1.0,cl,cl1.1,cl1.2,cl2.0,c++,CL,CL1.1,CL1.2,CL2.0,cuda,hip,
-std=
--std=
<action group>
<CompileOnly group>
<g group>
<W/R group>
<I group>
<I/i group>
<T/e/s/t/u group>
<M group>
<O group>
<Preprocessor group>
<R group>
<R (with value) group>
<Static analyzer group>
<T group>
<W group>
<W (with value) group>
</M group>
</volatile group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang_ignored_gcc_optimization_f_Group>
<clang legacy flags>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<gN group>
<gTune group>
<g flags group>
<gfortran group>
<ggdbN group>
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<aarch64 features group>
<amdgpu features group>
<arm features group>
<hexagon features group>
<m libc group>
<mips features group>
<ppc features group>
<riscv features group>
<wasm features group>
<x86 features group>
<opencl group>
<pedantic group>
<reserved libs group>
<u group>
<input>
Print (but do not run) the commands to run for this compilation
Display available options
add-plugin
Use the named plugin action in addition to the default action
<name>
all-warnings
all_load
allowable_client
analyze-auto
analyze-function=
analyze-function
Run analysis on specific function (for C++ include parameters in name)
analyze-
analyzer-checker-help
Display the list of analyzer checkers that are available
analyzer-checker=
analyzer-checker
Choose analyzer checkers to enable
analyzer-config-compatibility-mode=
analyzer-config-compatibility-mode
Don't emit errors on invalid analyzer-config inputs
analyzer-config-help
Display the list of -analyzer-config options
analyzer-config
Choose analyzer options to enable
analyzer-constraints=
analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
analyzer-disable-all-checks
Disable all static analyzer checks
analyzer-disable-checker=
analyzer-disable-checker
Choose analyzer checkers to disable
analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
analyzer-display-progress
Emit verbose output about the analyzer's progress
analyzer-dump-egraph=
analyzer-dump-egraph
Dump exploded graph to the specified file
analyzer-inline-max-stack-depth=
analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
analyzer-inlining-mode=
analyzer-inlining-mode
Specify the function selection heuristic used during inlining
analyzer-list-enabled-checkers
Display the list of enabled analyzer checkers
analyzer-max-loop
The maximum number of times the analyzer will go through a loop
analyzer-no-default-checks
analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
analyzer-output=
analyzer-output
Static analyzer report output format (html|plist|plist-multi-file|plist-html|text).
Source Code Analysis - Output Options
analyzer-purge=
analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
analyzer-stats
Print internal analyzer statistics.
analyzer-store=
analyzer-store
Source Code Analysis - Abstract Memory Store Models
analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
analyze
Run the static analyzer
Run static analysis engine
ansi
arch:
Set architecture for code generation
arch_errors_fatal
arch_only
arch
arcmt-check
Check for ARC migration issues that need manual handling
arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
arcmt-migrate-report-output
Output path for the plist report
arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
arcmt-modify
Apply modifications to files to conform to ARC
assemble
assert=
ast-dump-all
Build ASTs and then debug dump them, forcing deserialization
ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
ast-dump-lookups
Build ASTs and then debug dump their name lookup tables
ast-dump
Build ASTs and then debug dump them
ast-list
Build ASTs and print the list of declaration node qualified names
ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
ast-print
Build ASTs and then pretty-print them
ast-view
Build ASTs and view them with GraphViz
autocomplete=
aux-triple
Auxiliary target triple.
bigobj
bind_at_load
bootclasspath=
bootclasspath
Brepro-
Emit an object file which cannot be reproduced over time
Brepro
Emit an object file which can be reproduced over time
building-pch-with-obj
This compilation is part of building a PCH with corresponding object file.
bundle_loader
bundle
Add <dir> to search path for binaries and object files used implicitly
<dir>
c-isystem
Add directory to the C SYSTEM include search path
<directory>
cc1as
ccc-arcmt-check
ccc-arcmt-migrate
ccc-arcmt-modify
ccc-gcc-name
Name for native GCC compiler
<gcc-path>
ccc-install-dir
Simulate installation in the given directory
ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
ccc-print-bindings
Show bindings of tools to actions
ccc-print-phases
Dump list of actions to perform
ccc-
Include comments from within macros in preprocessed output
cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
cfguard
Emit tables required for Windows Control Flow Guard.
cgthreads
chain-include
Include and chain a header file after turning it into PCH
<file>
cl-denorms-are-zero
OpenCL only. Allow denormals to be flushed to zero.
cl-ext=
OpenCL only. Enable or disable OpenCL extensions. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
cl-kernel-arg-info
OpenCL only. Generate kernel argument metadata.
cl-mad-enable
OpenCL only. Allow use of less precise MAD computations in the generated binary.
cl-no-signed-zeros
OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
cl-opt-disable
OpenCL only. This option disables all optimizations. By default optimizations are enabled.
cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
cl-std=
OpenCL language standard to compile for.
cl,CL,cl1.1,CL1.1,cl1.2,CL1.2,cl2.0,CL2.0,c++
cl-strict-aliasing
OpenCL only. This option is added for compatibility with OpenCL 1.0.
cl-uniform-work-group-size
OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
clang:
Pass <arg> to the clang driver
<arg>
CLASSPATH=
classpath=
CLASSPATH
classpath
client_name
code-completion-at=
code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
code-completion-brief-comments
Include brief documentation comments in code-completion results.
code-completion-macros
Include macros in code-completion results
code-completion-patterns
Include code patterns in code-completion results
code-completion-with-fixits
Include code completion results which require small fix-its.
combine
comments-in-macros
comments
compatibility_version
compiler-options-dump
Dump the compiler configuration options
compile
compress-debug-sections=
DWARF debug sections compression type
compress-debug-sections
DWARF debug sections compression
config-system-dir=
System directory for configuration files
config-user-dir=
User directory for configuration files
Specifies configuration file
constant-cfstrings
coverage-cfg-checksum
Emit CFG checksum for functions in .gcno files.
coverage-data-file=
coverage-data-file
Emit coverage data to this filename.
coverage-exit-block-before-body
Emit the exit block before the body blocks in .gcno files.
coverage-no-function-names-in-data
Emit function names in .gcda files.
coverage-notes-file=
coverage-notes-file
Emit coverage notes to this filename.
coverage-version=
Four-byte version string for gcov files.
coverage
cpp-precomp
cuda-compile-host-device
Compile CUDA code for both host and device (default).  Has no effect on non-CUDA compilations.
cuda-device-only
Compile CUDA code for device only
cuda-gpu-arch=
CUDA GPU architecture (e.g. sm_35).  May be specified more than once.
cuda-host-only
Compile CUDA code for host only.  Has no effect on non-CUDA compilations.
cuda-include-ptx=
Include PTX for the follwing GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
cuda-noopt-device-debug
Enable device-side debug info generation. Disables ptxas optimizations.
cuda-path-ignore-env
Ignore environment variables to detect CUDA installation
cuda-path=
CUDA installation path
current_version
cxx-isystem
Add directory to the C++ SYSTEM include search path
Include comments in preprocessed output
Don't discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
d1PP
Retain macro definitions in /E mode
d1reportAllClassLayout
Dump record layout information
d2FastFail
d2Zi+
Print macro definitions in -E mode in addition to normal output
dead_strip
debug-forward-template-params
Emit complete descriptions of template parameters in forward declarations
debug-info-kind=
debug-info-macro
Emit macro debug information
debug=
debugger-tuning=
debug
define-macro=
define-macro
defsym
Define a value for a symbol
dependencies
dependency-dot
Filename to write DOT-formatted header dependencies to
dependency-file
Filename (or -) to write dependency output to
dependent-lib=
Add dependent library
detailed-preprocessing-record
include a detailed record of preprocessing actions
diagnostic-log-file
Filename (or -) to log diagnostics to
diagnostics:caret
Enable caret and column diagnostics (on by default)
diagnostics:classic
Disable column and caret diagnostics
diagnostics:column
Disable caret diagnostics but keep column info
disable-free
Disable freeing of memory on exit
disable-lifetime-markers
Disable lifetime-markers emission even when optimizations are enabled
disable-llvm-optzns
disable-llvm-passes
Use together with -emit-llvm to get pristine LLVM IR from the frontend by not running any LLVM passes at all
disable-llvm-verifier
Don't run the LLVM IR verifier pass
disable-O0-optnone
Disable adding the optnone attribute to functions at O0
disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
disable-red-zone
Do not emit code that uses the red zone.
discard-value-names
Discard value names in LLVM IR
Print include directives in -E mode in addition to normal output
Print macro definitions in -E mode instead of normal output
driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', or 'cl'
dump-coverage-mapping
Dump the coverage mapping records, for testing
dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
dump-raw-tokens
Lex file in raw mode and dump raw tokens
dump-tokens
Run preprocessor, dump internal rep of tokens
dumpmachine
dumpspecs
dumpversion
dwarf-column-info
Turn on column location information.
dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
dwarf-explicit-import
Generate explicit import from anonymous namespace to containing scope
dwarf-ext-refs
Generate debug info with external references to clang modules or precompiled headers
dwarf-version=
dyld-prefix=
dyld-prefix
dylib_file
dylinker_install_name
dylinker
dynamiclib
Define <macro> to <value> (or 1 if <value> omitted)
<macro>=<value>
Define macro
<macro[=value]>
Exception handling model
emit-ast
Emit Clang AST files for source inputs
emit-codegen-only
Generate machine code, but discard output
emit-header-module
Generate pre-compiled module file from a set of header files
emit-html
Output input source as HTML
emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
emit-llvm-only
Build ASTs and convert to LLVM, discarding output
emit-llvm-uselists
Preserve order of LLVM use-lists when serializing
emit-llvm
Use the LLVM representation for assembler and object files
emit-module-interface
Generate pre-compiled module file from a C++ module interface
emit-module
Generate pre-compiled module file from a module map
emit-obj
Emit native object files
emit-pch
Generate pre-compiled header file
enable-split-dwarf=
Set DWARF fission mode to either 'split' or 'single'
split,single
enable-split-dwarf
Use DWARF fission in 'split' mode
enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang
Trivial automatic variable initialization to zero is only here for benchmarks, it'll eventually be removed, and I'm OK with that because I'm only using it to benchmark
encoding=
Eonly
Just run preprocessor, no output (for timings)
Disable linemarker output and preprocess to stdout
error-on-deserialized-decl=
error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
errorReport
execution-charset:
Runtime encoding, supports only UTF-8
exported_symbols_list
extdirs=
extdirs
extend-lifetimes=
extra-warnings
Only run the preprocessor
Preprocess to stdout
faccess-control
faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
faddrsig
Emit an address-significance table
faggressive-function-elimination
falign-commons
falign-functions=
falign-functions
falign-jumps=
falign-jumps
falign-labels=
falign-labels
falign-loops=
falign-loops
faligned-alloc-unavailable
Aligned allocation/deallocation functions are unavailable
faligned-allocation
Enable C++17 aligned allocation functions
faligned-new=
faligned-new
fall-intrinsics
fallback
Fall back to cl.exe if clang-cl fails to compile
fallow-editor-placeholders
Treat editor placeholders as valid source code
fallow-half-arguments-and-returns
Allow function arguments and returns of type half
fallow-pch-with-compiler-errors
Accept a PCH file that was created with compiler errors
fallow-unsupported
faltivec
fansi-escape-codes
Use ANSI escape codes for diagnostics
fapinotes-cache-path=
Does nothing; API notes are no longer cached separately from modules
fapinotes-modules
Enable module-based external API notes support
fapinotes-swift-version=
Specify the Swift version to use when filtering API notes
<version>
fapinotes
Enable external API notes support
fapple-kext-vtable-mitigation
Enable mitigation for kernel v-table exploits through null pointers
fapple-kext
Use Apple's kernel extensions ABI
fapple-link-rtlib
Force linking the clang builtins runtime library
fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
fapplication-extension
Restrict code to those available for App Extensions
fasm-blocks
fasm
fassociative-math
fassume-sane-operator-new
fastcp
fastf
fasynchronous-unwind-tables
fauto-profile-accurate
fauto-profile=
fauto-profile
fautolink
fautomatic
favor
Output assembly code file during compilation
Output assembly code to this file during compilation (with /FA)
<file or directory>
fbackslash
fbacktrace
fblas-matmul-limit=
fblocks-runtime-optional
Weakly link in the blocks runtime
fblocks
Enable the 'blocks' language feature
fbootclasspath=
fborland-extensions
Accept non-standard constructs supported by the Borland compiler
fbounds-check
fbracket-depth=
fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
fbranch-count-reg
fbuild-session-file=
Use the last modification time of <file> as the build session timestamp
fbuild-session-timestamp=
Time when the current build session started
<time since Epoch in seconds>
fbuiltin-module-map
Load the clang builtins module map file.
fbuiltin
fc++-static-destructors
Enable C++ static destructor registration (the default)
fcall-saved-x10
Make the x10 register call-saved (AArch64 only)
fcall-saved-x11
Make the x11 register call-saved (AArch64 only)
fcall-saved-x12
Make the x12 register call-saved (AArch64 only)
fcall-saved-x13
Make the x13 register call-saved (AArch64 only)
fcall-saved-x14
Make the x14 register call-saved (AArch64 only)
fcall-saved-x15
Make the x15 register call-saved (AArch64 only)
fcall-saved-x18
Make the x18 register call-saved (AArch64 only)
fcall-saved-x8
Make the x8 register call-saved (AArch64 only)
fcall-saved-x9
Make the x9 register call-saved (AArch64 only)
fcaller-saves
fcaret-diagnostics-max-lines
Set the maximum number of source lines to show in a caret diagnostic
fcaret-diagnostics
fcf-protection=
Instrument control-flow architecture protection. Options: return, branch, full, none.
return,branch,full,none
fcf-protection
Enable cf-protection in 'full' mode
fcf-runtime-abi=
fchar8_t
Enable C++ builtin type char8_t
fcheck-array-temporaries
fcheck-new
fcheck=
fclang-abi-compat=
Attempt to match the ABI of Clang <version>
<major>.<minor>,latest
fclasspath=
fcoarray=
fcolor-diagnostics
Use colors in diagnostics
fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
fcommon
fcompile-resource=
fcomplete-member-pointers
Require member pointer base types to be complete if they would be significant under the Microsoft ABI
fconcepts-ts
Enable C++ Extensions for Concepts.
fconst-strings
Use a const qualified type for string literals in C and ObjC
fconstant-array-class=
fconstant-cfstrings
fconstant-dictionary-class=
fconstant-double-number-class=
fconstant-float-number-class=
fconstant-integer-number-class=
fconstant-string-class=
fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
fconstexpr-backtrace-limit=
fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
fconstexpr-depth=
fconstexpr-depth
Maximum depth of recursive constexpr function calls
fconstexpr-steps=
fconstexpr-steps
Maximum number of steps in constexpr function evaluation
fconvert=
fcoroutines-ts
Enable support for the C++ Coroutines TS
fcoverage-mapping
Generate coverage mapping to enable code coverage analysis
fcrash-diagnostics-dir=
fcray-pointer
fcreate-profile
fcuda-allow-variadic-functions
Allow variadic functions in CUDA device code.
fcuda-approx-transcendentals
Use approximate transcendental functions
fcuda-flush-denormals-to-zero
Flush denormal floating point values to zero in CUDA device mode.
fcuda-include-gpubinary
Incorporate CUDA device-side binary into host object file.
fcuda-is-device
Generate code for CUDA device
fcuda-rdc
fcuda-short-ptr
Use 32-bit pointers for accessing const/local/shared address spaces.
fcxx-exceptions
Enable C++ exceptions
fcxx-modules
fd-lines-as-code
fd-lines-as-comments
fdata-sections
Place each data in its own section (ELF Only)
fdebug-compilation-dir
The compilation directory to embed in the debug info.
fdebug-info-for-profiling
Emit extra debug info to make sample profile more accurate.
fdebug-macro
fdebug-pass-arguments
fdebug-pass-manager
Prints debug information for the new pass manager
fdebug-pass-structure
fdebug-prefix-map=
remap file source paths in debug info
fdebug-ranges-base-address
Use DWARF base address selection entries in debug_ranges
fdebug-types-section
Place debug types in their own section (ELF Only)
fdebugger-cast-result-to-id
Enable casting unknown expression results to id
fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
fdebugger-support
Enable special debugger support behavior
fdeclspec
Allow __declspec as a keyword
fdefault-calling-conv=
Set default calling convention
cdecl,fastcall,stdcall,vectorcall,regcall
fdefault-double-8
fdefault-inline
fdefault-integer-8
fdefault-real-8
fdefer-pop
fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
fdelete-null-pointer-checks
Treat usage of null pointers as undefined behavior.
fdenormal-fp-math=
fdepfile-entry=
fdeprecated-macro
Defines the __DEPRECATED macro
fdevirtualize-speculatively
fdevirtualize
fdiagnostics-absolute-paths
Print absolute paths in diagnostics
fdiagnostics-color=
fdiagnostics-color
fdiagnostics-fixit-info
fdiagnostics-format=
fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
clang,msvc,msvc-fallback,vi
fdiagnostics-hotness-threshold=
Prevent optimization remarks from being output if they do not have at least this profile count
<number>
fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
fdiagnostics-print-source-range-info
Print source range spans in numeric form
fdiagnostics-show-category=
fdiagnostics-show-category
Print diagnostic category
none,id,name
fdiagnostics-show-hotness
Enable profile hotness information in diagnostic line
fdiagnostics-show-location=
fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
fdiagnostics-show-option
Print option name with mappable diagnostics
fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
fdigraphs
Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
fdisable-module-hash
Disable the module hash
fdiscard-value-names
fdollar-ok
fdollars-in-identifiers
Allow '$' in identifiers
fdouble-square-bracket-attributes
Enable '[[]]' attributes in all C and C++ language modes
fdump-fortran-optimized
fdump-fortran-original
fdump-parse-tree
fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
fdump-record-layouts
fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
fdwarf-directory-asm
fdwarf-exceptions
Use DWARF style exceptions
fdwarf2-cfi-asm
felide-constructors
feliminate-unused-debug-symbols
feliminate-unused-debug-types
fembed-bitcode-marker
Embed placeholder LLVM IR data as a marker
fembed-bitcode=
Embed LLVM bitcode (option: off, all, bitcode, marker)
<option>
fembed-bitcode
Embed LLVM IR bitcode as data
femit-all-decls
Emit all declarations, even if unused
femit-coverage-data
Instrument the program to emit gcov coverage data when run.
femit-coverage-notes
Emit a gcov coverage notes file when compiling.
femulated-tls
Use emutls functions to access thread_local variables
fenable-matrix
Enable matrix data type and related builtin functions
fencode-extended-block-signature
enable extended encoding of block type signature
fencoding=
ferror-limit=
ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
fescaping-block-tail-calls
fexceptions
Enable support for exception handling
fexcess-precision=
fexec-charset=
fexpensive-optimizations
fexperimental-isel
Enables the experimental global instruction selector
fexperimental-new-pass-manager
Enables an experimental new pass manager in LLVM.
fexperimental-optimized-noescape
fextdirs=
fextended-identifiers
fexternal-blas
fexternc-nounwind
Assume all functions with C linkage do not unwind
Set output executable file or directory (ends in / or \)
ff2c
ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
ffast-math
Allow aggressive, lossy floating-point optimizations
ffat-lto-objects
ffine-grained-bitfield-accesses
Use separate accesses for consecutive bitfield runs with legal widths and alignments.
ffinite-math-only
ffixed-form
ffixed-line-length-
ffixed-point
Enable fixed point types
ffixed-r19
Reserve register r19 (Hexagon only)
ffixed-r9
Reserve the r9 register (ARM only)
ffixed-x18
Reserve the 18 register (AArch64 only)
ffixed-x1
Reserve the 1 register (AArch64 only)
ffixed-x20
Reserve the 20 register (AArch64 only)
ffixed-x2
Reserve the 2 register (AArch64 only)
ffixed-x3
Reserve the 3 register (AArch64 only)
ffixed-x4
Reserve the 4 register (AArch64 only)
ffixed-x5
Reserve the 5 register (AArch64 only)
ffixed-x6
Reserve the 6 register (AArch64 only)
ffixed-x7
Reserve the 7 register (AArch64 only)
ffloat-store
ffor-scope
fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
fforce-addr
fforce-emit-vtables
Emits more virtual tables to improve devirtualization
fforce-enable-int128
Enable support for int128_t type
ffp-contract=
Form fused FP ops (e.g. FMAs): fast (everywhere) | on (according to FP_CONTRACT pragma, default) | off (never fuse)
fast,on,off
ffpe-trap=
ffree-form
ffree-line-length-
ffreestanding
Assert that the compilation takes place in a freestanding environment
ffriend-injection
ffrontend-optimize
ffunction-attribute-list
ffunction-sections
Place each function in its own section (ELF Only)
fgcse-after-reload
fgcse-las
fgcse-sm
fgcse
fgnu-inline-asm
fgnu-keywords
Allow GNU-extension keywords regardless of language standard
fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
fgnu89-inline
Use the gnu89 inline semantics
fgnu
fgpu-rdc
Generate relocatable device code, also known as separate compilation mode.
fheinous-gnu-extensions
fhip-dump-offload-linker-script
fhonor-infinites
fhonor-infinities
fhonor-nans
fhosted
fident
fignore-objc-weak
ignore __weak qualifiers in manual reference counting
filelist
filetype
Specify the output file type ('asm', 'null', or 'obj')
fimplement-inlines
fimplicit-module-maps
Implicitly search the file system for module map files.
fimplicit-modules
fimplicit-none
fimplicit-templates
finclude-default-header
Include the default header file for OpenCL
findirect-virtual-calls
finit-character=
finit-integer=
finit-local-zero
finit-logical=
finit-real=
finline-functions-called-once
finline-functions
Inline suitable functions
finline-hint-functions
Inline functions which are (explicitly or implicitly) marked inline
finline-limit=
finline-limit
finline-small-functions
finline
finput-charset=
finstrument-function-entry-bare
Instrument function entry only, after inlining, without arguments to the instrumentation call
finstrument-functions-after-inlining
Like -finstrument-functions, but insert the calls after inlining
finstrument-functions
Generate calls to instrument function entry and exit
finteger-4-integer-8
fintegrated-as
Enable the integrated assembler
fintrinsic-modules-path
fipa-cp
fivopts
fix-only-warnings
Apply fix-it advice only for warnings, not errors
fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
fixit-recompile
Apply fix-it changes and recompile
fixit-to-temporary
Apply fix-it changes to temporary files
fixit=
Apply fix-it advice creating a file with the given suffix
fixit
Apply fix-it advice to the input source
Include file before parsing
Set preprocess output file name (with /P)
fjump-tables
fkeep-inline-functions
fkeep-static-consts
Keep static const variables even if unused
flat_namespace
flax-vector-conversions
flimit-debug-info
flimited-precision=
flto-jobs=
Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
flto-unit
Emit IR to support LTO unit features (CFI, whole program vtable opt)
flto-visibility-public-std
Use public LTO visibility for classes in std and stdext namespaces
flto=
Set LTO mode to either 'full' or 'thin'
thin,full
flto
Enable LTO in 'full' mode
fmacro-backtrace-limit=
fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
fmath-errno
Require math functions to indicate errors by setting errno
fmax-array-constructor=
fmax-errors=
fmax-identifier-length
fmax-stack-var-size=
fmax-subrecord-length=
fmax-type-align=
Specify the maximum alignment to enforce on pointers lacking an explicit alignment
fmerge-all-constants
Allow merging of constants
fmerge-constants
fmerge-functions
Permit merging of identical functions when optimizing.
fmessage-length=
fmessage-length
Format message diagnostics so that they fit within N columns or fewer, when possible.
fmodule-feature
Enable <feature> in module map requires declarations
<feature>
fmodule-file-deps
fmodule-file=
Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
[<name>=]<file>
fmodule-format=
Select the container format for clang modules and PCH. Supported options are 'raw' and 'obj'.
fmodule-implementation-of
fmodule-map-file-home-is-cwd
Use the current working directory as the home directory of module maps specified by -fmodule-map-file=<FILE>
fmodule-map-file=
Load this module map file
fmodule-maps
fmodule-name=
Specify the name of the module to build
fmodule-name
fmodule-private
fmodules-cache-path=
Specify the module cache path
fmodules-codegen
Generate code for uses of this module that assumes an explicit object file will be built for the module
fmodules-debuginfo
Generate debug info for types in an object file built from this module and do not generate them elsewhere
fmodules-decluse
Require declaration of modules used within a module
fmodules-disable-diagnostic-validation
Disable validation of the diagnostic options when loading the module
fmodules-embed-all-files
Embed the contents of all files read by this compilation into the produced module file.
fmodules-embed-file=
Embed the contents of the specified file into the module file being compiled.
fmodules-hash-content
Enable hashing the content of a module file
fmodules-hash-error-diagnostics
Use a separate module cache for modules compiled with conflicting -Werror options
fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
fmodules-local-submodule-visibility
Enforce name visibility rules across submodules of the same top-level module.
fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
fmodules-search-all
Search even non-imported modules to resolve references
fmodules-strict-decluse
Like -fmodules-decluse but requires all headers to be in modules
fmodules-ts
Enable support for the C++ Modules TS
fmodules-user-build-path
Specify the module user build path
fmodules-validate-once-per-build-session
Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
fmodules-validate-system-headers
Validate the system headers that a module depends on when loading the module
fmodules
Enable the 'modules' language feature
fmodulo-sched-allow-regmoves
fmodulo-sched
fms-compatibility-version=
Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fms-compatibility
Enable full Microsoft Visual C++ compatibility
fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
fms-memptr-rep=
fms-volatile
fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fmudflapth
fmudflap
fnative-half-arguments-and-returns
Use the native __fp16 type for arguments and returns (and skip ABI-specific lowering)
fnative-half-type
Use the native half type for __fp16 instead of promoting to float
fnested-functions
fnew-alignment=
Specifies the largest alignment guaranteed by '::operator new(size_t)'
<align>
fnew-alignment
fnext-runtime
fno-access-control
Disable C++ access control
fno-addrsig
Don't emit an address-significance table
fno-aggressive-function-elimination
fno-align-commons
fno-align-functions
fno-align-jumps
fno-align-labels
fno-align-loops
fno-aligned-allocation
fno-aligned-new
fno-all-intrinsics
fno-allow-editor-placeholders
fno-altivec
fno-apinotes-modules
Disable module-based external API notes support
fno-apinotes
Disable external API notes support
fno-apple-pragma-pack
fno-application-extension
fno-asm-blocks
fno-asm
fno-associative-math
fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
fno-asynchronous-unwind-tables
fno-auto-profile-accurate
fno-auto-profile
fno-autolink
Disable generation of linker directives for automatic library linking
fno-automatic
fno-backslash
fno-backtrace
fno-bitfield-type-align
Ignore bit-field types when aligning structures
fno-blocks
fno-borland-extensions
fno-bounds-check
fno-branch-count-reg
fno-builtin-
Disable implicit builtin knowledge of a specific function
fno-builtin
Disable implicit builtin knowledge of functions
fno-c++-static-destructors
Disable C++ static destructor registration
fno-caller-saves
fno-caret-diagnostics
fno-char8_t
Disable C++ builtin type char8_t
fno-check-array-temporaries
fno-check-new
fno-color-diagnostics
fno-common
Compile common globals like normal definitions
fno-complete-member-pointers
Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
fno-constant-nsarray-literals
Disable creation of CodeFoundation-type constant initializer `NSArray`s from array literals
fno-constant-nsdictionary-literals
Disable creation of CodeFoundation-type constant initializer `NSDictionary`s from dictionary literals
fno-constant-nsnumber-literals
Disable creation of CodeFoundation-type constant initializer `NSNumber`s from number literals
fno-coroutines-ts
fno-coverage-mapping
Disable code coverage analysis
fno-crash-diagnostics
Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
fno-cray-pointer
fno-cuda-approx-transcendentals
fno-cuda-flush-denormals-to-zero
fno-cuda-host-device-constexpr
Don't treat unattributed constexpr functions as __host__ __device__.
fno-cuda-rdc
fno-cuda-short-ptr
fno-cxx-exceptions
fno-cxx-modules
fno-d-lines-as-code
fno-d-lines-as-comments
fno-data-sections
fno-debug-info-for-profiling
Do not emit extra debug info for sample profiler.
fno-debug-macro
Do not emit macro debug information
fno-debug-pass-manager
Disables debug printing for the new pass manager
fno-debug-ranges-base-address
fno-debug-types-section
fno-declspec
Disallow __declspec as a keyword
fno-default-double-8
fno-default-inline
fno-default-integer-8
fno-default-real-8
fno-defer-pop
fno-delayed-template-parsing
Disable delayed template parsing
fno-delete-null-pointer-checks
Do not treat usage of null pointers as undefined behavior.
fno-deprecated-macro
Undefines the __DEPRECATED macro
fno-devirtualize-speculatively
fno-devirtualize
fno-diagnostics-color
fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
fno-diagnostics-show-hotness
fno-diagnostics-show-note-include-stack
fno-diagnostics-show-option
fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
fno-digraphs
Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
fno-discard-value-names
Do not discard value names in LLVM IR
fno-dllexport-inlines
fno-dollar-ok
fno-dollars-in-identifiers
Disallow '$' in identifiers
fno-double-square-bracket-attributes
Disable '[[]]' attributes in all C and C++ language modes
fno-dump-fortran-optimized
fno-dump-fortran-original
fno-dump-parse-tree
fno-dwarf-directory-asm
fno-dwarf2-cfi-asm
fno-elide-constructors
Disable C++ copy constructor elision
fno-elide-type
Do not elide types when printing diagnostics
fno-eliminate-unused-debug-symbols
fno-eliminate-unused-debug-types
fno-emulated-tls
fno-escaping-block-tail-calls
fno-exceptions
fno-expensive-optimizations
fno-experimental-isel
Disables the experimental global instruction selector
fno-experimental-new-pass-manager
Disables an experimental new pass manager in LLVM.
fno-extended-identifiers
fno-external-blas
fno-f2c
fno-fast-math
fno-fat-lto-objects
fno-fine-grained-bitfield-accesses
Use large-integer access for consecutive bitfield runs.
fno-finite-math-only
fno-fixed-form
fno-fixed-point
Disable fixed point types
fno-float-store
fno-for-scope
fno-force-emit-vtables
fno-force-enable-int128
Disable support for int128_t type
fno-free-form
fno-friend-injection
fno-frontend-optimize
fno-function-attribute-list
fno-function-sections
fno-gcse-after-reload
fno-gcse-las
fno-gcse-sm
fno-gcse
fno-gnu-inline-asm
Disable GNU style inline asm
fno-gnu-keywords
fno-gnu89-inline
fno-gnu
fno-gpu-rdc
fno-honor-infinites
fno-honor-infinities
fno-honor-nans
fno-ident
fno-implement-inlines
fno-implicit-module-maps
fno-implicit-modules
fno-implicit-none
fno-implicit-templates
fno-init-local-zero
fno-inline-functions-called-once
fno-inline-functions
fno-inline-limit
fno-inline-small-functions
fno-inline
fno-integer-4-integer-8
fno-integrated-as
Disable the integrated assembler
fno-intrinsic-modules-path
fno-ipa-cp
fno-ivopts
fno-jump-tables
Do not use jump tables for lowering switches
fno-keep-inline-functions
fno-lax-vector-conversions
Disallow implicit conversions between vectors with a different number of elements or different element types
fno-limit-debug-info
fno-lto-unit
fno-lto
Disable LTO mode (default)
fno-math-builtin
Disable implicit builtin knowledge of math functions
fno-math-errno
fno-max-identifier-length
fno-max-type-align
fno-merge-all-constants
Disallow merging of constants
fno-merge-constants
fno-module-file-deps
fno-module-maps
fno-module-private
fno-modules-decluse
fno-modules-error-recovery
Do not automatically import modules for error recovery
fno-modules-global-index
Do not automatically generate or update the global module index
fno-modules-search-all
fno-modules-validate-system-headers
fno-modules
fno-modulo-sched-allow-regmoves
fno-modulo-sched
fno-ms-compatibility
fno-ms-extensions
fno-non-call-exceptions
fno-objc-arc-exceptions
fno-objc-arc
fno-objc-convert-messages-to-runtime-calls
fno-objc-exceptions
fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
fno-objc-legacy-dispatch
fno-objc-nonfragile-abi
fno-objc-weak
fno-omit-frame-pointer
fno-openmp-cuda-force-full-runtime
fno-openmp-cuda-mode
fno-openmp-simd
fno-openmp
fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
fno-optimize-sibling-calls
fno-pack-derived
fno-pack-struct
fno-padding-on-unsigned-fixed-point
fno-pascal-strings
fno-pch-timestamp
Disable inclusion of timestamp in precompiled headers
fno-peel-loops
fno-permissive
fno-PIC
fno-pic
fno-PIE
fno-pie
fno-plt
Do not use the PLT to make function calls
fno-prefetch-loop-arrays
fno-preserve-as-comments
Do not preserve comments in inline assembly
fno-printf
fno-profile-arcs
fno-profile-correction
fno-profile-generate-sampling
fno-profile-generate
Disable generation of profile instrumentation.
fno-profile-instr-generate
fno-profile-instr-use
Disable using instrumentation data for profile-guided optimization
fno-profile-reusedist
fno-profile-sample-accurate
fno-profile-sample-use
fno-profile-use
fno-profile-values
fno-profile
fno-protect-parens
fno-ptrauth-calls
fno-ptrauth-indirect-gotos
fno-ptrauth-intrinsics
fno-ptrauth-returns
fno-ptrauth-soft
fno-range-check
fno-real-4-real-10
fno-real-4-real-16
fno-real-4-real-8
fno-real-8-real-10
fno-real-8-real-16
fno-real-8-real-4
fno-realloc-lhs
fno-reciprocal-math
fno-record-command-line
fno-record-gcc-switches
fno-recursive
fno-register-global-dtors-with-atexit
Don't use atexit or __cxa_atexit to register global destructors
fno-regs-graph
fno-relaxed-template-template-args
fno-rename-registers
fno-reorder-blocks
fno-repack-arrays
fno-reroll-loops
Turn off loop reroller
fno-rewrite-imports
fno-rewrite-includes
fno-ripa
fno-ropi
fno-rounding-math
fno-rtlib-add-rpath
Do not add -rpath with architecture-specific resource directory to the linker flags
fno-rtti-data
Control emission of RTTI data
fno-rtti
Disable generation of rtti information
fno-rwpi
fno-sanitize-address-poison-custom-array-cookie
Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
fno-sanitize-address-use-after-scope
Disable use-after-scope detection in AddressSanitizer
fno-sanitize-address-use-odr-indicator
Disable ODR indicator globals
fno-sanitize-blacklist
Don't use blacklist file for sanitizers
fno-sanitize-cfi-cross-dso
Disable control flow integrity (CFI) checks for cross-DSO calls.
fno-sanitize-coverage=
Disable specified features of coverage instrumentation for Sanitizers
func,bb,edge,indirect-calls,trace-bb,trace-cmp,trace-div,trace-gep,8bit-counters,trace-pc,trace-pc-guard,no-prune,inline-8bit-counters
fno-sanitize-memory-track-origins
Disable origins tracking in MemorySanitizer
fno-sanitize-memory-use-after-dtor
Disable use-after-destroy detection in MemorySanitizer
fno-sanitize-minimal-runtime
fno-sanitize-recover=
Disable recovery for specified sanitizers
fno-sanitize-recover
fno-sanitize-stats
Disable sanitizer statistics gathering.
fno-sanitize-thread-atomics
Disable atomic operations instrumentation in ThreadSanitizer
fno-sanitize-thread-func-entry-exit
Disable function entry/exit instrumentation in ThreadSanitizer
fno-sanitize-thread-memory-access
Disable memory access instrumentation in ThreadSanitizer
fno-sanitize-trap=
Disable trapping for specified sanitizers
fno-sanitize-undefined-trap-on-error
fno-sanitize=
fno-save-optimization-record
fno-schedule-insns2
fno-schedule-insns
fno-second-underscore
fno-see
fno-short-enums
fno-short-wchar
Force wchar_t to be an unsigned int
fno-show-column
Do not include column number on diagnostics
fno-show-source-location
Do not include source location information with diagnostics
fno-sign-zero
fno-signaling-math
fno-signaling-nans
fno-signed-char
Char is unsigned
fno-signed-wchar
Use an unsigned type for wchar_t
fno-signed-zeros
Allow optimizations that ignore the sign of floating point zeros
fno-single-precision-constant
fno-sized-deallocation
fno-slp-vectorize-aggressive
fno-slp-vectorize
fno-spec-constr-count
fno-spell-checking
Disable spell-checking
fno-split-cold-code
Disable splitting of cold code when optimizing.
fno-split-dwarf-inlining
fno-stack-arrays
fno-stack-check
Disable stack checking
fno-stack-protector
Disable the use of stack protectors
fno-stack-size-section
Don't emit section containing metadata on function stack sizes
fno-standalone-debug
Limit debug information produced to reduce size of debug binary
fno-strength-reduce
fno-strict-aliasing
fno-strict-enums
fno-strict-float-cast-overflow
Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
fno-strict-modules-decluse
fno-strict-overflow
fno-strict-return
fno-strict-vtable-pointers
fno-struct-path-tbaa
fno-target-variant-availability-checks
fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
fno-tls-model
fno-tracer
fno-trapping-math
fno-tree-dce
fno-tree-salias
fno-tree-slp-vectorize
fno-tree-ter
fno-tree-vectorizer-verbose
fno-tree-vectorize
fno-tree-vrp
fno-tree_loop_im
fno-tree_loop_ivcanon
fno-tree_loop_linear
fno-trigraphs
Do not process trigraph sequences
fno-underscoring
fno-unique-section-names
fno-unit-at-a-time
fno-unroll-all-loops
fno-unroll-loops
Turn off loop unroller
fno-unsafe-loop-optimizations
fno-unsafe-math-optimizations
fno-unsigned-char
fno-unswitch-loops
fno-unwind-tables
fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
fno-use-init-array
Don't use .init_array instead of .ctors
fno-use-line-directives
fno-use-linker-plugin
fno-validate-pch
Disable validation of precompiled headers
fno-var-tracking
fno-variable-expansion-in-unroller
fno-vect-cost-model
fno-vectorize
fno-verbose-asm
fno-wchar
Disable C++ builtin type wchar_t
fno-web
fno-whole-file
fno-whole-program-vtables
fno-whole-program
fno-working-directory
fno-wrapv
fno-xray-always-emit-customevents
fno-xray-always-emit-typedevents
fno-xray-instrument
fno-zero-initialized-in-bss
fno-zvector
fnon-call-exceptions
fnoopenmp-relocatable-target
fnoopenmp-use-tls
fnoxray-link-deps
fobjc-abi-version=
fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
libc++,libstdc++,none
fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
fobjc-arc-unsafeclaim
Enable an optimization to dynamically avoid retain/releases of call results in __unsafe_unretained contexts
fobjc-arc
Synthesize retain and release calls for Objective-C pointers
fobjc-atdefs
fobjc-call-cxx-cdtors
fobjc-constant-literals
fobjc-convert-messages-to-runtime-calls
fobjc-dispatch-method=
Objective-C dispatch method to use
legacy,non-legacy,mixed
fobjc-exceptions
Enable Objective-C exceptions
fobjc-gc-only
Use GC exclusively for Objective-C related memory management
fobjc-gc
Enable Objective-C garbage collection
fobjc-infer-related-result-type
fobjc-legacy-dispatch
fobjc-link-runtime
fobjc-new-property
fobjc-nonfragile-abi-version=
fobjc-nonfragile-abi
fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
fobjc-runtime=
Specify the target Objective-C runtime kind and version
fobjc-sender-dependent-dispatch
fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
fobjc-weak
Enable ARC-style weak references in Objective-C
fomit-frame-pointer
fopenmp-cuda-blocks-per-sm=
fopenmp-cuda-force-full-runtime
fopenmp-cuda-mode
fopenmp-cuda-number-of-sm=
fopenmp-dump-offload-linker-script
fopenmp-host-ir-file-path
Path to the IR file produced by the frontend for the host.
fopenmp-is-device
Generate code only for an OpenMP target device.
fopenmp-relocatable-target
fopenmp-simd
Emit OpenMP code only for SIMD-based constructs.
fopenmp-targets=
Specify comma-separated list of triples OpenMP offloading targets to be supported
fopenmp-use-tls
fopenmp-version=
fopenmp=
fopenmp
Parse OpenMP pragmas and generate parallel code.
foperator-arrow-depth=
foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
foptimization-record-file=
Specify the file name of any generated YAML optimization record
foptimization-record-passes=
Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
foptimize-sibling-calls
for-linker=
for-linker
force-link=
force-link
force_cpusubtype_ALL
force_flat_namespace
force_load
foutput-class-dir=
foverride-record-layout=
Override record layouts with those in the given file
Set output object file, or directory (ends in / or \) (with /c)
fp:except-
fp:except
fp:fast
fp:precise
fp:strict
fpack-derived
fpack-struct=
Specify the default maximum struct packing alignment
fpack-struct
fpadding-on-unsigned-fixed-point
Force each unsigned fixed point type to have an extra bit of padding to align their scales with those of signed fixed point types
fparse-all-comments
fpascal-strings
Recognize and construct Pascal-style string literals
fpcc-struct-return
Override the default ABI to return all structs on the stack
fpch-preprocess
fpeel-loops
fpermissive
fPIC
fpic
fPIE
fpie
fplt
Use the PLT to make function calls
fplugin=
Load the named plugin (dynamic shared object)
<dsopath>
fprebuilt-module-path=
Specify the prebuilt module path
fprefetch-loop-arrays
fpreserve-as-comments
fpreserve-vec3-type
Preserve 3-component vector type
fprofile-arcs
fprofile-correction
fprofile-dir=
fprofile-exclude-files=
Instrument only functions from files where names don't match all the regexes separated by a semi-colon
fprofile-filter-files=
Instrument only functions from files where names match any regex separated by a semi-colon
fprofile-generate-sampling
fprofile-generate=
Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-generate
Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate=
Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
fprofile-instr-generate
Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
fprofile-instr-use=
Use instrumentation data for profile-guided optimization
fprofile-instr-use
fprofile-instrument-path=
fprofile-instrument-use-path=
Specify the profile path in PGO use compilation
fprofile-instrument=
Enable PGO instrumentation. The accepted value is clang, llvm, or none
none,clang,llvm
fprofile-remapping-file=
Use the remappings described in <file> to match the profile data against names in the program
fprofile-remapping-file
fprofile-reusedist
fprofile-sample-accurate
Specifies that the sample profile is accurate
fprofile-sample-use=
Enable sample-based profile guided optimizations
fprofile-sample-use
fprofile-use=
Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
<pathname>
fprofile-use
fprofile-values
fprofile
fprotect-parens
fptrauth-calls
Enable signing and authentication of all indirect calls
fptrauth-indirect-gotos
Enable signing and authentication of indirect goto targets
fptrauth-intrinsics
Enable pointer-authentication intrinsics
fptrauth-returns
Enable signing and authentication of return addresses
fptrauth-soft
Enable software lowering of pointer authentication
Set pch filename (with /Yc and /Yu)
<filename>
frandom-seed=
frange-check
freal-4-real-10
freal-4-real-16
freal-4-real-8
freal-8-real-10
freal-8-real-16
freal-8-real-4
frealloc-lhs
freciprocal-math
Allow division operations to be reassociated
frecord-command-line
frecord-gcc-switches
frecord-marker=
frecursive
freg-struct-return
Override the default ABI to return small structs in registers
fregister-global-dtors-with-atexit
Use atexit or __cxa_atexit to register global destructors
fregs-graph
frelaxed-template-template-args
Enable C++17 relaxed template template argument matching
frename-registers
freorder-blocks
frepack-arrays
freroll-loops
Turn on loop reroller
fretain-comments-from-system-headers
frewrite-imports
frewrite-includes
frewrite-map-file=
frewrite-map-file
fripa
fropi
frounding-math
frtlib-add-rpath
Add -rpath with architecture-specific resource directory to the linker flags
frtti
frwpi
fsanitize-address-field-padding=
Level of field padding for AddressSanitizer
fsanitize-address-globals-dead-stripping
Enable linker dead stripping of globals in AddressSanitizer
fsanitize-address-poison-custom-array-cookie
Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
fsanitize-address-use-after-scope
Enable use-after-scope detection in AddressSanitizer
fsanitize-address-use-odr-indicator
Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
fsanitize-blacklist=
Path to blacklist file for sanitizers
fsanitize-cfi-cross-dso
Enable control flow integrity (CFI) checks for cross-DSO calls.
fsanitize-cfi-icall-generalize-pointers
Generalize pointers in CFI indirect call type signature checks
fsanitize-coverage-8bit-counters
Enable frequency counters in sanitizer coverage
fsanitize-coverage-indirect-calls
Enable sanitizer coverage for indirect calls
fsanitize-coverage-inline-8bit-counters
Enable inline 8-bit counters in sanitizer coverage
fsanitize-coverage-no-prune
Disable coverage pruning (i.e. instrument all blocks/edges)
fsanitize-coverage-pc-table
Create a table of coverage-instrumented PCs
fsanitize-coverage-stack-depth
Enable max stack depth tracing
fsanitize-coverage-trace-bb
Enable basic block tracing in sanitizer coverage
fsanitize-coverage-trace-cmp
Enable cmp instruction tracing in sanitizer coverage
fsanitize-coverage-trace-div
Enable div instruction tracing in sanitizer coverage
fsanitize-coverage-trace-gep
Enable gep instruction tracing in sanitizer coverage
fsanitize-coverage-trace-pc-guard
Enable PC tracing with guard in sanitizer coverage
fsanitize-coverage-trace-pc
Enable PC tracing in sanitizer coverage
fsanitize-coverage-type=
Sanitizer coverage type
fsanitize-coverage=
Specify the type of coverage instrumentation for Sanitizers
fsanitize-link-c++-runtime
fsanitize-memory-track-origins=
Enable origins tracking in MemorySanitizer
fsanitize-memory-track-origins
fsanitize-memory-use-after-dtor
Enable use-after-destroy detection in MemorySanitizer
fsanitize-minimal-runtime
fsanitize-recover=
Enable recovery for specified sanitizers
fsanitize-recover
fsanitize-stats
Enable sanitizer statistics gathering.
fsanitize-thread-atomics
Enable atomic operations instrumentation in ThreadSanitizer (default)
fsanitize-thread-func-entry-exit
Enable function entry/exit instrumentation in ThreadSanitizer (default)
fsanitize-thread-memory-access
Enable memory access instrumentation in ThreadSanitizer (default)
fsanitize-trap=
Enable trapping for specified sanitizers
fsanitize-undefined-strip-path-components=
Strip (or keep only, if negative) a given number of path components when emitting check metadata.
fsanitize-undefined-trap-on-error
fsanitize=
Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
<check>
fsave-optimization-record
Generate a YAML optimization record file
fsched-interblock
fschedule-insns2
fschedule-insns
fsecond-underscore
fsee
fseh-exceptions
Use SEH style exceptions
fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
fshort-wchar
Force wchar_t to be a short unsigned int
fshow-column
fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
best,all
fshow-source-location
fsign-zero
fsignaling-math
fsignaling-nans
fsigned-bitfields
fsigned-char
fsigned-wchar
Use a signed type for wchar_t
fsigned-zeros
fsingle-precision-constant
fsized-deallocation
Enable C++14 sized global deallocation functions
fsjlj-exceptions
Use SjLj style exceptions
fslp-vectorize-aggressive
fslp-vectorize
Enable the superword-level parallelism vectorization passes
fspec-constr-count
fspell-checking-limit=
fspell-checking-limit
Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit).
fspell-checking
fsplit-cold-code
Permit splitting of cold code when optimizing (off by default).
fsplit-dwarf-inlining
Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
fsplit-stack
fstack-arrays
fstack-check
Enable stack checking
fstack-protector-all
Enable stack protectors for all functions
fstack-protector-strong
Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
fstack-protector
Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca, which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable
fstack-size-section
Emit section containing metadata on function stack sizes
fstandalone-debug
Emit full debug info for all types used by the program
fstrength-reduce
fstrict-aliasing
fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
fstrict-float-cast-overflow
Assume that overflowing float-to-int casts are undefined (default)
fstrict-overflow
fstrict-return
Always treat control flow paths that fall off the end of a non-void function as unreachable
fstrict-vtable-pointers
Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
fstruct-path-tbaa
fsyntax-only
ftabstop=
ftabstop
Set the tab stop distance.
ftarget-variant-availability-checks
Enable availability checks for the target variant platform
ftemplate-backtrace-limit=
ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
ftemplate-depth-
ftemplate-depth=
ftemplate-depth
Maximum depth of recursive template instantiation
fterminated-vtables
ftest-coverage
ftest-module-file-extension=
introduce a module file extension for testing purposes. The argument is parsed as blockname:major:minor:hashed:user info
fthin-link-bitcode=
Write minimized bitcode to <file> for the ThinLTO thin link only
fthinlto-index=
Perform ThinLTO importing using provided function summary index
fthreadsafe-statics
ftime-report
ftls-model=
ftls-model
ftracer
ftrap-function=
Issue call to specified function rather than a trap instruction
ftrapping-math
ftrapv-handler=
Specify the function to be called on overflow
<function name>
ftrapv-handler
ftrapv
Trap on integer overflow
ftree-dce
ftree-salias
ftree-slp-vectorize
ftree-ter
ftree-vectorizer-verbose
ftree-vectorize
ftree-vrp
ftree_loop_im
ftree_loop_ivcanon
ftree_loop_linear
ftrigraphs
Process trigraph sequences
ftrivial-auto-var-init=
Initialize trivial automatic stack variables: uninitialized (default) | pattern
uninitialized,pattern
ftype-visibility
Default type visibility
function-alignment
default alignment for functions
funderscoring
funique-section-names
Use unique names for text and data sections (ELF Only)
funit-at-a-time
funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
funroll-all-loops
funroll-loops
Turn on loop unroller
funsafe-loop-optimizations
funsafe-math-optimizations
funsigned-bitfields
funsigned-char
funswitch-loops
funwind-tables
fuse-cxa-atexit
fuse-init-array
Use .init_array instead of .ctors
fuse-ld=
fuse-line-directives
fuse-linker-plugin
fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
fvariable-expansion-in-unroller
fveclib=
Use the given vector functions library
Accelerate,SVML,none
fvect-cost-model
fvectorize
Enable the loop vectorization passes
fverbose-asm
fvisibility-global-new-delete-hidden
Give global C++ operator new and delete declarations hidden visibility
fvisibility-inlines-hidden
Give inline C++ member functions hidden visibility by default
fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
fvisibility=
Set the default symbol visibility for all global declarations
hidden,default
fvisibility
Default type and symbol visibility
fwchar-type=
Select underlying type for wchar_t
char,short,int
fweb
fwhole-file
fwhole-program-vtables
Enables whole-program vtable optimization. Requires -flto
fwhole-program
fwrapv
Treat signed integer overflow as two's complement
fwritable-strings
Store string literals as writable data
fxray-always-emit-customevents
Determine whether to always emit __xray_customevent(...) calls even if the function it appears in is not always instrumented.
fxray-always-emit-typedevents
Determine whether to always emit __xray_typedevent(...) calls even if the function it appears in is not always instrumented.
fxray-always-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
fxray-attr-list=
Filename defining the list of functions/types for imbuing XRay attributes.
fxray-instruction-threshold=
Sets the minimum function size to instrument with XRay
fxray-instruction-threshold
fxray-instrumentation-bundle=
Select which XRay instrumentation points to emit. Options: all, none, function, custom. Default is 'all'.
fxray-instrument
Generate XRay instrumentation sleds on function entry and exit
fxray-link-deps
Tells clang to add the link dependencies for XRay.
fxray-modes=
List of modes to link in by default into XRay instrumented binaries.
fxray-never-instrument=
DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
fzero-initialized-in-bss
fzvector
Enable System z vector language extension
Add directory to framework include search path
Assume thread-local variables are defined in the executable
gcc-toolchain=
Use the gcc toolchain at the given directory
gcc-toolchain
gcodeview-ghash
Emit type record hashes in a .debug$H section
gcodeview
Generate CodeView debug information
gcoff
gcolumn-info
gdwarf-2
Generate source-level debug information with dwarf version 2
gdwarf-3
Generate source-level debug information with dwarf version 3
gdwarf-4
Generate source-level debug information with dwarf version 4
gdwarf-5
Generate source-level debug information with dwarf version 5
gdwarf-aranges
gdwarf
Set __cdecl as a default calling convention
gembed-source
Embed source text in DWARF debug sections
gen-reproducer
Auto-generates preprocessed source files and a reproduction script
Disable string pooling
gfull
Enable string pooling (default)
ggdb0
ggdb1
ggdb2
ggdb3
ggdb
ggnu-pubnames
gline-directives-only
Emit debug line info directives only
gline-tables-only
Emit debug line number tables only
glldb
gmlt
gmodules
gno-codeview-ghash
gno-column-info
gno-embed-source
Restore the default behavior of not embedding source text in DWARF debug sections
gno-gnu-pubnames
gno-pubnames
gno-record-command-line
gno-record-gcc-switches
gno-strict-dwarf
gpubnames
Disable emission of RTTI data
grecord-command-line
grecord-gcc-switches
Gregcall
Set __regcall as a default calling convention
Enable emission of RTTI data
Set __fastcall as a default calling convention
Disable buffer security check
gsce
gsplit-dwarf=
gsplit-dwarf
gstabs
gstrict-dwarf
Enable buffer security check (default)
Use stack probes (default)
Set stack probe size (default 4096)
gtoggle
guard:
Enable Control Flow Guard with /guard:cf, or only the table with /guard:cf,nochecks
gused
gvms
Set __vectorcall as a default calling convention
Don't put each data item in its own section
Put each data item in its own section
Disable exception handling
gxcoff
Enable exception handling
Don't put each function in its own section (default)
Put each function in its own section
Set __stdcall as a default calling convention
Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
<size>
Generate source-level debug information
header-include-file
Filename (or -) to write header include output to
headerpad_max_install_names
help-hidden
Display help for hidden options
HELP
help
hip-device-lib-path=
HIP device library path
hip-device-lib=
HIP device library
hip-link
Link clang-offload-bundler bundles for HIP
homeparams
hotpatch
Show header includes and nesting depth
Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
iapinotes-modules
Add directory to the API notes search path referenced by module name
idirafter
Add directory to AFTER include search path
iframeworkwithsysroot
Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
iframework
Add directory to SYSTEM framework search path
imacros=
imacros
Include macros from file before parsing
image_base
imsvc
Add directory to system include search path, as if part of %INCLUDE%
imultilib
include-barrier
include-directory-after=
include-directory-after
include-directory=
include-directory
include-pch
Include precompiled header file
include-prefix=
include-prefix
include-with-prefix-after=
include-with-prefix-after
include-with-prefix-before=
include-with-prefix-before
include-with-prefix=
include-with-prefix
include=
index-header-map
Make the next included directory (-I or -F) an indexer header map
index-ignore-system-symbols
Ignore symbols from system headers
index-record-codegen-name
Record the codegen name for symbols
index-store-path
Enable indexing with the specified data store path
init-only
Only execute frontend initialization
install_name
integrated-as
internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
iquote
Add directory to QUOTE include search path
isysroot
Set the system root directory (usually /)
isystem-after
Add directory to end of the SYSTEM include search path
isystem
Add directory to SYSTEM include search path
ivfsoverlay
Overlay the virtual filesystem described by file over the real file system
iwithprefixbefore
Set directory to include search path with prefix
iwithprefix
Set directory to SYSTEM include search path with prefix
iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
iworkdir=
When looking up file, use the working directory provided by the operating system, or by the virtual file system.
os,virtual
Add directory to include search path
Make char type unsigned
keep_private_externs
kernel-
language=
language
lazy_framework
lazy_library
Create debug DLL
Create DLL
libomptarget-nvptx-path=
Path to libomptarget-nvptx libraries
library-directory=
library-directory
linker-option=
Add linker option
Forward options to the linker
<options>
Add directory to library search path
m3dnowa
m3dnow
m80387
mabi=
mabicalls
Enable SVR4-style position-independent code (Mips only)
mabs=
Mach
madx
maes
main-file-name
Main file name to use for debug info
malign-double
Align doubles to two words in structs (x86 only)
malign-functions=
malign-jumps=
malign-loops=
maltivec
mamdgpu-debugger-abi=
Generate additional code for specified <version> of debugger ABI (AMDGPU only)
mappletvos-version-min=
mappletvsimulator-version-min=
march=
marm
masm-verbose
Generate verbose assembly output
masm=
massembler-fatal-warnings
Make assembler warnings fatal
mavx2
mavx512bitalg
mavx512bw
mavx512cd
mavx512dq
mavx512er
mavx512f
mavx512ifma
mavx512pf
mavx512vbmi2
mavx512vbmi
mavx512vl
mavx512vnni
mavx512vpopcntdq
mavx
mbackchain
Link stack frames through backchain on System Z
mbig-endian
mbmi2
mbmi
mbranch-likely
mbranch-protection=
Enforce targets of indirect branches and function returns
mbranch-target-enforce
mbridgeos-version-min=
mcheck-zero-division
mcldemote
mclflushopt
mclwb
mclzero
mcmodel=
mcmpb
mcode-model
The code model to use
tiny,small,kernel,medium,large
mcode-object-v3
Enable code object v3 (AMDGPU only)
mcompact-branches=
mconsole
mconstant-cfstrings
mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
mcpu=
mcrbits
mcrc
Allow use of CRC instructions (ARM/Mips only)
mcrypto
mcx16
mdarwin-stkchk-strong-link
Use DLL debug run-time
mdebug-pass
Enable additional debug output
mdefault-build-attributes
mdirect-move
mdisable-fp-elim
Disable frame pointer elimination optimization
mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
mdll
mdouble-float
mdspr2
mdsp
mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
meabi
Set EABI type, e.g. 4, 5 or gnu (default depends on triple)
default,4,5,gnu
membedded-data
Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
menable-no-infs
Allow optimization to assume there are no infinities.
menable-no-nans
Allow optimization to assume there are no NaNs.
menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
mexception-handling
mexecute-only
Disallow generation of data access to code sections (ARM only)
mextern-sdata
Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
mf16c
mfancy-math-387
mfentry
Insert calls to fentry at function entry (x86 only)
mfix-and-continue
mfix-cortex-a53-835769
Workaround Cortex-A53 erratum 835769 (AArch64 only)
mfloat-abi=
soft,softfp,hard
mfloat-abi
The float ABI to use
mfloat128
mfma4
mfma
mfp32
Use 32-bit floating point registers (MIPS only)
mfp64
Use 64-bit floating point registers (MIPS only)
mfpmath=
mfpmath
Which unit to use for fp math
mfprnd
mfpu=
mfpxx
Avoid FPU mode dependent operations when used with the O32 ABI
mfsgsbase
mfxsr
Write depfile output from -MMD, -MD, -MM, or -M to <file>
mgeneral-regs-only
Generate code which only uses the general purpose registers (AArch64 only)
mgfni
mginv
mglibc
mglobal-merge
Enable merging of globals
mgpopt
Use GP relative accesses for symbols known to be in a small data section (MIPS)
Add missing headers to depfile
mhard-float
mhtm
mhvx-length=
Set Hexagon Vector Length
64B,128B
mhvx=
Enable Hexagon Vector eXtensions
mhvx
mhwdiv=
mhwdiv
miamcu
Use Intel MCU ABI
mieee-fp
mieee-rnd-near
migrate
Run the migrator
Migrate source code
mimplicit-float
mimplicit-it=
mincremental-linker-compatible
(integrated-as) Emit an object file which can be used with an incremental linker
mindirect-jump=
Change indirect jump instructions to inhibit speculation
minline-all-stringops
minvariant-function-descriptors
minvpcid
mios-simulator-version-min=
mios-version-min=
Set iOS deployment target
miphoneos-version-min=
miphonesimulator-version-min=
Equivalent to -march=mips1
Equivalent to -march=mips2
Equivalent to -march=mips32r2
Equivalent to -march=mips32r3
Equivalent to -march=mips32r5
Equivalent to -march=mips32r6
Equivalent to -march=mips32
Equivalent to -march=mips3
Equivalent to -march=mips4
Equivalent to -march=mips5
Equivalent to -march=mips64r2
Equivalent to -march=mips64r3
Equivalent to -march=mips64r5
Equivalent to -march=mips64r6
Equivalent to -march=mips64
misel
Write a compilation database entry per input
mkernel
mldc1-sdc1
mlimit-float-precision
Limit float precision to the given value
mlink-bitcode-file
Link the given bitcode file before performing optimizations.
mlink-builtin-bitcode
Link and internalize needed symbols from the given bitcode file before performing optimizations.
mlink-cuda-bitcode
mlinker-version=
mlittle-endian
mllvm
Additional arguments to forward to LLVM's option processing
mlocal-sdata
Extend the -G behaviour to object local data (MIPS)
mlong-calls
Generate branches with extended addressability, usually via indirect jumps.
mlongcall
mlwp
mlzcnt
mmacos-version-min=
mmacosx-version-min=
Set Mac OS X deployment target
mmadd4
Enable the generation of 4-operand madd.s, madd.d and related instructions.
mmcu=
Write a depfile containing user headers
mmemops
Enable generation of memop instructions
mmfcrf
mmfocrf
mmicromips
mmmx
mmovbe
mmovdir64b
mmovdiri
mmpx
mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
mmsa
Enable MSA ASE (MIPS only)
Enable MT ASE (MIPS only)
mmwaitx
Like -MMD, but also implies -E and writes to stdout by default
mnan=
mno-3dnowa
mno-3dnow
mno-80387
mno-abicalls
Disable SVR4-style position-independent code (Mips only)
mno-adx
mno-aes
mno-altivec
mno-avx2
mno-avx512bitalg
mno-avx512bw
mno-avx512cd
mno-avx512dq
mno-avx512er
mno-avx512f
mno-avx512ifma
mno-avx512pf
mno-avx512vbmi2
mno-avx512vbmi
mno-avx512vl
mno-avx512vnni
mno-avx512vpopcntdq
mno-avx
mno-backchain
mno-bmi2
mno-bmi
mno-branch-likely
mno-check-zero-division
mno-cldemote
mno-clflushopt
mno-clwb
mno-clzero
mno-cmpb
mno-code-object-v3
Disable code object v3 (AMDGPU only)
mno-constant-cfstrings
mno-crbits
mno-crc
Disallow use of CRC instructions (Mips only)
mno-crypto
mno-cx16
mno-default-build-attributes
mno-direct-move
mno-dspr2
mno-dsp
mno-embedded-data
Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
mno-exception-handling
mno-execute-only
Allow generation of data access to code sections (ARM only)
mno-extern-sdata
Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
mno-f16c
mno-fix-cortex-a53-835769
Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
mno-float128
mno-fma4
mno-fma
mno-fprnd
mno-fsgsbase
mno-fxsr
mno-gfni
mno-ginv
mno-global-merge
Disable merging of globals
mno-gpopt
Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
mno-htm
mno-hvx
Disable Hexagon Vector eXtensions
mno-iamcu
mno-implicit-float
Don't generate implicit floating point instructions
mno-incremental-linker-compatible
(integrated-as) Emit an object file which cannot be used with an incremental linker
mno-inline-all-stringops
mno-invariant-function-descriptors
mno-invpcid
mno-isel
mno-ldc1-sdc1
mno-local-sdata
Do not extend the -G behaviour to object local data (MIPS)
mno-long-calls
Restore the default behaviour of not generating long calls
mno-longcall
mno-lwp
mno-lzcnt
mno-madd4
Disable the generation of 4-operand madd.s, madd.d and related instructions.
mno-memops
Disable generation of memop instructions
mno-mfcrf
mno-mfocrf
mno-micromips
mno-mips16
mno-mmx
mno-movbe
mno-movdir64b
mno-movdiri
mno-movt
Disallow use of movt/movw pairs (ARM only)
mno-mpx
mno-ms-bitfields
Do not set the default structure layout to be compatible with the Microsoft compiler standard
mno-msa
Disable MSA ASE (MIPS only)
mno-mt
Disable MT ASE (MIPS only)
mno-mwaitx
mno-neg-immediates
Disallow converting instructions with negative immediates to their negation or inversion.
mno-nontrapping-fptoint
mno-nvj
Disable generation of new-value jumps
mno-nvs
Disable generation of new-value stores
mno-odd-spreg
Disable odd single-precision floating point registers
mno-omit-leaf-frame-pointer
mno-outline
Disable function outlining (AArch64 only)
mno-packets
Disable generation of instruction packets
mno-pascal-strings
mno-pclmul
mno-pconfig
mno-pie-copy-relocations
mno-pku
mno-popcntd
mno-popcnt
mno-power8-vector
mno-power9-vector
mno-prefetchwt1
mno-prfchw
mno-ptwrite
mno-pure-code
mno-qpx
mno-rdpid
mno-rdrnd
mno-rdseed
mno-red-zone
mno-relax-all
mno-relax
Disable linker relaxation
mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
mno-retpoline-external-thunk
mno-retpoline
mno-rtd
mno-rtm
mno-sahf
mno-sgx
mno-sha
mno-shstk
mno-sign-ext
mno-simd128
mno-soft-float
mno-speculative-load-hardening
mno-sram-ecc
Disable SRAM ECC (AMDGPU only)
mno-sse2
mno-sse3
mno-sse4.1
mno-sse4.2
mno-sse4a
mno-sse4
mno-sse
mno-ssse3
mno-stack-arg-probe
Disable stack probes which are enabled by default
mno-stackrealign
mno-tbm
mno-thumb
mno-tls-direct-seg-refs
Disable direct TLS access through segment registers
mno-unaligned-access
Force all memory accesses to be aligned (AArch32/AArch64 only)
mno-vaes
mno-virt
mno-vpclmulqdq
mno-vsx
mno-vx
mno-waitpkg
mno-warn-nonportable-cfstrings
mno-wbnoinvd
mno-x87
mno-xgot
mno-xnack
Disable XNACK (AMDGPU only)
mno-xop
mno-xsavec
mno-xsaveopt
mno-xsaves
mno-xsave
mno-zero-initialized-in-bss
Do not put zero initialized data in the BSS
mno-zvector
mnocrc
Disallow use of CRC instructions (ARM only)
mnoexecstack
Mark the file as not needing an executable stack
mnontrapping-fptoint
mnvj
Enable generation of new-value jumps
mnvs
Enable generation of new-value stores
modd-spreg
Enable odd single-precision floating point registers
module-dependency-dir
Directory to dump module dependencies to
module-file-deps
Include module files in dependency output
module-file-info
Provide information about a particular module file
momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
moslib=
moutline
Enable function outlining (AArch64 only)
mpackets
Enable generation of instruction packets
mpascal-strings
mpclmul
mpconfig
mpie-copy-relocations
Use copy relocations support for PIE builds
mpku
mpopcntd
mpopcnt
mpower8-vector
mpower9-vector
mprefer-vector-width=
Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
mprefetchwt1
mprfchw
mptwrite
mpure-code
Create phony target for each dependency (other than main file)
mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
mqpx
Specify name of main file output to quote in depfile
mrdpid
mrdrnd
mrdseed
mreassociate
Allow reassociation transformations for floating-point instructions
mrecip=
mrecip
mred-zone
mregparm=
mregparm
Limit the number of registers available for integer arguments
mrelax-all
(integrated-as) Relax all machine instructions
mrelax-relocations
Use relaxable elf relocations
mrelax
Enable linker relaxation
mrelocation-model
The relocation model to use
static,pic,ropi,rwpi,ropi-rwpi,dynamic-no-pic
mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
mretpoline-external-thunk
mretpoline
mrtd
Make StdCall calling convention the default
mrtm
msahf
msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics and shouldn't generally be used on compiler-generated code.
msecure-plt
msgx
msha
mshstk
msign-ext
msign-return-address-key=
a_key,b_key
msign-return-address=
Select return address signing scope
none,all,non-leaf
msimd128
msingle-float
msmall-data-threshold=
msoft-float
Use software floating point
mspeculative-load-hardening
msram-ecc
Enable SRAM ECC (AMDGPU only)
msse2
msse3
msse4.1
msse4.2
msse4a
msse4
msse
mssse3
mstack-alignment=
Set the stack alignment
mstack-arg-probe
Enable stack probes
mstack-probe-size=
Set the stack probe size
mstackrealign
Force realign the stack at entry to every function
mstrict-align
Force all memory accesses to be aligned (same as mno-unaligned-access)
mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
mtbm
Use static debug run-time
mthread-model
The thread model to use, e.g. posix, single (posix by default)
posix,single
mthreads
mthumb
mtls-direct-seg-refs
Enable direct TLS access through segment registers (default)
mtp=
Read thread pointer from coprocessor register (ARM only)
soft, cp15
Mode for reading thread pointer
mtune=
mtvos-simulator-version-min=
mtvos-version-min=
Specify name of main file output in depfile
Use static run-time
muclibc
multi_module
multiply_defined_unused
multiply_defined
munaligned-access
Allow memory accesses to be unaligned (AArch32/AArch64 only)
municode
munwind-tables
Generate unwinding tables for all functions
mv55
mv60
mv62
mv65
mv66
mvaes
mvirt
mvpclmulqdq
mvsx
Use NMake/Jom format for the depfile
mwaitpkg
mwarn-nonportable-cfstrings
mwatch-bitcode-compatibility
mwatchos-simulator-version-min=
mwatchos-version-min=
mwatchsimulator-version-min=
mwbnoinvd
mwindows
mx32
mx87
mxgot
mxnack
Enable XNACK (AMDGPU only)
mxop
mxsavec
mxsaveopt
mxsaves
mxsave
mzvector
Like -MD, but also implies -E and writes to stdout by default
new-struct-path-tbaa
Enable enhanced struct-path aware Type Based Alias Analysis
no-canonical-prefixes
Use relative instead of canonical paths
no-code-completion-globals
Do not include global declarations in code-completion results.
no-code-completion-ns-level-decls
Do not include declarations inside namespaces (incl. global namespace) in the code-completion results.
no-cpp-precomp
no-cuda-gpu-arch=
Remove GPU architecture (e.g. sm_35) from the list of GPUs to compile for. 'all' resets the list to its default value.
no-cuda-include-ptx=
Do not include PTX for the follwing GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
no-cuda-noopt-device-debug
no-cuda-version-check
Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
no-emit-llvm-uselists
Don't preserve order of LLVM use-lists when serializing
no-finalize-removal
Do not remove finalize method in gc mode
no-implicit-float
no-integrated-as
no-integrated-cpp
no-line-commands
no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
no-pedantic
no-pie
no-pthread
no-standard-includes
no-standard-libraries
no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
no-system-header-prefix=
Treat all #include paths starting with <prefix> as not including a system header.
<prefix>
no-system-header-prefix
no-undefined
no-warnings
no_dead_strip_inits_and_terms
nobuiltininc
Disable builtin #include directories
nocpp
nocudainc
nocudalib
nodefaultlibs
nofixprebinding
nolibc
nologo
nomultidefs
nopie
noprebind
noseglinkedit
nostartfiles
nostdinc++
Disable standard #include directories for the C++ standard library
nostdinc
nostdlib++
nostdlibinc
nostdlib
nostdsysteminc
Disable standard system #include directories
Don't automatically start assembly file with a text section
Disable optimization
Optimize for size (equivalent to /Og /Os /Oy /Ob2 /GF /Gy)
Optimize for speed (equivalent to /Og /Oi /Ot /Oy /Ob2 /GF /Gy)
Disable function inlining
Only inline functions which are (explicitly or implicitly) marked inline
Inline functions as deemed beneficial by the compiler
ObjC++
Treat source input files as Objective-C++ inputs
objc-isystem
Add directory to the ObjC SYSTEM include search path
objcmt-atomic-property
Make migration to 'atomic' properties
objcmt-migrate-all
Enable migration to modern ObjC
objcmt-migrate-annotation
Enable migration to property and method annotations
objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
objcmt-migrate-literals
Enable migration to modern ObjC literals
objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
objcmt-migrate-property-dot-syntax
Enable migration of setter/getter messages to property-dot syntax
objcmt-migrate-property
Enable migration to modern ObjC property
objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
objcmt-white-list-dir-path=
objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
ObjC
Treat source input files as Objective-C inputs
Ofast
No effect
Disable use of builtin functions
Enable use of builtin functions
openmp-
opt-record-file
File name to use for YAML optimization record output
opt-record-passes
Only record remark information for passes whose names match the given regular expression
optimize=
optimize
Optimize for size
Optimize for speed
output-asm-variant
Select the asm variant index to use for output
output-class-directory=
output-class-directory
output=
Deprecated (equivalent to /Og /Oi /Ot /Oy /Ob2); use /O2 instead
Disable frame pointer omission (x86 only, default)
Enable frame pointer omission (x86 only)
Set multiple /O flags at once; e.g. '/O2y-' is the same as '/O2 /y-'
<flags>
Write output to <file>
Set output file or directory (ends in / or \)
pagezero_size
param=
pass-exit-codes
pch-through-hdrstop-create
When creating a PCH, stop PCH generation after #pragma hdrstop.
pch-through-hdrstop-use
When using a PCH, skip tokens until after a #pragma hdrstop.
pch-through-header=
Stop PCH generation after including this file.  When using a PCH, skip tokens until after this file is included.
pedantic-errors
pedantic
permissive-
Enable mcount instrumentation
pic-is-pie
File is for a position independent executable
pic-level
Value for __PIC__
Use pipes between commands, when possible
plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
plugin
Use the named plugin action instead of the default action (use "help" to list available options)
preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
prebind_all_twolevel_modules
prebind
precompile
Only precompile the input
prefix=
preload
preprocess
print-diagnostic-categories
print-effective-triple
Print the effective target triple
print-file-name=
Print the full library path of <file>
print-file-name
print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
print-libgcc-file-name
Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
print-missing-file-dependencies
print-multi-directory
print-multi-lib
print-multi-os-directory
print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
print-prog-name=
Print the full program path of <name>
print-prog-name
print-resource-dir
Print the resource directory pathname
print-search-dirs
Print the paths used for finding libraries and programs
print-stats
Print performance metrics and statistics
print-target-triple
Print the normalized target triple
private_bundle
profile-blocks
profile
pthreads
pthread
Support POSIX threads in generated code
ptxas-path=
Path to ptxas (used for compiling CUDA code)
Disable linemarker output in -E mode
Preprocess to file
Qfast_transcendentals
QIfist
Qimprecise_fwaits
Do not emit metadata containing compiler name and version
Qpar
Qunused-arguments
Don't emit warning for unused driver arguments
Qvec-report
Qvec-
Disable the loop vectorization passes
Qvec
Emit metadata containing compiler name and version
rdynamic
read_only_relocs
record-command-line
The string to embed in the .LLVM.command.line section.
relaxed-aliasing
Turn off Type Based Alias Analysis
relocatable-pch
Whether to build a relocatable precompiled header
remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
remap
resource-dir=
resource-dir
The directory which holds the compiler resource files
resource=
resource
rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
rewrite-macros
Expand macros without full preprocessing
rewrite-objc
Rewrite Objective-C source to C++
rewrite-test
Rewriter playground
Rpass-analysis=
Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
Rpass-missed=
Report missed transformations by optimization passes whose name matches the given POSIX regular expression
Rpass=
Report transformations performed by optimization passes whose name matches the given POSIX regular expression
rpath
rsp-quoting=
Set the rsp quoting to either 'posix', or 'windows'
rtlib=
Compiler runtime library to use
rtlib
Enable the specified remark
<remark>
save-stats=
Save llvm statistics.
save-stats
save-temps=
Save intermediate compilation results.
save-temps
Save intermediate compilation results
sdl-
sectalign
sectcreate
sectobjectsymbols
sectorder
seg1addr
seg_addr_table_filename
seg_addr_table
segaddr
segcreate
seglinkedit
segprot
segs_read_only_addr
segs_read_write_addr
segs_read_
serialize-diagnostic-file
File for serializing diagnostics in a binary format
serialize-diagnostics
Serialize compiler diagnostics to a file
shared-libasan
shared-libgcc
shared-libsan
Dynamically link the sanitizer runtime
show-encoding
Show instruction encoding information in transliterate mode
show-includes
Print cl.exe style /showIncludes to stdout
show-inst
Show internal instruction representation in transliterate mode
showFilenames-
Don't print the name of each compiled file (default)
showFilenames
Print the name of each compiled file
showIncludes
Print info about included files to stderr
signed-char
single_module
skip-unused-modulemap-deps
Include module map files only for imported modules in dependency output
source-charset:
Source encoding, supports only UTF-8
specs=
specs
split-dwarf-file
File name to use for split dwarf debug info output
split-dwarf
Split out the dwarf .dwo sections
split-stacks
Try to use a split stack if possible.
Lower bound for a buffer to be considered for stack protection
stack-protector
Enable stack protectors
static-define
Should __STATIC__ be defined
static-libgcc
static-libgfortran
static-libsan
Statically link the sanitizer runtime
static-libstdc++
stats-file=
Filename to write statistics to
std-default=
std:
Language standard to compile for
std=
stdlib=
C++ standard library to use
libc++,libstdc++,platform
stdlib
sub_library
sub_umbrella
sys-header-deps
Include system headers in dependency output
sysroot=
sysroot
system-header-prefix=
Treat all #include paths starting with <prefix> as including a system header.
system-header-prefix
Only run preprocess and compilation steps
target-abi
Target a particular ABI type
Target a specific cpu type
target-feature
Target specific attributes
target-help
target-linker-version
Target linker version
target-sdk-version=
The version of target SDK used for compilation
target-variant-sdk-version=
The version of target variant SDK used for compilation
target-variant-triple
Specify the target variant triple
target-variant
Generate code that may run on a particular variant of the deployment target
target=
Generate code for the given target
Tbss
Set starting address of BSS to <addr>
<addr>
Treat all source files as C
Specify a C source file
Tdata
Set starting address of DATA to <addr>
templight-dump
Dump templight information to stdout
test-coverage
Do not generate coverage files or remove coverage changes from IR
time
Time individual commands
Treat all source files as C++
Specify a C++ source file
trace-includes
traditional-cpp
Enable some traditional CPP emulation
traditional
trim-egraph
Only show error-related paths in the analysis graph
triple=
triple
Specify target triple (e.g. i686-apple-darwin9)
Ttext
Set starting address of TEXT to <addr>
twolevel_namespace_hints
twolevel_namespace
Specify <script> as linker script
<script>
undefine-macro=
undefine-macro
undef all system defines
unexported_symbols_list
unoptimized-cfg
Generate unoptimized CFGs for all analyses
unsigned-char
user-dependencies
utf-8
Set source and runtime encoding to UTF-8 (default)
Undefine macro <macro>
<macro>
Undefine macro
validate-charset-
validate-charset
Control vtordisp placement
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
verbose
Verify the binary representation of debug output
verify-ignore-unexpected=
Ignore unexpected diagnostic messages
verify-ignore-unexpected
Load and verify that a pre-compiled header file is not stale
verify=
Verify diagnostic output using comment directives that start with prefixes in the comma-separated sequence <prefixes>
<prefixes>
verify
Equivalent to -verify=expected
Print version information
Print the compiler version
via-file-asm
Write assembly to file for input to assemble jobs
Use a best-case representation method for member pointers
Use a most-general representation for member pointers
Set the default most-general representation to multiple inheritance
Set the default most-general representation to single inheritance
Set the default most-general representation to virtual inheritance
volatile:iso
Volatile loads and stores have standard semantics
volatile:ms
Volatile loads and stores have acquire and release semantics
vtordisp-mode=
Control vtordisp placement on win32 targets
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Enable -Wall and -Wextra
Pass the comma separated arguments in <arg> to the assembler
Wall
Enable -Weverything
warn-=
warn-
WCL4
wd4005
wd4018
wd4100
wd4910
wd4996
Wdeprecated
Enable warnings for deprecated constructs and define __DEPRECATED
weak-l
weak_framework
weak_library
weak_reference_mismatches
Wframe-larger-than=
whatsloaded
whyload
Pass the comma separated arguments in <arg> to the linker
Wlarge-by-value-copy=
Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
Wlarger-than-
Wlarger-than=
Wno-deprecated
Wno-nonportable-cfstrings
Wno-rewrite-macros
Silence ObjC rewriting warnings
Wno-write-strings
Wnonportable-cfstrings
working-directory=
working-directory
Resolve file paths relative to the specified directory
Pass the comma separated arguments in <arg> to the preprocessor
Wp64
write-dependencies
write-user-dependencies
Wwrite-strings
Do not treat warnings as errors
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
Xanalyzer
Pass <arg> to the static analyzer
Xarch_
Xassembler
Pass <arg> to the assembler
Xclang
Pass <arg> to the clang compiler
Xcuda-fatbinary
Pass <arg> to fatbinary invocation
Xcuda-ptxas
Pass <arg> to the ptxas assembler
Xlinker
Pass <arg> to the linker
Xopenmp-target=
Pass <arg> to the target offloading toolchain identified by <triple>.
<triple> <arg>
Xopenmp-target
Pass <arg> to the target offloading toolchain.
Xpreprocessor
Pass <arg> to the preprocessor
Don't add %INCLUDE% to the include search path
Treat subsequent input files as having type <language>
<language>
Disable precompiled headers, overrides /Yc and /Yu
Generate a pch file for all code up to and including <filename>
Load a pch file and use it instead of all code up to and including <filename>
Z-reserved-lib-cckext
Z-reserved-lib-stdc++
Z-Xlinker-no-demangle
Enable CodeView debug information in object files
Zc:__cplusplus
Zc:auto
Zc:dllexportInlines-
Don't dllexport/dllimport inline member functions of dllexport/import classes
Zc:dllexportInlines
dllexport/dllimport inline member functions of dllexport/import classes (default)
Zc:forScope
Zc:inline
Zc:rvalueCast
Zc:sizedDealloc-
Disable C++14 sized global deallocation functions
Zc:sizedDealloc
Zc:strictStrings
Treat string literals as const
Zc:ternary
Zc:threadSafeInit-
Disable thread-safe initialization of static variables
Zc:threadSafeInit
Enable thread-safe initialization of static variables
Zc:trigraphs-
Disable trigraphs (default)
Zc:trigraphs
Enable trigraphs
Zc:twoPhase-
Disable two-phase name lookup in templates
Zc:twoPhase
Enable two-phase name lookup in templates
Zc:wchar_t
Alias for /Z7. Does not produce PDBs.
Zlinker-input
Don't mention any default libraries in the object file
Set the default maximum struct packing alignment to 1
Syntax-check only
Pass -z <arg> to the linker
-main-file-name
-ivfsoverlay
repro-modules
index-store
-index-store-path
 Arguments passed via response file:
 (end of response file)
 || (exit 0)
-serialize-diagnostic-file
-fdebug-compilation-dir
-diagnostic-log-file
-dwarf-debug-flags
-include
-header-include-file
-internal-isystem
-internal-externc-isystem
-isystem
-isysroot
-include-pch
-fsanitize-minimal-runtime
-fsanitize-trap=undefined
-fsanitize=cfi-mfcall
-fsanitize-cfi-cross-dso
-fsanitize=vptr
-flto
-ffixed-x18
-fno-sanitize-trap=
-fsanitize-recover=undefined,integer' or '-fsanitize-recover=all
-fno-sanitize-recover=undefined,integer' or '-fno-sanitize-recover=all
-fsanitize-cfi-icall-generalize-pointers
fsanitize-trap=cfi
-fsanitize-coverage=trace-pc-guard
-fsanitize-coverage=func
-fsanitize-coverage=bb
-fsanitize-coverage=edge
-fsanitize-coverage=trace-bb
-fsanitize-coverage=8bit-counters
-fsanitize-coverage=[func|bb|edge]
-fsanitize-coverage=[func|bb|edge],[trace-pc-guard|trace-pc]
-fsanitize-coverage-type=1
-fsanitize-coverage-type=2
-fsanitize-coverage-type=3
-fsanitize-coverage-indirect-calls
-fsanitize-coverage-trace-bb
-fsanitize-coverage-trace-cmp
-fsanitize-coverage-trace-div
-fsanitize-coverage-trace-gep
-fsanitize-coverage-8bit-counters
-fsanitize-coverage-trace-pc
-fsanitize-coverage-trace-pc-guard
-fsanitize-coverage-inline-8bit-counters
-fsanitize-coverage-pc-table
-fsanitize-coverage-no-prune
-fsanitize-coverage-stack-depth
--dependent-lib=
ubsan_standalone
ubsan_standalone_cxx
stats_client
__sanitizer_stats_register
-fsanitize-memory-track-origins=
-fsanitize-memory-use-after-dtor
-mllvm
-tsan-instrument-memory-accesses=0
-tsan-instrument-memintrinsics=0
-tsan-instrument-func-entry-exit=0
-tsan-instrument-atomics=0
-fsanitize-stats
-fsanitize-address-field-padding=
-fsanitize-address-use-after-scope
-fsanitize-address-poison-custom-array-cookie
-fsanitize-address-globals-dead-stripping
-fsanitize-address-use-odr-indicator
-fno-assume-sane-operator-new
-fvisibility=
-fsanitize-trap
asan_blacklist.txt
hwasan_blacklist.txt
msan_blacklist.txt
tsan_blacklist.txt
dfsan_abilist.txt
cfi_blacklist.txt
ubsan_blacklist.txt
share
freebsd
netbsd
openbsd
sunos
.dll.a
clang_rt.
-android
ld64.
x86_64-apple-darwin18.0.0
armeb
-mthumb
thumbeb
-lc++
-lstdc++
-lcc_kext
crtfastmath.o
0123456789.
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
clang::as
clang integrated assembler
offload bundler
armhf
native
cyclone
hurricane
monsoon
vortex
-fp-armv8
-crypto
-neon
-crc
-fullfp16
+v8.4a
-fp16fml
-sm4
-sha3
-sha2
-aes
+sm4
+sha3
+sha2
+reserve-x1
+reserve-x2
+reserve-x3
+reserve-x4
+reserve-x5
+reserve-x6
+reserve-x7
+reserve-x18
+reserve-x20
+call-saved-x8
+call-saved-x9
+call-saved-x10
+call-saved-x11
+call-saved-x12
+call-saved-x13
+call-saved-x14
+call-saved-x15
+call-saved-x18
+no-neg-immediates
+zcm
+zcz
-mcpu=
-march=
+read-tp-hard
vfpv3-d16
fp-armv8
fullfp16
dotprod
fp16fml
armv8a
armv8.1a
armv8.2a
armv8.3a
armv8.4a
+nosha2
+noaes
+execute-only
v8m.base
+reserve-r9
+no-movt
armv7k
--be8
-noabicalls
single-float
dspr2
+nooddspreg
nooddspreg
nomadd4
virt
ginv
hazard
-mpower7
-mpower8
-mpower9
-many
-hard-float
+secure-plt
string must be lowercase
string must begin with rv32{i,e,g} or rv64{i,g}
mafdqlcbjtpvn
first letter should be 'e', 'i' or 'g'
standard user-level extension 'e' requires 'rv32'
unsupported standard user-level extension 'e'
standard user-level extension not given in canonical order
invalid standard user-level extension
unsupported standard user-level extension
d requires f extension to also be specified
unsupported version number 
 for extension
extension name missing after separator '_'
invalid extension prefix
 not given in canonical order
 name missing after
non-standard supervisor-level extension
standard supervisor-level extension
non-standard user-level extension
-Av9b
-Av9d
-Av9
-Av8
-Asparclite
-Asparclet
-Av8plus
-Av8plusb
-Av8plusd
-Aleon
-transactional-execution
-vector
-rdrnd
-pclmul
-rtm
-fsgsbase
--sysroot=
-Bstatic
-export-dynamic
-Bshareable
-dynamic-linker
/lib/ld-ananas.so
crt0.o
crti.o
crtbeginS.o
crtbegin.o
crtendS.o
crtend.o
crtn.o
/usr/lib
ananas::Assembler
ananas::Linker
-shared
+amdgpu-debugger-insert-nops
+amdgpu-debugger-emit-prologue
-fvisibility
amdgpu::Linker
ld.lld
AVR::Linker
avr-ld
baremetal
-nostdsysteminc
-lc++abi
-lsupc++
-lunwind
-lclang_rt.builtins-
baremetal::Linker
-skip-unused-modulemap-deps
-sys-header-deps
-module-file-deps
-building-pch-with-obj
-pch-through-hdrstop-
create
-pch-through-header=
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
-msoft-float
-mfloat-abi
-arm-global-merge=false
-arm-global-merge=true
-no-implicit-float
-fallow-half-arguments-and-returns
-disable-red-zone
-aarch64-fix-cortex-a53-835769=1
-aarch64-fix-cortex-a53-835769=0
-aarch64-enable-global-merge=false
-aarch64-enable-global-merge=true
-fptrauth-returns
-fptrauth-intrinsics
-fptrauth-calls
-fptrauth-indirect-gotos
-msign-return-address=
-msign-return-address-key=
-mbranch-target-enforce
-target-abi
-mxgot
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
-mgpopt
-mlocal-sdata=1
-mlocal-sdata=0
-mextern-sdata=1
-mextern-sdata=0
-membedded-data=1
-membedded-data=0
-mips-compact-branches=
-mbackchain
-mno-tls-direct-seg-refs
-x86-asm-syntax=
-x86-asm-syntax=intel
-mstack-alignment=4
-mqdsp6-compat
-Wreturn-type
-hexagon-small-data-threshold=
-fshort-enums
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
-target-cpu
{ "directory": "
, "file": "
, "output": "
, "arguments": ["
"]},
CUSTOM_CLANG_MODULE_CACHE
org.llvm.clang.
ModuleCache
C++ for IAMCU
-triple
-target-variant-triple
-aux-triple
-analyze
-migrate
-emit-obj
-emit-header-module
-emit-module-interface
-emit-pch
-verify-pch
-emit-llvm
-emit-llvm-bc
-module-file-info
-rewrite-objc
-emit-llvm-uselists
-flto-unit
-disable-llvm-passes
-mdisable-tail-calls
-fembed-bitcode=marker
-disable-free
-disable-llvm-verifier
-discard-value-names
-static-define
-DUNICODE
-analyzer-config-compatibility-mode=true
-function-alignment
-mrelocation-model
-pic-level
-pic-is-pie
-meabi
-mthread-model
-fno-merge-all-constants
-fno-delete-null-pointer-checks
-frewrite-map-file
-warn-stack-size=
-fno-jump-tables
-fprofile-sample-accurate
-fno-preserve-as-comments
-mregparm
-fpcc-struct-return
-freg-struct-return
-fdefault-calling-conv=stdcall
-fenable-matrix
-enable-matrix
-enable-aa-sched-mi
-memdep-block-scan-limit=500
-slow-misaligned-128store
-mdisable-fp-elim
-mno-zero-initialized-in-bss
-relaxed-aliasing
-no-struct-path-tbaa
-fstrict-enums
-fno-strict-return
-fstrict-vtable-pointers
-fforce-emit-vtables
-fno-escaping-block-tail-calls
-split-stacks
-masm-verbose
-mdebug-pass
Structure
Arguments
-mconstructor-aliases
-fforbid-guard-variables
-mms-bitfields
-mpie-copy-relocations
-fno-plt
-ffreestanding
-munwind-tables
-mcode-model
-split-dwarf-file
-target-linker-version
-momit-leaf-frame-pointer
please use -maltivec and include altivec.h explicitly
please use -mno-altivec
-ffunction-sections
-fdata-sections
-fno-unique-section-names
-nobuiltininc
CLANG_PROJECT_INDEX_PATH
-index-ignore-system-symbols
-index-record-codegen-name
-pedantic
GCC_TREAT_WARNINGS_AS_ERRORS
-std=c++98
-std=c89
-fconst-strings
-fdeprecated-macro
-fgnu-keywords
-fno-gnu-keywords
-fno-dwarf-directory-asm
-fno-autolink
-ftemplate-depth
-foperator-arrow-depth
-fconstexpr-depth
-fconstexpr-steps
-fbracket-depth
-Wlarge-by-value-copy=
-Wlarge-by-value-copy=64
-relocatable-pch
-ftarget-variant-availability-checks
-fconstant-string-class
-ftabstop
-fstack-size-section
-ferror-limit
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fconstexpr-backtrace-limit
-fspell-checking-limit
-fmessage-length
-ftype-visibility
-fopenmp
-fnoopenmp-use-tls
-fopenmp-cuda-mode
-fopenmp-cuda-force-full-runtime
-fno-lax-vector-conversions
-fapple-kext
-ftrapv-handler
-fwrapv
-freroll-loops
-mspeculative-load-hardening
-mstackrealign
-mstack-alignment=
-fstack-check
-mdarwin-stkchk-strong-link
-mstack-probe-size=
-mstack-probe-size=0
-mno-stack-arg-probe
-arm-restrict-it
-arm-no-restrict-it
-fcf-protection=
-fapinotes
-fapinotes-modules
-fblocks
-fblocks-runtime-optional
-fencode-extended-block-signature
-fcoroutines-ts
-fno-access-control
-fno-elide-constructors
-fno-rtti
-fno-use-cxa-atexit
-fregister-global-dtors-with-atexit
-fms-extensions
-fuse-line-directives
-fms-compatibility
-fms-compatibility-version=
-std=c++14
-std=c++17
-std=c++2a
-std=c++11
-fborland-extensions
-fdeclspec
-fno-declspec
-fno-threadsafe-statics
-fdelayed-template-parsing
-fno-inline
-fapplication-extension
-fsjlj-exceptions
-fseh-exceptions
-fdwarf-exceptions
-frelaxed-template-template-args
-fsized-deallocation
-fno-aligned-allocation
-faligned-allocation
-fnew-alignment=
-fno-constant-cfstrings
-fpascal-strings
-fpack-struct=1
-fno-common
-fptrauth-soft
-fasm-blocks
-fno-gnu-inline-asm
-vectorize-loops
-vectorize-slp
-fdollars-in-identifiers
-fno-dollars-in-identifiers
-fapple-pragma-pack
-opt-record-file
opt.yaml
-opt-record-passes
-frewrite-imports
-frewrite-includes
-traditional-cpp
-fretain-comments-from-system-headers
-load
-stats-file=
-disable-llvm-optzns
-record-command-line
-fcuda-include-gpubinary
-fgpu-rdc
-fcuda-short-ptr
-fopenmp-is-device
-fopenmp-host-ir-file-path
-fwhole-program-vtables
-global-isel=1
-global-isel-abort=2
-global-isel=0
-fforce-enable-int128
-fcomplete-member-pointers
-fno-c++-static-destructors
-enable-machine-outliner
-enable-machine-outliner=never
-faddrsig
-fomit-frame-pointer
clang frontend
-fobjc-runtime=
-D_DEBUG
-D_MT
-D_DLL
--dependent-lib=msvcrt
--dependent-lib=msvcrtd
-flto-visibility-public-std
--dependent-lib=libcmt
--dependent-lib=libcmtd
-D_VC_NODEFAULTLIB
--dependent-lib=oldnames
-fno-rtti-data
-stack-protector
-fcxx-exceptions
-fexceptions
-fexternc-nounwind
-fms-volatile
-fno-dllexport-inlines
-fms-memptr-rep=single
-fms-memptr-rep=multiple
-fms-memptr-rep=virtual
-fdefault-calling-conv=cdecl
-fdefault-calling-conv=fastcall
-fdefault-calling-conv=vectorcall
-fdefault-calling-conv=regcall
-fdiagnostics-format
nochecks
nochecks-
-cfguard
-cc1as
-filetype
-dwarf-debug-producer
-arm-add-build-attributes
-type=
-outputs=
-inputs=
-unbundle
/E, /P or /EP
LOGNAME
-mrelax-all
-mincremental-linker-compatible
-arm-implicit-it=
+use-tcc-in-div
-use-tcc-in-div
-soft-float
+mips1
+mips2
+mips3
+mips4
+mips5
+mips32
+mips32r2
+mips32r3
+mips32r5
+mips32r6
+mips64
+mips64r2
+mips64r3
+mips64r5
+mips64r6
-force_cpusubtype_ALL
-msave-temp-labels
-massembler-fatal-warnings
-mnoexecstack
-compress-debug-sections
--mrelax-relocations=yes
-march
--mrelax-relocations
-mlimit-float-precision
-menable-no-infs
-menable-no-nans
-fmath-errno
-menable-unsafe-fp-math
-fno-signed-zeros
-mreassociate
-freciprocal-math
-fno-trapping-math
-fdenormal-fp-math=
-ffp-contract=
-ffast-math
-ffinite-math-only
-mfpmath
-fno-strict-float-cast-overflow
-mrecip=
divd
divf
vec-divd
vec-divf
sqrtd
vec-sqrtd
vec-sqrtf
c++-cpp-output
-analyzer-store=region
-analyzer-opt-analyze-nested-blocks
-analyzer-checker=core
-analyzer-checker=apiModeling
-analyzer-checker=unix
-analyzer-checker=unix.API
-analyzer-checker=unix.Malloc
-analyzer-checker=unix.MallocSizeof
-analyzer-checker=unix.MismatchedDeallocator
-analyzer-checker=unix.cstring.BadSizeArg
-analyzer-checker=unix.cstring.NullArg
-analyzer-disable-checker=unix.API
-analyzer-disable-checker=unix.Vfork
-analyzer-checker=osx
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-checker=nullability.NullPassedToNonnull
-analyzer-checker=nullability.NullReturnedFromNonnull
-analyzer-output
-static
-fdebug-info-for-profiling
-dwarf-column-info
-dwarf-ext-refs
-fmodule-format=obj
-fno-split-dwarf-inlining
-enable-split-dwarf=single
-enable-split-dwarf
-gdwarf-5
-gembed-source
-gcodeview
-gcodeview-ghash
-debug-info-macro
-gpubnames
-ggnu-pubnames
-fdebug-ranges-base-address
-generate-arange-section
-generate-type-units
-debug-forward-template-params
-dwarf-explicit-import
-fprofile-instrument-path=
-fprofile-instrument=clang
-fprofile-instrument=llvm
-fprofile-instrument-use-path=
default.profdata
-femit-coverage-notes
-femit-coverage-data
-fcoverage-mapping
-fprofile-instr-generate
-fprofile-exclude-files=
--coverage
-fprofile-filter-files=
-coverage-notes-file
gcno
-coverage-data-file
gcda
-arcmt-check
-arcmt-modify
-arcmt-migrate
-mt-migrate-directory
-ccc-arcmt-migrate
-objcmt-migrate-literals
-objcmt-migrate-subscripting
-objcmt-migrate-property
-fdebug-prefix-map=
-stack-protector-buffer-size
-ftrivial-auto-var-init=
-fno-builtin
-fno-builtin-
-fno-math-builtin
-fmodules
-fmodules-ts
-fimplicit-module-maps
-fmodules-decluse
-fmodules-strict-decluse
-fno-implicit-modules
.cache
-fmodule-map-file=
-module-dependency-dir
-fbuild-session-timestamp
-fbuild-session-timestamp=
-fmodules-validate-system-headers
-fno-signed-char
-fwchar-type=short
-fno-signed-wchar
-fwchar-type=int
-fsigned-wchar
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fobjc-arc
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
-fobjc-arc-exceptions
-fno-objc-convert-messages-to-runtime-calls
-fno-objc-infer-related-result-type
ignore_mrc_weak
-fignore-objc-weak
-fobjc-exceptions
-fno-caret-diagnostics
-fno-diagnostics-fixit-info
-fdiagnostics-show-option
-fdiagnostics-show-category
-fdiagnostics-show-note-include-stack
-fno-diagnostics-show-note-include-stack
-fdiagnostics-color=
-fansi-escape-codes
-fno-show-source-location
-fdiagnostics-absolute-paths
-fno-show-column
-mprefer-vector-width=none
-mprefer-vector-width=
visualstudio::Compiler
-debug-info-kind=line-directives-only
-debug-info-kind=line-tables-only
-debug-info-kind=limited
-debug-info-kind=standalone
-dwarf-version=
-debugger-tuning=gdb
-debugger-tuning=lldb
-debugger-tuning=sce
-compress-debug-sections=none
-compress-debug-sections=
--no-dynamic-linker
-pie
-zrelro
--eh-frame-hdr
--gc-sections
-lcompiler_rt
include/c++/v1
cloudabi::Linker
LIBRARY_PATH
-plugin
.dylib
/../lib/LLVMgold
-plugin-opt=mcpu=
-plugin-opt=O
-plugin-opt=dwo_dir=
_dwo
-plugin-opt=thinlto
-plugin-opt=jobs=
-plugin-opt=-debugger-tune=lldb
-plugin-opt=-debugger-tune=sce
-plugin-opt=-debugger-tune=gdb
-plugin-opt=-function-sections
-plugin-opt=-data-sections
-plugin-opt=sample-profile=
-plugin-opt=new-pass-manager
-plugin-opt=stats-file=
-rpath
-lomp
-lgomp
-lrt
-liomp5
-lomptarget
asan
hwasan
lsan
msan
tsan
--no-as-needed
-lpthread
-ldl
-lexecinfo
--export-dynamic
-export-dynamic-symbol=__cfi_check
-whole-archive
xray
-no-whole-archive
--extract-dwo
--strip-dwo
objcopy
-KPIC
MSVC
       OpenMP Offload Linker Script
 *** Automatically generated by Clang ***
TARGET(binary)
INPUT(
SECTIONS
  .omp_offloading.
  ALIGN(0x10)
    PROVIDE_HIDDEN(.omp_offloading.img_start.
 = .);
    PROVIDE_HIDDEN(.omp_offloading.img_end.
  .omp_offloading.entries :
  SUBALIGN(0x01)
    PROVIDE_HIDDEN(.omp_offloading.entries_begin = .);
    *(.omp_offloading.entries)
    PROVIDE_HIDDEN(.omp_offloading.entries_end = .);
INSERT BEFORE .data
BUNDLE
hipfb
       HIP Offload Linker Script
  .hip_fatbin :
    PROVIDE_HIDDEN(__hip_fatbin = .);
  /DISCARD/ :
    * ( __CLANG_OFFLOAD_BUNDLE__* )
rv630
rv635
rv610
rv620
rs780
rs880
rv740
rv770
palm
cedar
sumo
sumo2
hemlock
cypress
aruba
cayman
asan-preinit
ubsan_minimal
scudo_minimal
asan_cxx
hwasan_cxx
dfsan
msan_cxx
tsan_cxx
safestack
__safestack_init
cfi_diag
esan
scudo_cxx_minimal
scudo_cxx
--whole-archive
--no-whole-archive
.syms
--dynamic-list=
-lgcc
--as-needed
-lgcc_s
-lgcc_eh
--32
--64
--strip-all
thumb2pe
arm64pe
i386pe
i386pep
_DllMainCRTStartup
_DllMainCRTStartup@12
-Bdynamic
--enable-auto-image-base
--entry
mainCRTStartup
--allow-multiple-definition
--out-implib
-lmsvcrt
asan_dll_thunk
asan_dynamic
asan_dynamic_runtime_thunk
--undefined
___asan_seh_interceptor
__asan_seh_interceptor
CrossWindows::Linker
CrossWindows::Assembler
/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v
ptxas
/usr/local/cuda
/usr/local/cuda-
/usr/lib/cuda
/bin
/nvvm/libdevice
/lib64
/lib
/version.txt
/libdevice.10.bc
cuda_wrappers
__clang_cuda_runtime_wrapper.h
Found CUDA installation: 
, version 
-m64
-m32
--dont-merge-basicblocks
--return-at-end
-lineinfo
--gpu-name
--output-file
--cuda
--create
--image=profile=
,file=
fatbinary
-arch
-lomptarget-nvptx
nvlink
cubin
-fcuda-is-device
-fcuda-flush-denormals-to-zero
-fcuda-approx-transcendentals
-mlink-builtin-bitcode
--nvptx-short-ptr
libomptarget-nvptx-
NVPTX::Assembler
--options-file
NVPTX::OpenMPLinker
NVPTX::Linker
armv4t
armv5
armv6
armv6m
armv7em
armv7m
armv7s
xscale
amdgcn
--gstabs
-demangle
-export_dynamic
-application_extension
thinlto
-object_path_lto
libLTO.dylib
-lto_library
-no_deduplicate
-dynamic
-dynamiclib
-dylib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-bitcode_bundle
-bitcode_process_mode
-syslibroot
touch
-lto-pass-remarks-output
-lto-pass-remarks-with-hotness
-enable-linkonceodr-outlining
-ObjC
-lsystem_pthread
Foundation
-lobjc
-arch_multiple
-final_output
-allow_stack_execute
-threads=
Library
-create
-output
--verify
--debug-info
--eh-frame
--quiet
dwarfdump
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
Toolchains/XcodeDefault.xctoolchain/usr
-force_load
libarclite_
libclang_rt.
_dynamic.dylib
macho_embedded
darwin
@executable_path
MacOSX
iPhone
AppleTV
Watch
Bridge
iossim
tvossim
watchossim
___gcov_flush
_flush_fn_list
_writeout_fn_list
___llvm_profile_filename
___llvm_profile_raw_version
_lprofCurFilename
_lprofMergeValueProfData
_lprofDirMode
RC_XBS
/usr/local/lib/sanitizers
ubsan
xray-basic
xray-fdr
-lSystem
-lgcc_s.1
SDKROOT
iOS 7
OS X 10.9
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
libclang_rt.cc_kext_watchos.a
libclang_rt.cc_kext_tvos.a
libclang_rt.cc_kext_bridgeos.a
libclang_rt.cc_kext_ios.a
libclang_rt.cc_kext.a
RC_ProjectName
armv5tej
armv6k
armv7a
_pic
_static
-faligned-alloc-unavailable
-target-sdk-version=
-target-variant-sdk-version=
iOS 5.0
OS X 10.7
RC_DEBUG_OPTIONS
-watchos_version_min
-watchos_simulator_version_min
-tvos_version_min
-tvos_simulator_version_min
-bridgeos_version_min
-driverkit_version_min
-ios_simulator_version_min
-maccatalyst_version_min
-iphoneos_version_min
-macosx_version_min
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt0.o
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
crt3.o
tsan_tvos_dynamic
tsan_ios_dynamic
libsystem_pthread
libsystem_kernel
libkxld
libsystem_platform
armv7-a
armv7-r
armv7e-m
armv7-m
darwin::Lipo
darwin::Dsymutil
darwin::VerifyDebug
darwin::Linker
-filelist
darwin::Assembler
.app/Contents/Developer
-exported_symbols_list
-exported_symbol
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
TVOS_DEPLOYMENT_TARGET
WATCHOS_DEPLOYMENT_TARGET
BRIDGEOS_DEPLOYMENT_TARGET
DRIVERKIT_DEPLOYMENT_TARGET
/usr/libexec/ld-elf.so.2
--hash-style=gnu
--enable-new-dtags
elf_i386
gcrt1.o
Scrt1.o
crt1.o
-L/usr/lib/gcc50
/usr/lib/gcc50
-lgcc_pic
/../lib
dragonfly::Assembler
dragonfly::Linker
-a32
-mabi
-mfpu=vfp
-mfpu=softvfp
-meabi=5
-matpcs
/libexec/ld-elf.so.1
--hash-style=both
elf_i386_fbsd
elf32ppc_fbsd
elf32btsmip_fbsd
elf32ltsmip_fbsd
elf32btsmipn32_fbsd
elf64btsmip_fbsd
elf32ltsmipn32_fbsd
elf64ltsmip_fbsd
crtbeginT.o
-lm_p
-lgcc_p
-lgcc_eh_p
-lpthread_p
-lc_p
/usr/lib32/crt1.o
/usr/lib32
/usr/include/c++/4.2
-lc++_p
-lstdc++_p
freebsd::Assembler
freebsd::Linker
rodynamic
--build-id
asan/
ld.so.1
--push-state
--pop-state
--wrap=pthread_create
-fuse-init-array
fuchsia::Linker
cortex-a53
--fix-cortex-a53-843419
crtbegin_static.o
crtbegin_so.o
crtbegin_dynamic.o
--start-group
-lgloss
--end-group
-lsoftfp
crtend_so.o
crtend_android.o
--x32
-mppc
-a64
-mppc64
-mlittle-endian
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=soft
-mfloat-abi=softfp
-mfloat-abi=hard
-mno-shared
-call_nonpic
-mnan=2008
-no-mips16
-mmsa
/crtbegin.o
march=mips32
march=mips32r2
march=mips32r6
march=mips64
march=mips64r2
march=mips64r6
mnan=2008
mabi=n32
mabi=n64
/usr
0.0.0
Found candidate GCC installation: 
Selected GCC installation: 
Candidate multilib: 
Selected multilib: 
/usr/gcc
/lib/gcc
aarch64-none-linux-gnu
aarch64-linux-gnu
aarch64-redhat-linux
aarch64-suse-linux
aarch64-linux-android
aarch64_be-none-linux-gnu
aarch64_be-linux-gnu
arm-linux-gnueabi
arm-linux-androideabi
arm-linux-gnueabihf
armv7hl-redhat-linux-gnueabi
armv6hl-suse-linux-gnueabi
armv7hl-suse-linux-gnueabi
armeb-linux-gnueabi
armeb-linux-androideabi
armeb-linux-gnueabihf
armebv7hl-redhat-linux-gnueabi
x86_64-linux-gnu
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
x86_64-unknown-linux
x86_64-amazon-linux
x86_64-linux-android
/libx32
/lib32
i686-linux-gnu
i686-pc-linux-gnu
i486-linux-gnu
i386-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i586-redhat-linux
i386-redhat-linux
i586-suse-linux
i486-slackware-linux
i686-montavista-linux
i586-linux-gnu
i686-linux-android
i386-gnu
i486-gnu
i586-gnu
i686-gnu
mips-linux-gnu
mips-mti-linux
mips-mti-linux-gnu
mips-img-linux-gnu
mipsisa32r6-linux-gnu
mipsel-linux-gnu
mipsisa32r6el-linux-gnu
mipsel-linux-android
mips64-linux-gnu
mips64-linux-gnuabi64
mipsisa64r6-linux-gnu
mipsisa64r6-linux-gnuabi64
mips64el-linux-gnu
mips64el-linux-gnuabi64
mipsisa64r6el-linux-gnu
mipsisa64r6el-linux-gnuabi64
mips64el-linux-android
mips64-linux-gnuabin32
mipsisa64r6-linux-gnuabin32
mips64el-linux-gnuabin32
mipsisa64r6el-linux-gnuabin32
powerpc-linux-gnu
powerpc-unknown-linux-gnu
powerpc-linux-gnuspe
powerpc-suse-linux
powerpc-montavista-linuxspe
powerpc64-linux-gnu
powerpc64-unknown-linux-gnu
powerpc64-suse-linux
ppc64-redhat-linux
powerpc64le-linux-gnu
powerpc64le-unknown-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
riscv32-unknown-linux-gnu
riscv64-unknown-linux-gnu
riscv32-unknown-elf
sparc-linux-gnu
sparcv8-linux-gnu
sparc64-linux-gnu
sparcv9-linux-gnu
s390x-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
sparc-sun-solaris2.11
sparc-sun-solaris2.12
sparcv9-sun-solaris2.11
sparcv9-sun-solaris2.12
i386-pc-solaris2.11
i386-pc-solaris2.12
x86_64-pc-solaris2.11
x86_64-pc-solaris2.12
gcc/
../..
gcc-cross/
/gcc/
i386-linux-gnu/gcc/
i386-gnu/gcc/
/../
/etc/env.d/gcc/config-
/etc/env.d/gcc/
/usr/lib/gcc/
elf_iamcu
aarch64linux
aarch64linuxb
armelfb_linux_eabi
armelf_linux_eabi
elf32ppclinux
elf64ppc
elf64lppc
elf32lriscv
elf64lriscv
elf32_sparc
elf64_sparc
elf32btsmip
elf32ltsmip
elf32btsmipn32
elf64btsmip
elf32ltsmipn32
elf64ltsmip
elf64_s390
elf32_x86_64
elf_x86_64
krait
-mcpu=cortex-a15
kryo
-mcpu=cortex-a57
/mips-r2
+march=mips32r2
/mips-r6
+march=mips32r6
+march=mips32
+march=mips64r6
/32/mips-r1
/mips-r1
/32/mips-r2
/32/mips-r6
/mips-r2-hard-musl
/mipsel-r2-hard-musl
/../sysroot
/mips32
+m32
-mmicromips
/micromips
+mmicromips
/mips64r2
+m64
+march=mips64r2
/mips64
-march=mips64r2
/mips16
/uclibc
+muclibc
+mabi=n64
-mabi=n32
/sof
+msoft-float
/nan2008
+mnan=2008
/mips64/mips16
/mips64r2/mips16
/micromips/mips16
/micromips/64
/mips32/64
^/64
/mips16/64
.*sof/nan2008
/mips-r2-hard
-muclibc
/mips-r2-soft
/mipsel-r2-hard
/mipsel-r2-soft
/mips-r2-hard-nan2008
/mipsel-r2-hard-nan2008
/mips-r2-hard-nan2008-uclibc
/mipsel-r2-hard-nan2008-uclibc
/mips-r2-hard-uclibc
/mipsel-r2-hard-uclibc
/micromipsel-r2-hard-nan2008
/micromipsel-r2-soft
-mabi=n64
+mabi=n32
/../../../../sysroot
/../usr/include
/../../../../mips-mti-linux-gnu/lib
/mips64r6
/mips-r6-hard
/mips-r6-soft
/mipsel-r6-hard
/mipsel-r6-soft
/micromips-r6-hard
/micromips-r6-soft
/micromipsel-r6-hard
/micromipsel-r6-soft
/../../../../mips-img-linux-gnu/lib
-mips16
/soft-float
/micromips/nan2008
/mips16/nan2008
/mips16.*/64
/micromips.*/64
/n32
/armv7-a
+march=armv7-a
/thumb
-march=armv7-a
+mthumb
/armv7-a/thumb
march=armv7-a
lib32/ilp32
+mabi=ilp32
lib32/ilp32f
+mabi=ilp32f
lib32/ilp32d
+mabi=ilp32d
lib64/lp64
+mabi=lp64
lib64/lp64f
+mabi=lp64f
lib64/lp64d
+mabi=lp64d
mabi=ilp32
mabi=ilp32f
mabi=ilp32d
mabi=lp64
mabi=lp64f
mabi=lp64d
/amd64
/sparcv9
-mx32
/x32
+mx32
/libgcc.a
gcc::Preprocessor
gcc preprocessor
gcc::Compiler
gcc frontend
GNU::Assembler
gcc::Linker
linker (via gcc)
/system/develop/headers/c++/v1
/system/develop/headers/c++
HIP_DEVICE_LIB_PATH
oclc_isa_version_
.amdgcn.bc
oclc_daz_opt_on.amdgcn.bc
oclc_daz_opt_off.amdgcn.bc
-linked
llvm-link
-mtriple=amdgcn-amd-amdhsa
-optimized
-filetype=obj
-mattr=-code-object-v3
-flavor
--no-undefined
-type=o
,hip-amdgcn-amd-amdhsa-
AMDGCN::Linker
amdgcn-link
-march=hexagon
hexagon-llvm-mc
-mcpu=hexagon
-gpsize=
/../target
/hexagon/lib
/G0/pic
+reserved-r19
-hexagon-autohvx
/hexagon/include
/hexagon/include/c++
+hvx
+hvx-length
128b
-call_shared
hexagon/lib
/crt0_standalone.o
/crt0.o
/pic
/initS.o
/init.o
/finiS.o
/fini.o
hexagon::Assembler
hexagon-as
hexagon::Linker
hexagon-ld
hexagon-link
/../lib/
/lib/
/lib/../
/usr/lib/
/usr/lib/../
/usr/include/i386-gnu
lib32
lib64
/lib/i386-gnu
GNU::Linker
opt/rh/devtoolset
/../bin
/usr/
/../../
/../../../../
/libc
/system/bin/linker64
/system/bin/linker
/lib/ld-musl-
.so.1
ld-linux-aarch64.so.1
ld-linux-aarch64_be.so.1
ld-linux-armhf.so.3
ld-linux.so.3
ld-uClibc-mipsn8.so.0
ld-uClibc.so.0
ld-musl-mipsel.so.1
ld-musl-mips.so.1
ld-linux-mipsn8.so.1
ld64.so.2
ld64.so.1
ld-linux-riscv32-
ld-linux-riscv64-
ld-linux.so.2
libx32
ld-linux-x32.so.2
ld-linux-x86-64.so.2
/usr/include/x86_64-linux-gnu
/usr/include/i686-linux-gnu/64
/usr/include/i486-linux-gnu/64
/usr/include/i386-linux-gnu
/usr/include/x86_64-linux-gnu/32
/usr/include/i686-linux-gnu
/usr/include/i486-linux-gnu
/usr/include/aarch64-linux-gnu
/usr/include/arm-linux-gnueabi
/usr/include/arm-linux-gnueabihf
/usr/include/armeb-linux-gnueabi
/usr/include/armeb-linux-gnueabihf
/usr/include/mips-linux-gnu
/usr/include/mipsel-linux-gnu
/usr/include/mips64-linux-gnuabi64
/usr/include/mips64el-linux-gnuabi64
/usr/include/mips64-linux-gnuabin32
/usr/include/mips64el-linux-gnuabin32
/usr/include/mipsisa32-linux-gnu
/usr/include/mipsisa32r6el-linux-gnu
/usr/include/mipsisa64r6-linux-gnuabi64
/usr/include/mipsisa64r6el-linux-gnuabi64
/usr/include/mipsisa64r6-linux-gnuabin32
/usr/include/mipsisa64r6el-linux-gnuabin32
/usr/include/powerpc-linux-gnu
/usr/include/powerpc-linux-gnuspe
/usr/include/powerpc64-linux-gnu
/usr/include/powerpc64le-linux-gnu
/usr/include/sparc-linux-gnu
/usr/include/sparc64-linux-gnu
/usr/include/s390x-linux-gnu
/../include/c++
/usr/local/include/c++
/usr/include/c++
/../include
/c++/
/include/g++-v
/../include/g++
libr6
libr2
/lib/arm-linux-gnueabihf
/lib/arm-linux-gnueabi
/lib/armeb-linux-gnueabihf
/lib/armeb-linux-gnueabi
/lib/i386-linux-gnu
/lib/x86_64-linux-gnu
/lib/aarch64-linux-gnu
/lib/aarch64_be-linux-gnu
mipsisa32r6
-linux-gnu
mipsisa32r6el
mipsel
mipsisa64r6
-linux-
mipsisa64r6el
mips64el
/lib/powerpc-linux-gnuspe
/lib/powerpc-linux-gnu
/lib/powerpc64-linux-gnu
/lib/powerpc64le-linux-gnu
/lib/sparc-linux-gnu
/lib/sparc64-linux-gnu
/lib/s390x-linux-gnu
__llvm_profile_runtime
/c++/v1
-lmingwthrd
-lmingw32
-lmoldname
-lmingwex
--subsystem
windows
console
--dll
--shared
DllMainCRTStartup
dllcrt2.o
crt2u.o
crt2.o
gcrt2.o
windowsapp
-lssp_nonshared
-lssp
-liomp5md
-lgmon
--require-defined
-lgdi32
-lcomdlg32
-ladvapi32
-lshell32
-luser32
-lkernel32
/sys-root/mingw/lib
/sys-root/mingw/include
backward
MinGW::Assemble
MinGW::Linker
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
minix::Assembler
minix::Linker
-defaultlib:libcmt
-libpath:
-nologo
-debug
-Brepro
-dll
-incremental:no
-include:___asan_seh_interceptor
-include:__asan_seh_interceptor
-nodefaultlib:vcomp.lib
-nodefaultlib:vcompd.lib
-defaultlib:libomp.lib
-defaultlib:libiomp5md.lib
lld-link
link.exe
/nologo
/Oi-
/Ob2
/Oy-
/GR-
/GS-
/Gy-
/Gw-
/Zc:threadSafeInit
/Zc:threadSafeInit-
cl.exe
HostX64
HostX86
INCLUDE
VCToolsInstallDir
VCINSTALLDIR
PATH
visualstudio::Linker
-fno-exceptions
-DMYRIAD2
moviCompile
-no6thSlotCompression
-cv:
-noSPrefixing
moviAsm
-lrtemscpu
-lrtemsbsp
sparc-myriad-rtems-ld
myriad
/../sparc-myriad-rtems/lib
/../include/c++/v1
movicompile
shave::Linker
nacl-arm-macros.s
elf_i386_nacl
armelf_nacl
elf_x86_64_nacl
mipselelf_nacl
Native Client
-lnacl
-lpnacl_legacy
x86_64-nacl/lib32
i686-nacl/usr/lib
x86_64-nacl/bin
i686-nacl
x86_64-nacl/lib
x86_64-nacl/usr/lib
x86_64-nacl
arm-nacl/lib
arm-nacl/usr/lib
arm-nacl/bin
arm-nacl
mipsel-nacl/lib
mipsel-nacl/usr/lib
mipsel-nacl
i686-nacl/usr/include
x86_64-nacl/include
arm-nacl/usr/include
x86_64-nacl/usr/include
mipsel-nacl/usr/include
arm-nacl/include/c++/v1
x86_64-nacl/include/c++/v1
mipsel-nacl/include/c++/v1
NaCl::Linker
/libexec/ld.elf_so
armelf_nbsd_eabi
armelf_nbsd_eabihf
armelf_nbsd
armelfb_nbsd_eabi
armelfb_nbsd_eabihf
armelfb_nbsd
elf32ppc_nbsd
/usr/include/c++/
-D_REENTRANT
netbsd::Assembler
netbsd::Linker
__start
/usr/libexec/ld.so
-nopie
gcrt0.o
rcrt0.o
-lc++abi_p
openbsd::Assembler
openbsd::Linker
--dependent-lib=libclang_rt.profile-x86_64.a
orbis-as
--dependent-lib=libSceDbgUBSanitizer_stub_weak.a
--dependent-lib=libSceDbgAddressSanitizer_stub_weak.a
target/include
PS4 system headers
target/lib
PS4 system libraries
--oformat=so
orbis-ld
-lSceDbgUBSanitizer_stub_weak
-lSceDbgAddressSanitizer_stub_weak
-lkernel
PS4cpu::Assemble
PS4cpu::Link
RISCV::Linker
_start
--dynamic-linker
values-Xa.o
sancov_begin
sancov_end
solaris::Assembler
solaris::Linker
/../libexec
wasm::Linker
/include/c++/v1
wasm-ld
-fverbose-asm
XCC_C_INCLUDE_PATH
XCC_CPLUS_INCLUDE_PATH
XCore::Assembler
XCore-as
XCore::Linker
XCore-ld
cuda-cpp-output
hip-cpp-output
objective-c-cpp-output
objc-cpp-output
objective-c++-cpp-output
objc++-cpp-output
c-header-cpp-output
c-header
cl-header
objective-c-header-cpp-output
objective-c-header
c++-header-cpp-output
c++-header
objective-c++-header-cpp-output
objective-c++-header
c++-module
c++-module-cpp-output
f95-cpp-input
java
lto-ir
lto-bc
rewritten-objc
rewritten-legacy-objc
precompiled-header
treelang
image
dSYM
cuda-fatbin
fatbin
hip-fatbin
 on 
-fxray-always-emit-customevents
-fxray-always-emit-typedevents
clang -cc1 [options] file...
LLVM 'Clang' Compiler: http://clang.llvm.org
clang (LLVM option parsing)
-trans
__IMPL_ARCMT_REMOVED_EXPR__
Error opening file: 
Invalid file data: '
' not a number
File does not exist: 
File was modified: 
Could not create directory: 
Could not create file: 
offset
CF_IMPLICIT_BRIDGING_ENABLED
CF_IMPLICIT_BRIDGING_ENABLED
CF_IMPLICIT_BRIDGING_DISABLED
NS_NONATOMIC_IOSONLY
(NS_NONATOMIC_IOSONLY
(nonatomic
(getter=
, getter=
delegate
dataSource
NS_RETURNS_INNER_POINTER
 NS_RETURNS_INNER_POINTER
 NS_RETURNS_INNER_POINTER 
NS_ENUM
#ifndef NS_ENUM
@import Foundation;
#endif
#ifndef NS_ENUM
#import <Foundation/Foundation.h>
#endif
NS_ENUM(
NS_OPTIONS(
typedef NS_OPTIONS(
typedef NS_ENUM(
CF_RETURNS_RETAINED
 CF_RETURNS_RETAINED
CF_RETURNS_NOT_RETAINED
 CF_RETURNS_NOT_RETAINED
NS_RETURNS_RETAINED
 NS_RETURNS_RETAINED
CF_CONSUMED
CF_CONSUMED 
NS_CONSUMED
NS_CONSUMED 
NS_CONSUMES_SELF
 NS_CONSUMES_SELF
 (instancetype)
 NS_DESIGNATED_INITIALIZER
  "file": "
  "offset": 
  "text": "
  "remove": 
error: could not create file: 
<dict>
 <key>files</key>
 <array>
 </array>
 <key>diagnostics</key>
 <array>
  <dict>
   <key>description</key>
   <key>category</key>
   <key>type</key>
  <key>location</key>
   <key>ranges</key>
   <array>
   </array>
  </dict>
 </array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
 <key>line</key>
 <key>col</key>
 <key>file</key>
<array>
</array>
getReturnValue
setReturnValue
getArgument
setArgument
zone
__strong 
a name is referenced outside the NSAutoreleasePool scope that it was declared in
name declared here
intended @autoreleasepool scope begins here
intended @autoreleasepool scope ends here
@autoreleasepool {
GC managed memory will become unmanaged in ARC
NSMakeCollectable
CFMakeCollectable
CFMakeCollectable will leak the object that it receives in ARC
__weak 
__unsafe_unretained 
it is not safe to remove an unused 'autorelease' message; its receiver may be destroyed immediately
' message on an __unsafe_unretained type
' message on a global variable
it is not safe to remove 'retain' message on the result of a 'delegate' message; the object that was passed to 'setDelegate:' may not be properly retained
Create
Copy
CFRetain
' the result of '
' message; a __bridge cast may result in a pointer to a destroyed object and a __bridge_retained may leak the object
' to have the object automatically autoreleased
 copy]
if (!(self = 
#if !__has_feature(objc_arc)
clang-tidy
clang-include-fixer
yaml
thread constructor failed
find_all_symbols_db.yaml
Shadow Call Stack
Allocation failed
(%rip)
no-rip
.note.gnu.property
@feat.00
_fltused
__fltused
$non_lazy_ptr
__imp_
.refptr.
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
subreg
__IMPORT
__pointers
X86 Assembly Printer
llvm.ptrauth global lowering not implemented
no-x86-call-frame-opt
Avoid optimizing x86 call frames for size
X86 Call Frame Optimization
x86-cf-opt
X86 Optimize Call Frame
x86-cmov-converter
Enable the X86 cmov-to-branch optimization.
x86-cmov-converter-threshold
Minimum gain per loop (in cycles) threshold.
x86-cmov-converter-force-mem-operand
Convert cmovs to branches whenever they have memory operands.
X86 cmov Conversion
x86-cmov-conversion
X86CondBrFolding
X86 CondBr Folding
X86 Darwin Stack Probe Emitter Pass
x86-darwin-stack-probe-emitter
X86 Darwin Stack Probe Emitter
pushq   %rcx
pushq   %rax
.weak_reference ____chkstk_darwin
movq    ____chkstk_darwin@GOTPCREL(%rip), %rcx
testq   %rcx, %rcx
jnz     Lavailable
leaq    ___chkstk_darwin_probe(%rip), %rcx
Lavailable:
callq   *%rcx
popq    %rax
popq    %rcx
retq
__chkstk_darwin_probe
cmpq    $$4096, %rax
leaq    24(%rsp), %rcx
jb      Ltmp1
Ltmp2:
subq    $$4096, %rcx
testq   %rcx, (%rcx)
subq    $$4096, %rax
cmpq    $$4096, %rax
ja      Ltmp2
Ltmp1:
subq    %rax, %rcx
testq   %rcx, (%rcx)
retq
disable-x86-domain-reassignment
X86: Disable Virtual Register Reassignment.
X86 Domain Reassignment Pass
x86-domain-reassignment
X86 Discriminate Memory Operands
X86 pseudo instruction expansion pass
x86-pseudo
SSE register return with SSE disabled
fixup-byte-word-insts
Change byte and word instructions to larger sizes
X86 Byte/Word Instruction Fixup
x86-fixup-bw-insts
X86 LEA Fixup
x86-fixup-LEAs
x86-disable-avoid-SFB
X86: Disable Store Forwarding Blocks fixup.
x86-sfb-inspection-limit
X86: Number of instructions backward to inspect for store forwarding blocks.
Machine code sinking
x86-avoid-SFB
X86 Avoid Store Forwarding Blocks
X86 Fixup SetCC
X86 EFLAGS copy lowering
x86-flags-copy-lowering
Cannot lower EFLAGS copy unless it is defined in turn by a copy!
Cannot lower EFLAGS copy when original copy def does not dominate all uses.
No support for lowering a copy into EFLAGS when used by this instruction!
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
__chkstk_stub
Emitting stack probe calls on 64-bit with the large code model and retpoline not yet implemented.
Can't handle guaranteed tail call under win64 yet
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
Segmented stacks not supported on FreeBSD i386.
Emitting morestack calls on 64-bit with the large code model and retpoline not yet implemented.
__morestack_addr
__morestack
hipe.literals
Can't generate HiPE prologue without runtime parameters
AMD64_LEAF_WORDS
X86_LEAF_WORDS
erlang.
bif_
P_NSP_LIMIT
inc_stack_0
Segmented stacks does not support fastcall with nested function.
HiPE literal 
 required but not provided
x86-and-imm-shrink
Enable setting constant bits to reduce size of mask immediates
X86 DAG->DAG Instruction Selection
__main
x86-experimental-vector-widening-legalization
Enable an experimental vector type legalization through widening rather than promotion.
x86-experimental-pref-loop-alignment
Sets the preferable loop alignment for experiments (the last x86-experimental-pref-loop-alignment bits of the loop header PC will be 0).
mul-constant-optimization
Replace 'mul x, Const' with more effective instructions like SHIFT, LEA, etc.
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
_Unwind_SjLj_Resume
__security_cookie
__security_check_cookie
X86 interrupts may not return any value
SSE2 register return with SSE2 disabled
X87 register return with X87 disabled
X86 interrupts may take one or two arguments
X86 interrupts may not be called directly
cannot use inalloca attribute on a register parameter
any parameter with the inalloca attribute must be the only memory argument
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
GCC_except_table
llvm.x86.seh.recoverfp must take a function as the first argument
register 
 is allocatable: function has no frame pointer
Invalid register name global variable
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::SHLD
X86ISD::SHRD
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FILD
X86ISD::FILD_FLAG
X86ISD::FP_TO_INT16_IN_MEM
X86ISD::FP_TO_INT32_IN_MEM
X86ISD::FP_TO_INT64_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::RDTSC_DAG
X86ISD::RDTSCP_DAG
X86ISD::RDPMC_DAG
X86ISD::BT
X86ISD::CMP
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPM_RND
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::FSETCCM
X86ISD::FSETCCM_RND
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::IRET
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::MOVDQ2Q
X86ISD::MMX_MOVD2W
X86ISD::MMX_MOVW2D
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::BLENDI
X86ISD::SHRUNKBLEND
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::CONFLICT
X86ISD::FMAX
X86ISD::FMAXS
X86ISD::FMAX_RND
X86ISD::FMIN
X86ISD::FMINS
X86ISD::FMIN_RND
X86ISD::FMINS_RND
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::EXTRQI
X86ISD::INSERTQI
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_SJLJ_SETUP_DISPATCH
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::FNSTSW16r
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::LCMPXCHG16_DAG
X86ISD::LCMPXCHG8_SAVE_EBX_DAG
X86ISD::LCMPXCHG16_SAVE_RBX_DAG
X86ISD::LADD
X86ISD::LSUB
X86ISD::LOR
X86ISD::LXOR
X86ISD::LAND
X86ISD::VZEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VTRUNC
X86ISD::VTRUNCS
X86ISD::VTRUNCUS
X86ISD::VTRUNCSTORES
X86ISD::VTRUNCSTOREUS
X86ISD::VMTRUNCSTORES
X86ISD::VMTRUNCSTOREUS
X86ISD::VFPEXT
X86ISD::VFPEXT_RND
X86ISD::VFPEXTS_RND
X86ISD::VFPROUND
X86ISD::VFPROUND_RND
X86ISD::VFPROUNDS_RND
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::VSRAV
X86ISD::VROTLI
X86ISD::VROTRI
X86ISD::VPPERM
X86ISD::CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PHMINPOS
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BEXTR
X86ISD::BZHI
X86ISD::MUL_IMM
X86ISD::MOVMSK
X86ISD::PTEST
X86ISD::TESTP
X86ISD::KORTEST
X86ISD::KTEST
X86ISD::KADD
X86ISD::KSHIFTL
X86ISD::KSHIFTR
X86ISD::PACKSS
X86ISD::PACKUS
X86ISD::PALIGNR
X86ISD::VALIGN
X86ISD::VSHLD
X86ISD::VSHRD
X86ISD::VSHLDV
X86ISD::VSHRDV
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::SHUF128
X86ISD::MOVLHPS
X86ISD::MOVHLPS
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::VBROADCASTM
X86ISD::SUBV_BROADCAST
X86ISD::VPERMILPV
X86ISD::VPERMILPI
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMI
X86ISD::VPTERNLOG
X86ISD::VFIXUPIMM
X86ISD::VFIXUPIMMS
X86ISD::VRANGE
X86ISD::VRANGE_RND
X86ISD::VRANGES
X86ISD::VRANGES_RND
X86ISD::PMULUDQ
X86ISD::PMULDQ
X86ISD::PSADBW
X86ISD::DBPSADBW
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::DYN_ALLOCA
X86ISD::MEMBARRIER
X86ISD::MFENCE
X86ISD::SEG_ALLOCA
X86ISD::SAHF
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::VPMADDUBSW
X86ISD::VPMADDWD
X86ISD::VPSHA
X86ISD::VPSHL
X86ISD::VPCOM
X86ISD::VPCOMU
X86ISD::VPERMIL2
X86ISD::FMSUB
X86ISD::FNMADD
X86ISD::FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::FMADD_RND
X86ISD::FNMADD_RND
X86ISD::FMSUB_RND
X86ISD::FNMSUB_RND
X86ISD::FMADDSUB_RND
X86ISD::FMSUBADD_RND
X86ISD::VPMADD52H
X86ISD::VPMADD52L
X86ISD::VRNDSCALE
X86ISD::VRNDSCALE_RND
X86ISD::VRNDSCALES
X86ISD::VRNDSCALES_RND
X86ISD::VREDUCE
X86ISD::VREDUCE_RND
X86ISD::VREDUCES
X86ISD::VREDUCES_RND
X86ISD::VGETMANT
X86ISD::VGETMANT_RND
X86ISD::VGETMANTS
X86ISD::VGETMANTS_RND
X86ISD::PCMPESTR
X86ISD::PCMPISTR
X86ISD::XTEST
X86ISD::COMPRESS
X86ISD::EXPAND
X86ISD::SELECT
X86ISD::SELECTS
X86ISD::ADDSUB
X86ISD::RCP14
X86ISD::RCP14S
X86ISD::RCP28
X86ISD::RCP28S
X86ISD::EXP2
X86ISD::RSQRT14
X86ISD::RSQRT14S
X86ISD::RSQRT28
X86ISD::RSQRT28S
X86ISD::FADD_RND
X86ISD::FADDS_RND
X86ISD::FSUB_RND
X86ISD::FSUBS_RND
X86ISD::FMUL_RND
X86ISD::FMULS_RND
X86ISD::FDIV_RND
X86ISD::FDIVS_RND
X86ISD::FSQRT_RND
X86ISD::FSQRTS_RND
X86ISD::FGETEXP_RND
X86ISD::FGETEXPS_RND
X86ISD::SCALEF
X86ISD::SCALEFS
X86ISD::AVG
X86ISD::MULHRS
X86ISD::SINT_TO_FP_RND
X86ISD::UINT_TO_FP_RND
X86ISD::CVTTP2SI
X86ISD::CVTTP2UI
X86ISD::CVTTP2SI_RND
X86ISD::CVTTP2UI_RND
X86ISD::CVTTS2SI
X86ISD::CVTTS2UI
X86ISD::CVTTS2SI_RND
X86ISD::CVTTS2UI_RND
X86ISD::CVTSI2P
X86ISD::CVTUI2P
X86ISD::VFPCLASS
X86ISD::VFPCLASSS
X86ISD::MULTISHIFT
X86ISD::SCALAR_SINT_TO_FP_RND
X86ISD::SCALAR_UINT_TO_FP_RND
X86ISD::CVTPS2PH
X86ISD::CVTPH2PS
X86ISD::CVTPH2PS_RND
X86ISD::CVTP2SI
X86ISD::CVTP2UI
X86ISD::CVTP2SI_RND
X86ISD::CVTP2UI_RND
X86ISD::CVTS2SI
X86ISD::CVTS2UI
X86ISD::CVTS2SI_RND
X86ISD::CVTS2UI_RND
X86ISD::LWPINS
X86ISD::MGATHER
X86ISD::MSCATTER
X86ISD::VPDPBUSD
X86ISD::VPDPBUSDS
X86ISD::VPDPWSSD
X86ISD::VPDPWSSDS
X86ISD::VPSHUFBITQMB
X86ISD::GF2P8MULB
X86ISD::GF2P8AFFINEQB
X86ISD::GF2P8AFFINEINVQB
X86ISD::NT_CALL
X86ISD::NT_BRIND
X86ISD::UMWAIT
X86ISD::TPAUSE
__morestack_allocate_stack_space
calling convention incompatible with retpoline, no available registers
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
{st}
{flags}
___chkstk_ms
__chkstk
_alloca
_chkstk
querying registration node size for function without personality
can only recover FP for 32-bit MSVC EH personality functions
EH registrations only live in functions using WinEH
llvm.x86.seh.ehregnode expects a static alloca
EHGuard only live in functions using WinEH
llvm.x86.seh.ehguard expects a static alloca
__x86_indirect_thunk_eax
__x86_indirect_thunk_ecx
__x86_indirect_thunk_edx
__x86_indirect_thunk_edi
__x86_indirect_thunk_r11
__llvm_retpoline_eax
__llvm_retpoline_ecx
__llvm_retpoline_edx
__llvm_retpoline_edi
__llvm_retpoline_r11
x86-indirect-branch-tracking
Enable X86 indirect branch tracking pass.
X86 Indirect Branch Tracking
prefetch-hints-file
Path to the prefetch hints profile.
X86 Insert Cache Prefetches
Could not open profile: 
_nta_
_t0_
_t1_
_t2_
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
partial-reg-update-clearance
Clearance between two register writes for inserting XOR to avoid partial register update
undef-reg-clearance
How many idle instructions we would like before certain undef register reads
Unable to copy EFLAGS physical register!
Cannot emit physreg copy instruction
We failed to fuse operand 
x86-got-absolute-address
x86-pic-base-offset
x86-got
x86-gotoff
x86-gotpcrel
x86-plt
x86-tlsgd
x86-tlsld
x86-tlsldm
x86-gottpoff
x86-indntpoff
x86-tpoff
x86-dtpoff
x86-ntpoff
x86-gotntpoff
x86-dllimport
x86-darwin-nonlazy
x86-darwin-nonlazy-pic-base
x86-tlvp
x86-tlvp-pic-base
x86-secrel
x86-coffstub
X86 PIC Global Base Reg Initialization
_GLOBAL_OFFSET_TABLE_
Local Dynamic TLS Access Clean-up
Compressing EVEX instrs to VEX encoding when possible
x86-evex-to-vex-compress
EVEX TO VEX Compression 
MEMBARRIER
eh_return, addr: %
CLEANUPRET
CATCHRET
TAILCALL
__tls_get_addr
___tls_get_addr
Lowering register statepoints with retpoline not yet implemented.
__fentry__
Lowering patchpoint with retpoline not yet implemented.
xray_sled_
xray_event_sled_
# XRay Custom Event Log
__xray_CustomEvent
xray custom event end.
xray_typed_event_sled_
# XRay Typed Event Log
__xray_TypedEvent
xray typed event end.
 {z}
disable-x86-lea-opt
X86: Disable LEA optimizations.
X86 LEA Optimize
X86 Atom pad short functions
VECR
BNDR
SEGMENT_REG
GR32_BPSP
LOW32_ADDR_ACCESS_with_sub_32bit
GR32_BSI
GR32_SIDI
GR32_DIBP+GR32_SIDI
GR32_DIBP+LOW32_ADDR_ACCESS_with_sub_32bit
RFP32
GR8_ABCD_H+GR32_BSI
GR8_ABCD_L+GR32_BSI
VR64
VR128H
VR128L
GR8_NOREX
GR32_TC
GR32_BPSP+GR32_TC
DEBUG_REG
FR32
CONTROL_REG
GR64_NOREX
GR64_TCW64
GR32_BPSP+GR64_TCW64
GR8+GR32_DIBP
GR8+GR32_BSI
GR64_TC+GR64_TCW64
GR8+LOW32_ADDR_ACCESS_with_sub_32bit
GR8+GR64_NOREX
GR64_TC
GR8+GR64_TCW64
GR8+GR64_TC
FR32X
GR16
CSR_32
CSR_32EHRet
CSR_32_AllRegs
CSR_32_AllRegs_AVX
CSR_32_AllRegs_AVX512
CSR_32_AllRegs_SSE
CSR_32_RegCall
CSR_32_RegCall_NoSSE
CSR_64
CSR_64EHRet
CSR_64_AllRegs
CSR_64_AllRegs_AVX
CSR_64_AllRegs_AVX512
CSR_64_AllRegs_NoSSE
CSR_64_CXX_TLS_Darwin_PE
CSR_64_CXX_TLS_Darwin_ViaCopy
CSR_64_HHVM
CSR_64_Intel_OCL_BI
CSR_64_Intel_OCL_BI_AVX
CSR_64_Intel_OCL_BI_AVX512
CSR_64_MostRegs
CSR_64_RT_AllRegs
CSR_64_RT_AllRegs_AVX
CSR_64_RT_MostRegs
CSR_64_SwiftError
CSR_64_TLS_Darwin
CSR_NoRegs
CSR_SysV64_RegCall
CSR_SysV64_RegCall_NoSSE
CSR_Win64
CSR_Win64_Intel_OCL_BI_AVX
CSR_Win64_Intel_OCL_BI_AVX512
CSR_Win64_NoSSE
CSR_Win64_RegCall
CSR_Win64_RegCall_NoSSE
CSR_Win64_SwiftError
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
sub_8bit
sub_8bit_hi
sub_8bit_hi_phony
sub_16bit
sub_16bit_hi
sub_32bit
sub_xmm
sub_ymm
X86 Retpoline Thunks
x86-speculative-load-hardening
Force enable speculative load hardening
x86-slh-lfence
Use LFENCE along each conditional edge to harden against speculative loads rather than conditional movs and poisoned pointers.
x86-slh-post-load
Harden the value loaded *after* it is loaded by flushing the loaded bits to 1. This is hard to do in general but can be done easily for GPRs.
x86-slh-fence-call-and-ret
Use a full speculation fence to harden both call and ret edges rather than a lighter weight mitigation.
x86-slh-ip
Harden interprocedurally by passing our state in and out of functions in the high bits of the stack pointer.
x86-slh-loads
Sanitize loads from memory. When disable, no significant security is provided.
x86-slh-indirect
Harden indirect calls and jumps against using speculatively stored attacker controlled addresses. This is designed to mitigate Spectre v1.2 style attacks.
X86 speculative load hardener
x86-slh
X86 speculative load hardening
Unexpected loading branch or call!
Unable to unfold load!
Memory operand jumps should have been unfolded!
Support for 16-bit indirect branches is not implemented.
Support for 32-bit indirect branches is not implemented.
Unimplemented terminator sequence!
Cannot harden a conditional entry to a target of an indirect branch!
slh_ret_addr
Expected a variant SchedClass
x86-early-ifcvt
Enable early if-conversion on X86
+sse2,
+64bit,
+64bit
+sahf,
64-bit code requested on a subtarget that doesn't support it!
x86-machine-combiner
Enable the machine combiner pass
x86-condbr-folding
Enable the conditional branch folding pass
,+soft-float
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
-p:32:32
-i64:64
-i64:32-f64:32
-f64:32:64
-f80:128
-f80:32
-f128:32
-n8:16:32:64
-n8:16:32
-a:0:32-S32
-S128
Target does not support the tiny CodeModel
X86 Execution Domain Fix
x86-execution-domain-fix
X86 Execution Dependency Fix
ffsl
X86 vzeroupper inserter
X86 DynAlloca Expander
Windows 32-bit x86 EH state insertion
__CxxLongjmpUnwind
cookie
frameaddr
_seh_longjmp_unwind4
_seh_longjmp_unwind
CXXExceptionRegistration
EHRegistrationNode
__ehhandler$
safeseh
SEHExceptionRegistration
Insert stores for EH state numbers
x86-winehstate
asan-instrument-assembly
instrument assembly with AddressSanitizer checks
Reg:
Imm:
Prefix:
Memory: ModeSize=
,Size=
,BaseReg=
,IndexReg=
,Scale=
,Disp=
,SegReg=
__asan_report_
store
x86-warn-indirectbr
Warn on indirect jmp/call instruction
.word
.2byte
invalid register name
register %
 is only available in 64-bit mode
expected stack index
invalid stack index
expected ')'
setb
unord
eq_uq
neq_oq
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vpcmp
vpcom
data16
xacquire
xrelease
lock
repne
redundant data16 prefix
redundant data32 prefix
'data32' is not supported in 64-bit mode
unexpected token in argument list
fsubp
fdivp
fsubrp
fdivrp
movw
movl
movsb
movsw
movsl
movsq
int3
xlatb
memory operand is only for determining the size, (R|E)BX will be used for the location
raw indirect jump instruction does not use retpoline
rip can only be used as a base register
expected memory operand after 'ptr', found register operand instead
invalid segment register
16-bit addresses cannot have a scale
TYPE
SIZE
offset operator cannot yet handle constants
Expected 'PTR' or 'ptr' token!
Invalid rounding mode.
Expected - at this point
Expected } at this point
{sae}
unknown token in expression
Unexpected identifier!
Dealing OFFSET operator as part ofa compound immediate expression is yet to be supported
expected identifier
invalid reference to undefined symbol
unexpected bracket encountered
Unable to lookup field reference!
Unexpected token type!
BaseReg/IndexReg already set!
scale factor in address must be 1, 2, 4 or 8
cannot use more than one symbol in memory operand
unable to lookup expression
Scale can't be negative
Unexpected operator!
invalid base+index expression
invalid 16-bit base register
16-bit memory operand may not include only index register
base register is 64-bit, but index register is not
base register is 32-bit, but index register is not
base register is 16-bit, but index register is not
invalid 16-bit base/index register combination
IP-relative addressing requires 64-bit mode
%eiz and %riz can only be used as index registers
%rip can only be used as a base register
eiz and riz can only be used as index registers
%rip as base register can not have an index register
%rip is not allowed as an index register
expected comma in scale expression
expected scale expression
scale factor in 16-bit address must be 1
scale factor without index register is ignored
unexpected token in memory operand
Expected 1to<NUM> at this point
{1to2}
{1to4}
{1to8}
{1to16}
Invalid memory broadcast primitive.
Register k0 can't be used as write mask
Expected an op-mask register at this point
Expected a {z} mark at this point
mismatching source and destination index registers
ES:(R|E)SI
ES:(R|E)DI
memory operand is only for determining the size, 
 will be used for the location
'.att_syntax noprefix' is not supported: registers must have a '%' prefix in .att_syntax
'.intel_syntax prefix' is not supported: registers must not have a '%' prefix in .intel_syntax
.even
.code16
.code16gcc
.code32
.code64
unknown directive 
unexpected token in directive
expected symbol name
expected parameter byte count
parameters size out of range
unexpected tokens
 in '.cv_fpo_proc' directive
 in '.cv_fpo_setframe' directive
 in '.cv_fpo_pushreg' directive
expected offset
 in '.cv_fpo_stackalloc' directive
 in '.cv_fpo_stackalign' directive
 in '.cv_fpo_endprologue' directive
 in '.cv_fpo_endproc' directive
invalid instruction mnemonic '
ambiguous operand size for instruction '
invalid operand for instruction
unknown instruction mnemonic
fninit
fnsave
fnstcw
fnstenv
fnstsw
fnclex
cbtw
cltd
cqto
cwtd
popw
popl
popq
retw
retl
retq
callw
calll
callq
cltq
cwtl
iretw
iretl
lgdtw
lgdtl
lgdtq
lidtw
lidtl
lidtq
lretw
lretl
popaw
popal
popfw
popfl
popfq
pushw
pushl
pushq
shlb
shll
shlq
shlw
sgdtw
sgdtl
sgdtq
sidtw
sidtl
sidtq
fildll
pushaw
pushal
pushfw
pushfl
pushfq
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fistpll
fldcw
leave
sysretl
xsave64
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
fisttpll
fxsave64
sysexitl
xrstor64
xsavec64
xsaves64
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
fcmovb
fxrstor64
xrstors64
xsaveopt64
lgdtd
lidtd
sgdtd
sidtd
cmovb
cmove
popf
cmovbe
cmovae
cmovle
cmovge
cmovne
cmovp
cmovnp
pushf
cmova
cmovl
cmovg
sete
wait
loope
setbe
setae
setle
setge
setne
setp
setnp
fcompi
loopne
seta
setl
setg
fucompi
adcb
adcl
adcq
adcw
adcx
adcxl
adcxq
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
adox
adoxl
adoxq
aesdec
aesdeclast
aesenc
aesenclast
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blcfill
blcfilll
blcfillq
blci
blcic
blcicl
blcicq
blcil
blciq
blcmsk
blcmskl
blcmskq
blcs
blcsl
blcsq
blendpd
blendps
blendvpd
blendvps
blsfill
blsfilll
blsfillq
blsi
blsic
blsicl
blsicq
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bndcl
bndcn
bndcu
bndldx
bndmk
bndmov
bndstx
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clac
cldemote
clflush
clflushopt
clgi
clrb
clrl
clrq
clrssbsy
clrw
cltd
cltq
clts
clwb
clzero
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmps
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
encls
enclu
enclv
endbr32
endbr64
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
ffreep
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstor64
fxsave
fxsave64
fxtract
fyl2x
fyl2xp1
getsec
gf2p8affineinvqb
gf2p8affineqb
gf2p8mulb
haddpd
haddps
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incsspd
incsspq
incw
insb
insd
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
kaddb
kaddd
kaddq
kaddw
kandb
kandd
kandnb
kandnd
kandnq
kandnw
kandq
kandw
kmovb
kmovd
kmovq
kmovw
knotb
knotd
knotq
knotw
korb
kord
korq
kortestb
kortestd
kortestq
kortestw
korw
kshiftlb
kshiftld
kshiftlq
kshiftlw
kshiftrb
kshiftrd
kshiftrq
kshiftrw
ktestb
ktestd
ktestq
ktestw
kunpckbw
kunpckdq
kunpckwd
kxnorb
kxnord
kxnorq
kxnorw
kxorb
kxord
kxorq
kxorw
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtd
lgdtl
lgdtq
lgdtw
lgsl
lgsq
lgsw
lidt
lidtd
lidtl
lidtq
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
llwpcb
lmsw
lmsww
lock
lods
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lwpins
lwpval
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
monitorx
montmul
mov.s
movabs
movabsb
movabsl
movabsq
movabsw
movapd
movapd.s
movaps
movaps.s
movb
movb.s
movbe
movbel
movbeq
movbew
movd
movddup
movdir64b
movdiri
movdq2q
movdqa
movdqa.s
movdqu
movdqu.s
movhlps
movhpd
movhps
movl
movl.s
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq.s
movq2dq
movs
movsb
movsbl
movsbq
movsbw
movsd
movsd.s
movshdup
movsl
movsldup
movslq
movsq
movss
movss.s
movsw
movswl
movswq
movsx
movsxd
movupd
movupd.s
movups
movups.s
movw
movw.s
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
mwaitx
negb
negl
negq
negw
nopl
nopq
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outs
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pconfig
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popal
popaw
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
prefetchwt1
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
ptwrite
ptwritel
ptwriteq
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pushal
pushaw
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpid
rdpkru
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdseed
rdseedl
rdseedq
rdseedw
rdsspd
rdsspq
rdtsc
rdtscp
repne
retf
retfq
retl
retq
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
rstorssp
sahf
salc
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
saveprevssp
sbbb
sbbl
sbbq
sbbw
scas
scasb
scasd
scasl
scasq
scasw
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
setssbsy
sfence
sgdt
sgdtd
sgdtl
sgdtq
sgdtw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtd
sidtl
sidtq
sidtw
skinit
sldt
sldtl
sldtq
sldtw
slwpcb
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stac
stgi
stmxcsr
stos
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
t1mskc
t1mskcl
t1mskcq
test
testb
testl
testq
testw
tpause
tzcnt
tzcntl
tzcntq
tzcntw
tzmsk
tzmskl
tzmskq
ucomisd
ucomiss
ud2b
umonitor
umwait
unpckhpd
unpckhps
unpcklpd
unpcklps
v4fmaddps
v4fmaddss
v4fnmaddps
v4fnmaddss
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
valignd
valignq
vandnpd
vandnps
vandpd
vandps
vblendmpd
vblendmps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcastf32x2
vbroadcastf32x4
vbroadcastf32x8
vbroadcastf64x2
vbroadcastf64x4
vbroadcasti128
vbroadcasti32x2
vbroadcasti32x4
vbroadcasti32x8
vbroadcasti64x2
vbroadcasti64x4vbroadcastsdvbroadcastss
vcmp
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcompresspd
vcompressps
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtpd2qq
vcvtpd2udq
vcvtpd2udqx
vcvtpd2udqy
vcvtpd2uqq
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtps2qq
vcvtps2udq
vcvtps2uqq
vcvtqq2pd
vcvtqq2ps
vcvtqq2psx
vcvtqq2psy
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsd2usi
vcvtsd2usil
vcvtsd2usiq
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvtss2usi
vcvtss2usil
vcvtss2usiq
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttpd2qq
vcvttpd2udqvcvttpd2udqxvcvttpd2udqy
vcvttpd2uqq
vcvttps2dq
vcvttps2qq
vcvttps2udq
vcvttps2uqq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttsd2usivcvttsd2usilvcvttsd2usiq
vcvttss2si
vcvttss2sil
vcvttss2siq
vcvttss2usivcvttss2usilvcvttss2usiq
vcvtudq2pd
vcvtudq2ps
vcvtuqq2pd
vcvtuqq2ps
vcvtuqq2psx
vcvtuqq2psy
vcvtusi2sd
vcvtusi2sdl
vcvtusi2sdq
vcvtusi2ss
vcvtusi2ssl
vcvtusi2ssq
vdbpsadbw
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
verr
verw
vexp2pd
vexp2ps
vexpandpd
vexpandpsvextractf128
vextractf32x4
vextractf32x8
vextractf64x2
vextractf64x4vextracti128
vextracti32x4
vextracti32x8
vextracti64x2
vextracti64x4
vextractps
vfixupimmpd
vfixupimmps
vfixupimmsd
vfixupimmss
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfpclasspd
vfpclasspdq
vfpclasspdx
vfpclasspdy
vfpclasspdz
vfpclassps
vfpclasspsl
vfpclasspsx
vfpclasspsy
vfpclasspsz
vfpclasssd
vfpclassss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherpf0dpd
vgatherpf0dps
vgatherpf0qpd
vgatherpf0qps
vgatherpf1dpd
vgatherpf1dps
vgatherpf1qpd
vgatherpf1qps
vgatherqpd
vgatherqps
vgetexppd
vgetexpps
vgetexpsd
vgetexpss
vgetmantpd
vgetmantps
vgetmantsd
vgetmantss
vgf2p8affineinvqb
vgf2p8affineqb
vgf2p8mulb
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128vinsertf32x4vinsertf32x8vinsertf64x2vinsertf64x4
vinserti128vinserti32x4vinserti32x8vinserti64x2vinserti64x4
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovapd.s
vmovaps
vmovaps.s
vmovd
vmovddup
vmovdqa
vmovdqa.s
vmovdqa32
vmovdqa32.s
vmovdqa64
vmovdqa64.s
vmovdqu
vmovdqu.s
vmovdqu16
vmovdqu16.s
vmovdqu32
vmovdqu32.s
vmovdqu64
vmovdqu64.s
vmovdqu8
vmovdqu8.s
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovq.s
vmovsd
vmovsd.s
vmovshdup
vmovsldup
vmovss
vmovss.s
vmovupd
vmovupd.s
vmovups
vmovups.s
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vp4dpwssd
vp4dpwssds
vpabsb
vpabsd
vpabsq
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandd
vpandn
vpandnd
vpandnq
vpandq
vpavgb
vpavgw
vpblendd
vpblendmb
vpblendmd
vpblendmq
vpblendmw
vpblendvb
vpblendwvpbroadcastbvpbroadcastd
vpbroadcastmb2q
vpbroadcastmw2dvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmp
vpcmpb
vpcmpd
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcmpq
vpcmpub
vpcmpud
vpcmpuq
vpcmpuw
vpcmpw
vpcom
vpcomb
vpcomd
vpcompressb
vpcompressd
vpcompressq
vpcompressw
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vpconflictd
vpconflictq
vpdpbusd
vpdpbusds
vpdpwssd
vpdpwssds
vperm2f128
vperm2i128
vpermb
vpermd
vpermi2b
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermi2w
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpermt2b
vpermt2d
vpermt2pd
vpermt2ps
vpermt2q
vpermt2w
vpermw
vpexpandb
vpexpandd
vpexpandq
vpexpandw
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vplzcntd
vplzcntq
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmadd52huq
vpmadd52luq
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsq
vpmaxsw
vpmaxub
vpmaxud
vpmaxuq
vpmaxuw
vpminsb
vpminsd
vpminsq
vpminsw
vpminub
vpminud
vpminuq
vpminuw
vpmovb2m
vpmovd2m
vpmovdb
vpmovdw
vpmovm2b
vpmovm2d
vpmovm2q
vpmovm2w
vpmovmskb
vpmovq2m
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovswb
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovuswb
vpmovw2m
vpmovwb
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullq
vpmullw
vpmultishiftqb
vpmuludq
vpopcntb
vpopcntd
vpopcntq
vpopcntw
vpor
vpord
vporq
vpperm
vprold
vprolq
vprolvd
vprolvq
vprord
vprorq
vprorvd
vprorvq
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshldd
vpshldq
vpshldvd
vpshldvq
vpshldvw
vpshldw
vpshlq
vpshlw
vpshrdd
vpshrdq
vpshrdvd
vpshrdvq
vpshrdvw
vpshrdw
vpshufbvpshufbitqmb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllvw
vpsllw
vpsrad
vpsraq
vpsravd
vpsravq
vpsravw
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlvw
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vpternlogd
vpternlogq
vptest
vptestmb
vptestmd
vptestmq
vptestmw
vptestnmb
vptestnmd
vptestnmq
vptestnmw
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vpxord
vpxorq
vrangepd
vrangeps
vrangesd
vrangess
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vrcpps
vrcpss
vreducepd
vreduceps
vreducesd
vreducess
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vroundpd
vroundps
vroundsd
vroundss
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vrsqrtps
vrsqrtss
vscalefpd
vscalefps
vscalefsd
vscalefss
vscatterdpd
vscatterdps
vscatterpf0dpd
vscatterpf0dps
vscatterpf0qpd
vscatterpf0qps
vscatterpf1dpd
vscatterpf1dps
vscatterpf1qpd
vscatterpf1qps
vscatterqpd
vscatterqps
vshuff32x4
vshuff64x2
vshufi32x4
vshufi64x2
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wbnoinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
wrpkru
wrssd
wrssq
wrussd
wrussq
xabort
xacquire
xadd
xaddb
xaddl
xaddq
xaddw
xbegin
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xend
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrelease
xrstor
xrstor64
xrstors
xrstors64
xsave
xsave64
xsavec
xsavec64
xsaveopt
xsaveopt64
xsaves
xsaves64
xsetbv
xsha1
xsha256
xstore
xstorerng
xtest
mask, index, and destination registers should be distinct
index and destination registers should be distinct
source register '
' implicitly denotes '
' source group
instruction requires:
Not 64-bit mode
64-bit mode
16-bit mode
Not 16-bit mode
32-bit mode
(unknown)
bwlq
ambiguous instructions require an explicit suffix (could be 
too few operands for instruction
unknown use of instruction mnemonic without a size suffix
, %rax
, %ax
, %eax
, %al
, %st(0)
, %dx
} {z}
{1to2}, 
{1to4}, 
{1to8}, 
{1to16}, 
{sae}, 
, {sae}, 
{sae}, 
{sae}, 
{sae}, 
xstorerng
<reg:
callq
data32
<imm:
imm = 0x%hX
imm = 0x%X
imm = 0x%llX
<mem:
%es:(
, st(0)
, dx
, ax
, eax
, rax
, al
, cl
, xmm0
} {z}, 
, {sae}
offset 
es:[
xmmword ptr 
qword ptr 
word ptr 
dword ptr 
byte ptr 
tbyte ptr 
ymmword ptr 
zmmword ptr 
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
lock
notrack
repne
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_riprel_4byte_relax
reloc_riprel_4byte_relax_rex
reloc_signed_4byte
reloc_signed_4byte_relax
reloc_global_offset_table
reloc_global_offset_table8
reloc_branch_4byte_pcrel
unexpected instruction to relax: 
secrel32
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
Enable 3DNow! instructions
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
Intel Atom processors
Enable AVX instructions
Enable AVX2 instructions
Enable AVX-512 Bit Algorithms
Enable AVX-512 Byte and Word Instructions
Enable AVX-512 Conflict Detection Instructions
Enable AVX-512 Doubleword and Quadword Instructions
Enable AVX-512 Exponential and Reciprocal Instructions
Enable AVX-512 instructions
Enable AVX-512 Integer Fused Multiple-Add
Enable AVX-512 PreFetch Instructions
Enable AVX-512 Vector Byte Manipulation Instructions
Enable AVX-512 further Vector Byte Manipulation Instructions
Enable AVX-512 Vector Length eXtensions
Enable AVX-512 Vector Neural Network Instructions
Enable AVX-512 Population Count Instructions
Support BMI instructions
Support BMI2 instructions
Enable Cache Demote
Flush A Cache Line Optimized
Cache Line Write Back
Enable Cache Line Zero
Enable conditional move instructions
64-bit with cmpxchg16b
ermsb
REP MOVS/STOS are fast
Support 16-bit floating point conversion instructions
false-deps-lzcnt-tzcnt
LZCNT/TZCNT have a false dependency on dest register
false-deps-popcnt
POPCNT has a false dependency on dest register
fast-11bytenop
Target can quickly decode up to 11 byte NOPs
fast-15bytenop
Target can quickly decode up to 15 byte NOPs
fast-bextr
Indicates that the BEXTR instruction is implemented as a single uop with good throughput.
fast-gather
Indicates if gather is reasonably fast.
fast-hops
Prefer horizontal vector math instructions (haddp, phsub, etc.) over normal vector instructions with shuffles
fast-lzcnt
LZCNT instructions are as fast as most simple integer ops
fast-partial-ymm-or-zmm-write
Partial writes to YMM/ZMM registers are fast
fast-scalar-fsqrt
Scalar SQRT is fast (disable Newton-Raphson)
fast-shld-rotate
SHLD can be used as a faster rotate
fast-variable-shuffle
Shuffles with variable masks are fast
fast-vector-fsqrt
Vector SQRT is fast (disable Newton-Raphson)
Enable three-operand fused multiple-add
Enable four-operand fused multiple-add
Support FS/GS Base instructions
Support fxsave/fxrestore instructions
Enable Galois Field Arithmetic Instructions
Intel Goldmont processors
Intel Goldmont Plus processors
idivl-to-divb
Use 8-bit divide for positive values less than 256
idivq-to-divl
Use 32-bit divide for positive values less than 2^32
Invalidate Process-Context Identifier
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
Enable LWP instructions
Support LZCNT instruction
macrofusion
Various instructions can be fused with conditional branches
merge-to-threeway-branch
Merge branches to a three-way conditional branch
Enable MMX instructions
Support MOVBE instruction
Support movdir64b instruction
Support movdiri instruction
Support MPX instructions
Enable MONITORX/MWAITX timer functionality
nopl
Enable NOPL instruction
pad-short-functions
Pad short functions
Enable packed carry-less multiplication instructions
platform configuration instruction
Enable protection keys
Support POPCNT instruction
prefer-256-bit
Prefer 256-bit AVX instructions
Prefetch with Intent to Write and T1 Hint
Support PRFCHW instructions
Support ptwrite instruction
Support RDPID instructions
Support RDRAND instruction
Support RDSEED instruction
retpoline
Remove speculation of indirect branches from the generated code, either by avoiding them entirely or lowering them with a speculation blocking construct.
When lowering an indirect call or branch using a `retpoline`, rely on the specified user provided thunk rather than emitting one ourselves. Only has effect when combined with some other retpoline feature.
Remove speculation of indirect branches from the generated code.
Remove speculation of indirect calls from the generated code.
Support RTM instructions
Support LAHF and SAHF instructions
Enable Software Guard Extensions
Enable SHA instructions
Support CET Shadow-Stack instructions
Intel Silvermont processors
slow-3ops-lea
LEA instruction with 3 ops or certain registers is slow
slow-incdec
INC and DEC instructions are slower than ADD and SUB
slow-lea
LEA instruction with certain arguments is slow
slow-pmaddwd
PMADDWD is slower than PMULLD
slow-pmulld
PMULLD instruction is slow
slow-shld
SHLD instruction is slow
slow-two-mem-ops
Two memory operand instructions are slow
slow-unaligned-mem-16
Slow unaligned 16-byte memory access
slow-unaligned-mem-32
Slow unaligned 32-byte memory access
soft-float
Use software floating point features.
Enable SSE instructions
sse-unaligned-mem
Allow unaligned memory operands with SSE instructions
Enable SSE2 instructions
Enable SSE3 instructions
Enable SSE 4.1 instructions
Enable SSE 4.2 instructions
Support SSE 4a instructions
Enable SSSE3 instructions
Enable TBM instructions
Intel Tremont processors
Promote selected AES instructions to AVX512/AVX registers
Enable vpclmulqdq instructions
Wait and pause enhancements
Write Back No Invalidate
Enable X87 float instructions
Enable XOP instructions
Support xsave instructions
Support xsavec instructions
Support xsaveopt instructions
Support xsaves instructions
Select the amdfam10 processor
Select the athlon processor
Select the athlon-4 processor
Select the athlon-fx processor
Select the athlon-mp processor
Select the athlon-tbird processor
Select the athlon-xp processor
Select the athlon64 processor
Select the athlon64-sse3 processor
Select the atom processor
Select the barcelona processor
Select the bdver1 processor
Select the bdver2 processor
Select the bdver3 processor
Select the bdver4 processor
Select the bonnell processor
Select the broadwell processor
Select the btver1 processor
Select the btver2 processor
Select the c3 processor
Select the c3-2 processor
Select the cannonlake processor
Select the cascadelake processor
Select the core-avx-i processor
Select the core-avx2 processor
Select the core2 processor
Select the corei7 processor
Select the corei7-avx processor
Select the generic processor
Select the geode processor
Select the goldmont processor
Select the goldmont-plus processor
Select the haswell processor
Select the i386 processor
Select the i486 processor
Select the i586 processor
Select the i686 processor
Select the icelake-client processor
Select the icelake-server processor
Select the ivybridge processor
Select the k6 processor
Select the k6-2 processor
Select the k6-3 processor
Select the k8 processor
Select the k8-sse3 processor
Select the knl processor
Select the knm processor
Select the lakemont processor
Select the nehalem processor
Select the nocona processor
Select the opteron processor
Select the opteron-sse3 processor
Select the penryn processor
Select the pentium processor
Select the pentium-m processor
Select the pentium-mmx processor
Select the pentium2 processor
Select the pentium3 processor
Select the pentium3m processor
Select the pentium4 processor
Select the pentium4m processor
Select the pentiumpro processor
Select the prescott processor
Select the sandybridge processor
Select the silvermont processor
Select the skx processor
Select the skylake processor
Select the skylake-avx512 processor
Select the slm processor
Select the tremont processor
Select the westmere processor
Select the winchip-c6 processor
Select the winchip2 processor
Select the x86-64 processor
Select the yonah processor
Select the znver1 processor
+64bit-mode,-32bit-mode,-16bit-mode
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
InvalidUnit
AtomPort0
AtomPort1
AtomPort01
PdAGLU01
PdBranch
PdCount
PdDiv
PdEX
PdEX0
PdEX1
PdEX01
PdFPCVT
PdFPFMA
PdFPMAL
PdFPMMA
PdFPSTO
PdFPU
PdFPU0
PdFPU1
PdFPU2
PdFPU3
PdFPU01
PdFPU23
PdFPXBR
PdLoad
PdMul
PdStore
InvalidRegisterFile
PdFpuPRF
PdIntegerPRF
BWDivider
BWFPDivider
BWPort0
BWPort1
BWPort2
BWPort3
BWPort4
BWPort5
BWPort6
BWPort7
BWPort01
BWPort04
BWPort05
BWPort06
BWPort15
BWPort16
BWPort23
BWPort56
BWPort015
BWPort056
BWPort237
BWPort0156
BWPortAny
JALU0
JALU1
JALU01
JDiv
JFPA
JFPM
JFPU0
JFPU1
JFPU01
JFPX
JLAGU
JLSAGU
JMul
JSAGU
JSTC
JVALU
JVALU0
JVALU1
JVIMUL
JFpuPRF
JIntegerPRF
SKXDivider
SKXFPDivider
SKXPort0
SKXPort1
SKXPort2
SKXPort3
SKXPort4
SKXPort5
SKXPort6
SKXPort7
SKXPort01
SKXPort04
SKXPort05
SKXPort06
SKXPort15
SKXPort16
SKXPort23
SKXPort56
SKXPort015
SKXPort056
SKXPort237
SKXPort0156
SKXPortAny
SBDivider
SBFPDivider
SBPort0
SBPort1
SBPort4
SBPort5
SBPort01
SBPort05
SBPort15
SBPort23
SBPort015
SBPortAny
HWDivider
HWFPDivider
HWPort0
HWPort1
HWPort2
HWPort3
HWPort4
HWPort5
HWPort6
HWPort7
HWPort01
HWPort04
HWPort05
HWPort06
HWPort15
HWPort16
HWPort23
HWPort56
HWPort015
HWPort056
HWPort237
HWPort0156
HWPortAny
SLMDivider
SLMFPDivider
SLMFPMultiplier
SLM_FPC_RSV0
SLM_FPC_RSV1
SLM_FPC_RSV01
SLM_IEC_RSV0
SLM_IEC_RSV1
SLM_IEC_RSV01
SLM_MEC_RSV
SKLDivider
SKLFPDivider
SKLPort0
SKLPort1
SKLPort2
SKLPort3
SKLPort4
SKLPort5
SKLPort6
SKLPort7
SKLPort01
SKLPort04
SKLPort05
SKLPort06
SKLPort15
SKLPort16
SKLPort23
SKLPort56
SKLPort015
SKLPort056
SKLPort237
SKLPort0156
SKLPortAny
ZnAGU
ZnAGU0
ZnAGU1
ZnALU
ZnALU0
ZnALU1
ZnALU2
ZnALU3
ZnALU03
ZnDivider
ZnFPU
ZnFPU0
ZnFPU1
ZnFPU2
ZnFPU3
ZnFPU01
ZnFPU02
ZnFPU03
ZnFPU12
ZnFPU13
ZnFPU23
ZnFPU013
ZnMultiplier
ZnFpuPRF
ZnIntegerPRF
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
Cannot find option named '
FORM: 
Cannot encode high byte register in REX-prefixed instruction
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation with identical base
unsupported relocation with subtraction expression, symbol '
unsupported relocation of variable '
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
32 bit reloc applied to a field with a different size
Cannot represent this expression
unsupported relocation type
.cv_fpo_proc
.cv_fpo_endprologue
.cv_fpo_endproc
.cv_fpo_data
.cv_fpo_pushreg
.cv_fpo_stackalloc
.cv_fpo_stackalign
.cv_fpo_setframe
opening new .cv_fpo_proc before closing previous frame
directive must appear between .cv_fpo_proc and .cv_fpo_endprologue
.cv_fpo_endproc must appear after .cv_proc
missing .cv_fpo_endprologue
no FPO data found for symbol 
 + = 
$T0 
 @ = 
 .raSearch = 
$eip 
 ^ = 
$esp 
 4 + = 
 - ^ = 
$eax
$ebx
$ecx
$edx
$edi
$esi
$esp
$ebp
$eip
a frame register must be established before aligning the stack
32-bit X86: Pentium-Pro and above
x86-64
64-bit X86: EM64T and AMD64
ARM A15 S->D optimizer
Cortex-A9 NEON Store HW bug workaround
Cortex-A9 NEON Load HW bug workaround
Can't split up the VLDM instruction!
Unknown opcode!
:lower16:
:upper16:
2.09
aeabi
vnop
SJLJEH
eh_setjmp begin
eh_setjmp end
ARM Assembly Printer
enable-arm-3-addr-conv
Enable ARM 2-addr to 3-addr conv
pre-RA-sched
Pseudo flag setting opcodes only exist in Selection DAG
arm-lo16
arm-hi16
arm-coffstub
arm-got
arm-sbrel
arm-dllimport
arm-secrel
arm-nonlazy
post-RA-sched
hGPR_and_tGPRwithpc
GPRsp
tcGPR
hGPR
tGPR
hGPR+tcGPR
DQuad_with_dsub_0_in_DPR_8
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR_VFP2
DTriple_with_ssub_0_and_DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DPair_with_ssub_0
DQuad_with_ssub_0_and_DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DPairSpc_with_ssub_0
DQuad_with_ssub_0
DTripleSpc_with_ssub_0
QQQQPR_with_ssub_0
DQuad_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_ssub_2_ssub_3_ssub_4_ssub_5_in_QPR
DTriple_with_qsub_0_in_QPR
CSR_AAPCS
CSR_AAPCS_SplitPush
CSR_AAPCS_SplitPush_SwiftError
CSR_AAPCS_SwiftError
CSR_AAPCS_ThisReturn
CSR_FIQ
CSR_FPRegs
CSR_GenericInt
CSR_iOS
CSR_iOS_CXX_TLS
CSR_iOS_CXX_TLS_PE
CSR_iOS_CXX_TLS_ViaCopy
CSR_iOS_SwiftError
CSR_iOS_TLSCall
CSR_iOS_ThisReturn
dsub_0
dsub_1
dsub_2
dsub_3
dsub_4
dsub_5
dsub_6
dsub_7
gsub_0
gsub_1
qqsub_0
qqsub_1
qsub_0
qsub_1
qsub_2
qsub_3
ssub_0
ssub_1
ssub_2
ssub_3
ssub_4
ssub_5
ssub_6
ssub_7
ssub_8
ssub_9
ssub_10
ssub_11
ssub_12
ssub_13
dsub_7_then_ssub_0
dsub_7_then_ssub_1
ssub_0_ssub_1_ssub_4_ssub_5
ssub_0_ssub_1_ssub_2_ssub_3_ssub_4_ssub_5
ssub_2_ssub_3_ssub_6_ssub_7
ssub_2_ssub_3_ssub_4_ssub_5_ssub_6_ssub_7
ssub_2_ssub_3_ssub_4_ssub_5
ssub_0_ssub_1_ssub_4_ssub_5_ssub_8_ssub_9
ssub_0_ssub_1_ssub_4_ssub_5_ssub_8_ssub_9_ssub_12_ssub_13
ssub_2_ssub_3_ssub_6_ssub_7_dsub_5
ssub_2_ssub_3_ssub_6_ssub_7_dsub_5_dsub_7
ssub_2_ssub_3_ssub_4_ssub_5_ssub_6_ssub_7_ssub_8_ssub_9
ssub_4_ssub_5_ssub_8_ssub_9
ssub_4_ssub_5_ssub_6_ssub_7_ssub_8_ssub_9
ssub_4_ssub_5_ssub_8_ssub_9_ssub_12_ssub_13
ssub_6_ssub_7_dsub_5
ssub_6_ssub_7_ssub_8_ssub_9_dsub_5
ssub_6_ssub_7_dsub_5_dsub_7
ssub_6_ssub_7_ssub_8_ssub_9
ssub_6_ssub_7_ssub_8_ssub_9_dsub_5_ssub_12_ssub_13
ssub_8_ssub_9_ssub_12_ssub_13
ssub_8_ssub_9_dsub_5_ssub_12_ssub_13
dsub_5_dsub_7
dsub_5_ssub_12_ssub_13_dsub_7
dsub_5_ssub_12_ssub_13
ssub_4_ssub_5_ssub_6_ssub_7_qsub_2
arm-disable-cgp
Disable ARM specific CodeGenPrepare pass
arm-enable-scalar-dsp
Use DSP instructions for scalar operations
arm-enable-scalar-dsp-imms
Use DSP instructions for scalar operations                            with immediate operands
ARM IR optimizations
arm-codegenprepare
arm-adjust-jump-tables
Adjust basic block layout to better use TB[BH]
arm-constant-island-max-iteration
The max number of iteration for converge
arm-synthesize-thumb-1-tbb
Use compressed jump tables in Thumb-1 by synthesizing an equivalent to the TBB/TBH instructions
ARM constant island placement and branch shortening pass
Constant Island pass failed to converge!
Branch Fix Up pass failed to converge!
arm-cp-islands
tlsgd
GOT_PREL
gottpoff
tpoff
SBREL
-(LPC
verify-arm-pseudo-expand
Verify machine code after expanding ARM pseudos
ARM pseudo instruction expansion pass
arm-pseudo
After expanding ARM pseudo instructions.
__aeabi_read_tp
Unsupported calling convention
Can't return in GHC call convention
align-neon-spills
Align ARM NEON spills in prolog and epilog
__chkstk
__STACK_LIMIT
WinEH not implemented for this target
disable-shifter-op
Disable isel of shifter-op
ARM Instruction Selection
CPcp
apsr
cpsr
spsr
nzcvq
nzcvqg
arm-interworking
Enable / disable ARM interworking (for debugging only)
arm-promote-constant
Enable / disable promotion of unnamed_addr constants into constant pools
arm-promote-constant-max-size
Maximum size of constant to promote into a constant pool
arm-promote-constant-max-total
Maximum size of ALL constants to promote into a constant pool
arm-bitcode-compatibility
Enable bitcode compatibility hacks
__addsf3vfp
__subsf3vfp
__mulsf3vfp
__divsf3vfp
__adddf3vfp
__subdf3vfp
__muldf3vfp
__divdf3vfp
__eqsf2vfp
__nesf2vfp
__ltsf2vfp
__lesf2vfp
__gesf2vfp
__gtsf2vfp
__unordsf2vfp
__eqdf2vfp
__nedf2vfp
__ltdf2vfp
__ledf2vfp
__gedf2vfp
__gtdf2vfp
__unorddf2vfp
__fixdfsivfp
__fixunsdfsivfp
__fixsfsivfp
__fixunssfsivfp
__truncdfsf2vfp
__extendsfdf2vfp
__floatsidfvfp
__floatunssidfvfp
__floatsisfvfp
__floatunssisfvfp
__aeabi_dadd
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dcmpeq
__aeabi_dcmplt
__aeabi_dcmple
__aeabi_dcmpge
__aeabi_dcmpgt
__aeabi_dcmpun
__aeabi_fadd
__aeabi_fdiv
__aeabi_fmul
__aeabi_fsub
__aeabi_fcmpeq
__aeabi_fcmplt
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_fcmpgt
__aeabi_fcmpun
__aeabi_d2iz
__aeabi_d2uiz
__aeabi_d2lz
__aeabi_d2ulz
__aeabi_f2iz
__aeabi_f2uiz
__aeabi_f2lz
__aeabi_f2ulz
__aeabi_d2f
__aeabi_d2h
__aeabi_f2d
__aeabi_i2d
__aeabi_ui2d
__aeabi_l2d
__aeabi_ul2d
__aeabi_i2f
__aeabi_ui2f
__aeabi_l2f
__aeabi_ul2f
__aeabi_lmul
__aeabi_llsl
__aeabi_llsr
__aeabi_lasr
__aeabi_idiv
__aeabi_ldivmod
__aeabi_uidiv
__aeabi_uldivmod
__aeabi_memcpy
__aeabi_memmove
__aeabi_memset
__stoi64
__dtoi64
__stou64
__dtou64
__i64tos
__i64tod
__u64tos
__u64tod
__divmodsi4
__udivmodsi4
__aeabi_f2h
__aeabi_h2f
__rt_sdiv
__rt_sdiv64
__rt_udiv
__rt_udiv64
__aeabi_idivmod
__aeabi_uidivmod
ARMISD::Wrapper
ARMISD::WrapperPIC
ARMISD::WrapperJT
ARMISD::COPY_STRUCT_BYVAL
ARMISD::CALL
ARMISD::CALL_PRED
ARMISD::CALL_NOLINK
ARMISD::BRCOND
ARMISD::BR_JT
ARMISD::BR2_JT
ARMISD::RET_FLAG
ARMISD::INTRET_FLAG
ARMISD::PIC_ADD
ARMISD::CMP
ARMISD::CMN
ARMISD::CMPZ
ARMISD::CMPFP
ARMISD::CMPFPw0
ARMISD::BCC_i64
ARMISD::FMSTAT
ARMISD::CMOV
ARMISD::SUBS
ARMISD::SSAT
ARMISD::USAT
ARMISD::SRL_FLAG
ARMISD::SRA_FLAG
ARMISD::RRX
ARMISD::ADDC
ARMISD::ADDE
ARMISD::SUBC
ARMISD::SUBE
ARMISD::VMOVRRD
ARMISD::VMOVDRR
ARMISD::VMOVhr
ARMISD::VMOVrh
ARMISD::VMOVSR
ARMISD::EH_SJLJ_SETJMP
ARMISD::EH_SJLJ_LONGJMP
ARMISD::EH_SJLJ_SETUP_DISPATCH
ARMISD::TC_RETURN
ARMISD::THREAD_POINTER
ARMISD::DYN_ALLOC
ARMISD::MEMBARRIER_MCR
ARMISD::PRELOAD
ARMISD::WIN__CHKSTK
ARMISD::WIN__DBZCHK
ARMISD::VCEQ
ARMISD::VCEQZ
ARMISD::VCGE
ARMISD::VCGEZ
ARMISD::VCLEZ
ARMISD::VCGEU
ARMISD::VCGT
ARMISD::VCGTZ
ARMISD::VCLTZ
ARMISD::VCGTU
ARMISD::VTST
ARMISD::VSHL
ARMISD::VSHRs
ARMISD::VSHRu
ARMISD::VRSHRs
ARMISD::VRSHRu
ARMISD::VRSHRN
ARMISD::VQSHLs
ARMISD::VQSHLu
ARMISD::VQSHLsu
ARMISD::VQSHRNs
ARMISD::VQSHRNu
ARMISD::VQSHRNsu
ARMISD::VQRSHRNs
ARMISD::VQRSHRNu
ARMISD::VQRSHRNsu
ARMISD::VSLI
ARMISD::VSRI
ARMISD::VGETLANEu
ARMISD::VGETLANEs
ARMISD::VMOVIMM
ARMISD::VMVNIMM
ARMISD::VMOVFPIMM
ARMISD::VDUP
ARMISD::VDUPLANE
ARMISD::VEXT
ARMISD::VREV64
ARMISD::VREV32
ARMISD::VREV16
ARMISD::VZIP
ARMISD::VUZP
ARMISD::VTRN
ARMISD::VTBL1
ARMISD::VTBL2
ARMISD::VMULLs
ARMISD::VMULLu
ARMISD::UMAAL
ARMISD::UMLAL
ARMISD::SMLAL
ARMISD::SMLALBB
ARMISD::SMLALBT
ARMISD::SMLALTB
ARMISD::SMLALTT
ARMISD::SMULWB
ARMISD::SMULWT
ARMISD::SMLALD
ARMISD::SMLALDX
ARMISD::SMLSLD
ARMISD::SMLSLDX
ARMISD::SMMLAR
ARMISD::SMMLSR
ARMISD::BUILD_VECTOR
ARMISD::BFI
ARMISD::VORRIMM
ARMISD::VBICIMM
ARMISD::VBSL
ARMISD::MEMCPY
ARMISD::VLD1DUP
ARMISD::VLD2DUP
ARMISD::VLD3DUP
ARMISD::VLD4DUP
ARMISD::VLD1_UPD
ARMISD::VLD2_UPD
ARMISD::VLD3_UPD
ARMISD::VLD4_UPD
ARMISD::VLD2LN_UPD
ARMISD::VLD3LN_UPD
ARMISD::VLD4LN_UPD
ARMISD::VLD1DUP_UPD
ARMISD::VLD2DUP_UPD
ARMISD::VLD3DUP_UPD
ARMISD::VLD4DUP_UPD
ARMISD::VST1_UPD
ARMISD::VST2_UPD
ARMISD::VST3_UPD
ARMISD::VST4_UPD
ARMISD::VST2LN_UPD
ARMISD::VST3LN_UPD
ARMISD::VST4LN_UPD
failed to perform tail call elimination on a call site marked musttail
interrupt attribute is not supported in Thumb1
Invalid register name "
=l,l
{cc}
lohi
lo64
hi64
val64
vldN
Unsupported interrupt attribute. If present, value must be one of: IRQ, FIQ, SWI, ABORT or UNDEF
Funclet EH is not implemented for this target
disable-arm-parallel-dsp
Disable the ARM Parallel DSP pass
arm-parallel-dsp
Transform loops to use DSP intrinsics
arm-assume-misaligned-load-store
Be more conservative in ARM load/store opt
ARM load / store optimization pass
arm-ldst-opt
ARM pre- register allocation load / store optimization pass
arm-prera-ldst-opt
An attempt to perform XRay instrumentation for a Thumb function (not supported). Detected when emitting a sled.
optimise barriers pass
FPRB
GPRB
__aeabi
__aeabi_memcpy4
__aeabi_memcpy8
__aeabi_memmove4
__aeabi_memmove8
__aeabi_memset4
__aeabi_memset8
__aeabi_memclr
__aeabi_memclr4
__aeabi_memclr8
arm-use-mulops
a9-754319-workaround
Enable workarounds for A9 HW bugs #754319
a9-754320-workaround
Enable workarounds for A9 HW bugs #754320
IT block support
arm-default-it
Generate IT block based on arch
arm-restrict-it
Disallow deprecated IT based on ARMv8
arm-no-restrict-it
Allow IT blocks based on ARMv7
arm-force-fast-isel
cortex-a7
disable-a15-sd-optimization
Inhibit optimization of S->D register accesses on A15
arm-atomic-cfg-tidy
Run SimplifyCFG after expanding atomic operations to make use of cmpxchg flow-based information
arm-load-store-opt
Enable ARM load/store optimization pass
arm-global-merge
Enable the global merge pass
Function '
' uses ARM instructions, but the target does not support ARM mode execution.
-v64:32:64-v128:32:128
-v128:64:128
-a:0:32
-n32
-S64
-S32
Target does not support the kernel CodeModel
ARM Execution Domain Fix
arm-execution-domain-fix
.text
expand-all-fp-mlx
expand-limit
ARM MLA / MLS expansion pass
Thumb IT blocks insertion pass
old-thumb2-ifcvt
Use old-style Thumb2 if-conversion heuristics
t2-reduce-limit
t2-reduce-limit2
t2-reduce-limit3
Thumb2 instruction size reduce pass
t2-reduce-size
arm-implicit-it
Allow conditional instructions outdside of an IT block
Accept in both ISAs, emit implicit ITs in Thumb
Warn in ARM, reject in Thumb
Accept in ARM, reject in Thumb
Warn in ARM, emit implicit ITs in Thumb
arm-add-build-attributes
apsr_nzcv
conditional execution not supported in Thumb1
too many conditions on IT instruction
illegal IT block condition mask '
instruction '
' can not set flags, but 's' suffix specified
' is not predicable, but condition code specified
instruction 'cps' requires effect for M-class
instruction with .n (narrow) qualifier not allowed in arm mode
destination operands must be sequential
source operands must be sequential
rfeia
srsia
vldr
vmov
vmrs
vmsr
vstr
vldmia
vstmia
vadd.f64
vadd.f32
vcmp.f64
vcmp.f32
vmov.f64
vmov.f32
vdiv.f64
vdiv.f32
vmla.f64
vmla.f32
vmul.f64
vmul.f32
vneg.f64
vneg.f32
ldmdb
rfedb
rfeib
rfeda
srsda
srsib
srsdb
stmdb
vadd
vand
vbic
vceq
vcle
veor
vmul
vmvn
vorr
vshl
vshr
vsub
vswp
vcvt.f64.s32
vcvt.f32.s32
vcvtr.s32.f64
vcvtr.s32.f32
vcvtr.u32.f64
vcvtr.u32.f32
vcvt.f64.u32
vcvt.f32.u32
fldmdbx
fldmiax
fstmiax
fstmdbx
vcvt.s32.f64
vcvt.s32.f32
vcvt.u32.f64
vcvt.u32.f32
qsax
sasx
ssax
uasx
usax
shasx
shsax
uhasx
uhsax
uqasx
uqsax
vrecpe.f32
vrecpe.u32
register name expected
unexpected input in .req directive.
redefinition of '
' does not match original.
fconsts
<ARMCC::
<ccout 
(invalid)
(teee)
(tee)
(teet)
(te)
(tete)
(tet)
(tett)
(ttee)
(tte)
(ttet)
(tt)
(ttte)
(ttt)
(tttt)
<it-mask 
<coprocessor number: 
<coprocessor register: 
<coprocessor option: 
<mask: 
<banked reg: 
<ARM_MB::
<ARM_ISB::
<ARM_TSB::
<memory
 base:
 offset-imm:
 offset-reg:
 shift-type:
 shift-imm:
 alignment:
post-idx register 
<ARM_PROC::
<register 
<shift 
<so_reg_reg 
<so_reg_imm 
<ror 
<mod_imm #
<constant_pool_imm #
<bitfield 
lsb: 
, width: 
<register_list 
<vector_list 
<vector_list(all lanes) 
<vector_list(lane 
<vectorindex 
noreg
#0xd
#0xc
ishst
ishld
#0x9
#0x8
nshst
nshld
#0x5
#0x4
oshst
oshld
#0x1
#0x0
#0x2
#0x3
#0x6
#0x7
#0xa
#0xb
#0xe
csync
ssbb
pssbb
clrex
.f32
.f64
unexpected token in operand
APSR_nzcv
__brkdiv0
addw
aesd
aese
aesimc
aesmc
bkpt
blxns
bxns
cbnz
cdp2
clrex
crc32b
crc32cb
crc32ch
crc32cw
crc32h
crc32w
csdb
dcps1
dcps2
dcps3
eret
faddd
fadds
fcmpzd
fcmpzs
fconstd
fconsts
fldmdbx
fldmiax
fmdhr
fmdlr
fmstat
fstmdbx
fstmiax
fsubd
fsubs
hint
ldab
ldaex
ldaexb
ldaexd
ldaexh
ldah
ldc2
ldc2l
ldcl
ldmda
ldmdb
ldmib
ldrb
ldrbt
ldrd
ldrex
ldrexb
ldrexd
ldrexh
ldrh
ldrht
ldrsb
ldrsbt
ldrsh
ldrsht
ldrt
mcr2
mcrr
mcrr2
movs
movt
movw
mrc2
mrrc
mrrc2
pkhbt
pkhtb
pldw
pssbb
push
qadd
qadd16
qadd8
qasx
qdadd
qdsub
qsax
qsub
qsub16
qsub8
rbit
rev16
revsh
rfeda
rfedb
rfeia
rfeib
sadd16
sadd8
sasx
sbfx
sdiv
setend
setpan
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
shadd16
shadd8
shasx
shsax
shsub16
shsub8
smlabb
smlabt
smlad
smladx
smlal
smlalbb
smlalbt
smlald
smlaldx
smlaltb
smlaltt
smlatb
smlatt
smlawb
smlawt
smlsd
smlsdx
smlsld
smlsldx
smmla
smmlar
smmls
smmlsr
smmul
smmulr
smuad
smuadx
smulbb
smulbt
smull
smultb
smultt
smulwb
smulwt
smusd
smusdx
srsda
srsdb
srsia
srsib
ssat
ssat16
ssax
ssbb
ssub16
ssub8
stc2
stc2l
stcl
stlb
stlex
stlexb
stlexd
stlexh
stlh
stmda
stmdb
stmib
strb
strbt
strd
strex
strexb
strexd
strexh
strh
strht
strt
subs
subw
swpb
sxtab
sxtab16
sxtah
sxtb
sxtb16
sxth
trap
ttat
uadd16
uadd8
uasx
ubfx
udiv
uhadd16
uhadd8
uhasx
uhsax
uhsub16
uhsub8
umaal
umlal
umull
uqadd16
uqadd8
uqasx
uqsax
uqsub16
uqsub8
usad8
usada8
usat
usat16
usax
usub16
usub8
uxtab
uxtab16
uxtah
uxtb
uxtb16
uxth
vaba
vabal
vabd
vabdl
vabs
vacge
vacgt
vacle
vaclt
vadd
vaddhn
vaddl
vaddw
vand
vbic
vbif
vbit
vbsl
vcadd
vceq
vcge
vcgt
vcle
vcls
vclt
vclz
vcmla
vcmp
vcmpe
vcnt
vcvt
vcvta
vcvtb
vcvtm
vcvtn
vcvtp
vcvtr
vcvtt
vdiv
vdup
veor
vext
vfma
vfmal
vfms
vfmsl
vfnma
vfnms
vhadd
vhsub
vins
vjcvt
vld1
vld2
vld3
vld4
vldmdb
vldmia
vldr
vlldm
vlstm
vmax
vmaxnm
vmin
vminnm
vmla
vmlal
vmls
vmlsl
vmov
vmovl
vmovn
vmovx
vmrs
vmsr
vmul
vmull
vmvn
vneg
vnmla
vnmls
vnmul
vorn
vorr
vpadal
vpadd
vpaddl
vpmax
vpmin
vpop
vpush
vqabs
vqadd
vqdmlal
vqdmlsl
vqdmulh
vqdmull
vqmovn
vqmovun
vqneg
vqrdmlah
vqrdmlsh
vqrdmulh
vqrshl
vqrshrn
vqrshrun
vqshl
vqshlu
vqshrn
vqshrun
vqsub
vraddhn
vrecpe
vrecps
vrev16
vrev32
vrev64
vrhadd
vrinta
vrintm
vrintn
vrintp
vrintr
vrintx
vrintz
vrshl
vrshr
vrshrn
vrsqrte
vrsqrts
vrsra
vrsubhn
vsdot
vseleq
vselge
vselgt
vselvs
vshl
vshll
vshr
vshrn
vsli
vsqrt
vsra
vsri
vst1
vst2
vst3
vst4
vstmdb
vstmia
vstr
vsub
vsubhn
vsubl
vsubw
vswp
vtbl
vtbx
vtrn
vtst
vudot
vuzp
vzip
yield
constant expression expected
register expected
'#' expected
malformed immediate expression
'lsb' operand must be an immediate
'lsb' operand must be in the range [0,31]
too few operands
'width' operand must be an immediate
'width' operand must be in the range [1,32-lsb]
illegal expression
coprocessor option must be an immediate in range [0, 255]
.f16
fconstd
encoded floating point value out of range
invalid floating point immediate
immediate value out of range
malformed expression
expected modified immediate operand: #[0, 255], #even[0-30]
immediate operand must a number in the range [0, 255]
immediate operand must an even number in the range [0, 30]
 operand expected.
illegal shift operator
shift amount must be an immediate
immediate shift value out of range
malformed rotate expression
rotate amount must be an immediate
'ror' rotate amount must be 8, 16, or 24
'be' or 'le' operand expected
shift operator 'asr' or 'lsl' expected
malformed shift expression
'asr' shift amount must be in range [1,32]
'asr #32' shift amount not allowed in Thumb mode
'lsr' shift amount must be in range [0,31]
vector register expected
sequential registers in double spaced list
invalid register in register list
bad range in register list
mismatched lane index in register list
invalid register in double-spaced list (must be 'D' register')
non-contiguous register range
'}' expected
lane index must be empty or an integer
']' expected
lane index out of range
immediate value expected for vector index
shift must be of a register
invalid immediate shift value
expected immediate or register in shift operand
Token is not a Left Bracket
malformed memory operand
alignment specifier must be 16, 32, 64, 128, or 256 bits
Token is not a Left Curly Brace
register list not in ascending order
duplicated register (
) in register list
expected prefix identifier in operand
lower16
upper16
unexpected prefix in operand
cannot represent relocation in the current file format
unexpected token after prefix
.short
.hword
.align
target does not support Thumb mode
target does not support ARM mode
unexpected token in '.thumb_func' directive
unexpected token in .code directive
invalid operand to .code directive
unexpected token in .syntax directive
'.syntax divided' arm assembly not supported
unrecognized syntax mode in .syntax directive
unexpected input in .unreq directive.
unexpected input in '.unreq' directive
unexpected token in '.fnend' directive
.fnstart must precede .fnend directive
unexpected token in '.cantunwind' directive
.fnstart must precede .cantunwind directive
.cantunwind can't be used with .handlerdata directive
.cantunwind can't be used with .personality directive
.handlerdata was specified here
.personality was specified here
.personalityindex was specified here
unexpected input in .personality directive.
unexpected token in '.personality' directive
.fnstart must precede .personality directive
.personality can't be used with .cantunwind directive
.personality must precede .handlerdata directive
multiple personality directives
.cantunwind was specified here
unexpected token in '.handlerdata' directive
.handlerdata can't be used with .cantunwind directive
.fnstart must precede .setfp directive
.setfp must precede .handlerdata directive
frame pointer register expected
comma expected
stack pointer register expected
register should be either $sp or the latest fp register
malformed setfp offset
setfp offset must be an immediate
unexpected token
.fnstart must precede .pad directive
.pad must precede .handlerdata directive
malformed pad offset
pad offset must be an immediate
unexpected token in '.pad' directive
.fnstart must precede .save or .vsave directives
.save or .vsave must precede .handlerdata directive
.save expects GPR registers
.vsave expects DPR registers
unexpected token in '.personalityindex' directive
.fnstart must precede .personalityindex directive
.personalityindex cannot be used with .cantunwind
.personalityindex must precede .handlerdata directive
index must be a constant number
personality routine index should be in range [0-3]
.fnstart must precede .unwind_raw directives
offset must be a constant
expected comma
expected opcode expression
opcode value must be a constant
invalid opcode
.fnstart must precede .movsp directives
unexpected .movsp directive
sp and pc are not permitted in .movsp directive
expected #constant
malformed offset expression
offset must be an immediate constant
unexpected token in '.movsp' directive
expected architecture extension name
unexpected token in '.arch_extension' directive
unknown architectural extension: 
unsupported architectural extension: 
architectural extension '
' is not allowed for the current base architecture
expected identifier after '.thumb_set'
expected comma after name '
width suffixes are invalid in ARM mode
expected expression following directive
expected constant expression
inst.n operand is too big, use inst.w instead
inst.w
inst
 operand is too big
cannot determine Thumb instruction size, use inst.n/inst.w instead
Unknown arch name
new target does not support 
 mode, switching to 
 mode
Unknown CPU name
attribute name not recognised: 
expected numeric constant
bad string constant
unexpected token in '.eabi_attribute' directive
Unknown FPU name
unexpected token in '.fnstart' directive
.fnstart starts before the end of previous one
.fnstart was specified here
unknown architecture '
expected variable after '.tlsdescseq' directive
unexpected token in '.tlsdescseq' directive
deprecated instruction in IT block
invalid instruction
instructions in IT block must be predicable
incorrect condition in IT block; got '
', but expected '
predicated instructions must be in IT block
predicated instructions should be in IT block
instruction must be outside of IT block or the last instruction in an IT block
unpredictable IT predicate sequence
r13 (SP) is an unpredictable operand to BXJ
source register and base register can't be identical
destination register and base register can't be identical
bitfield width must be in range [1,32-lsb]
registers must be in range r0-r7
writeback operator '!' expected
writeback operator '!' not allowed when base register in register list
writeback register not allowed in register list
writeback register only allowed on system LDM if PC in register-list
system STM cannot have writeback register
destination register must match source register
registers must be in range r0-r7 or pc
registers must be in range r0-r7 or lr
source register must be the same as destination
branch target out of range
immediate expression for mov requires :lower16: or :upper16
instruction 'esb' is not predicable, but condition code specified
instruction 'csdb' is not predicable, but condition code specified
instruction 'ssbb' is not predicable, but condition code specified
instruction 'pssbb' is not predicable, but condition code specified
list of registers must be at least 1 and at most 16
Rt can't be R14
Rt must be even-numbered
destination operands can't be identical
base register needs to be different from destination registers
SP may not be in the register list
PC and LR may not be in the register list simultaneously
SP and PC may not be in the register list
PC may not be in the register list
invalid instruction, any one of the following would fix this:
operand must be a register in range [r0, r14]
operand must be a register in range [r0, r12] or r14
operand must be a register in range [d0, d15]
operand must be a register in range [d0, d31]
operand must be a list of registers in range [d0, d15]
operand must be a list of registers in range [d0, d31]
operand must be a register sp
operand must be a register in range [q0, q3]
operand must be a register in range [d0, d7]
operand must be a register in range [q0, q7]
operand must be a register in range [r8, r15]
operand must be a register in range [r0, r7]
operand must be a register in range [r0, r15]
operand must be a register in range [r0, r14] or apsr_nzcv
operand must be a register in range [q0, q15]
operand must be a register in range [s0, s15]
operand must be a register in range [s0, s31]
alignment must be 16 or omitted
alignment must be 32 or omitted
alignment must be 64 or omitted
alignment must be 64, 128 or omitted
alignment must be 64, 128, 256 or omitted
alignment must be omitted
operand must be an immediate in the range [0,15]
operand must be an immediate in the range [0,1]
operand must be an immediate in the range [0,239]
operand must be an immediate in the range [0,255]
operand must be an immediate in the range [0,31]
operand must be an immediate in the range [0,32]
operand must be an immediate in the range [0,3]
operand must be an immediate in the range [0,63]
operand must be an immediate in the range [0,65535]
operand must be an immediate in the range [0,0xffff] or a relocatable expression
operand must be an immediate in the range [0,7]
operand must be an immediate in the range [16,16]
operand must be an immediate in the range [1,15]
operand must be an immediate in the range [1,16]
operand must be an immediate in the range [1,31]
operand must be an immediate in the range [1,32]
operand must be an immediate in the range [1,7]
operand must be an immediate in the range [0,0xffffff]
operand must be an immediate in the range [256,65535]
operand must be an immediate in the range [32,32]
operand must be an immediate in the range [8,8]
operand must be an immediate in the range [8,255]
operand must be a list of registers in range [s0, s31]
complex rotation must be 0, 90, 180 or 270
complex rotation must be 90 or 270
operand must be an immediate in the range [0,4095]
operand must be an immediate in the range [1,64]
operand must be an immediate in the range [1,8]
armv5t
armv5te
armv6m or armv6t2
armv8m.base
armv8m.main
armv6t2
armv8
armv7 or earlier
armv8.5a
VFP2
VFP3
VFP4
double precision VFP
FPARMv8
NEON
sha2
half-float conversions
full half-float
full half-float fml
divide in THUMB
divide in ARM
data-barriers
full-data-barrier
v7 clrex
acquire/release
mp-extensions
virtualization-extensions
TrustZone
ARMv8-M Security Extensions
thumb2
armv*m
!armv*m
arm-mode
NaCl
NegativeImmediates
.f64
.f16
.f32
APSR_nzcv, fpscr
pc, lr
.s32
.s16
.u32
.u16
.i64
.i32
.i16
.f16.f64
.f64.f16
.f32.f16
.f16.f32
.f64.f32
.f32.f64
.s32.f32
.u32.f32
.s16.f16
.u16.f16
.f32.s32
.f16.s16
.f32.u32
.f16.u16
.s32.f64
fpscr, 
fpexc, 
fpinst, 
fpinst2, 
fpsid, 
.s64
.u64
.f64.s16
.f32.s16
.f64.s32
.f16.s32
.s16.f64
.s16.f32
.s32.f16
.u16.f64
.u16.f32
.u32.f64
.u32.f16
.f64.u16
.f32.u16
.f64.u32
.f16.u32
sp, 
sp!, 
pc, lr, 
, #0
, apsr
, spsr
[], 
, fpscr
, fpexc
, fpinst
, fpinst2
, fpsid
, mvfr0
, mvfr1
, mvfr2
[]}, 
]}, 
, #1
nop$
yield$
wfe$
wfi$
sev$
sevl$
esb$
csdb$
dfb$
nop$
yield$
wfe$
wfi$
sev$
sevl$
esb$
eret$
vpush
vpop
csync
ssbb
pssbb
[pc, 
, lsl 
, asr 
APSR_
SPSR
CPSR
<und>
, ror 
fixup_arm_ldst_pcrel_12
fixup_t2_ldst_pcrel_12
fixup_arm_pcrel_10_unscaled
fixup_arm_pcrel_10
fixup_t2_pcrel_10
fixup_arm_pcrel_9
fixup_t2_pcrel_9
fixup_thumb_adr_pcrel_10
fixup_arm_adr_pcrel_12
fixup_t2_adr_pcrel_12
fixup_arm_condbranch
fixup_arm_uncondbranch
fixup_t2_condbranch
fixup_t2_uncondbranch
fixup_arm_thumb_br
fixup_arm_uncondbl
fixup_arm_condbl
fixup_arm_blx
fixup_arm_thumb_bl
fixup_arm_thumb_blx
fixup_arm_thumb_cb
fixup_arm_thumb_cp
fixup_arm_thumb_bcc
fixup_arm_movt_hi16
fixup_arm_movw_lo16
fixup_t2_movt_hi16
fixup_t2_movw_lo16
fixup_arm_mod_imm
fixup_t2_so_imm
out of range pc-relative fixup value
misaligned pc-relative fixup value
will be converted to nop
bad relocation fixup type
Relocation out of range
misaligned ARM call destination
invalid value for this fixup
out of range immediate fixup value
unsupported relocation on symbol
.fnstart
.fnend
.cantunwind
.personality 
.personalityindex 
.handlerdata
.setfp
.movsp
.pad
.vsave
.save
.unwind_raw 
, 0x
.eabi_attribute
.cpu
.fpu
.arch
.arch_extension
.object_arch
.inst
.tlsdescseq
.thumb_set
.ARM.extab
.ARM.exidx
__aeabi_unwind_cpp_pr
.ARM.attributes
Unknown FPU: 
Unknown Arch: 
relocated expression must be 32-bit
FIXME: relocations to absolute targets not yet implemented
can not encode offset '0x
' in resulting scattered relocation.
.code
.code
Not supported instr: 
constant value truncated (limited to 32-bit)
Allocation failed
32bit
Prefer 32-bit Thumb instrs
8msecext
Enable support for ARMv8-M Security Extensions
Cortex-A12 ARM processors
Cortex-A15 ARM processors
Cortex-A17 ARM processors
Cortex-A32 ARM processors
Cortex-A35 ARM processors
Cortex-A5 ARM processors
Cortex-A53 ARM processors
Cortex-A55 ARM processors
Cortex-A57 ARM processors
Cortex-A7 ARM processors
Cortex-A72 ARM processors
Cortex-A73 ARM processors
Cortex-A75 ARM processors
Cortex-A8 ARM processors
Cortex-A9 ARM processors
a9-erratum-754319
Processor has Cortex-A9 hardware bug erratum #754319
a9-erratum-754320
Processor has Cortex-A9 hardware bug erratum #754320
aclass
Is application profile ('A' series)
acquire-release
Has v8 acquire/release (lda/ldaex  etc) instructions
Enable AES support
armv2
ARMv2 architecture
armv2a
ARMv2a architecture
armv3
ARMv3 architecture
armv3m
ARMv3m architecture
armv4
ARMv4 architecture
ARMv4t architecture
ARMv5t architecture
ARMv5te architecture
ARMv5tej architecture
ARMv6 architecture
armv6-m
ARMv6m architecture
armv6j
ARMv7a architecture
ARMv6k architecture
armv6kz
ARMv6kz architecture
armv6s-m
ARMv6sm architecture
ARMv6t2 architecture
ARMv7m architecture
ARMv7r architecture
ARMv7em architecture
armv7ve
ARMv7ve architecture
armv8-a
ARMv8a architecture
armv8-m.base
ARMv8mBaseline architecture
armv8-m.main
ARMv8mMainline architecture
armv8-r
ARMv8r architecture
armv8.1-a
ARMv81a architecture
armv8.2-a
ARMv82a architecture
armv8.3-a
ARMv83a architecture
armv8.4-a
ARMv84a architecture
armv8.5-a
ARMv85a architecture
avoid-movs-shop
Avoid movs instructions with shifter operand
avoid-partial-cpsr
Avoid CPSR partial update for OOO execution
avoid-regsoreg
Avoid deprecated register-shifted reg operations
cheap-predicable-cpsr
Disable +1 predication cost for instructions updating CPSR
Enable support for CRC instructions
Enable support for Cryptography extensions
Restrict FP to 16 double registers
Has data barrier (dmb/dsb) instructions
Has full data barrier (dfb) instruction
disable-postra-scheduler
Don't schedule again after register allocation
dont-widen-vmovs
Don't widen VMOVS to VMOVD
Enable support for dot product instructions
Supports DSP instructions in ARM and/or Thumb2
execute-only
Enable the generation of execute only code.
expand-fp-mlx
Expand VFP/NEON MLA/MLS instructions
exynos
Samsung Exynos processors
Enable ARMv8 FP
fp-only-sp
Floating point unit supports single precision only
fp16
Enable half-precision floating point
Enable full half-precision floating point fml instructions
fpao
Enable fast computation of positive address offsets
Enable full half-precision floating point
fuse-aes
CPU fuses AES crypto operations
fuse-literals
CPU fuses literal generation operations
Enable divide instructions in Thumb
Enable divide instructions in ARM mode
iwmmxt
iwmmxt2
Qualcomm Krait processors
Qualcomm Kryo processors
Generate calls via indirect call instructions
loop-align
Prefer 32-bit alignment for loops
Cortex-M3 ARM processors
mclass
Is microcontroller profile ('M' series)
Supports Multiprocessing extension
muxed-units
Has muxed AGU and NEON/FPU
nacl-trap
NaCl trap
Enable NEON instructions
neon-fpmovs
Convert VMOVSR, VMOVRS, VMOVS to NEON
neonfp
Use NEON for single precision FP
no-branch-predictor
Has no branch predictor
no-movt
Don't use movt/movw pairs for 32-bit imms
no-neg-immediates
Convert immediates and instructions to their negated or complemented equivalent when the immediate does not fit in the encoding.
noarm
Does not support ARM mode execution
nonpipelined-vfp
VFP instructions are not pipelined
perfmon
Enable support for Performance Monitor extensions
prefer-ishst
Prefer ISHST barriers
prefer-vmovsr
Prefer VMOVSR
prof-unpr
Is profitable to unpredicate
Cortex-R4 ARM processors
Cortex-R5 ARM processors
Cortex-R52 ARM processors
Cortex-R7 ARM processors
Enable Reliability, Availability and Serviceability extensions
rclass
Is realtime profile ('R' series)
read-tp-hard
Reading thread pointer from register
reserve-r9
Reserve R9, making it unavailable as GPR
ret-addr-stack
Has return address stack
Enable v8.5a Speculation Barrier
Enable SHA1 and SHA256 support
slow-fp-brcc
FP compare + branch is slow
slow-load-D-subreg
Loading into D subregs is slow
slow-odd-reg
VLDM/VSTM starting with an odd register is slow
slow-vdup32
Has slow VDUP32 - prefer VMOV
slow-vgetlni32
Has slow VGETLNi32 - prefer VMOV
slowfpvmlx
Disable VFP / NEON MAC instructions
splat-vfp-neon
Splat register from VFP to NEON
strict-align
Disallow all unaligned memory access
Swift ARM processors
Thumb mode
Enable Thumb2 instructions
trustzone
Enable support for TrustZone security extensions
use-aa
Use alias analysis during codegen
use-misched
Use the MachineScheduler
Support ARM v4T instructions
Support ARM v5T instructions
v5te
Support ARM v5TE, v5TEj, and v5TExp instructions
Support ARM v6 instructions
Support ARM v6k instructions
Support ARM v6M instructions
v6t2
Support ARM v6t2 instructions
Support ARM v7 instructions
v7clrex
Has v7 clrex instruction
Support ARM v8 instructions
v8.1a
Support ARM v8.1a instructions
v8.2a
Support ARM v8.2a instructions
v8.3a
Support ARM v8.3a instructions
v8.4a
Support ARM v8.4a instructions
v8.5a
Support ARM v8.5a instructions
Support ARM v8M Baseline instructions
v8m.main
Support ARM v8M Mainline instructions
Enable VFP2 instructions
Enable VFP3 instructions
Enable VFP4 instructions
virtualization
Supports Virtualization extension
vldn-align
Check for VLDn unaligned access
vmlx-forwarding
Has multiplier accumulator forwarding
vmlx-hazards
Has VMLx hazards
wide-stride-vfp
Use a wide stride when allocating VFP registers
Has zero-cycle zeroing instructions
arm1020e
Select the arm1020e processor
arm1020t
Select the arm1020t processor
arm1022e
Select the arm1022e processor
arm10e
Select the arm10e processor
arm10tdmi
Select the arm10tdmi processor
arm1136j-s
Select the arm1136j-s processor
arm1136jf-s
Select the arm1136jf-s processor
arm1156t2-s
Select the arm1156t2-s processor
arm1156t2f-s
Select the arm1156t2f-s processor
arm1176j-s
Select the arm1176j-s processor
arm1176jz-s
Select the arm1176jz-s processor
arm1176jzf-s
Select the arm1176jzf-s processor
arm710t
Select the arm710t processor
arm720t
Select the arm720t processor
arm7tdmi
Select the arm7tdmi processor
arm7tdmi-s
Select the arm7tdmi-s processor
arm8
Select the arm8 processor
arm810
Select the arm810 processor
arm9
Select the arm9 processor
arm920
Select the arm920 processor
arm920t
Select the arm920t processor
arm922t
Select the arm922t processor
arm926ej-s
Select the arm926ej-s processor
arm940t
Select the arm940t processor
arm946e-s
Select the arm946e-s processor
arm966e-s
Select the arm966e-s processor
arm968e-s
Select the arm968e-s processor
arm9e
Select the arm9e processor
arm9tdmi
Select the arm9tdmi processor
cortex-a12
Select the cortex-a12 processor
cortex-a15
Select the cortex-a15 processor
cortex-a17
Select the cortex-a17 processor
cortex-a32
Select the cortex-a32 processor
cortex-a35
Select the cortex-a35 processor
cortex-a5
Select the cortex-a5 processor
Select the cortex-a53 processor
cortex-a55
Select the cortex-a55 processor
cortex-a57
Select the cortex-a57 processor
Select the cortex-a7 processor
cortex-a72
Select the cortex-a72 processor
cortex-a73
Select the cortex-a73 processor
cortex-a75
Select the cortex-a75 processor
cortex-a8
Select the cortex-a8 processor
cortex-a9
Select the cortex-a9 processor
cortex-m0
Select the cortex-m0 processor
cortex-m0plus
Select the cortex-m0plus processor
cortex-m1
Select the cortex-m1 processor
cortex-m23
Select the cortex-m23 processor
cortex-m3
Select the cortex-m3 processor
cortex-m33
Select the cortex-m33 processor
cortex-m4
Select the cortex-m4 processor
cortex-m7
Select the cortex-m7 processor
cortex-r4
Select the cortex-r4 processor
cortex-r4f
Select the cortex-r4f processor
cortex-r5
Select the cortex-r5 processor
cortex-r52
Select the cortex-r52 processor
cortex-r7
Select the cortex-r7 processor
cortex-r8
Select the cortex-r8 processor
Select the cyclone processor
ep9312
Select the ep9312 processor
exynos-m1
Select the exynos-m1 processor
exynos-m2
Select the exynos-m2 processor
exynos-m3
Select the exynos-m3 processor
exynos-m4
Select the exynos-m4 processor
Select the iwmmxt processor
Select the krait processor
Select the kryo processor
mpcore
Select the mpcore processor
mpcorenovfp
Select the mpcorenovfp processor
sc000
Select the sc000 processor
sc300
Select the sc300 processor
strongarm
Select the strongarm processor
strongarm110
Select the strongarm110 processor
strongarm1100
Select the strongarm1100 processor
strongarm1110
Select the strongarm1110 processor
Select the swift processor
Select the xscale processor
+thumb-mode,+v4t
+nacl-trap
+noarm
applying IT instruction to more than one subsequent instruction is deprecated
use of SP in the list is deprecated
use of LR and PC simultaneously in the list is deprecated
deprecated since v7, use 'isb'
deprecated since v7, use 'dsb'
deprecated since v7, use 'dmb'
use of SP or PC in the list is deprecated
A9UnitAGU
A9UnitALU
A9UnitB
A9UnitFP
A9UnitLS
A9UnitMul
A57UnitB
A57UnitI
A57UnitL
A57UnitM
A57UnitS
A57UnitV
A57UnitW
A57UnitX
R52UnitALU
R52UnitB
R52UnitDiv
R52UnitFPALU
R52UnitFPMUL
R52UnitLd
R52UnitMAC
SwiftUnitDiv
SwiftUnitP0
SwiftUnitP1
SwiftUnitP2
SwiftUnitP01
unsupported relocation type: 
armeb
ARM (big endian)
thumb
Thumb
thumbeb
Thumb (big endian)
apsr_g
apsr_nzcvqg
iapsr_g
iapsr_nzcvqg
eapsr_g
eapsr_nzcvqg
xpsr_g
xpsr_nzcvqg
apsr_nzcvq
iapsr
iapsr_nzcvq
eapsr
eapsr_nzcvq
xpsr
xpsr_nzcvq
ipsr
epsr
iepsr
msplim
psplim
primask
basepri
basepri_max
faultmask
control
msp_ns
psp_ns
msplim_ns
psplim_ns
primask_ns
basepri_ns
faultmask_ns
control_ns
sp_ns
APSR
APSR_G
APSR_NZCVQ
APSR_NZCVQG
BASEPRI
BASEPRI_MAX
BASEPRI_NS
CONTROL
CONTROL_NS
EAPSR
EAPSR_G
EAPSR_NZCVQ
EAPSR_NZCVQG
EPSR
FAULTMASK
FAULTMASK_NS
IAPSR
IAPSR_G
IAPSR_NZCVQ
IAPSR_NZCVQG
IEPSR
IPSR
MSPLIM
MSPLIM_NS
MSP_NS
PRIMASK
PRIMASK_NS
PSPLIM
PSPLIM_NS
PSP_NS
SP_NS
XPSR
XPSR_G
XPSR_NZCVQ
XPSR_NZCVQG
ELR_HYP
LR_ABT
LR_FIQ
LR_IRQ
LR_MON
LR_SVC
LR_UND
LR_USR
R10_FIQ
R10_USR
R11_FIQ
R11_USR
R12_FIQ
R12_USR
R8_FIQ
R8_USR
R9_FIQ
R9_USR
SPSR_ABT
SPSR_FIQ
SPSR_HYP
SPSR_IRQ
SPSR_MON
SPSR_SVC
SPSR_UND
SP_ABT
SP_FIQ
SP_HYP
SP_IRQ
SP_MON
SP_SVC
SP_UND
SP_USR
r8_usr
r9_usr
r10_usr
r11_usr
r12_usr
sp_usr
lr_usr
r8_fiq
r9_fiq
r10_fiq
r11_fiq
r12_fiq
sp_fiq
lr_fiq
lr_irq
sp_irq
lr_svc
sp_svc
lr_abt
sp_abt
lr_und
sp_und
lr_mon
sp_mon
elr_hyp
sp_hyp
spsr_fiq
spsr_irq
spsr_svc
spsr_abt
spsr_und
spsr_mon
spsr_hyp
aarch64-a57-fp-load-balancing-force-all
Always modify dest registers regardless of color
aarch64-a57-fp-load-balancing-override
Ignore balance information, always return (1: Even, 2: Odd).
AArch64 A57 FP Load-Balancing
aarch64-a57-fp-load-balancing
A57 FP Anti-dependency breaker
aarch64-arm-compatibility
Convert ARM IR to AArch64 form
AArch64 ARM Compatibility Pass
aarch64-arm-compat
AArch64 ARM Compatibiltiy
+crc,+crypto,+fp-armv8,+lse,+neon,+ras,+rcpc,+rdm,+v8.3a,+zcm,+zcz
intrinsic has no 64-bit counterpart
aarch64-stret-compatibility
Convert ARM stret IR to AArch64 form
AArch64 ARM Stret Compatibility Pass
aarch64-stret-compat
AArch64 Stret Compatibiltiy
objc_msgForward_stret
aarch64-simd-scalar-force-all
Force use of AdvSIMD scalar instructions everywhere
AdvSIMD Scalar Operation Optimization
aarch64-simd-scalar
AArch64 Assembly Printer
__DATA
__auth_ptr
DEBUG_VALUE: 
 <- 
Couldn't resolve target base/addend of llvm.ptrauth global '
Invalid AArch64 PAC Key ID '
' in llvm.ptrauth global '
 blockaddress
AArch64 Branch Targets
aarch64-branch-targets
AArch64 Local Dynamic TLS Access Clean-up
aarch64-local-dynamic-tls-cleanup
_TLS_MODULE_BASE_
AArch64 Collect Linker Optimization Hint (LOH)
aarch64-collect-loh
AArch64 Conditional Branch Tuning
aarch64-cond-br-tuning
aarch64-ccmp-limit
Maximum number of instructions per speculated block.
aarch64-stress-ccmp
Turn all knobs to 11
AArch64 CCMP Pass
aarch64-ccmp
AArch64 Conditional Compares
AArch64 Dead register definitions
aarch64-dead-defs
AArch64 Expand Hardened Pseudos
aarch64-expand-hardened-pseudos
AArch64 pseudo instruction expansion pass
aarch64-expand-pseudo
falkor-hwpf
Controls which tag collisions are avoided
Falkor HW Prefetch Fix
falkor-hwpf-fix
falkor.strided.access
Falkor HW Prefetch Fix Late Phase
falkor-hwpf-fix-late
AArch64 fix for A53 erratum 835769
aarch64-fix-cortex-a53-835769-pass
Workaround A53 erratum 835769 pass
aarch64-redzone
enable use of redzone on AArch64
aarch64-ptrauth-returns
Enable emission of LR sign/auth in prolog/epilog
aarch64-ptrauth-returns-fused
Enable emission of fused authret instead of auth+ret
reverse-csr-restore-seq
reverse the CSR restore sequence
arm64e LR authentication requires v8.3a support
Stack size cannot exceed 256MB for stack unwinding purposes
Must reserve x18 to use shadow call stack
AArch64 compress jump tables pass
aarch64-jump-tables
AArch64 Compress Jump Tables
AArch64 CondOpt Pass
aarch64-condopt
AArch64 Condition Optimizer
AArch64 redundant copy elimination pass
aarch64-copyelim
AArch64 Redundant Copy Elimination
AArch64 Instruction Selection
aarch64-shift-insert-generation
Allow AArch64 SLI/SRI formation
aarch64-elf-ldtls-generation
Allow AArch64 Local Dynamic TLS code generation
aarch64-enable-logical-imm
Enable AArch64 logical imm instruction optimization
AArch64ISD::CALL
AArch64ISD::AUTH_CALL
AArch64ISD::AUTH_TC_RETURN
AArch64ISD::ADRP
AArch64ISD::ADR
AArch64ISD::ADDlow
AArch64ISD::LOADgot
AArch64ISD::RET_FLAG
AArch64ISD::BRCOND
AArch64ISD::CSEL
AArch64ISD::FCSEL
AArch64ISD::CSINV
AArch64ISD::CSNEG
AArch64ISD::CSINC
AArch64ISD::THREAD_POINTER
AArch64ISD::TLSDESC_CALLSEQ
AArch64ISD::ADC
AArch64ISD::SBC
AArch64ISD::ADDS
AArch64ISD::SUBS
AArch64ISD::ADCS
AArch64ISD::SBCS
AArch64ISD::ANDS
AArch64ISD::CCMP
AArch64ISD::CCMN
AArch64ISD::FCCMP
AArch64ISD::FCMP
AArch64ISD::DUP
AArch64ISD::DUPLANE8
AArch64ISD::DUPLANE16
AArch64ISD::DUPLANE32
AArch64ISD::DUPLANE64
AArch64ISD::MOVI
AArch64ISD::MOVIshift
AArch64ISD::MOVIedit
AArch64ISD::MOVImsl
AArch64ISD::FMOV
AArch64ISD::MVNIshift
AArch64ISD::MVNImsl
AArch64ISD::BICi
AArch64ISD::ORRi
AArch64ISD::BSL
AArch64ISD::NEG
AArch64ISD::EXTR
AArch64ISD::ZIP1
AArch64ISD::ZIP2
AArch64ISD::UZP1
AArch64ISD::UZP2
AArch64ISD::TRN1
AArch64ISD::TRN2
AArch64ISD::REV16
AArch64ISD::REV32
AArch64ISD::REV64
AArch64ISD::EXT
AArch64ISD::VSHL
AArch64ISD::VLSHR
AArch64ISD::VASHR
AArch64ISD::CMEQ
AArch64ISD::CMGE
AArch64ISD::CMGT
AArch64ISD::CMHI
AArch64ISD::CMHS
AArch64ISD::FCMEQ
AArch64ISD::FCMGE
AArch64ISD::FCMGT
AArch64ISD::CMEQz
AArch64ISD::CMGEz
AArch64ISD::CMGTz
AArch64ISD::CMLEz
AArch64ISD::CMLTz
AArch64ISD::FCMEQz
AArch64ISD::FCMGEz
AArch64ISD::FCMGTz
AArch64ISD::FCMLEz
AArch64ISD::FCMLTz
AArch64ISD::SADDV
AArch64ISD::UADDV
AArch64ISD::SMINV
AArch64ISD::UMINV
AArch64ISD::SMAXV
AArch64ISD::UMAXV
AArch64ISD::NOT
AArch64ISD::BIT
AArch64ISD::CBZ
AArch64ISD::CBNZ
AArch64ISD::TBZ
AArch64ISD::TBNZ
AArch64ISD::TC_RETURN
AArch64ISD::PREFETCH
AArch64ISD::SITOF
AArch64ISD::UITOF
AArch64ISD::NVCAST
AArch64ISD::SQSHL_I
AArch64ISD::UQSHL_I
AArch64ISD::SRSHR_I
AArch64ISD::URSHR_I
AArch64ISD::SQSHLU_I
AArch64ISD::WrapperLarge
AArch64ISD::LD2post
AArch64ISD::LD3post
AArch64ISD::LD4post
AArch64ISD::ST2post
AArch64ISD::ST3post
AArch64ISD::ST4post
AArch64ISD::LD1x2post
AArch64ISD::LD1x3post
AArch64ISD::LD1x4post
AArch64ISD::ST1x2post
AArch64ISD::ST1x3post
AArch64ISD::ST1x4post
AArch64ISD::LD1DUPpost
AArch64ISD::LD2DUPpost
AArch64ISD::LD3DUPpost
AArch64ISD::LD4DUPpost
AArch64ISD::LD1LANEpost
AArch64ISD::LD2LANEpost
AArch64ISD::LD3LANEpost
AArch64ISD::LD4LANEpost
AArch64ISD::ST2LANEpost
AArch64ISD::ST3LANEpost
AArch64ISD::ST4LANEpost
AArch64ISD::SMULL
AArch64ISD::UMULL
AArch64ISD::FRECPE
AArch64ISD::FRECPS
AArch64ISD::FRSQRTE
AArch64ISD::FRSQRTS
Unsupported calling convention.
Unsupported key kind for authenticating call
ELF TLS only supported in small memory model
Unsupported code-model for hardened jump-table
aarch64-tbz-offset-bits
Restrict range of TB[N]Z instructions (DEBUG)
aarch64-cbz-offset-bits
Restrict range of CB[N]Z instructions (DEBUG)
aarch64-bcc-offset-bits
Restrict range of Bcc instructions (DEBUG)
aarch64-page
aarch64-pageoff
aarch64-g3
aarch64-g2
aarch64-g1
aarch64-g0
aarch64-hi12
aarch64-coffstub
aarch64-got
aarch64-nc
aarch64-tls
aarch64-dllimport
aarch64-suppress-pair
aarch64-strided-access
aarch64-load-store-scan-limit
aarch64-update-scan-limit
AArch64 load / store optimization pass
aarch64-ldst-opt
auth_ptr$
Can't reference an address-diversified ptrauth global in an instruction.
Combine AArch64 machine instrs before legalization
aarch64-prelegalizer-combiner
AArch64PreLegalizerCombiner
aarch64-stress-promote-const
Promote all vector constants
AArch64 Promote Constant Pass
aarch64-promote-const
AArch64 Promote Constant
_PromotedConst
GPR32sponly
rtcGPR64
PPR_3b
tcGPR64
FPR128_lo
ZPR_3b
FPR128_lo+ZPR_3b
QQ_with_qsub1_in_FPR128_lo+ZPR_3b
QQQ_with_qsub2_in_FPR128_lo+ZPR_3b
QQQ_with_qsub2_in_FPR128_lo+ZPR4_with_zsub1_in_ZPR_3b
QQQQ_with_qsub3_in_FPR128_lo+ZPR_3b
QQQQ_with_qsub3_in_FPR128_lo+ZPR4_with_zsub1_in_ZPR_3b
QQQQ_with_qsub3_in_FPR128_lo+ZPR4_with_zsub2_in_ZPR_3b
FPR128_lo+ZPR4_with_zsub1_in_ZPR_3b
FPR8
FPR128_lo+ZPR4_with_zsub2_in_ZPR_3b
GPR32
FPR128_lo+ZPR4_with_zsub3_in_ZPR_3b
ZPR4_with_zsub3_in_ZPR_4b
ZPR4_with_zsub_in_FPR128_lo
FPR8+ZPR_3b
FPR8+ZPR4_with_zsub1_in_ZPR_3b
FPR8+ZPR4_with_zsub2_in_ZPR_3b
FPR8+ZPR4_with_zsub3_in_ZPR_3b
ZPR_4b
FPR8+ZPR_4b
FPR8+ZPR4_with_zsub2_in_ZPR_4b
FPR8+ZPR4_with_zsub3_in_ZPR_4b
FPR8+ZPR4_with_zsub_in_FPR128_lo
CSR_AArch64_AAPCS
CSR_AArch64_AAPCS_SCS
CSR_AArch64_AAPCS_SwiftError
CSR_AArch64_AAPCS_SwiftError_SCS
CSR_AArch64_AAPCS_ThisReturn
CSR_AArch64_AAVPCS
CSR_AArch64_AAVPCS_SCS
CSR_AArch64_AllRegs
CSR_AArch64_AllRegs_SCS
CSR_AArch64_CXX_TLS_Darwin
CSR_AArch64_CXX_TLS_Darwin_PE
CSR_AArch64_CXX_TLS_Darwin_SCS
CSR_AArch64_CXX_TLS_Darwin_ViaCopy
CSR_AArch64_NoRegs
CSR_AArch64_NoRegs_SCS
CSR_AArch64_RT_MostRegs
CSR_AArch64_RT_MostRegs_SCS
CSR_AArch64_StackProbe_Darwin
CSR_AArch64_StackProbe_Windows
CSR_AArch64_TLS_Darwin
CSR_AArch64_TLS_ELF
CSR_Win_AArch64_AAPCS
AArch64 doesn't support function calls if any of the argument registers is reserved.
bsub
dsub
dsub0
dsub1
dsub2
dsub3
hsub
qhisub
qsub
qsub0
qsub1
qsub2
qsub3
ssub
sub_32
sube32
sube64
subo32
subo64
zsub
zsub0
zsub1
zsub2
zsub3
zsub_hi
dsub1_then_bsub
dsub1_then_hsub
dsub1_then_ssub
dsub3_then_bsub
dsub3_then_hsub
dsub3_then_ssub
dsub2_then_bsub
dsub2_then_hsub
dsub2_then_ssub
qsub1_then_bsub
qsub1_then_dsub
qsub1_then_hsub
qsub1_then_ssub
qsub3_then_bsub
qsub3_then_dsub
qsub3_then_hsub
qsub3_then_ssub
qsub2_then_bsub
qsub2_then_dsub
qsub2_then_hsub
qsub2_then_ssub
subo64_then_sub_32
zsub1_then_bsub
zsub1_then_dsub
zsub1_then_hsub
zsub1_then_ssub
zsub1_then_zsub
zsub1_then_zsub_hi
zsub3_then_bsub
zsub3_then_dsub
zsub3_then_hsub
zsub3_then_ssub
zsub3_then_zsub
zsub3_then_zsub_hi
zsub2_then_bsub
zsub2_then_dsub
zsub2_then_hsub
zsub2_then_ssub
zsub2_then_zsub
zsub2_then_zsub_hi
dsub0_dsub1
dsub0_dsub1_dsub2
dsub1_dsub2
dsub1_dsub2_dsub3
dsub2_dsub3
dsub_qsub1_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub
qsub0_qsub1
qsub0_qsub1_qsub2
qsub1_qsub2
qsub1_qsub2_qsub3
qsub2_qsub3
qsub1_then_dsub_qsub2_then_dsub
qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
qsub2_then_dsub_qsub3_then_dsub
sub_32_subo64_then_sub_32
dsub_zsub1_then_dsub
zsub_zsub1_then_zsub
dsub_zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
dsub_zsub1_then_dsub_zsub2_then_dsub
zsub_zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
zsub_zsub1_then_zsub_zsub2_then_zsub
zsub0_zsub1
zsub0_zsub1_zsub2
zsub1_zsub2
zsub1_zsub2_zsub3
zsub2_zsub3
zsub1_then_dsub_zsub2_then_dsub
zsub1_then_dsub_zsub2_then_dsub_zsub3_then_dsub
zsub1_then_zsub_zsub2_then_zsub
zsub1_then_zsub_zsub2_then_zsub_zsub3_then_zsub
zsub2_then_dsub_zsub3_then_dsub
zsub2_then_zsub_zsub3_then_zsub
Allocation failed
AArch64 speculation hardening pass
aarch64-speculation-hardening
AArch64 Store Pair Suppression
aarch64-stp-suppress
aarch64-early-ifcvt
Enable the early if converter pass
aarch64-use-tbi
Assume that top byte of an address is ignored
aarch64-enable-nonlazybind
Call nonlazybind functions via direct GOT load
aarch64-swift-hack
Convert Swift struct return to i64
AArch64 ARM Swift Hack Pass
aarch64-swift-hack-pass
AArch64 Swift Hack
swift_allocBox
swift_makeBoxUnique
swift_allocError
swift_getTypeName
swift_objc_class_unknownGetInstanceExtents
_getSwiftClassInstanceExtents
_getObjCClassInstanceExtents
swift_ObjCMirror_subscript
swift_class_getInstanceExtents
aarch64-enable-ccmp
Enable the CCMP formation pass
aarch64-enable-cond-br-tune
Enable the conditional branch tuning pass
aarch64-enable-mcr
aarch64-enable-stp-suppress
Suppress STP for AArch64
aarch64-enable-simd-scalar
Enable use of AdvSIMD scalar integer instructions
aarch64-enable-promote-const
Enable the promote constant pass
aarch64-enable-collect-loh
Enable the pass that emits the linker optimization hints (LOH)
aarch64-enable-dead-defs
Enable the pass that removes dead definitons and replaces stores to them with stores to the zero register
aarch64-enable-copyelim
Enable the redundant copy elimination pass
aarch64-enable-ldst-opt
Enable the load/store pair optimization pass
aarch64-enable-atomic-cfg-tidy
aarch64-enable-early-ifcvt
Run early if-conversion
aarch64-enable-condopt
Enable the condition optimizer pass
aarch64-fix-cortex-a53-835769
Work around Cortex-A53 erratum 835769
aarch64-enable-gep-opt
Enable optimizations on complex GEPs
aarch64-enable-branch-relax
Relax out of range conditional branches
aarch64-enable-compress-jump-tables
Use smallest entry possible for jump tables
aarch64-enable-global-merge
aarch64-watch-bitcode-compatibility
Make thumbv7k bitcode compatible with arm64_32
aarch64-enable-loop-data-prefetch
Enable the loop data prefetch pass
aarch64-enable-global-isel-at-O
Enable GlobalISel at or below an opt level (-1 to disable)
aarch64-enable-falkor-hwpf-fix
aarch64-enable-branch-targets
Enable the AAcrh64 branch target pass
Only small, tiny and large code models are allowed on AArch64
Only small, tiny, kernel, and large code models are allowed on AArch64
tiny code model is only supported on ELF
enable-falkor-hwpf-unroll-fix
AArch64 SIMD instructions optimization pass
aarch64-simdinstr-opt
sha3
predctrl
ccdp
tlb-rmi
pan-rwv
ccpp
rdma
.4byte
.xword
.8byte
b.eq
b.ne
b.hs
b.cs
b.lo
b.cc
b.mi
b.pl
b.vs
b.vc
b.hi
b.ls
b.ge
b.lt
b.gt
b.le
b.al
b.nv
invalid condition code
vector register without type specifier expected
sve vector register without type specifier expected
sve predicate register without type specifier expected
register name or alias expected
unexpected input in .req directive
ignoring redefinition of register alias '
invalid vector kind qualifier
.16b
invalid operand
invalid operand for IC instruction
 requires 
invalid operand for DC instruction
invalid operand for AT instruction
invalid operand for TLBI instruction
TLBI 
invalid operand for prediction restriction instruction
expected register operand
specified 
 op requires a register
 op does not use a register
ARMv8.1a
ARMv8.2a
ARMv8.3a
ARMv8.4a
ARMv8.5a
<fpimm 
 (inexact)
<barrier 
<barrier invalid #
<shiftedimm 
, lsl #
<condcode 
<vectorlist 
<sysreg: 
<prfop 
<prfop invalid #
<imp>
uxtb
uxth
uxtw
uxtx
sxtb
sxth
sxtw
sxtx
unexpected floating point literal
expected floating-point constant #0.0
Only valid when first operand is register
movz
Immediate too large for register
adcs
addg
addhn
addhn2
addp
addpl
adds
addv
addvl
adrp
aesd
aese
aesimc
aesmc
ands
andv
asrd
asrr
asrv
autda
autdb
autdza
autdzb
autia
autia1716
autiasp
autiaz
autib
autib1716
autibsp
autibz
autiza
autizb
axflag
bcax
bics
blraa
blraaz
blrab
blrabz
braa
braaz
brab
brabz
brka
brkas
brkb
brkbs
brkn
brkns
brkpa
brkpas
brkpb
brkpbs
casa
casab
casah
casal
casalb
casalh
casb
cash
casl
caslb
caslh
casp
caspa
caspal
caspl
cbnz
ccmn
ccmp
cfinv
cinc
cinv
clasta
clastb
clrex
cmeq
cmge
cmgt
cmhi
cmhs
cmle
cmlo
cmls
cmlt
cmpeq
cmpge
cmpgt
cmphi
cmphs
cmple
cmplo
cmpls
cmplt
cmpne
cmpp
cmtst
cneg
cnot
cntb
cntd
cnth
cntp
cntw
compact
crc32b
crc32cb
crc32ch
crc32cw
crc32cx
crc32h
crc32w
crc32x
csdb
csel
cset
csetm
csinc
csinv
csneg
ctermeq
ctermne
dcps1
dcps2
dcps3
decb
decd
dech
decp
decw
drps
dupm
eor3
eors
eorv
eret
eretaa
eretab
extr
fabd
fabs
facge
facgt
facle
faclt
fadd
fadda
faddp
faddv
fcadd
fccmp
fccmpe
fcmeq
fcmge
fcmgt
fcmla
fcmle
fcmlt
fcmne
fcmp
fcmpe
fcmuo
fcpy
fcsel
fcvt
fcvtas
fcvtau
fcvtl
fcvtl2
fcvtms
fcvtmu
fcvtn
fcvtn2
fcvtns
fcvtnu
fcvtps
fcvtpu
fcvtxn
fcvtxn2
fcvtzs
fcvtzu
fdiv
fdivr
fdup
fexpa
fjcvtzs
fmad
fmadd
fmax
fmaxnm
fmaxnmp
fmaxnmv
fmaxp
fmaxv
fmin
fminnm
fminnmp
fminnmv
fminp
fminv
fmla
fmlal
fmlal2
fmls
fmlsl
fmlsl2
fmov
fmsb
fmsub
fmul
fmulx
fneg
fnmad
fnmadd
fnmla
fnmls
fnmsb
fnmsub
fnmul
frecpe
frecps
frecpx
frint32x
frint32z
frint64x
frint64z
frinta
frinti
frintm
frintn
frintp
frintx
frintz
frsqrte
frsqrts
fscale
fsqrt
fsub
fsubr
ftmad
ftsmul
ftssel
hint
incb
incd
inch
incp
incw
index
insr
lasta
lastb
ld1b
ld1d
ld1h
ld1r
ld1rb
ld1rd
ld1rh
ld1rqb
ld1rqd
ld1rqh
ld1rqw
ld1rsb
ld1rsh
ld1rsw
ld1rw
ld1sb
ld1sh
ld1sw
ld1w
ld2b
ld2d
ld2h
ld2r
ld2w
ld3b
ld3d
ld3h
ld3r
ld3w
ld4b
ld4d
ld4h
ld4r
ld4w
ldadd
ldadda
ldaddab
ldaddah
ldaddal
ldaddalb
ldaddalh
ldaddb
ldaddh
ldaddl
ldaddlb
ldaddlh
ldapr
ldaprb
ldaprh
ldapur
ldapurb
ldapurh
ldapursb
ldapursh
ldapursw
ldar
ldarb
ldarh
ldaxp
ldaxr
ldaxrb
ldaxrh
ldclr
ldclra
ldclrab
ldclrah
ldclral
ldclralb
ldclralh
ldclrb
ldclrh
ldclrl
ldclrlb
ldclrlh
ldeor
ldeora
ldeorab
ldeorah
ldeoral
ldeoralb
ldeoralh
ldeorb
ldeorh
ldeorl
ldeorlb
ldeorlh
ldff1b
ldff1d
ldff1h
ldff1sb
ldff1sh
ldff1sw
ldff1w
ldgv
ldlar
ldlarb
ldlarh
ldnf1b
ldnf1d
ldnf1h
ldnf1sb
ldnf1sh
ldnf1sw
ldnf1w
ldnp
ldnt1b
ldnt1d
ldnt1h
ldnt1w
ldpsw
ldraa
ldrab
ldrb
ldrh
ldrsb
ldrsh
ldrsw
ldset
ldseta
ldsetab
ldsetah
ldsetal
ldsetalb
ldsetalh
ldsetb
ldseth
ldsetl
ldsetlb
ldsetlh
ldsmax
ldsmaxa
ldsmaxab
ldsmaxah
ldsmaxal
ldsmaxalb
ldsmaxalh
ldsmaxb
ldsmaxh
ldsmaxl
ldsmaxlb
ldsmaxlh
ldsmin
ldsmina
ldsminab
ldsminah
ldsminal
ldsminalb
ldsminalh
ldsminb
ldsminh
ldsminl
ldsminlb
ldsminlh
ldtr
ldtrb
ldtrh
ldtrsb
ldtrsh
ldtrsw
ldumax
ldumaxa
ldumaxab
ldumaxah
ldumaxal
ldumaxalb
ldumaxalh
ldumaxb
ldumaxh
ldumaxl
ldumaxlb
ldumaxlh
ldumin
ldumina
lduminab
lduminah
lduminal
lduminalb
lduminalh
lduminb
lduminh
lduminl
lduminlb
lduminlh
ldur
ldurb
ldurh
ldursb
ldursh
ldursw
ldxp
ldxr
ldxrb
ldxrh
lslr
lslv
lsrr
lsrv
madd
mneg
movi
movk
movn
movprfx
movs
movz
msub
mvni
nand
nands
negs
ngcs
nors
nots
orns
orrs
pacda
pacdb
pacdza
pacdzb
pacga
pacia
pacia1716
paciasp
paciaz
pacib
pacib1716
pacibsp
pacibz
paciza
pacizb
pfalse
pfirst
pmul
pmull
pmull2
pnext
prfb
prfd
prfh
prfm
prfum
prfw
pssbb
ptest
ptrue
ptrues
punpkhi
punpklo
raddhn
raddhn2
rax1
rbit
rdffr
rdffrs
rdvl
retaa
retab
rev16
rev32
rev64
revb
revh
revw
rmif
rorv
rshrn
rshrn2
rsubhn
rsubhn2
saba
sabal
sabal2
sabd
sabdl
sabdl2
sadalp
saddl
saddl2
saddlp
saddlv
saddv
saddw
saddw2
sbcs
sbfm
scvtf
sdiv
sdivr
sdot
setf16
setf8
setffr
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
sha512h
sha512h2
sha512su0
sha512su1
shadd
shll
shll2
shrn
shrn2
shsub
sm3partw1
sm3partw2
sm3ss1
sm3tt1a
sm3tt1b
sm3tt2a
sm3tt2b
sm4e
sm4ekey
smaddl
smax
smaxp
smaxv
smin
sminp
sminv
smlal
smlal2
smlsl
smlsl2
smnegl
smov
smsubl
smulh
smull
smull2
splice
sqabs
sqadd
sqdecb
sqdecd
sqdech
sqdecp
sqdecw
sqdmlal
sqdmlal2
sqdmlsl
sqdmlsl2
sqdmulh
sqdmull
sqdmull2
sqincb
sqincd
sqinch
sqincp
sqincw
sqneg
sqrdmlah
sqrdmlsh
sqrdmulh
sqrshl
sqrshrn
sqrshrn2
sqrshrun
sqrshrun2
sqshl
sqshlu
sqshrn
sqshrn2
sqshrun
sqshrun2
sqsub
sqxtn
sqxtn2
sqxtun
sqxtun2
srhadd
srshl
srshr
srsra
ssbb
sshl
sshll
sshll2
sshr
ssra
ssubl
ssubl2
ssubw
ssubw2
st1b
st1d
st1h
st1w
st2b
st2d
st2g
st2h
st2w
st3b
st3d
st3h
st3w
st4b
st4d
st4h
st4w
stadd
staddb
staddh
staddl
staddlb
staddlh
stclr
stclrb
stclrh
stclrl
stclrlb
stclrlh
steor
steorb
steorh
steorl
steorlb
steorlh
stgp
stgv
stllr
stllrb
stllrh
stlr
stlrb
stlrh
stlur
stlurb
stlurh
stlxp
stlxr
stlxrb
stlxrh
stnp
stnt1b
stnt1d
stnt1h
stnt1w
strb
strh
stset
stsetb
stseth
stsetl
stsetlb
stsetlh
stsmax
stsmaxb
stsmaxh
stsmaxl
stsmaxlb
stsmaxlh
stsmin
stsminb
stsminh
stsminl
stsminlb
stsminlh
sttr
sttrb
sttrh
stumax
stumaxb
stumaxh
stumaxl
stumaxlb
stumaxlh
stumin
stuminb
stuminh
stuminl
stuminlb
stuminlh
stur
sturb
sturh
stxp
stxr
stxrb
stxrh
stz2g
stzg
subg
subhn
subhn2
subp
subps
subr
subs
sunpkhi
sunpklo
suqadd
swpa
swpab
swpah
swpal
swpalb
swpalh
swpb
swph
swpl
swplb
swplh
sxtb
sxth
sxtl
sxtl2
sxtw
sysl
tbnz
trn1
trn2
uaba
uabal
uabal2
uabd
uabdl
uabdl2
uadalp
uaddl
uaddl2
uaddlp
uaddlv
uaddv
uaddw
uaddw2
ubfm
ucvtf
udiv
udivr
udot
uhadd
uhsub
umaddl
umax
umaxp
umaxv
umin
uminp
uminv
umlal
umlal2
umlsl
umlsl2
umnegl
umov
umsubl
umulh
umull
umull2
uqadd
uqdecb
uqdecd
uqdech
uqdecp
uqdecw
uqincb
uqincd
uqinch
uqincp
uqincw
uqrshl
uqrshrn
uqrshrn2
uqshl
uqshrn
uqshrn2
uqsub
uqxtn
uqxtn2
urecpe
urhadd
urshl
urshr
ursqrte
ursra
ushl
ushll
ushll2
ushr
usqadd
usra
usubl
usubl2
usubw
usubw2
uunpkhi
uunpklo
uxtb
uxth
uxtl
uxtl2
uxtw
uzp1
uzp2
whilele
whilelo
whilels
whilelt
wrffr
xaflag
xpacd
xpaci
xpaclri
xtn2
yield
zip1
zip2
only 'lsl #+N' valid after immediate
positive shift amount required
unexpected adr label
gotpage label reference not allowed an addend
page or gotpage label reference expected
'csync' operand expected
immediate value expected for barrier operand
barrier operand out of range
'sy' or #imm operand expected
invalid barrier option name
index must be absent or #0
not expecting size suffix
expecting 'm' or 'z' predication
immediate value expected for prefetch operand
prefetch operand out of range, [0,
] expected
prefetch hint expected
Expected cN operand where 0 <= N <= 15
expected register
expected first even register of a consecutive same-size even/odd register pair
expected second odd register of a consecutive same-size even/odd register pair
mismatched register size suffix
invalid number of vectors
registers must be sequential
expect relocation specifier in operand after ':'
tlsdesc
expect ':' after relocation specifier
condition codes AL and NV are invalid for this instruction
expected 'vl' or '#<imm>'
expected #imm after shift specifier
expected integer shift amount
expected constant '#imm' after shift specifier
.cfi_b_key_frame
.quad
unknown arch name
nosha2
noaes
nosm4
nosha3
unknown CPU name
unsupported architectural extension
expected symbol after directive
in '.unreq' directive
expected expression following '.inst' directive
 in '.inst' directive
unexpected token in '.cfi_b_key_frame'
.loh
expected an identifier or a number in directive
invalid numeric identifier in directive
invalid identifier in directive
expected identifier in directive
unexpected token in '
' directive
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
expected '(' after @AUTH expression
expected key name in @AUTH expression
invalid key '
' in @AUTH expression
expected ',' after key in @AUTH expression
expected integer discriminator after key in @AUTH expression
too wide integer discriminator '
'in @AUTH expression
expected 'addr' after discriminator in @AUTH expression
expected ')' at the end of @AUTH expression
ubfm
expected integer in range [0, 31]
expected integer in range [1, 32]
requested insert overflows register
sbfiz
ubfiz
sbfm
bfxil
sbfx
ubfx
requested extract overflows register
movi
instruction movi.2d with immediate #0 may not function correctly on this CPU, converting to equivalent movi.16b
instruction is unpredictable when following a movprfx, suggest replacing movprfx with mov
instruction is unpredictable when following a movprfx writing to a different destination
instruction is unpredictable when following a movprfx and destination also used as non-destructive source
instruction is unpredictable when following a predicated movprfx, suggest using unpredicated movprfx
instruction is unpredictable when following a predicated movprfx using a different general predicate
instruction is unpredictable when following a predicated movprfx with a different element size
unpredictable LDP instruction, writeback base is also a destination
unpredictable LDP instruction, Rt2==Rt
unpredictable STP instruction, writeback base is also a source
unpredictable LDR instruction, writeback base is also a source
unpredictable STR instruction, writeback base is also a source
unpredictable STXR instruction, status is also a source
unpredictable STXP instruction, status is also a source
unpredictable LDGV instruction, writeback register is also the target register
invalid immediate expression
jsconv
ccidx
complxnum
rasv8_4
mpam
tracev8.4
sel2
rcpc-immo
rcpc
altnzcv
frint3264
ARM v8.1  Privileged Access-Never extension
ARM v8.2 UAO PState extension (psuao)
ARM v8.2 PAN AT S1E1R and AT S1E1W Variation
operand must be 64-bit form of destination register
operand must be 32-bit form of destination register
operand must match destination register
instruction requires a CPU feature not currently enabled
invalid type suffix for instruction
expected AArch64 condition code
expected '[su]xt[bhw]' or 'lsl' with optional integer in range [0, 4]
expected 'sxtx' 'uxtx' or 'lsl' with optional integer in range [0, 4]
expected compatible register, symbol or integer in range [0, 4095]
expected compatible register or logical immediate
expected 'lsl' with optional integer 0 or 16
expected 'lsl' with optional integer 0, 16, 32 or 48
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 31]
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 63]
expected compatible register or floating-point constant
index must be an integer in range [-32, 31].
index must be an integer in range [-16, 15].
index must be an integer in range [-8, 7].
index must be a multiple of 2 in range [-16, 14].
index must be a multiple of 3 in range [-24, 21].
index must be a multiple of 4 in range [-32, 28].
index must be a multiple of 16 in range [-128, 112].
index must be an integer in range [-128, 127].
index must be an integer in range [-256, 255].
index must be a multiple of 16 in range [-4096, 4080].
index must be a multiple of 8 in range [-4096, 4088].
index must be a multiple of 4 in range [-256, 252].
index must be a multiple of 8 in range [-512, 504].
index must be a multiple of 16 in range [-1024, 1008].
index must be a multiple of 8 in range [0, 248].
index must be a multiple of 4 in range [0, 124].
index must be a multiple of 2 in range [0, 62].
index must be a multiple of 8 in range [0, 504].
index must be a multiple of 16 in range [0, 1008].
index must be a multiple of 4 in range [0, 252].
index must be a multiple of 2 in range [0, 126].
index must be in range [0, 63].
expected 'uxtw' or 'sxtw' with optional shift of #0
expected 'uxtw' or 'sxtw' with optional shift of #0 or #1
expected 'uxtw' or 'sxtw' with optional shift of #0 or #2
expected 'uxtw' or 'sxtw' with optional shift of #0 or #3
expected 'uxtw' or 'sxtw' with optional shift of #0 or #4
expected 'lsl' or 'sxtx' with optional shift of #0
expected 'lsl' or 'sxtx' with optional shift of #0 or #1
expected 'lsl' or 'sxtx' with optional shift of #0 or #2
expected 'lsl' or 'sxtx' with optional shift of #0 or #3
expected 'lsl' or 'sxtx' with optional shift of #0 or #4
index must be an integer in range [0, 4095].
index must be a multiple of 2 in range [0, 8190].
index must be a multiple of 4 in range [0, 16380].
index must be a multiple of 8 in range [0, 32760].
index must be a multiple of 16 in range [0, 65520].
immediate must be an integer in range [0, 1].
immediate must be an integer in range [0, 7].
immediate must be an integer in range [0, 15].
immediate must be an integer in range [0, 31].
immediate must be an integer in range [0, 63].
immediate must be an integer in range [0, 127].
immediate must be an integer in range [0, 255].
immediate must be an integer in range [0, 65535].
immediate must be an integer in range [1, 8].
immediate must be an integer in range [1, 16].
immediate must be an integer in range [1, 32].
immediate must be an integer in range [1, 64].
immediate must be an integer in range [0, 255] with a shift amount of 0
immediate must be an integer in range [0, 255] or a multiple of 256 in range [256, 65280]
immediate must be an integer in range [-128, 255] with a shift amount of 0
immediate must be an integer in range [-128, 127] or a multiple of 256 in range [-32768, 65280]
immediate must be an integer in range [-128, 127] or a multiple of 256 in range [-32768, 32512]
expected lane specifier '[1]'
vector lane must be an integer in range [0, 15].
vector lane must be an integer in range [0, 7].
vector lane must be an integer in range [0, 3].
vector lane must be an integer in range [0, 1].
vector lane must be an integer in range [0, 63].
vector lane must be an integer in range [0, 31].
expected label or encodable integer pc offset
expected readable system register
expected writable system register or pstate
complex rotation must be 0, 90, 180 or 270.
complex rotation must be 90 or 270.
unrecognized instruction mnemonic
register must be x0..x30 or xzr, without shift
register must be x0..x30 or xzr, with required shift 'lsl #1'
register must be x0..x30 or xzr, with required shift 'lsl #2'
register must be x0..x30 or xzr, with required shift 'lsl #3'
register must be x0..x30 without shift
register must be x0..x30 with required shift 'lsl #1'
register must be x0..x30 with required shift 'lsl #2'
register must be x0..x30 with required shift 'lsl #3'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw)'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #1'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #2'
invalid shift/extend specified, expected 'z[0..31].s, (uxtw|sxtw) #3'
invalid shift/extend specified, expected 'z[0..31].d, (uxtw|sxtw)'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #1'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #2'
invalid shift/extend specified, expected 'z[0..31].d, (lsl|uxtw|sxtw) #3'
invalid shift/extend specified, expected 'z[0..31].s'
invalid shift/extend specified, expected 'z[0..31].s, lsl #1'
invalid shift/extend specified, expected 'z[0..31].s, lsl #2'
invalid shift/extend specified, expected 'z[0..31].s, lsl #3'
invalid shift/extend specified, expected 'z[0..31].d'
invalid shift/extend specified, expected 'z[0..31].d, lsl #1'
invalid shift/extend specified, expected 'z[0..31].d, lsl #2'
invalid shift/extend specified, expected 'z[0..31].d, lsl #3'
expected register without element width sufix
invalid element width
Invalid restricted vector register, expected z0.b..z7.b
Invalid restricted vector register, expected z0.h..z7.h
Invalid restricted vector register, expected z0.s..z7.s
Invalid restricted vector register, expected z0.h..z15.h
Invalid restricted vector register, expected z0.s..z15.s
Invalid restricted vector register, expected z0.d..z15.d
invalid predicate pattern
invalid predicate register.
restricted predicate has range [0, 7].
Invalid floating point constant, expected 0.5 or 1.0.
Invalid floating point constant, expected 0.5 or 2.0.
Invalid floating point constant, expected 0.0 or 1.0.
.16b, 
.2s, 
.2d, 
.4h, 
.4s, 
.8h, 
.8b, 
, mul 
, #0.0
/z, [
.1q, 
.1d, 
/m, 
/z, 
.16b, #0
.2s, #0
.2d, #0
.4h, #0
.4s, #0
.8h, #0
.8b, #0
.2s, #0.0
.2d, #0.0
.4h, #0.0
.4s, #0.0
.8h, #0.0
.2h, 
.16b, #8
.2s, #32
.4h, #16
.4s, #32
.8h, #16
.8b, #8
, mul vl]
adds
mov $
tst $
tst $
tst $
ands
tst $
movs $
/z, $
mov $
/z, $
bics
cntb
cntb
cntd
cntd
cnth
cnth
cntw
cntw
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
mov $
/z, $
cset $
cinc $
csetm $
cinv $
cneg $
dcps1
dcps2
dcps3
decb
decb
decd
decd
decd
decd
dech
dech
dech
dech
decw
decw
decw
decw
mov $
mov $
mov $
dupm $
dupm $
dupm $
mov $
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
fmov $
, #0.0
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
mov $
nots $
/z, $
not $
/z, $
ror $
fmov $
/m, $
fmov $
/m, $
fmov $
/m, $
fmov $
fmov $
fmov $
ld1b
 , $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
ld1h
 , $
/z, [$
ld1h
!, $
/z, [$
ld1sb
 , $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
ldff1b
 , $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
sevl
csdb
bti $
psb $
incb
incb
incd
incd
incd
incd
inch
inch
inch
inch
incw
incw
incw
incw
.h$
.h$
.h$
.s$
.s$
.s$
.d$
.d$
.d$
.b$
.b$
.b$
irg $
ld1b
 , $
/z, [$
ld1b
$, $
/z, [$
ld1b
%, $
/z, [$
ld1b
!, $
/z, [$
ld1d
 , $
/z, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld1h
 , $
/z, [$
ld1h
$, $
/z, [$
ld1h
!, $
/z, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
ld1rb
 , $
/z, [$
ld1rb
$, $
/z, [$
ld1rb
%, $
/z, [$
ld1rb
!, $
/z, [$
ld1rd
 , $
/z, [$
ld1rh
 , $
/z, [$
ld1rh
$, $
/z, [$
ld1rh
!, $
/z, [$
ld1rqb
%, $
/z, [$
ld1rqd
 , $
/z, [$
ld1rqh
$, $
/z, [$
ld1rqw
!, $
/z, [$
ld1rsb
 , $
/z, [$
ld1rsb
$, $
/z, [$
ld1rsb
!, $
/z, [$
ld1rsh
 , $
/z, [$
ld1rsh
!, $
/z, [$
ld1rsw
 , $
/z, [$
ld1rw
 , $
/z, [$
ld1rw
!, $
/z, [$
ld1r
&, [$
], #1
ld1r
', [$
], #8
ld1r
(, [$
], #8
ld1r
), [$
], #4
ld1r
*, [$
], #2
ld1r
+, [$
], #4
ld1r
,, [$
], #1
ld1r
-, [$
], #2
ld1sb
 , $
/z, [$
ld1sb
$, $
/z, [$
ld1sb
!, $
/z, [$
ld1sh
 , $
/z, [$
ld1sh
!, $
/z, [$
ld1sw
 , $
/z, [$
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld1w
 , $
/z, [$
ld1w
!, $
/z, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
ld2b
%, $
/z, [$
ld2d
 , $
/z, [$
ld2h
$, $
/z, [$
ld2r
&, [$
], #2
ld2r
', [$
], #16
ld2r
(, [$
], #16
ld2r
), [$
], #8
ld2r
*, [$
], #4
ld2r
+, [$
], #8
ld2r
,, [$
], #2
ld2r
-, [$
], #4
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
ld2w
!, $
/z, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
ld3b
%, $
/z, [$
ld3d
 , $
/z, [$
ld3h
$, $
/z, [$
ld3r
&, [$
], #3
ld3r
', [$
], #24
ld3r
(, [$
], #24
ld3r
), [$
], #12
ld3r
*, [$
], #6
ld3r
+, [$
], #12
ld3r
,, [$
], #3
ld3r
-, [$
], #6
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
ld3w
!, $
/z, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
ld4b
%, $
/z, [$
ld4d
 , $
/z, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
ld4h
$, $
/z, [$
ld4r
&, [$
], #4
ld4r
', [$
], #32
ld4r
(, [$
], #32
ld4r
), [$
], #16
ld4r
*, [$
], #8
ld4r
+, [$
], #16
ld4r
,, [$
], #4
ld4r
-, [$
], #8
ld4w
!, $
/z, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
staddb
, [$
staddh
, [$
staddlb
, [$
staddlh
, [$
staddl
, [$
stadd
, [$
ldapurb
, [$
ldapurh
, [$
ldapursb
, [$
ldapursh
, [$
ldapursw
, [$
ldapur
, [$
stclrb
, [$
stclrh
, [$
stclrlb
, [$
stclrlh
, [$
stclrl
, [$
stclr
, [$
steorb
, [$
steorh
, [$
steorlb
, [$
steorlh
, [$
steorl
, [$
steor
, [$
ldff1b
 , $
/z, [$
ldff1b
$, $
/z, [$
ldff1b
%, $
/z, [$
ldff1b
!, $
/z, [$
ldff1d
 , $
/z, [$
ldff1h
 , $
/z, [$
ldff1h
$, $
/z, [$
ldff1h
!, $
/z, [$
ldff1sb
 , $
/z, [$
ldff1sb
$, $
/z, [$
ldff1sb
!, $
/z, [$
ldff1sh
 , $
/z, [$
ldff1sh
!, $
/z, [$
ldff1sw
 , $
/z, [$
ldff1w
 , $
/z, [$
ldff1w
!, $
/z, [$
ldg $
, [$
ldnf1b
 , $
/z, [$
ldnf1b
$, $
/z, [$
ldnf1b
%, $
/z, [$
ldnf1b
!, $
/z, [$
ldnf1d
 , $
/z, [$
ldnf1h
 , $
/z, [$
ldnf1h
$, $
/z, [$
ldnf1h
!, $
/z, [$
ldnf1sb
 , $
/z, [$
ldnf1sb
$, $
/z, [$
ldnf1sb
!, $
/z, [$
ldnf1sh
 , $
/z, [$
ldnf1sh
!, $
/z, [$
ldnf1sw
 , $
/z, [$
ldnf1w
 , $
/z, [$
ldnf1w
!, $
/z, [$
ldnp
, [$
ldnt1b
%, $
/z, [$
ldnt1d
 , $
/z, [$
ldnt1h
$, $
/z, [$
ldnt1w
!, $
/z, [$
, [$
ldpsw
, [$
ldraa
, [$
ldrab
, [$
ldrb
, [$
ldrb
, [$
, [$
, [$
ldrh
, [$
ldrh
, [$
ldrsb
, [$
ldrsb
, [$
ldrsh
, [$
ldrsh
, [$
ldrsw
, [$
ldrsw
, [$
, [$
stsetb
, [$
stseth
, [$
stsetlb
, [$
stsetlh
, [$
stsetl
, [$
stset
, [$
stsmaxb
, [$
stsmaxh
, [$
stsmaxlb
, [$
stsmaxlh
, [$
stsmaxl
, [$
stsmax
, [$
stsminb
, [$
stsminh
, [$
stsminlb
, [$
stsminlh
, [$
stsminl
, [$
stsmin
, [$
ldtrb
, [$
ldtrh
, [$
ldtrsb
, [$
ldtrsh
, [$
ldtrsw
, [$
ldtr
, [$
stumaxb
, [$
stumaxh
, [$
stumaxlb
, [$
stumaxlh
, [$
stumaxl
, [$
stumax
, [$
stuminb
, [$
stuminh
, [$
stuminlb
, [$
stuminlh
, [$
stuminl
, [$
stumin
, [$
ldurb
, [$
ldur
, [$
ldurh
, [$
ldursb
, [$
ldursh
, [$
ldursw
, [$
mneg
mvn $
.16b, $
.16b
mvn $
.8b, $
.8b
mvn $
mvn $
movs $
mov $
mov $
mov $
.16b, $
.16b
.8b, $
.8b
prfb
3, $
, [$
prfb
3, $
, [$
prfb
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfd
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfh
3, $
, [$
prfm $
4, [$
prfm $
4, [$
prfum
4, [$
prfw
3, $
, [$
prfw
3, $
, [$
prfw
3, $
, [$
ptrues
ptrues
ptrues
ptrues
ptrue
ptrue
ptrue
ptrue
ngcs $
ngc $
asr $
sxtb $
sxth $
sxtw $
mov $
/m, $
mov $
/m, $
mov $
/m, $
mov $
/m, $
smull
smnegl
sqdecb
sqdecb
sqdecb
sqdecb
5, $
sqdecd
sqdecd
sqdecd
sqdecd
5, $
sqdecd
sqdecd
sqdech
sqdech
sqdech
sqdech
5, $
sqdech
sqdech
sqdecw
sqdecw
sqdecw
sqdecw
5, $
sqdecw
sqdecw
sqincb
sqincb
sqincb
sqincb
5, $
sqincd
sqincd
sqincd
sqincd
5, $
sqincd
sqincd
sqinch
sqinch
sqinch
sqinch
5, $
sqinch
sqinch
sqincw
sqincw
sqincw
sqincw
5, $
sqincw
sqincw
st1b
 , $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
st1h
 , $
, [$
st1h
!, $
, [$
st1w
 , $
, [$
st1w
!, $
, [$
st1b
 , $
, [$
st1b
$, $
, [$
st1b
%, $
, [$
st1b
!, $
, [$
st1d
 , $
, [$
&, [$
], #64
', [$
], #32
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st1h
 , $
, [$
st1h
$, $
, [$
st1h
!, $
, [$
&, [$
], #16
', [$
], #8
(, [$
], #16
), [$
], #8
*, [$
], #8
+, [$
], #16
,, [$
], #8
-, [$
], #16
&, [$
], #48
', [$
], #24
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
&, [$
], #32
', [$
], #16
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st1w
 , $
, [$
st1w
!, $
, [$
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
st2b
%, $
, [$
st2d
 , $
, [$
st2g
st2h
$, $
, [$
&, [$
], #32
(, [$
], #32
), [$
], #16
*, [$
], #16
+, [$
], #32
,, [$
], #16
-, [$
], #32
st2w
!, $
, [$
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
st3b
%, $
, [$
st3d
 , $
, [$
st3h
$, $
, [$
&, [$
], #48
(, [$
], #48
), [$
], #24
*, [$
], #24
+, [$
], #48
,, [$
], #24
-, [$
], #48
st3w
!, $
, [$
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
st4b
%, $
, [$
st4d
 , $
, [$
&, [$
], #64
(, [$
], #64
), [$
], #32
*, [$
], #32
+, [$
], #64
,, [$
], #32
-, [$
], #64
st4h
$, $
, [$
st4w
!, $
, [$
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
stgp
, [$
stlurb
, [$
stlurh
, [$
stlur
, [$
stnp
, [$
stnt1b
%, $
, [$
stnt1d
 , $
, [$
stnt1h
$, $
, [$
stnt1w
!, $
, [$
, [$
strb
, [$
strb
, [$
, [$
, [$
strh
, [$
strh
, [$
, [$
sttrb
, [$
sttrh
, [$
sttr
, [$
sturb
, [$
stur
, [$
sturh
, [$
stz2g
stzg
negs $
negs $
subs
neg $
neg $
sys $
6, $
6, $
lsr $
uxtb $
uxth $
uxtw $
umull
.s$
.d$
umnegl
uqdecb
uqdecb
uqdecd
uqdecd
uqdecd
uqdecd
uqdech
uqdech
uqdech
uqdech
uqdecw
uqdecw
uqdecw
uqdecw
uqincb
uqincb
uqincd
uqincd
uqincd
uqincd
uqinch
uqinch
uqinch
uqinch
uqincw
uqincw
uqincw
uqincw
, #8
, #32
, #16
mov.h
mov.h
mov.s
mov.s
mov.d
mov.d
mov.b
mov.b
mvn.16b $
, $
mvn.8b $
, $
mov.16b
, $
mov.8b
, $
mov.s
mov.d
acquire semantics dropped since destination is zero
bfxil
movz
movn
movk
 COMPILER BARRIER
.space
tlbi
#%#llx
#%.8f
DBGDTRRX_EL0
DBGDTRTX_EL0
#%#016llx
ld1r
ld2r
ld3r
ld4r
fixup_aarch64_pcrel_adr_imm21
fixup_aarch64_pcrel_adrp_imm21
fixup_aarch64_add_imm12
fixup_aarch64_ldst_imm12_scale1
fixup_aarch64_ldst_imm12_scale2
fixup_aarch64_ldst_imm12_scale4
fixup_aarch64_ldst_imm12_scale8
fixup_aarch64_ldst_imm12_scale16
fixup_aarch64_ldr_pcrel_imm19
fixup_aarch64_movw
fixup_aarch64_pcrel_branch14
fixup_aarch64_pcrel_branch19
fixup_aarch64_pcrel_branch26
fixup_aarch64_pcrel_call26
fixup_aarch64_tlsdesc_call
fixup value out of range
fixup not sufficiently aligned
fixup must be 2-byte aligned
fixup must be 4-byte aligned
fixup must be 8-byte aligned
fixup must be 16-byte aligned
relocation for a thread-local variable points to an absolute symbol
resolvable R_AARCH64_MOVW_SABS_G* fixups are not yet implemented
unresolved movw fixup not yet implemented
1-byte data relocations not supported
ILP32 8 byte PC relative data relocation not supported (LP64 eqv: PREL64)
invalid symbol kind for ADR relocation
invalid fixup for 32-bit pcrel ADRP instruction VK_ABS VK_NC
invalid symbol kind for ADRP relocation
Unsupported pc-relative fixup kind
ILP32 8 byte absolute data relocation not supported (LP64 eqv: ABS64)
invalid fixup for add (uimm12) instruction
invalid fixup for 8-bit load/store instruction
invalid fixup for 16-bit load/store instruction
LP64 4 byte unchecked GOT load/store relocation not supported (ILP32 eqv: LD32_GOT_LO12_NC
ILP32 4 byte checked GOT load/store relocation not supported (unchecked eqv: LD32_GOT_LO12_NC)
LP64 4 byte checked GOT load/store relocation not supported (unchecked/ILP32 eqv: LD32_GOT_LO12_NC)
LP64 32-bit load/store relocation not supported (ILP32 eqv: TLSIE_LD32_GOTTPREL_LO12_NC)
LP64 4 byte TLSDESC load/store relocation not supported (ILP32 eqv: TLSDESC_LD64_LO12)
invalid fixup for 32-bit load/store instruction fixup_aarch64_ldst_imm12_scale4
ILP32 64-bit load/store relocation not supported (LP64 eqv: LD64_GOT_LO12_NC)
ILP32 64-bit load/store relocation not supported (LP64 eqv: TLSIE_LD64_GOTTPREL_LO12_NC)
ILP32 64-bit load/store relocation not supported (LP64 eqv: TLSDESC_LD64_LO12)
invalid fixup for 64-bit load/store instruction
invalid fixup for 128-bit load/store instruction
invalid fixup for movz/movk instruction
Unknown ELF relocation type
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G3)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_SABS_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G2_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_SABS_G1)
ILP32 absolute MOV relocation not supported (LP64 eqv: MOVW_UABS_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLD_MOVW_DTPREL_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLD_MOVW_DTPREL_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLE_MOVW_TPREL_G2)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSLE_MOVW_TPREL_G1_NC)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSIE_MOVW_GOTTPREL_G1)
ILP32 absolute MOV relocation not supported (LP64 eqv: TLSIE_MOVW_GOTTPREL_G0_NC)
.inst
aarch64-neon-syntax
Choose style of NEON code to emit from AArch64 backend:
Emit generic NEON assembly
Emit Apple-style NEON assembly
.hword
.word
.xword
.weak
:lo12:
:abs_g3:
:abs_g2:
:abs_g2_s:
:abs_g2_nc:
:abs_g1:
:abs_g1_s:
:abs_g1_nc:
:abs_g0:
:abs_g0_s:
:abs_g0_nc:
:dtprel_g2:
:dtprel_g1:
:dtprel_g1_nc:
:dtprel_g0:
:dtprel_g0_nc:
:dtprel_hi12:
:dtprel_lo12:
:dtprel_lo12_nc:
:tprel_g2:
:tprel_g1:
:tprel_g1_nc:
:tprel_g0:
:tprel_g0_nc:
:tprel_hi12:
:tprel_lo12:
:tprel_lo12_nc:
:tlsdesc_lo12:
:pg_hi21_nc:
:got:
:got_lo12:
:gottprel:
:gottprel_lo12:
:gottprel_g1:
:gottprel_g0_nc:
:tlsdesc:
:secrel_lo12:
:secrel_hi12:
@AUTH(
,addr
Auth relocation can't reference two symbols
aggressive-fma
Enable Aggressive FMA for floating-point.
alternate-sextload-cvt-f32-pattern
Use alternative pattern for sextload convert to f32
Enable alternative NZCV format for floating point comparisons
Enable v8.4-A Activity Monitors extension
arith-bcc-fusion
CPU fuses arithmetic+bcc operations
arith-cbz-fusion
CPU fuses arithmetic + cbz/cbnz operations
balance-fp-ops
balance mix of odd and even D-registers for fp multiply(-accumulate) ops
Enable Branch Target Identification
call-saved-x10
Make X10 callee saved.
call-saved-x11
Make X11 callee saved.
call-saved-x12
Make X12 callee saved.
call-saved-x13
Make X13 callee saved.
call-saved-x14
Make X14 callee saved.
call-saved-x15
Make X15 callee saved.
call-saved-x18
Make X18 callee saved.
call-saved-x8
Make X8 callee saved.
call-saved-x9
Make X9 callee saved.
Enable v8.5 Cache Clean to Point of Deep Persistence
Enable v8.3-A Extend of the CCSIDR number of sets
Enable v8.2 data Cache Clean to Point of Persistence
Enable v8.3-A Floating-point complex number support
Enable ARMv8 CRC-32 checksum instructions
Enable cryptographic instructions
custom-cheap-as-move
Use custom handling of cheap instructions
Cyclone
disable-latency-sched-heuristic
Disable latency scheduling heuristic
Enable v8.4-A Data Independent Timing instructions
Enable dot product support
exynos-cheap-as-move
Use Exynos specific handling of cheap instructions
exynosm1
Samsung Exynos-M1 processors
exynosm2
Samsung Exynos-M2 processors
exynosm3
Samsung Exynos-M3 processors
falkor
Qualcomm Falkor processors
Enable v8.4-A Flag Manipulation Instructions
force-32bit-jump-tables
Force jump table entries to be 32-bits wide except at MinSize
Enable FP16 FML instructions
fptoint
Enable FRInt[32|64][Z|X] instructions that round a floating-point number to an integer (in FP format) forcing it to fit into a 32- or 64-bit int
Full FP16
fuse-address
CPU fuses address generation and memory operations
fuse-crypto-eor
CPU fuses AES/PMULL and EOR operations
fuse-csel
CPU fuses conditional select operations
Enable v8.3-A JavaScript FP conversion enchancement
Enables ARM v8.1 Limited Ordering Regions extension
Enable ARMv8.1 Large System Extension (LSE) atomic instructions
lsl-fast
CPU has a fastpath logical shift of up to 3 places
Enable v8.4-A Memory system Partitioning and Monitoring extension
Enable Memory Tagging Extension
Enable Advanced SIMD instructions
Enable v8.4-A Nested Virtualization Enchancement
Enable v8.3-A Pointer Authentication enchancement
Enables ARM v8.1 Privileged Access-Never extension
Enable v8.2 PAN s1e1R and s1e1W Variants
Enable ARMv8 PMUv3 Performance Monitors extension
Enable execution and data prediction invalidation instructions
predictable-select-expensive
Prefer likely predicted branches over selects
rand
Enable Random Number generation instructions
Enable ARMv8 Reliability, Availability and Serviceability Extensions
Enable v8.4-A Reliability, Availability and Serviceability extension
Enable support for RCPC extension
Enable v8.4-A RCPC instructions with Immediate Offsets
Enable ARMv8.1 Rounding Double Multiply Add/Subtract instructions
reserve-x1
Reserve X1, making it unavailable as a GPR
reserve-x18
Reserve X18, making it unavailable as a GPR
reserve-x2
Reserve X2, making it unavailable as a GPR
reserve-x20
Reserve X20, making it unavailable as a GPR
reserve-x3
Reserve X3, making it unavailable as a GPR
reserve-x4
Reserve X4, making it unavailable as a GPR
reserve-x5
Reserve X5, making it unavailable as a GPR
reserve-x6
Reserve X6, making it unavailable as a GPR
reserve-x7
Reserve X7, making it unavailable as a GPR
saphira
Qualcomm Saphira processors
Enable v8.5 Speculation Barrier
Enable v8.4-A Secure Exception Level 2 extension
Enable SHA512 and SHA3 support
slow-misaligned-128store
Misaligned 128 bit stores are slow
slow-paired-128
Paired 128 bit loads and stores are slow
slow-strqro-store
STR of Q register with register offset is slow
Enable SM3 and SM4 support
Enable Statistical Profiling extension
specrestrict
Enable architectural speculation restriction
ssbs
Enable Speculative Store Bypass Safe bit
Enable Scalable Vector Extension (SVE) instructions
thunderx
Cavium ThunderX processors
thunderx2t99
Cavium ThunderX2 processors
thunderxt81
thunderxt83
thunderxt88
Enable v8.4-A TLB Range and Maintenance Instructions
Enable v8.4-A Trace extension
tsv110
HiSilicon TS-V110 processors
uaops
Enable v8.2 UAO PState
use-postra-scheduler
Schedule again after register allocation
use-reciprocal-square-root
Use the reciprocal square root approximation
Enables ARM v8.1 Virtual Host extension
Vortex
Has zero-cycle register moves
zcz-fp
Has zero-cycle zeroing instructions for FP registers
zcz-fp-workaround
The zero-cycle floating-point zeroing instruction has a bug
zcz-gp
Has zero-cycle zeroing instructions for generic registers
apple-latest
Select the apple-latest processor
Select the falkor processor
Select the saphira processor
Select the thunderx processor
Select the thunderx2t99 processor
Select the thunderxt81 processor
Select the thunderxt83 processor
Select the thunderxt88 processor
Select the tsv110 processor
Select the vortex processor
CyUnitB
CyUnitBR
CyUnitFloatDiv
CyUnitI
CyUnitID
CyUnitIM
CyUnitIS
CyUnitIntDiv
CyUnitLS
CyUnitV
CyUnitVC
CyUnitVD
CyUnitVM
A53UnitALU
A53UnitB
A53UnitDiv
A53UnitFPALU
A53UnitFPMDS
A53UnitLdSt
A53UnitMAC
M1PipeF0
M1PipeF1
M1UnitA
M1UnitALU
M1UnitB
M1UnitC
M1UnitD
M1UnitFADD
M1UnitFCVT
M1UnitFMAC
M1UnitFST
M1UnitFVAR
M1UnitL
M1UnitNAL0
M1UnitNAL1
M1UnitNALU
M1UnitNCRYPT
M1UnitNMISC
M1UnitS
M3PipeF0
M3PipeF1
M3PipeF2
M3UnitA
M3UnitALU
M3UnitB
M3UnitC
M3UnitD
M3UnitFADD
M3UnitFADD0
M3UnitFADD1
M3UnitFADD2
M3UnitFCVT
M3UnitFCVT0
M3UnitFCVT1
M3UnitFDIV
M3UnitFDIV0
M3UnitFDIV1
M3UnitFMAC
M3UnitFMAC0
M3UnitFMAC1
M3UnitFMAC2
M3UnitFSQR
M3UnitFST
M3UnitFST0
M3UnitFST1
M3UnitL
M3UnitNALU
M3UnitNALU0
M3UnitNALU1
M3UnitNALU2
M3UnitNCRY
M3UnitNCRY0
M3UnitNCRY1
M3UnitNMSC
M3UnitNMUL
M3UnitNSHF
M3UnitNSHF0
M3UnitNSHF1
M3UnitNSHF2
M3UnitNSHT
M3UnitNSHT0
M3UnitNSHT1
M3UnitNSHT2
M3UnitS
FalkorUnitB
FalkorUnitGTOV
FalkorUnitLD
FalkorUnitSD
FalkorUnitST
FalkorUnitVSD
FalkorUnitVTOG
FalkorUnitVX
FalkorUnitVXVY
FalkorUnitVY
FalkorUnitX
FalkorUnitXY
FalkorUnitXYZ
FalkorUnitXYZB
FalkorUnitY
FalkorUnitZ
FalkorUnitZB
KryoUnitLS
KryoUnitLSA
KryoUnitLSB
KryoUnitX
KryoUnitXA
KryoUnitXB
KryoUnitXY
KryoUnitY
KryoUnitYA
KryoUnitYB
THXT8XUnitALU
THXT8XUnitBr
THXT8XUnitDiv
THXT8XUnitFPALU
THXT8XUnitFPMDS
THXT8XUnitLdSt
THXT8XUnitMAC
THX2T99Any
THX2T99F1
THX2T99F01
THX2T99I1
THX2T99I2
THX2T99I012
THX2T99LS01
THX2T99P0
THX2T99P1
THX2T99P2
THX2T99P3
THX2T99P4
THX2T99P5
THX2T99SD
conditional branch requires assembler-local label. '
' is external.
Invalid relocation on conditional branch!
unknown AArch64 fixup kind!
PC relative absolute relocation!
unsupported relocation of local symbol '
'. Must have non-local symbol earlier in section.
PC relative pointer auth relocation!
too wide addend '
' in auth relocation
ADR/ADRP relocations must be GOT relative
arm64
ARM64 (little endian)
AArch64
aarch64
AArch64 (little endian)
aarch64_be
AArch64 (big endian)
S1E1R
S1E2R
S1E3R
S1E1W
S1E2W
S1E3W
S1E0R
S1E0W
S12E1R
S12E1W
S12E0R
S12E0W
S1E1RP
S1E1WP
ISHLD
ISHST
NSHLD
NSHST
OSHLD
OSHST
IVAC
CVAC
CVAU
CIVAC
CISW
CVAP
CVADP
IGVAC
IGSW
CGSW
CIGSW
CGVAC
CGVAP
CGVADP
CIGVAC
IGDVAC
IGDSW
CGDSW
CIGDSW
CGDVAC
CGDVAP
CGDVADP
CIGDVAC
GZVA
IALLUIS
IALLU
IVAU
CSYNC
RCTX
pldl1keep
pldl1strm
pldl2keep
pldl2strm
pldl3keep
pldl3strm
plil1keep
plil1strm
plil2keep
plil2strm
plil3keep
plil3strm
pstl1keep
pstl1strm
pstl2keep
pstl2strm
pstl3keep
pstl3strm
PLDL1KEEP
PLDL1STRM
PLDL2KEEP
PLDL2STRM
PLDL3KEEP
PLDL3STRM
PLIL1KEEP
PLIL1STRM
PLIL2KEEP
PLIL2STRM
PLIL3KEEP
PLIL3STRM
PSTL1KEEP
PSTL1STRM
PSTL2KEEP
PSTL2STRM
PSTL3KEEP
PSTL3STRM
MUL3
MUL4
POW2
VL128
VL16
VL256
VL32
VL64
SPSel
DAIFSet
DAIFClr
SSBS
DAIFCLR
DAIFSET
SPSEL
MDCCSR_EL0
MDRAR_EL1
OSLSR_EL1
DBGAUTHSTATUS_EL1
PMCEID0_EL0
PMCEID1_EL0
MIDR_EL1
CCSIDR_EL1
CCSIDR2_EL1
CLIDR_EL1
CTR_EL0
MPIDR_EL1
REVIDR_EL1
AIDR_EL1
DCZID_EL0
ID_PFR0_EL1
ID_PFR1_EL1
ID_PFR2_EL1
ID_DFR0_EL1
ID_AFR0_EL1
ID_MMFR0_EL1
ID_MMFR1_EL1
ID_MMFR2_EL1
ID_MMFR3_EL1
ID_ISAR0_EL1
ID_ISAR1_EL1
ID_ISAR2_EL1
ID_ISAR3_EL1
ID_ISAR4_EL1
ID_ISAR5_EL1
ID_ISAR6_EL1
ID_AA64PFR0_EL1
ID_AA64PFR1_EL1
ID_AA64DFR0_EL1
ID_AA64DFR1_EL1
ID_AA64AFR0_EL1
ID_AA64AFR1_EL1
ID_AA64ISAR0_EL1
ID_AA64ISAR1_EL1
ID_AA64MMFR0_EL1
ID_AA64MMFR1_EL1
ID_AA64MMFR2_EL1
MVFR0_EL1
MVFR1_EL1
MVFR2_EL1
RVBAR_EL1
RVBAR_EL2
RVBAR_EL3
ISR_EL1
CNTPCT_EL0
CNTVCT_EL0
ID_MMFR4_EL1
TRCSTATR
TRCIDR8
TRCIDR9
TRCIDR10
TRCIDR11
TRCIDR12
TRCIDR13
TRCIDR0
TRCIDR1
TRCIDR2
TRCIDR3
TRCIDR4
TRCIDR5
TRCIDR6
TRCIDR7
TRCOSLSR
TRCPDSR
TRCDEVAFF0
TRCDEVAFF1
TRCLSR
TRCAUTHSTATUS
TRCDEVARCH
TRCDEVID
TRCDEVTYPE
TRCPIDR4
TRCPIDR5
TRCPIDR6
TRCPIDR7
TRCPIDR0
TRCPIDR1
TRCPIDR2
TRCPIDR3
TRCCIDR0
TRCCIDR1
TRCCIDR2
TRCCIDR3
ICC_IAR1_EL1
ICC_IAR0_EL1
ICC_HPPIR1_EL1
ICC_HPPIR0_EL1
ICC_RPR_EL1
ICH_VTR_EL2
ICH_EISR_EL2
ICH_ELRSR_EL2
ID_AA64ZFR0_EL1
LORID_EL1
ERRIDR_EL1
ERXFR_EL1
RNDR
RNDRRS
SCXTNUM_EL0
SCXTNUM_EL1
SCXTNUM_EL2
SCXTNUM_EL3
SCXTNUM_EL12
OSLAR_EL1
PMSWINC_EL0
TRCOSLAR
TRCLAR
ICC_EOIR1_EL1
ICC_EOIR0_EL1
ICC_DIR_EL1
ICC_SGI1R_EL1
ICC_ASGI1R_EL1
ICC_SGI0R_EL1
OSDTRRX_EL1
OSDTRTX_EL1
TEECR32_EL1
MDCCINT_EL1
MDSCR_EL1
DBGDTR_EL0
OSECCR_EL1
DBGVCR32_EL2
DBGBVR0_EL1
DBGBVR1_EL1
DBGBVR2_EL1
DBGBVR3_EL1
DBGBVR4_EL1
DBGBVR5_EL1
DBGBVR6_EL1
DBGBVR7_EL1
DBGBVR8_EL1
DBGBVR9_EL1
DBGBVR10_EL1
DBGBVR11_EL1
DBGBVR12_EL1
DBGBVR13_EL1
DBGBVR14_EL1
DBGBVR15_EL1
DBGBCR0_EL1
DBGBCR1_EL1
DBGBCR2_EL1
DBGBCR3_EL1
DBGBCR4_EL1
DBGBCR5_EL1
DBGBCR6_EL1
DBGBCR7_EL1
DBGBCR8_EL1
DBGBCR9_EL1
DBGBCR10_EL1
DBGBCR11_EL1
DBGBCR12_EL1
DBGBCR13_EL1
DBGBCR14_EL1
DBGBCR15_EL1
DBGWVR0_EL1
DBGWVR1_EL1
DBGWVR2_EL1
DBGWVR3_EL1
DBGWVR4_EL1
DBGWVR5_EL1
DBGWVR6_EL1
DBGWVR7_EL1
DBGWVR8_EL1
DBGWVR9_EL1
DBGWVR10_EL1
DBGWVR11_EL1
DBGWVR12_EL1
DBGWVR13_EL1
DBGWVR14_EL1
DBGWVR15_EL1
DBGWCR0_EL1
DBGWCR1_EL1
DBGWCR2_EL1
DBGWCR3_EL1
DBGWCR4_EL1
DBGWCR5_EL1
DBGWCR6_EL1
DBGWCR7_EL1
DBGWCR8_EL1
DBGWCR9_EL1
DBGWCR10_EL1
DBGWCR11_EL1
DBGWCR12_EL1
DBGWCR13_EL1
DBGWCR14_EL1
DBGWCR15_EL1
TEEHBR32_EL1
OSDLR_EL1
DBGPRCR_EL1
DBGCLAIMSET_EL1
DBGCLAIMCLR_EL1
CSSELR_EL1
VPIDR_EL2
VMPIDR_EL2
CPACR_EL1
SCTLR_EL1
SCTLR_EL2
SCTLR_EL3
ACTLR_EL1
ACTLR_EL2
ACTLR_EL3
HCR_EL2
SCR_EL3
MDCR_EL2
SDER32_EL3
CPTR_EL2
CPTR_EL3
HSTR_EL2
HACR_EL2
MDCR_EL3
TTBR0_EL1
TTBR0_EL2
TTBR0_EL3
TTBR1_EL1
TCR_EL1
TCR_EL2
TCR_EL3
VTTBR_EL2
VTCR_EL2
DACR32_EL2
SPSR_EL1
SPSR_EL2
SPSR_EL3
ELR_EL1
ELR_EL2
ELR_EL3
SP_EL0
SP_EL1
SP_EL2
NZCV
DAIF
CurrentEL
SPSR_irq
SPSR_abt
SPSR_und
SPSR_fiq
FPCR
FPSR
DSPSR_EL0
DLR_EL0
IFSR32_EL2
AFSR0_EL1
AFSR0_EL2
AFSR0_EL3
AFSR1_EL1
AFSR1_EL2
AFSR1_EL3
ESR_EL1
ESR_EL2
ESR_EL3
FPEXC32_EL2
FAR_EL1
FAR_EL2
FAR_EL3
HPFAR_EL2
PAR_EL1
PMCR_EL0
PMCNTENSET_EL0
PMCNTENCLR_EL0
PMOVSCLR_EL0
PMSELR_EL0
PMCCNTR_EL0
PMXEVTYPER_EL0
PMXEVCNTR_EL0
PMUSERENR_EL0
PMINTENSET_EL1
PMINTENCLR_EL1
PMOVSSET_EL0
MAIR_EL1
MAIR_EL2
MAIR_EL3
AMAIR_EL1
AMAIR_EL2
AMAIR_EL3
VBAR_EL1
VBAR_EL2
VBAR_EL3
RMR_EL1
RMR_EL2
RMR_EL3
CONTEXTIDR_EL1
TPIDR_EL0
TPIDR_EL2
TPIDR_EL3
TPIDRRO_EL0
TPIDR_EL1
CNTFRQ_EL0
CNTVOFF_EL2
CNTKCTL_EL1
CNTHCTL_EL2
CNTP_TVAL_EL0
CNTHP_TVAL_EL2
CNTPS_TVAL_EL1
CNTP_CTL_EL0
CNTHP_CTL_EL2
CNTPS_CTL_EL1
CNTP_CVAL_EL0
CNTHP_CVAL_EL2
CNTPS_CVAL_EL1
CNTV_TVAL_EL0
CNTV_CTL_EL0
CNTV_CVAL_EL0
PMEVCNTR0_EL0
PMEVCNTR1_EL0
PMEVCNTR2_EL0
PMEVCNTR3_EL0
PMEVCNTR4_EL0
PMEVCNTR5_EL0
PMEVCNTR6_EL0
PMEVCNTR7_EL0
PMEVCNTR8_EL0
PMEVCNTR9_EL0
PMEVCNTR10_EL0
PMEVCNTR11_EL0
PMEVCNTR12_EL0
PMEVCNTR13_EL0
PMEVCNTR14_EL0
PMEVCNTR15_EL0
PMEVCNTR16_EL0
PMEVCNTR17_EL0
PMEVCNTR18_EL0
PMEVCNTR19_EL0
PMEVCNTR20_EL0
PMEVCNTR21_EL0
PMEVCNTR22_EL0
PMEVCNTR23_EL0
PMEVCNTR24_EL0
PMEVCNTR25_EL0
PMEVCNTR26_EL0
PMEVCNTR27_EL0
PMEVCNTR28_EL0
PMEVCNTR29_EL0
PMEVCNTR30_EL0
PMCCFILTR_EL0
PMEVTYPER0_EL0
PMEVTYPER1_EL0
PMEVTYPER2_EL0
PMEVTYPER3_EL0
PMEVTYPER4_EL0
PMEVTYPER5_EL0
PMEVTYPER6_EL0
PMEVTYPER7_EL0
PMEVTYPER8_EL0
PMEVTYPER9_EL0
PMEVTYPER10_EL0
PMEVTYPER11_EL0
PMEVTYPER12_EL0
PMEVTYPER13_EL0
PMEVTYPER14_EL0
PMEVTYPER15_EL0
PMEVTYPER16_EL0
PMEVTYPER17_EL0
PMEVTYPER18_EL0
PMEVTYPER19_EL0
PMEVTYPER20_EL0
PMEVTYPER21_EL0
PMEVTYPER22_EL0
PMEVTYPER23_EL0
PMEVTYPER24_EL0
PMEVTYPER25_EL0
PMEVTYPER26_EL0
PMEVTYPER27_EL0
PMEVTYPER28_EL0
PMEVTYPER29_EL0
PMEVTYPER30_EL0
TRCPRGCTLR
TRCPROCSELR
TRCCONFIGR
TRCAUXCTLR
TRCEVENTCTL0R
TRCEVENTCTL1R
TRCSTALLCTLR
TRCTSCTLR
TRCSYNCPR
TRCCCCTLR
TRCBBCTLR
TRCTRACEIDR
TRCQCTLR
TRCVICTLR
TRCVIIECTLR
TRCVISSCTLR
TRCVIPCSSCTLR
TRCVDCTLR
TRCVDSACCTLR
TRCVDARCCTLR
TRCSEQEVR0
TRCSEQEVR1
TRCSEQEVR2
TRCSEQRSTEVR
TRCSEQSTR
TRCEXTINSELR
TRCCNTRLDVR0
TRCCNTRLDVR1
TRCCNTRLDVR2
TRCCNTRLDVR3
TRCCNTCTLR0
TRCCNTCTLR1
TRCCNTCTLR2
TRCCNTCTLR3
TRCCNTVR0
TRCCNTVR1
TRCCNTVR2
TRCCNTVR3
TRCIMSPEC0
TRCIMSPEC1
TRCIMSPEC2
TRCIMSPEC3
TRCIMSPEC4
TRCIMSPEC5
TRCIMSPEC6
TRCIMSPEC7
TRCRSCTLR2
TRCRSCTLR3
TRCRSCTLR4
TRCRSCTLR5
TRCRSCTLR6
TRCRSCTLR7
TRCRSCTLR8
TRCRSCTLR9
TRCRSCTLR10
TRCRSCTLR11
TRCRSCTLR12
TRCRSCTLR13
TRCRSCTLR14
TRCRSCTLR15
TRCRSCTLR16
TRCRSCTLR17
TRCRSCTLR18
TRCRSCTLR19
TRCRSCTLR20
TRCRSCTLR21
TRCRSCTLR22
TRCRSCTLR23
TRCRSCTLR24
TRCRSCTLR25
TRCRSCTLR26
TRCRSCTLR27
TRCRSCTLR28
TRCRSCTLR29
TRCRSCTLR30
TRCRSCTLR31
TRCSSCCR0
TRCSSCCR1
TRCSSCCR2
TRCSSCCR3
TRCSSCCR4
TRCSSCCR5
TRCSSCCR6
TRCSSCCR7
TRCSSCSR0
TRCSSCSR1
TRCSSCSR2
TRCSSCSR3
TRCSSCSR4
TRCSSCSR5
TRCSSCSR6
TRCSSCSR7
TRCSSPCICR0
TRCSSPCICR1
TRCSSPCICR2
TRCSSPCICR3
TRCSSPCICR4
TRCSSPCICR5
TRCSSPCICR6
TRCSSPCICR7
TRCPDCR
TRCACVR0
TRCACVR1
TRCACVR2
TRCACVR3
TRCACVR4
TRCACVR5
TRCACVR6
TRCACVR7
TRCACVR8
TRCACVR9
TRCACVR10
TRCACVR11
TRCACVR12
TRCACVR13
TRCACVR14
TRCACVR15
TRCACATR0
TRCACATR1
TRCACATR2
TRCACATR3
TRCACATR4
TRCACATR5
TRCACATR6
TRCACATR7
TRCACATR8
TRCACATR9
TRCACATR10
TRCACATR11
TRCACATR12
TRCACATR13
TRCACATR14
TRCACATR15
TRCDVCVR0
TRCDVCVR1
TRCDVCVR2
TRCDVCVR3
TRCDVCVR4
TRCDVCVR5
TRCDVCVR6
TRCDVCVR7
TRCDVCMR0
TRCDVCMR1
TRCDVCMR2
TRCDVCMR3
TRCDVCMR4
TRCDVCMR5
TRCDVCMR6
TRCDVCMR7
TRCCIDCVR0
TRCCIDCVR1
TRCCIDCVR2
TRCCIDCVR3
TRCCIDCVR4
TRCCIDCVR5
TRCCIDCVR6
TRCCIDCVR7
TRCVMIDCVR0
TRCVMIDCVR1
TRCVMIDCVR2
TRCVMIDCVR3
TRCVMIDCVR4
TRCVMIDCVR5
TRCVMIDCVR6
TRCVMIDCVR7
TRCCIDCCTLR0
TRCCIDCCTLR1
TRCVMIDCCTLR0
TRCVMIDCCTLR1
TRCITCTRL
TRCCLAIMSET
TRCCLAIMCLR
ICC_BPR1_EL1
ICC_BPR0_EL1
ICC_PMR_EL1
ICC_CTLR_EL1
ICC_CTLR_EL3
ICC_SRE_EL1
ICC_SRE_EL2
ICC_SRE_EL3
ICC_IGRPEN0_EL1
ICC_IGRPEN1_EL1
ICC_IGRPEN1_EL3
ICC_SEIEN_EL1
ICC_AP0R0_EL1
ICC_AP0R1_EL1
ICC_AP0R2_EL1
ICC_AP0R3_EL1
ICC_AP1R0_EL1
ICC_AP1R1_EL1
ICC_AP1R2_EL1
ICC_AP1R3_EL1
ICH_AP0R0_EL2
ICH_AP0R1_EL2
ICH_AP0R2_EL2
ICH_AP0R3_EL2
ICH_AP1R0_EL2
ICH_AP1R1_EL2
ICH_AP1R2_EL2
ICH_AP1R3_EL2
ICH_HCR_EL2
ICH_MISR_EL2
ICH_VMCR_EL2
ICH_VSEIR_EL2
ICH_LR0_EL2
ICH_LR1_EL2
ICH_LR2_EL2
ICH_LR3_EL2
ICH_LR4_EL2
ICH_LR5_EL2
ICH_LR6_EL2
ICH_LR7_EL2
ICH_LR8_EL2
ICH_LR9_EL2
ICH_LR10_EL2
ICH_LR11_EL2
ICH_LR12_EL2
ICH_LR13_EL2
ICH_LR14_EL2
ICH_LR15_EL2
LORSA_EL1
LOREA_EL1
LORN_EL1
LORC_EL1
TTBR1_EL2
CONTEXTIDR_EL2
CNTHV_TVAL_EL2
CNTHV_CVAL_EL2
CNTHV_CTL_EL2
SCTLR_EL12
CPACR_EL12
TTBR0_EL12
TTBR1_EL12
TCR_EL12
AFSR0_EL12
AFSR1_EL12
ESR_EL12
FAR_EL12
MAIR_EL12
AMAIR_EL12
VBAR_EL12
CONTEXTIDR_EL12
CNTKCTL_EL12
CNTP_TVAL_EL02
CNTP_CTL_EL02
CNTP_CVAL_EL02
CNTV_TVAL_EL02
CNTV_CTL_EL02
CNTV_CVAL_EL02
SPSR_EL12
ELR_EL12
PMBLIMITR_EL1
PMBPTR_EL1
PMBSR_EL1
PMBIDR_EL1
PMSCR_EL2
PMSCR_EL12
PMSCR_EL1
PMSICR_EL1
PMSIRR_EL1
PMSFCR_EL1
PMSEVFR_EL1
PMSLATFR_EL1
PMSIDR_EL1
ERRSELR_EL1
ERXCTLR_EL1
ERXSTATUS_EL1
ERXADDR_EL1
ERXMISC0_EL1
ERXMISC1_EL1
DISR_EL1
VDISR_EL2
VSESR_EL2
APIAKeyLo_EL1
APIAKeyHi_EL1
APIBKeyLo_EL1
APIBKeyHi_EL1
APDAKeyLo_EL1
APDAKeyHi_EL1
APDBKeyLo_EL1
APDBKeyHi_EL1
APGAKeyLo_EL1
APGAKeyHi_EL1
VSTCR_EL2
VSTTBR_EL2
CNTHVS_TVAL_EL2
CNTHVS_CVAL_EL2
CNTHVS_CTL_EL2
CNTHPS_TVAL_EL2
CNTHPS_CVAL_EL2
CNTHPS_CTL_EL2
SDER32_EL2
ERXPFGCTL_EL1
ERXPFGCDN_EL1
ERXTS_EL1
ERXMISC2_EL1
ERXMISC3_EL1
ERXPFGF_EL1
MPAM0_EL1
MPAM1_EL1
MPAM2_EL2
MPAM3_EL3
MPAM1_EL12
MPAMHCR_EL2
MPAMVPMV_EL2
MPAMVPM0_EL2
MPAMVPM1_EL2
MPAMVPM2_EL2
MPAMVPM3_EL2
MPAMVPM4_EL2
MPAMVPM5_EL2
MPAMVPM6_EL2
MPAMVPM7_EL2
MPAMIDR_EL1
AMCR_EL0
AMCFGR_EL0
AMCGCR_EL0
AMUSERENR_EL0
AMCNTENCLR0_EL0
AMCNTENSET0_EL0
AMEVCNTR00_EL0
AMEVCNTR01_EL0
AMEVCNTR02_EL0
AMEVCNTR03_EL0
AMEVTYPER00_EL0
AMEVTYPER01_EL0
AMEVTYPER02_EL0
AMEVTYPER03_EL0
AMCNTENCLR1_EL0
AMCNTENSET1_EL0
AMEVCNTR10_EL0
AMEVCNTR11_EL0
AMEVCNTR12_EL0
AMEVCNTR13_EL0
AMEVCNTR14_EL0
AMEVCNTR15_EL0
AMEVCNTR16_EL0
AMEVCNTR17_EL0
AMEVCNTR18_EL0
AMEVCNTR19_EL0
AMEVCNTR110_EL0
AMEVCNTR111_EL0
AMEVCNTR112_EL0
AMEVCNTR113_EL0
AMEVCNTR114_EL0
AMEVCNTR115_EL0
AMEVTYPER10_EL0
AMEVTYPER11_EL0
AMEVTYPER12_EL0
AMEVTYPER13_EL0
AMEVTYPER14_EL0
AMEVTYPER15_EL0
AMEVTYPER16_EL0
AMEVTYPER17_EL0
AMEVTYPER18_EL0
AMEVTYPER19_EL0
AMEVTYPER110_EL0
AMEVTYPER111_EL0
AMEVTYPER112_EL0
AMEVTYPER113_EL0
AMEVTYPER114_EL0
AMEVTYPER115_EL0
TRFCR_EL1
TRFCR_EL2
TRFCR_EL12
VNCR_EL2
ZCR_EL1
ZCR_EL2
ZCR_EL3
ZCR_EL12
GCR_EL1
RGSR_EL1
TFSR_EL1
TFSR_EL2
TFSR_EL3
TFSR_EL12
TFSRE0_EL1
CPM_IOACC_CTL_EL3
APDAKEYHI_EL1
APDAKEYLO_EL1
APDBKEYHI_EL1
APDBKEYLO_EL1
APGAKEYHI_EL1
APGAKEYLO_EL1
APIAKEYHI_EL1
APIAKEYLO_EL1
APIBKEYHI_EL1
APIBKEYLO_EL1
CURRENTEL
^S([0-3])_([0-7])_C([0-9]|1[0-5])_C([0-9]|1[0-5])_([0-7])$
IPAS2E1IS
IPAS2LE1IS
VMALLE1IS
ALLE2IS
ALLE3IS
VAE1IS
VAE2IS
VAE3IS
ASIDE1IS
VAAE1IS
ALLE1IS
VALE1IS
VALE2IS
VALE3IS
VMALLS12E1IS
VAALE1IS
IPAS2E1
IPAS2LE1
VMALLE1
ALLE2
ALLE3
VAE1
VAE2
VAE3
ASIDE1
VAAE1
ALLE1
VALE1
VALE2
VALE3
VMALLS12E1
VAALE1
VMALLE1OS
VAE1OS
ASIDE1OS
VAAE1OS
VALE1OS
VAALE1OS
IPAS2E1OS
IPAS2LE1OS
VAE2OS
VALE2OS
VMALLS12E1OS
VAE3OS
VALE3OS
ALLE2OS
ALLE1OS
ALLE3OS
RVAE1
RVAAE1
RVALE1
RVAALE1
RVAE1IS
RVAAE1IS
RVALE1IS
RVAALE1IS
RVAE1OS
RVAAE1OS
RVALE1OS
RVAALE1OS
RIPAS2E1IS
RIPAS2LE1IS
RIPAS2E1
RIPAS2LE1
RIPAS2E1OS
RIPAS2LE1OS
RVAE2
RVALE2
RVAE2IS
RVALE2IS
RVAE2OS
RVALE2OS
RVAE3
RVALE3
RVAE3IS
RVALE3IS
RVAE3OS
RVALE3OS
pow2
vl16
vl32
vl64
vl128
vl256
mul4
mul3
disable-basicaa
MustAlias
PartialAlias
External Alias Analysis
external-aa
Function Alias Analysis Results
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-ref
print-mod
print-modref
print-must
print-mustref
print-mustmod
print-mustmodref
evaluate-aa-metadata
Function: 
 pointers, 
 call sites
NoModRef
Just Mod
Just Ref
Both ModRef
Must
Just Mod (MustAlias)
Just Ref (MustAlias)
Both ModRef (MustAlias)
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
 must responses 
 must mod responses 
 must ref responses 
 must mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
 <-> 
:  Ptr: 
Exhaustive Alias Analysis Precision Evaluator
aa-eval
alias-set-saturation-threshold
The maximum number of pointers may-alias sets may contain before degradation
verify-assumption-cache
Enable verification of assumption cache
Cached assumptions for function: 
Assumption in scanned function not in cache
Assumption Cache Tracker
assumption-cache-tracker
basicaa-recphi
basicaa-force-at-least-64b
basicaa-double-calc-bits
basicaa
Basic Alias Analysis (stateless AA impl)
view-block-freq-propagation-dags
Pop up a window to show a dag displaying how block frequencies propagation through the CFG.
do not display graphs.
fraction
display a graph using the fractional block frequency representation.
display a graph using the raw integer fractional block frequency representation.
display a graph using the real profile count if available.
view-bfi-func-name
The option to specify the name of the function whose CFG will be displayed.
view-hot-freq-percent
An integer in percent used to specify the hot blocks/edges to be displayed in red: a block or edge whose frequency is no less than the max frequency of the function multiplied by this percent.
pgo-view-counts
A boolean option to show CFG dag or text with block profile counts and branch probabilities right after PGO profile annotation step. The profile counts are computed using branch probabilities from the runtime profile data and block frequency propagation algorithm. To view the raw counts from the profile, use option -pgo-view-raw-counts instead. To limit graph display to only one function, use filtering option -view-bfi-func-name.
do not show.
graph
show a graph.
show in text.
print-bfi
Print the block frequency info.
print-bfi-func-name
The option to specify the name of the function whose block frequency info is printed.
BlockFrequencyDAGs
Printing analysis results of BFI for function 
block-frequency-info: 
: float = 
, int = 
, count = 
, irr_loop_header_weight = 
Block Frequency Analysis
block-freq
file exists, overwriting
error writing into file
error opening file '
' for writing!
 done. 
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
color="red"
Unknown
 -> Node
label="%.1f%%"
,color="red"
print-bpi
Print the branch probability info.
print-bpi-func-name
The option to specify the name of the function whose branch probability info is printed.
---- Branch Probabilities ----
edge 
 probability is 
 [HOT edge]
Printing analysis results of BPI for function 
Branch Probability Analysis
branch-prob
cfg-func-name
The name of a function (or its substring) whose CFG is viewed/printed.
cfg-dot-filename-prefix
The prefix used for the CFG dot file names.
.dot
Writing '
'...
  error opening file for writing!
CFG for '
' function
\l...
|<s64>truncated...
label="W:
Inclusion-Based CFL Alias Analysis
cfl-anders-aa
Unification-Based CFL Alias Analysis
cfl-steens-aa
Clearing all analysis results for: 
Invalidating all non-preserved analyses for: 
Invalidating analysis: 
Running analysis: 
Starting CGSCC pass manager run.
Running pass: 
Finished CGSCC pass manager run.
..., 
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
size-info
Print CallGraph IR
Printing <null> Function
DummyCGSCCPass
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
cost-kind
Target cost kind
throughput
Reciprocal throughput
latency
Instruction latency
code-size
Code size
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
DemandedBits: 0x
 for 
Demanded bits analysis
demanded-bits
da-delinearize
Try to delinearize array references.
confused
consistent 
flow
anti
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
 for '
  DomFrontier for BB 
 <<exit node>>
 is:
<<exit node>>
DominanceFrontier for function: 
Dominance Frontier Construction
domfrontier
__gnat_eh_personality
__gxx_personality_v0
__gxx_personality_sj0
__gcc_personality_v0
__gcc_personality_sj0
__objc_personality_v0
_except_handler3
__C_specific_handler
__CxxFrameHandler3
ProcessCLRException
rust_eh_personality
__gxx_wasm_personality_v0
enable-unsafe-globalsmodref-alias-results
Globals Alias Analysis
globals-aa
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
iv-users
icp-remaining-percent-threshold
The percentage threshold against remaining unpromoted indirect call count for the promotion
icp-total-percent-threshold
The percentage threshold against total count for the promotion
icp-max-prom
Max number of promotions for a single indirect call callsite
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inline-cold-callsite-threshold
Threshold for inlining cold callsites
inlinecold-threshold
Threshold for inlining functions with cold attribute
hot-callsite-threshold
Threshold for hot callsites 
locally-hot-callsite-threshold
Threshold for locally hot callsites 
cold-callsite-rel-freq
Maxmimum block frequency, expressed as a percentage of caller's entry frequency, for a callsite to be cold in the absence of profile information.
hot-callsite-rel-freq
Minimum block frequency, expressed as a multiple of caller's entry frequency, for a callsite to be hot in the absence of profile information.
inline-cost-full
Compute the full inline cost of a call site even when the cost exceeds the threshold.
indirect call
byval arguments without alloca address space
always inline attribute
inapplicable always inline attribute
conflicting attributes
optnone attribute
nullptr definitions incompatible
interposable
noinline function attribute
noinline call site attribute
empty function
high cost
blockaddress
inline-cost
cost > threshold
recursive
exposes returns twice
dynamic alloca
indirect branch
uninlinable intrinsic
varargs
recursive and allocates too much stack space
NeverInline
Callee
 has uninlinable pattern (
InlineResult
) and cost is not fully computed
 is 
. Cost is not fully computed
Counts the various types of Instructions
instcount
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Lazy Branch Probability Analysis
lazy-branch-prob
Lazy Block Frequency Analysis
lazy-block-freq
Printing the call graph for module: 
  Edges in function: 
ref 
  RefSCC with 
 call SCCs:
    SCC with 
 functions:
 -> "
 [style=dashed,label="ref"]
Lazy Value Information Analysis
lazy-value-info
; LatticeVal for: '
' is: 
' in BB: '
use-gpu-divergence-analysis
turn the LegacyDivergenceAnalysis into a wrapper for GPUDivergenceAnalysis
DIVERGENT: 
           
           
DIVERGENT:     
               
Legacy Divergence Analysis
divergence
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
available-load-scan-limit
Use this to specify the default maximum number of instructions to scan backward from a given instruction, when searching for available loaded value
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-interleave
Sets the vectorization interleave count. Zero is autoselect.
runtime-memory-check-threshold
When performing memory disambiguation checks at runtime do not generate more than this number of comparisons (default = 8).
memory-check-merge-threshold
Maximum number of comparisons done when trying to merge runtime memory checks. (default = 100)
max-dependences
Maximum number of dependences collected by loop-access analysis (default = 100)
enable-mem-access-versioning
Enable symbolic stride memory access versioning
store-to-load-forwarding-conflict-detection
Enable conflict detection in loop-access analysis
Check 
Comparing group (
Against group (
Run-time memory checks:
Grouped accesses:
Group 
(Low: 
 High: 
Member: 
NoDep
Forward
ForwardButPreventsForwarding
Backward
BackwardVectorizable
BackwardVectorizableButPreventsForwarding
 -> 
NotInnerMostLoop
loop is not the innermost loop
CFGNotUnderstood
loop control flow is not understood by analyzer
CantComputeNumberOfIterations
could not determine number of loop iterations
NonSimpleLoad
read with atomic ordering or volatile read
CantVectorizeInstruction
instruction cannot be vectorized
NonSimpleStore
write with atomic ordering or volatile write
CantIdentifyArrayBounds
cannot identify array bounds
CantCheckMemDepsAtRunTime
cannot check memory dependencies at runtime
UnsafeMemDep
unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop
loop-accesses
induction
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
Memory dependences are safe
 with a maximum dependence distance of 
 bytes
 with run-time checks
Report: 
Dependences:
Too many dependences, not recorded
Non vectorizable stores to invariant address were 
not 
found in loop.
SCEV assumptions:
Expressions re-written:
cl::location(x) specified more than once!
enable-mssa-loop-dependency
Enable MemorySSA dependency for loop pass manager
<possibly invalidated loop>
<unnamed loop>
Parallel 
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
llvm.loop.unroll.
 (loop: 
; Preheader:
; Loop:
Printing <null> block
; Exit blocks
Natural Loop Information
loops
<deleted loop>
<deleted>
Loop Pass Manager
Print Loop IR
LCSSA Verifier
lcssa-verification
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Memory Dereferenciblity of pointers in function
print-memderefs
The following are dereferenceable:
(aligned)
(unaligned)
.offs
.idx
memdep-block-scan-limit
The number of instructions to scan in a block in memory dependency analysis (default = 100)
memdep-block-number-limit
The number of blocks to scan during memory dependency analysis (default = 1000)
memdep
Memory Dependence Analysis
memssa-check-limit
The maximum number of stores/phis MemorySSAwill consider trying to walk past (default = 100)
verify-memoryssa
Enable verification of MemorySSA.
 = MemoryDef(
 = MemoryPhi(
MemoryUse(
MemorySSA for function: 
Memory SSA
memoryssa
Decodes module-level debug info
module-debuginfo
Compile unit: 
unknown-language(
Subprogram: 
Global variable: 
Type:
unknown-encoding(
unknown-tag(
 (identifier: '
 from 
force-summary-edges-cold
Force all edges in the function summary to cold
None.
all-non-critical
All non-critical edges.
All edges.
Module Summary Analysis
module-summary-analysis
Instructions which execute on loop entry
print-mustexecute
 ; (mustexec in 
 loops: 
 ; (mustexec in: 
ObjC-ARC-Based Alias Analysis
objc-arc-aa
enable-objc-arc-opts
enable/disable all ARC Optimizations
opt-remark-emitter
.phi.trans.insert
PHI 
 has values:
  UNKNOWN
  NONE
PHI Values for function: 
Phi Values Analysis
phi-values
PostDominatorTree for function: 
Post-Dominator Tree Construction
postdomtree
profile-summary-cutoff-hot
A count is hot if it exceeds the minimum count to reach this percentile of total counts.
profile-summary-cutoff-cold
A count is cold if it is below the minimum count to reach this percentile of total counts.
profile-summary-huge-working-set-size-threshold
The code working set size is considered huge if the number of blocks required to reach the -profile-summary-cutoff-hot percentile exceeds this count.
profile-summary-hot-count
A fixed hot count that overrides the count derived from profile-summary-cutoff-hot
profile-summary-cold-count
A fixed cold count that overrides the count derived from profile-summary-cutoff-cold
Functions in 
 with hot/cold annotations: 
 :hot entry 
 :cold entry 
Desired percentile exceeds the maximum cutoff
Profile summary info
profile-summary-info
Broken region found: enumerated BB not in region!
Broken region found: edges leaving the region must go to the exit node!
Broken region found: edges entering the region must go to the entry node!
<Function Return>
 => 
BB map does not match region nesting
Region tree:
End region tree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Region Tree for function: 
Detect single entry single exit regions
regions
Region Pass Manager
Print Region IR
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
verify-scev-maps
Verify no dangling value in ScalarEvolution's ExprValueMap (slow)
scev-verify-ir
Verify IR correctness when making sensitive SCEV queries (slow)
scev-mulops-inline-threshold
Threshold for inlining multiplication operands into a SCEV
scev-addops-inline-threshold
Threshold for inlining addition operands into a SCEV
scalar-evolution-max-scev-compare-depth
Maximum depth of recursive SCEV complexity comparisons
scalar-evolution-max-scev-operations-implication-depth
Maximum depth of recursive SCEV operations implication analysis
scalar-evolution-max-value-compare-depth
Maximum depth of recursive value complexity comparisons
scalar-evolution-max-arith-depth
Maximum depth of recursive arithmetics
scalar-evolution-max-constant-evolving-depth
Maximum depth of recursive constant evolving
scalar-evolution-max-ext-depth
Maximum depth of recursive SExt/ZExt
scalar-evolution-max-add-rec-size
Max coefficients in AddRec during evolving
(trunc 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
 U: 
 S: 
Exits: 
<<Unknown>>
LoopDispositions: { 
Determining loop execution counts for: 
Trip Count Changed!
Old: 
New: 
Delta: 
Equal predicate: 
 == 
 Added Flags: 
<nusw>
<nssw>
[PSE]
--> 
Allocation failed
scalar-evolution
Variant
Invariant
Computable
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
, actual taken count either this or zero.
Unpredictable max backedge-taken count. 
Predicated backedge-taken count is 
 Predicates:
Unpredictable predicated backedge-taken count. 
Trip multiple is 
Scalar Evolution Analysis
ScalarEvolution-based Alias Analysis
scev-aa
uglygep
scevgep
.iv.next
indvar
indvar.next
smax
umax
ident.check
mul.result
mul.overflow
stack-safety-max-iterations
'Stack Safety Local Analysis' for function '
'Stack Safety Analysis' for module '
 dso_preemptable
 interposable
    args uses:
    allocas uses:
[]: 
(arg
<N/A>
vector-library
Vector functions library
No vector functions library
Accelerate framework
Intel SVML library
??2@YAPAXI@Z
??2@YAPAXIABUnothrow_t@std@@@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??3@YAXPAX@Z
??3@YAXPAXABUnothrow_t@std@@@Z
??3@YAXPAXI@Z
??3@YAXPEAX@Z
??3@YAXPEAXAEBUnothrow_t@std@@@Z
??3@YAXPEAX_K@Z
??_U@YAPAXI@Z
??_U@YAPAXIABUnothrow_t@std@@@Z
??_U@YAPEAX_K@Z
??_U@YAPEAX_KAEBUnothrow_t@std@@@Z
??_V@YAXPAX@Z
??_V@YAXPAXABUnothrow_t@std@@@Z
??_V@YAXPAXI@Z
??_V@YAXPEAX@Z
??_V@YAXPEAXAEBUnothrow_t@std@@@Z
??_V@YAXPEAX_K@Z
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdaPvSt11align_val_t
_ZdaPvSt11align_val_tRKSt9nothrow_t
_ZdaPvj
_ZdaPvm
_ZdlPv
_ZdlPvRKSt9nothrow_t
_ZdlPvSt11align_val_t
_ZdlPvSt11align_val_tRKSt9nothrow_t
_ZdlPvj
_ZdlPvm
_Znaj
_ZnajRKSt9nothrow_t
_ZnajSt11align_val_t
_ZnajSt11align_val_tRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_ZnamSt11align_val_t
_ZnamSt11align_val_tRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_ZnwjSt11align_val_t
_ZnwjSt11align_val_tRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
_ZnwmSt11align_val_t
_ZnwmSt11align_val_tRKSt9nothrow_t
__acos_finite
__acosf_finite
__acosh_finite
__acoshf_finite
__acoshl_finite
__acosl_finite
__asin_finite
__asinf_finite
__asinl_finite
__atan2_finite
__atan2f_finite
__atan2l_finite
__atanh_finite
__atanhf_finite
__atanhl_finite
__cosh_finite
__coshf_finite
__coshl_finite
__exp10_finite
__exp10f_finite
__exp10l_finite
__exp2_finite
__exp2f_finite
__exp2l_finite
__exp_finite
__expf_finite
__expl_finite
__isoc99_scanf
__isoc99_sscanf
__log10_finite
__log10f_finite
__log10l_finite
__log2_finite
__log2f_finite
__log2l_finite
__log_finite
__logf_finite
__logl_finite
__memcpy_chk
__memmove_chk
__memset_chk
__nvvm_reflect
__pow_finite
__powf_finite
__powl_finite
__sincospi_stret
__sincospif_stret
__sinh_finite
__sinhf_finite
__sinhl_finite
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__stpcpy_chk
__stpncpy_chk
__strcpy_chk
__strdup
__strncpy_chk
__strndup
__strtok_r
access
atof
atoi
atol
atoll
bcmp
bcopy
chmod
chown
clearerr
closedir
ctermid
execl
execle
execlp
execv
execvP
execve
execvp
execvpe
exp10
exp10f
exp10l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetc_unlocked
fgetpos
fgets
fgets_unlocked
fileno
fiprintf
flockfile
flsl
flsll
fopen64
fork
fputc
fputc_unlocked
fputs
fputs_unlocked
fread_unlocked
free
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite_unlocked
getc
getc_unlocked
getchar
getchar_unlocked
getenv
getitimer
getlogin_r
getpwnam
gettimeofday
htonl
htons
iprintf
isascii
lchown
lstat
lstat64
memalign
mempcpy
memrchr
memset_pattern16
mkdir
mktime
ntohl
ntohs
open64
opendir
pclose
perror
popen
posix_memalign
pread
putc
putc_unlocked
putchar
putchar_unlocked
puts
pwrite
qsort
readlink
reallocf
realpath
rename
rewind
rmdir
setbuf
setitimer
setvbuf
siprintf
stat
stat64
statvfs
statvfs64
strcoll
strnlen
strtok_r
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vceilf
vfabsf
llvm.fabs.f32
vfloorf
vsqrtf
llvm.sqrt.f32
vexpf
llvm.exp.f32
vexpm1f
vlogf
llvm.log.f32
vlog1pf
vlog10f
llvm.log10.f32
vlogbf
vsinf
llvm.sin.f32
vcosf
llvm.cos.f32
vtanf
vasinf
vacosf
vatanf
vsinhf
vcoshf
vtanhf
vasinhf
vacoshf
vatanhf
__svml_sin2
__svml_sin4
__svml_sin8
__svml_sinf4
__svml_sinf8
__svml_sinf16
llvm.sin.f64
__svml_cos2
__svml_cos4
__svml_cos8
__svml_cosf4
__svml_cosf8
__svml_cosf16
llvm.cos.f64
__svml_pow2
__svml_pow4
__svml_pow8
__svml_powf4
__svml_powf8
__svml_powf16
llvm.pow.f64
llvm.pow.f32
__svml_exp2
__svml_exp4
__svml_exp8
__svml_expf4
__svml_expf8
__svml_expf16
llvm.exp.f64
__svml_log2
__svml_log4
__svml_log8
__svml_logf4
__svml_logf8
__svml_logf16
llvm.log.f64
fwrite$UNIX2003
fputs$UNIX2003
_copysign
Target Library Information
targetlibinfo
costmodel-reduxcost
Recognize reduction patterns.
Target Transform Information
enable-tbaa
Cycle found in TBAA metadata.
Type-Based Alias Analysis
tbaa
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
overdefined
notconstant<
constantrange<
constant<
dom-conditions-max-uses
value-tracking
BadAssumption
Detected conflicting code assumptions. Program may have undefined behavior, or compiler may have internal error.
max-interleave-group-factor
Maximum factor for an interleaved access group (default = 8)
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
Expand Atomic instructions
atomic-expand
success
newloaded
atomicrmw.end
atomicrmw.start
tryagain
loaded
ValOperand_Shifted
AndOperand
AlignedAddr
PtrLSB
ShiftAmt
Mask
Inv_Mask
partword.cmpxchg.end
partword.cmpxchg.failure
partword.cmpxchg.loop
cmpxchg.end
cmpxchg.failure
cmpxchg.nostore
cmpxchg.success
cmpxchg.releasedload
cmpxchg.trystore
cmpxchg.fencedstore
cmpxchg.start
should_store
CmpVal_Shifted
NewVal_Shifted
Success
partial-unrolling-threshold
Threshold for partial unrolling
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
Branch relaxation pass
branch-relaxation
BreakFalseDeps
break-false-deps
verify-cfiinstrs
Verify Call Frame Information instructions
Check CFA info and insert CFI instructions if needed
cfi-instr-inserter
Found 
 in/out CFI information errors.
*** Inconsistent CFA register and/or offset between pred and succ ***
Pred: 
 outgoing CFA Reg:
 outgoing CFA Offset:
Succ: 
 incoming CFA Reg:
 incoming CFA Offset:
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-gc-opts
Disable GC optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
disable-cgp-ext-ld-promotion
Disable ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
stress-cgp-ext-ld-promotion
Stress test ext(promotable(ld)) -> promoted(ext(ld)) optimization in CodeGenPrepare
disable-preheader-prot
Disable protection against removing loop preheaders
profile-guided-section-prefix
Use profile info to add section prefix for hot/cold functions
cgp-freq-ratio-to-skip-merge
Skip merging empty blocks if (frequency of empty block) / (frequency of destination block) is greater than this ratio
force-split-store
Force store splitting no matter what the target query says.
cgp-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
disable-complex-addr-modes
Disables combining addressing modes with different parts in optimizeMemoryInst.
addr-sink-new-phis
Allow creation of Phis in Address sinking.
addr-sink-new-select
Allow creation of selects in Address sinking.
addr-sink-combine-base-reg
Allow combining of BaseReg field in Address sinking.
addr-sink-combine-base-gv
Allow combining of BaseGV field in Address sinking.
addr-sink-combine-base-offs
Allow combining of BaseOffs field in Address sinking.
addr-sink-combine-scaled-reg
Allow combining of ScaledReg field in Address sinking.
cgp-split-large-offset-gep
Enable splitting large offset of GEP.
Optimize for code generation
codegenprepare
CodeGen Prepare
.hot
.unlikely
.cond.split
promoted
uadd.overflow
uadd
sunkaddr
sunk_phi
cmpz
select.end
select.true.sink
select.false.sink
select.false
splitgep
Remove dead machine instructions
dead-mi-elimination
Detect Dead Lanes
detect-dead-lanes
dfa-instr-limit
If present, stops packetizing after N instructions
Prepare DWARF exceptions
dwarfehprepare
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
stress-early-ifcvt
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
" [ shape=box ]
" -> 
" -> "
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
Expand ISel Pseudo-instructions
expand-isel-pseudos
memcmp-num-loads-per-block
The number of loads per basic block for inline expansion of memcmp that is only being compared against zero.
Expand memcmp() to load/stores
expandmemcmp
endblock
phi.res
res_block
phi.src1
phi.src2
loadbb
Post-RA pseudo instruction expansion pass
postrapseudos
Expand reduction intrinsics
expand-reductions
__LLVM_FaultMaps
Insert fentry calls
fentry-insert
Contiguously Lay Out Funclets
funclet-layout
unsupported GC: 
 (did you remember to link and initialize the CodeGen library?)
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
post-call
, live = {
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
enable-global-merge
global-merge-max-offset
Set maximum offset for global merge pass
global-merge-group-by-use
Improve global merge pass to look at uses
global-merge-ignore-single-use
Improve global merge pass to ignore globals only used alone
global-merge-on-const
Enable global merge pass on constants
global-merge-on-external
Enable global merge pass on external linkage
Merge global variables
global-merge
Merge internal globals
llvm.
.llvm.
_MergedGlobals_
_MergedGlobals
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
disable-ifcvt-forked-diamond
ifcvt-branch-fold
If Converter
if-converter
imp-null-check-page-size
The page size of the target in bytes
imp-null-max-insts-to-consider
The max number of instructions to consider hoisting loads over (the algorithm is quadratic over this number)
Implicit null checks
implicit-null-checks
Expand indirectbr instructions
indirectbr-expand
switch_bb
switch_value_phi
.switch_cast
disable-spill-hoist
Disable inline spill hoisting
Allocation failed
Allocation failed
lower-interleaved-accesses
Enable lowering interleaved accesses to intrinsics
Lower interleaved memory accesses to target specific intrinsics
interleaved-access
Interleaved Access Pass
disable-interleaved-load-combine
Disable combining of interleaved loads
Combine interleaved loads into wide loads and shufflevector instructions
interleaved-load-combine
Interleaved Load Combine Pass
interleaved.wide.ptrcast
interleaved.wide.load
interleaved.shuffle
Combined Interleaved Load
Load interleaved combined with factor 
Factor
Lazy Machine Block Frequency Analysis
lazy-machine-block-freq
Live DEBUG_VALUE analysis
livedebugvalues
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
use-segment-set-for-physregs
Use segment set for the computation of the live ranges of physregs.
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
EMPTY
-phi
 weight:
%08X
Allocation failed
Allocation failed
Live Range Shrink Pass
lrshrink
Live Range Shrink
Live Register Matrix
liveregmatrix
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
trap-unreachable
Enable generating trap for unreachable
Local Stack Slot Allocation
localstackalloc
Add __emutls_[vt]. variables for emultated TLS model
loweremutls
__emutls_v.
__emutls_t.
Can't print out MachineBasicBlock because parent MachineFunction
 is null
<ir-block badref>
%ir-block.
address-taken
landing-pad
align 
; predecessors: 
successors: 
0x%08x
%.2f%%
liveins: 
; Irreducible loop header weight: 
%bb.
view-machine-block-freq-propagation-dags
Pop up a window to show a dag displaying how machine block frequencies propagate through the CFG.
view-block-layout-with-bfi
Pop up a window to show a dag displaying MBP layout and associated block frequencies of the CFG.
print-machine-bfi
Print the machine block frequency info.
MachineBlockFrequencyDAGS.
Machine Block Frequency Analysis
machine-block-freq
] : 
align-all-blocks
Force the alignment of all blocks in the function.
align-all-nofallthru-blocks
Force the alignment of all blocks that have no fall-through predecessors (i.e. don't add nops that are executed).
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
loop-to-cold-block-ratio
Outline loop blocks from loop chain if (frequency of loop) / (frequency of block) is greater than this ratio
force-loop-cold-block
Force outlining cold blocks from loops.
precise-rotation-cost
Model the cost of loop rotation more precisely by using profile data.
force-precise-rotation-cost
Force the use of precise cost loop rotation strategy.
misfetch-cost
Cost that models the probabilistic risk of an instruction misfetch due to a jump comparing to falling through, whose cost is zero.
jump-inst-cost
Cost of jump instructions.
tail-dup-placement
Perform tail duplication during placement. Creates more fallthrough opportunites in outline branches.
branch-fold-placement
Perform branch folding during placement. Reduces code size.
tail-dup-placement-threshold
Instruction cutoff for tail duplication during layout. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-aggressive-threshold
Instruction cutoff for aggressive tail duplication during layout. Used at -O3. Tail merging during layout is forced to have a threshold that won't conflict.
tail-dup-placement-penalty
Cost penalty for blocks that can avoid breaking CFG by copying. Copying can increase fallthrough, but it also increases icache pressure. This parameter controls the penalty to account for that. Percent as integer.
triangle-chain-count
Number of triangle-shaped-CFG's that need to be in a row for the triangle tail duplication heuristic to kick in. 0 to disable.
Branch Probability Basic Block Placement
block-placement
MBP.
Basic Block Placement Stats
block-placement-stats
static-likely-prob
branch probability threshold in percentageto be considered very likely
profile-likely-prob
branch probability threshold in percentage to be considered very likely when profile is available
Machine Branch Probability Analysis
machine-branch-prob
machine-combiner-inc-threshold
Incremental depth computation will be used for basic blocks with more instructions.
machine-combiner-dump-subst-intrs
Dump all substituted intrs
machine-combiner-verify-pattern-order
Verify that the generated patterns are ordered by increasing latency
Machine InstCombiner
machine-combiner
machine-cp-fwd
Controls which register COPYs are forwarded
Machine Copy Propagation Pass
machine-cp
Machine Common Subexpression Elimination
machine-cse
Machine Dominance Frontier Construction
machine-domfrontier
verify-machine-dom-info
Verify machine dominator info (time consuming)
=============================--------------------------------
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
MachineDominatorTree for function 
 is not up to date!
Computed:
Actual:
MachineDominator Tree Construction
machinedomtree
Allocation failed
Frame Objects:
  fi#
dead
variable sized
size=
, fixed
, at location [SP
align-all-functions
Force the alignment of all functions.
split-stack
# Machine code for function 
Function Live Ins: 
# End machine code for function 
Jump Tables:
Constant Pool:
  cp#
FailedISel
IsSSA
Legalized
NoPHIs
NoVRegs
RegBankSelected
Selected
TracksLiveness
Allocation failed
%jump-table.
FunctionMISizeChange
Pass
: Function: 
MI Instruction count changed from 
MIInstrsBefore
MIInstrsAfter
; Delta: 
Delta
Machine Function Printer
machineinstr-printer
MachineFunction Printer
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
frame-setup 
frame-destroy 
nnan 
ninf 
nsz 
arcp 
contract 
afn 
reassoc 
nuw 
nsw 
exact 
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [isconvergent]
 [alignstack]
 [attdialect]
 [inteldialect]
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 pre-instr-symbol 
 post-instr-symbol 
 debug-location 
 :: 
 line no:
 indirect
avoid-speculation
MachineLICM should avoid speculation
hoist-cheap-insts
MachineLICM should hoist even cheap instructions
sink-insts-to-avoid-spills
MachineLICM should sink instructions into loops to avoid register spills
hoist-const-stores
Hoist invariant stores
Machine Loop Invariant Code Motion
machinelicm
Early Machine Loop Invariant Code Motion
early-machinelicm
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
Free MachineFunction
print-regmask-num-regs
Number of registers to limit to when printing regmask operands in IR dumps. unlimited = -1
%subreg.
target-flags(
<unknown>) 
<unknown target flag>
<unknown bitmask target flag>
<mcsymbol 
%fixed-stack.
%stack.
<badref>
implicit-def 
implicit 
def 
internal 
dead 
killed 
undef 
early-clobber 
renamable 
.subreg
(tied-def 
%const.
target-index(
blockaddress(
<regmask
 more...
liveout(
<cfi directive>
intrinsic(@
intrinsic(
pred(
non-temporal 
dereferenceable 
invariant 
load 
store 
unknown-size
 into 
jump-table
constant-pool
call-entry 
call-entry &
custom 
, align 
, !tbaa 
, !alias.scope 
, !noalias 
, !range 
, addrspace 
same_value 
remember_state 
restore_state 
def_cfa_register 
def_cfa_offset 
def_cfa 
rel_offset 
adjust_cfa_offset 
restore 
escape 
0x%02x
undefined 
window_save 
negate_ra_sign_state 
<unserializable cfi directive>
%dwarfreg.
<badreg>
syncscope("
not_atomic
consume
%ir.
String
machine-opt-remark-emitter
enable-linkonceodr-outlining
Enable the machine outliner on linkonceodr functions
Machine Outliner
Instruction mapping overflow!
machine-outliner
NotOutliningCheaper
Did not outline 
Length
 instructions
NumOccurrences
 locations.
 Bytes from outlining all occurrences (
OutliningCost
 >= Unoutlined instruction bytes (
NotOutliningCost
 (Also found at: 
OtherStartLoc
OUTLINED_FUNCTION_
OutlinedFunction
Saved 
OutliningBenefit
 bytes by 
outlining 
 instructions 
from 
 locations. 
(Found at: 
StartLoc
: MI instruction count changed from 
Machine Function Outliner
enable-pipeliner
Enable Software Pipelining
enable-pipeliner-opt-size
Enable SWP at Os.
pipeliner-max-mii
Size limit for the MII.
pipeliner-max-stages
Maximum stages allowed in the generated scheduled.
pipeliner-prune-deps
Prune dependences between unrelated Phi nodes.
pipeliner-prune-loop-carried
Prune loop carried order dependences.
pipeliner-ignore-recmii
Ignore RecMII
pipeliner-enable-copytophi
Enable CopyToPhi DAG Mutation
Modulo Software Pipelining
pipeliner
Inorder PostDominator Tree: 
Roots: 
MachinePostDominator Tree Construction
machinepostdomtree
machine-region-info
enable-subreg-liveness
Enable subregister liveness tracking.
Allocation failed
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-limit
Limit ready list to N instructions
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable memop clustering.
verify-misched
Verify machine instrs before and after machine scheduling
misched
Machine instruction scheduler to use
Use the target's default scheduler choice.
enable-misched
Enable the machine instruction scheduling pass.
enable-post-misched
Enable the post-ra machine instruction scheduling pass.
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
machine-scheduler
Before machine scheduling.
After machine scheduling.
:%bb. 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
machine-sink-split-probability-threshold
Percentage threshold for splitting single-instruction critical edge. If the branch threshold is higher than this threshold, we allow speculative execution of up to 1 instruction to avoid branching to splitted critical edge
machine-sink
PostRA Machine Sink
postra-machine-sink
Machine Trace Metrics
machine-trace-metrics
MinInstr
 machine code errors.
Verify generated machine code
machineverifier
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
Instruction has operand with wrong parent set
BundledSucc flag set on last instruction in block
Function has NoVRegs property but there are VReg operands
*** Bad machine code: 
 ***
- function:    
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor 
 has exit state (
), while 
 has entry state (
The entry stack state of a successor is inconsistent.
Successor 
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocatable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor 
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor 
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: 
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Found PHI instruction with NoPHIs property set
Found PHI instruction after non-PHI
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Unexpected generic instruction in a Selected function
Type mismatch in generic instruction
Generic instruction is missing a virtual register type
Generic instruction cannot have physical register
Generic instruction accessing memory must have one mem operand
Generic Instruction G_PHI has operands with incompatible/missing types
Generic extend/truncate can not operate on pointers
Generic extend/truncate must be all-vector or all-scalar
Generic vector extend/truncate must preserve number of lanes
Generic extend has destination type no larger than source
Generic truncate has destination type no smaller than source
G_MERGE_VALUES cannot operate on vectors
G_UNMERGE_VALUES destination types do not match
G_UNMERGE_VALUES source operand does not cover dest operands
G_BUILD_VECTOR must produce a vector from scalar operands
G_BUILD_VECTOR source operand types are not homogeneous
G_BUILD_VECTOR src operands total size don't match dest size.
G_BUILD_VECTOR_TRUNC must produce a vector from scalar operands
G_BUILD_VECTOR_TRUNC source operand types are not homogeneous
G_BUILD_VECTOR_TRUNC source operand types are not larger than dest elt type
G_CONCAT_VECTOR requires vector source and destination operands
G_CONCAT_VECTOR source operand types are not homogeneous
G_CONCAT_VECTOR num dest and source elements should match
Copy Instruction is illegal with mismatching types
Def = 
, Src = 
Copy Instruction is illegal with mismatching sizes
Def Size = 
, Src Size = 
meta operands to STATEPOINT not constant!
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Tied counterpart must be a register
Tied physical registers must match.
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
isRenamable set on reserved register
Use-reg is not IsDebug in a DBG_VALUE
Generic virtual register invalid in a Selected function
Generic virtual register must have a valid type
Generic virtual register must have a bank in a RegBankSelected function
Register bank is too small for virtual register
Register bank 
 too small(
) to fit 
-bits
Generic virtual register does not subregister index
Virtual register does not match instruction constraint
Expect register class 
 but got nothing
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Missing fixed stack memoperand.
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live subrange at use
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Virtual register has no Live interval
No live segment at use
Live range continues after kill flag
- liverange:   
- regunit:     
- v. register: 
- lanemask:    
- interval:    
- at:          
Inconsistent valno->def
No live segment at def
Live range continues after dead def flag
- ValNo:       
 (def 
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register defs don't dominate all uses.
Expected first PHI operand to be a register def
Unexpected flag on PHI operand
Expected first PHI operand to be a virtual register
Expected PHI operand to be a register
Expected PHI operand to be a basic block
PHI input is not a predecessor block
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Lane masks of sub ranges overlap in live interval
Subrange lanemask is invalid
Subrange must not be empty
A Subrange is not covered by the main range
Multiple connected components in live interval
: valnos
Value not live at VNInfo def and not marked unused
Live segment at def has different VNInfo
Invalid VNInfo definition index
PHIDef VNInfo is not defined at MBB start
No instruction at VNInfo def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
Foreign valno in live segment
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment on dead slot has no dead flag
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into 
, not live before 
Different value live out of predecessor
Valno #
 live out of 
Valno #
- segment:     
Implement the 'patchable-function' attribute
patchable-function
simplify-mir
Leave out unnecessary information when printing MIR
<unnamed alloca>
CustomRegMask(
exposesReturnsTwice
legalized
regBankSelected
selected
failedISel
tracksRegLiveness
hasWinCFI
registers
liveins
calleeSavedRegisters
frameInfo
fixedStack
constants
jumpTable
preferred-register
virtual-reg
isFrameAddressTaken
isReturnAddressTaken
hasStackMap
hasPatchPoint
stackSize
offsetAdjustment
maxAlignment
adjustsStack
hasCalls
stackProtector
maxCallFrameSize
cvBytesOfCalleeSavedRegisters
hasOpaqueSPAdjustment
hasVAStart
hasMustTailInVarArgFunc
localFrameSize
savePoint
restorePoint
stack-id
isImmutable
isAliased
callee-saved-register
callee-saved-restored
debug-info-variable
debug-info-expression
debug-info-location
spill-slot
local-offset
variable-sized
isTargetSpecific
block-address
gp-rel64-block-address
gp-rel32-block-address
label-difference32
custom32
MIR Printing Pass
misched-fusion
Enable scheduling for macro fusion.
obfuscation-symbol-map
Specify the symbol_map output
filename.bcsymbolmap
obfuscate-preserve
<sym name>
__ir_hidden#
could not open obfuscation symbol map: 
_CurrentVNode
_DynamicBufferIOBuffer
_EndVNode
_FreeHook
_VPBufferSize
_VPMaxNumValsPerSite
_VPMergeHook
____chkstk
____chkstk_ms
____gesf2
____lesf2
____ltsf2
____nesf2
___absvdi2
___absvsi2
___absvti2
___adddf3
___adddf3vfp
___addsf3
___addsf3vfp
___addvdi3
___addvsi3
___addvti3
___aeabi_drsub
___aeabi_frsub
___alloca
___ashldi3
___ashlti3
___ashrdi3
___ashrti3
___atomic_compare_exchange
___atomic_compare_exchange_1
___atomic_compare_exchange_16
___atomic_compare_exchange_2
___atomic_compare_exchange_4
___atomic_compare_exchange_8
___atomic_exchange
___atomic_exchange_1
___atomic_exchange_16
___atomic_exchange_2
___atomic_exchange_4
___atomic_exchange_8
___atomic_fetch_add_1
___atomic_fetch_add_16
___atomic_fetch_add_2
___atomic_fetch_add_4
___atomic_fetch_add_8
___atomic_fetch_and_1
___atomic_fetch_and_16
___atomic_fetch_and_2
___atomic_fetch_and_4
___atomic_fetch_and_8
___atomic_fetch_or_1
___atomic_fetch_or_16
___atomic_fetch_or_2
___atomic_fetch_or_4
___atomic_fetch_or_8
___atomic_fetch_sub_1
___atomic_fetch_sub_16
___atomic_fetch_sub_2
___atomic_fetch_sub_4
___atomic_fetch_sub_8
___atomic_fetch_xor_1
___atomic_fetch_xor_16
___atomic_fetch_xor_2
___atomic_fetch_xor_4
___atomic_fetch_xor_8
___atomic_load
___atomic_load_1
___atomic_load_16
___atomic_load_2
___atomic_load_4
___atomic_load_8
___atomic_store
___atomic_store_1
___atomic_store_16
___atomic_store_2
___atomic_store_4
___atomic_store_8
___bswapdi2
___bswapsi2
___chkstk
___chkstk_ms
___clzdi2
___clzsi2
___clzti2
___cmpdi2
___cmpti2
___cpu_indicator_init
___cpu_model
___ctzdi2
___ctzsi2
___ctzti2
___divdc3
___divdf3
___divdf3vfp
___divdi3
___divmodsi4
___divsc3
___divsf3
___divsf3vfp
___divsi3
___divtc3
___divti3
___divxc3
___emutls_get_address
___eprintf
___eqdf2
___eqdf2vfp
___eqsf2
___eqsf2vfp
___extendhfsf2
___extendsfdf2
___extendsfdf2vfp
___ffsdi2
___ffsti2
___fixdfdi
___fixdfsi
___fixdfsivfp
___fixdfti
___fixsfdi
___fixsfsi
___fixsfsivfp
___fixsfti
___fixunsdfdi
___fixunsdfsi
___fixunsdfsivfp
___fixunsdfti
___fixunssfdi
___fixunssfsi
___fixunssfsivfp
___fixunssfti
___fixunsxfdi
___fixunsxfsi
___fixunsxfti
___fixxfdi
___fixxfti
___floatdidf
___floatdisf
___floatdixf
___floatsidf
___floatsidfvfp
___floatsisf
___floatsisfvfp
___floattidf
___floattisf
___floattixf
___floatundidf
___floatundisf
___floatundixf
___floatunsidf
___floatunsisf
___floatunssidfvfp
___floatunssisfvfp
___floatuntidf
___floatuntisf
___floatuntixf
___gedf2
___gedf2vfp
___gesf2
___gesf2vfp
___gnu_f2h_ieee
___gnu_h2f_ieee
___gtdf2
___gtdf2vfp
___gtsf2
___gtsf2vfp
___ledf2
___ledf2vfp
___lesf2
___lesf2vfp
___llvm_get_function_addr
___llvm_profile_begin_counters
___llvm_profile_begin_data
___llvm_profile_begin_names
___llvm_profile_begin_vnodes
___llvm_profile_check_compatibility
___llvm_profile_dump
___llvm_profile_end_counters
___llvm_profile_end_data
___llvm_profile_end_names
___llvm_profile_end_vnodes
___llvm_profile_get_data_size
___llvm_profile_get_magic
___llvm_profile_get_num_padding_bytes
___llvm_profile_get_path_prefix
___llvm_profile_get_size_for_buffer
___llvm_profile_get_size_for_buffer_internal
___llvm_profile_get_version
___llvm_profile_initialize_file
___llvm_profile_instrument_target
___llvm_profile_iterate_data
___llvm_profile_merge_from_buffer
___llvm_profile_recursive_mkdir
___llvm_profile_register_write_file_atexit
___llvm_profile_reset_counters
___llvm_profile_runtime
___llvm_profile_set_filename
___llvm_profile_set_num_value_sites
___llvm_profile_write_buffer
___llvm_profile_write_buffer_internal
___llvm_profile_write_file
___lshrdi3
___lshrti3
___ltdf2
___ltdf2vfp
___ltsf2
___ltsf2vfp
___moddi3
___modsi3
___modti3
___muldc3
___muldf3
___muldf3vfp
___muldi3
___mulodi4
___mulosi4
___muloti4
___mulsc3
___mulsf3
___mulsf3vfp
___multc3
___multi3
___mulvdi3
___mulvsi3
___mulvti3
___mulxc3
___nedf2
___nedf2vfp
___negdf2
___negdi2
___negsf2
___negti2
___negvdi2
___negvsi2
___negvti2
___nesf2
___nesf2vfp
___paritydi2
___paritysi2
___parityti2
___popcountdi2
___popcountsi2
___popcountti2
___powidf2
___powisf2
___powixf2
___subdf3
___subdf3vfp
___subsf3
___subsf3vfp
___subvdi3
___subvsi3
___subvti3
___switch16
___switch32
___switch8
___switchu8
___sync_fetch_and_add_4
___sync_fetch_and_add_8
___sync_fetch_and_and_4
___sync_fetch_and_and_8
___sync_fetch_and_max_4
___sync_fetch_and_max_8
___sync_fetch_and_min_4
___sync_fetch_and_min_8
___sync_fetch_and_nand_4
___sync_fetch_and_nand_8
___sync_fetch_and_or_4
___sync_fetch_and_or_8
___sync_fetch_and_sub_4
___sync_fetch_and_sub_8
___sync_fetch_and_umax_4
___sync_fetch_and_umax_8
___sync_fetch_and_umin_4
___sync_fetch_and_umin_8
___sync_fetch_and_xor_4
___sync_fetch_and_xor_8
___truncdfhf2
___truncdfsf2
___truncdfsf2vfp
___truncsfhf2
___ucmpdi2
___ucmpti2
___udivdi3
___udivmoddi4
___udivmodsi4
___udivmodti4
___udivsi3
___udivti3
___umoddi3
___umodsi3
___umodti3
___unorddf2
___unorddf2vfp
___unordsf2
___unordsf2vfp
__alloca
_atomic_flag_clear
_atomic_flag_clear_explicit
_atomic_flag_test_and_set
_atomic_flag_test_and_set_explicit
_atomic_signal_fence
_atomic_thread_fence
_compilerrt_abort_impl
_getFirstValueProfRecord
_getValueProfDataSize
_getValueProfRecordHeaderSize
_getValueProfRecordNext
_getValueProfRecordNumValueData
_getValueProfRecordSize
_getValueProfRecordValueData
_llvm_delete_flush_function_list
_llvm_delete_writeout_function_list
_llvm_gcda_emit_arcs
_llvm_gcda_emit_function
_llvm_gcda_end_file
_llvm_gcda_increment_indirect_counter
_llvm_gcda_start_file
_llvm_gcda_summary_info
_llvm_gcov_init
_llvm_register_flush_function
_llvm_register_writeout_function
_llvm_writeout_files
_lprofApplyPathPrefix
_lprofBufferIOFlush
_lprofBufferIOWrite
_lprofBufferWriter
_lprofCreateBufferIO
_lprofCreateBufferIOInternal
_lprofDeleteBufferIO
_lprofFindFirstDirSeparator
_lprofFindLastDirSeparator
_lprofGetHostName
_lprofGetLoadModuleSignature
_lprofGetPathPrefix
_lprofGetVPDataReader
_lprofOpenFileEx
_lprofProfileDumped
_lprofSetMaxValsPerSite
_lprofSetProfileDumped
_lprofSetupValueProfiler
_lprofValueProfNodes
_lprofWriteData
_lprofWriteDataImpl
_serializeValueProfDataFrom
_serializeValueProfRecordFrom
_objc_retain
_objc_release
_objc_autorelease
_objc_retainAutoreleasedReturnValue
_objc_retainBlock
_objc_autoreleaseReturnValue
_objc_autoreleasePoolPush
_objc_loadWeakRetained
_objc_loadWeak
_objc_destroyWeak
_objc_storeWeak
_objc_initWeak
_objc_moveWeak
_objc_copyWeak
_objc_retainedObject
_objc_unretainedObject
_objc_unretainedPointer
_objc_unsafeClaimAutoreleasedReturnValue
_objc_autoreleasePoolPop
_objc_retain_autorelease
_objc_retainAutorelease
_objc_retainAutoreleaseReturnValue
_objc_sync_enter
_objc_sync_exit
_objc_storeStrong
___gnat_eh_personality
___gxx_personality_v0
___gxx_personality_sj0
___gcc_personality_v0
___gcc_personality_sj0
___objc_personality_v0
__except_handler3
__except_handler4
___C_specific_handler
___CxxFrameHandler3
_ProcessCLRException
_rust_eh_personality
___stack_chk_fail
___stack_chk_guard
__obfs_tmp#
llvm.dbg.declare
llvm.dbg.value
Obfuscate all strings in the module
obfuscate-module
Optimize machine instruction PHIs
opt-phis
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
disable-non-allocatable-phys-copy-opt
Disable non-allocatable physical register copy optimization
rewrite-phi-limit
Limit the length of PHI chains to lookup
recurrence-chain-limit
Maximum length of recurrence chain when evaluating the benefit of commuting operands
Peephole Optimizations
peephole-opt
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
no-phi-elim-live-out-early-exit
Do not use an early exit if isLiveOutPastPHIs returns true.
Eliminate PHI nodes for register allocation
phi-node-elimination
Post RA hazard recognizer
post-RA-hazard-rec
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
Pre-ISel Intrinsic Lowering
pre-isel-intrinsic-lowering
objc_autoreleasePoolPush
objc_autoreleaseReturnValue
objc_copyWeak
objc_destroyWeak
objc_initWeak
objc_loadWeak
objc_loadWeakRetained
objc_moveWeak
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_storeStrong
objc_storeWeak
objc_unsafeClaimAutoreleasedReturnValue
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
objc_retain_autorelease
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
stack size
StackSize
NumStackBytes
 stack bytes in function
TargetCustom
FixedStack
Stack
JumpTable
ConstantPool
GlobalValueCallEntry
ExternalSymbolCallEntry
ReachingDefAnalysis
reaching-deps-analysis
verify-regalloc
Verify during register allocation
seed
Seed Live Regs
inline assembly requires more registers than available
ran out of registers during register allocation
basic
basic register allocator
Basic Register Allocator
regallocbasic
fast register allocator
Fast Register Allocator
regallocfast
split-spill-mode
Spill mode for splitting live ranges
Default
speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
enable-deferred-spilling
Instead of spilling a variable right away, defer the actual code insertion to the end of the allocation. That way the allocator might still find a suitable coloring for this variable because of other evicted variables.
huge-size-for-split
A threshold of live range size which may cause high compile time cost in global splitting.
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
condsider-local-interval-cost
Consider the cost of local intervals created by a split candidate when choosing the best split candidate.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
regalloc
LoopSpillReload
NumSpills
 spills 
NumFoldedSpills
 folded spills 
NumReloads
 reloads 
NumFoldedReloads
 folded reloads 
generated in loop
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
spill
Spiller
After spilling
After splitting live range around region
evict
Evict
local_split
Local Splitting
global_split
Global Splitting
After splitting live range around basic blocks
pbqp
PBQP register allocator
pbqp-coalescing
Attempt coalescing during PBQP register allocation.
PBQP Register Allocator
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
terminal-rule
Apply the terminal rule
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
late-remat-update-threshold
During rematerialization for a copy, if the def instruction has many other copy uses to be rematerialized, delay the multiple separate live interval update work and do them all at once after all those rematerialization are done. It will save a lot of repeated work. 
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Allocation failed
 from class 
: Cannot scavenge register without an emergency spill slot!
Incomplete scavenging after 2nd pass
Rename Independent Subregisters
rename-independent-subregs
Rename Disconnected Subregister Components
canon-nth-function
Function number to canonicalize.
canon-nth-basicblock
BasicBlock number to canonicalize.
Rename Register Operands Canonically
mir-canonicalizer
Rename register operands in a canonical ordering.
namedVReg
print-regusage
print register usage details collected for analysis.
Clobbered Registers: 
Register Usage Information Storage
reg-usage-info
Register Usage Information Collector
RegUsageInfoCollector
Register Usage Information Collector Pass
Register Usage Information Propagation
reg-usage-propagation
ResetMachineFunction
Instruction selection failed
safestack-use-pointer-address
Safe Stack instrumentation pass
TargetLowering instance is required
__safestack_pointer_address
unsafe_stack_ptr
gcroot intrinsic not compatible with safestack attribute
__stack_chk_guard
StackGuard
__stack_chk_fail
StackGuardSlot
.unsafe-byval
.unsafe
unsafe_stack_static_top
unsafe_stack_dynamic_ptr
safe-stack-coloring
enable safe stack coloring
safe-stack-layout
enable safe stack layout
Scalarize unsupported masked memory intrinsics
scalarize-masked-mem-intrin
Scalarize Masked Memory Intrinsics
cond.load
res.phi.else
cond.store
Load
enable-aa-sched-mi
Enable use of AA during MI DAG construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI DAG construction
dag-maps-huge-region
The limit to use while constructing the DAG prior to scheduling, at which point a trade-off is made to avoid excessive compile time.
dag-maps-reduction-size
A huge scheduling region will have maps reduced by this many nodes at a time. Defaults to HugeRegion / 2.
<entry>
<exit>
dag.
ScheduleDAG::viewGraph is only available in debug builds on 
Shadow Stack GC Lowering
shadow-stack-gc-lowering
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
enable-shrink-wrap
enable the shrink-wrapping pass
Shrink Wrap Pass
shrink-wrap
Shrink Wrapping analysis
UnsupportedIrreducibleCFG
Irreducible CFGs are not supported yet.
UnsupportedEHFunclets
EH Funclets are not supported yet.
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
fn_context
__data
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lsda_gep
call_site
Berd
invalid
Slot index numbering
slotindexes
Spill Code Placement Analysis
spill-code-placement
Impossible to implement partial COPY
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
stackcoloring-lifetime-start-on-first-use
Treat stack lifetimes as starting on first use, not on START marker.
Merge disjoint stack slots
stack-coloring
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 3)
__LLVM_StackMaps
enable-selectiondag-sp
Guard
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
StackProtectorRequested
Stack protection applied to function 
 due to a function attribute or command-line switch
StackProtectorAllocaOrArray
 due to a call to alloca or use of a variable length array
StackProtectorBuffer
 due to a stack allocated buffer or struct containing a buffer
StackProtectorAddressTaken
 due to the address of a local variable being taken
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
Tail Duplication
tailduplication
Early Tail Duplication
early-tailduplication
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-indirect-size
Maximum instructions to consider tail duplicating blocks that end with indirect branches.
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Malformed PHI in 
  missing input from predecessor 
Warning: malformed PHI in 
  extra input from predecessor 
  non-existing 
no-frame-pointer-elim
true
disable-sched-hazard
Disable hazard detection during preRA scheduling
.space
cannot spill patchpoint subregister operand
jump-is-expensive
Do not create extra branches to split comparison logic.
min-jump-table-entries
Set minimum number of entries to use a jump table.
max-jump-table-size
Set maximum size of jump tables; zero for no limit.
jump-table-density
Minimum density for building a jump table in a normal function
optsize-jump-table-density
Minimum density for building a jump table in an optsize function
min-predictable-branch
Minimum percentage (0-100) that a condition must be either true or false to assume that the condition is predictable
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__clzsi2
__clzdi2
__clzti2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
__powisf2
__powidf2
__powixf2
__powitf2
__gcc_stoq
__gcc_dtoq
__extendxftf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__gcc_qtos
__truncxfdf2
__trunctfdf2
__gcc_qtod
__trunctfxf2
__fixsfsi
__fixsfdi
__fixsfti
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__gcc_qtou
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__gcc_itoq
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__gcc_utoq
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__gcc_qeq
__nesf2
__nedf2
__netf2
__gcc_qne
__gesf2
__gedf2
__getf2
__gcc_qge
__ltsf2
__ltdf2
__lttf2
__gcc_qlt
__lesf2
__ledf2
__letf2
__gcc_qle
__gtsf2
__gtdf2
__gttf2
__gcc_qgt
__unordsf2
__unorddf2
__unordtf2
__gcc_qunord
__llvm_memcpy_element_unordered_atomic_1
__llvm_memcpy_element_unordered_atomic_2
__llvm_memcpy_element_unordered_atomic_4
__llvm_memcpy_element_unordered_atomic_8
__llvm_memcpy_element_unordered_atomic_16
__llvm_memmove_element_unordered_atomic_1
__llvm_memmove_element_unordered_atomic_2
__llvm_memmove_element_unordered_atomic_4
__llvm_memmove_element_unordered_atomic_8
__llvm_memmove_element_unordered_atomic_16
__llvm_memset_element_unordered_atomic_1
__llvm_memset_element_unordered_atomic_2
__llvm_memset_element_unordered_atomic_4
__llvm_memset_element_unordered_atomic_8
__llvm_memset_element_unordered_atomic_16
_Unwind_Resume
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
__atomic_load_1
__atomic_load_2
__atomic_load_4
__atomic_load_8
__atomic_load_16
__atomic_store_1
__atomic_store_2
__atomic_store_4
__atomic_store_8
__atomic_store_16
__atomic_exchange_1
__atomic_exchange_2
__atomic_exchange_4
__atomic_exchange_8
__atomic_exchange_16
__atomic_compare_exchange_1
__atomic_compare_exchange_2
__atomic_compare_exchange_4
__atomic_compare_exchange_8
__atomic_compare_exchange_16
__atomic_fetch_add_1
__atomic_fetch_add_2
__atomic_fetch_add_4
__atomic_fetch_add_8
__atomic_fetch_add_16
__atomic_fetch_sub_1
__atomic_fetch_sub_2
__atomic_fetch_sub_4
__atomic_fetch_sub_8
__atomic_fetch_sub_16
__atomic_fetch_and_1
__atomic_fetch_and_2
__atomic_fetch_and_4
__atomic_fetch_and_8
__atomic_fetch_and_16
__atomic_fetch_or_1
__atomic_fetch_or_2
__atomic_fetch_or_4
__atomic_fetch_or_8
__atomic_fetch_or_16
__atomic_fetch_xor_1
__atomic_fetch_xor_2
__atomic_fetch_xor_4
__atomic_fetch_xor_8
__atomic_fetch_xor_16
__atomic_fetch_nand_1
__atomic_fetch_nand_2
__atomic_fetch_nand_4
__atomic_fetch_nand_8
__atomic_fetch_nand_16
__llvm_deoptimize
__extendhfsf2
__truncsfhf2
__bzero
__sincosf_stret
__sincos_stret
sincosf
sincos
sincosl
__safestack_unsafe_stack_ptr
 must have void* type
 must 
be thread-local
__guard_local
__stack_chk_guard
Invalid refinement step for -recip.
.linker-options
invalid llvm.linker.options
OBJC_IMAGE_INFO
CG Profile
DW.ref.
We do not support this DWARF encoding yet!
.data
.DW.stub
.GCC.command.line
.dtors
.init_array
.fini_array
__TEXT
__constructor
__destructor
__mod_init_func
__mod_term_func
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
.CRT$XTX
__real@
__xmm@
__ymm@
.rdata
.bss
.bss.
.tdata
.tdata.
.tbss
.tbss.
ELF COMDATs only support SelectionKind::Any, '
' cannot be lowered.
MD_associated operand is not ValueAsMetadata
.note
.rodata.str
.data.rel.ro
.%05u
MachO doesn't support COMDATs, '
Associative COMDAT symbol '
' does not exist.
' is not a key for its COMDAT.
.tls$
.CRT$XC
%05u
no-frame-pointer-elim-non-leaf
enable-ipra
Enable interprocedural register allocation to reduce load/store at procedure calls.
disable-post-ra
Disable Post Regalloc Scheduler
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-postra-machine-sink
Disable PostRA Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
enable-implicit-null-checks
Fold null checks into faulting memory operations
disable-mergeicmps
Disable MergeICmps Pass
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
enable-machine-outliner
Enable the machine outliner
Run on all functions guaranteed to be beneficial
Disable all outlining
fast-isel
Enable the "fast" instruction selector
global-isel
Enable the "global" instruction selector
print-machineinstrs
Print machine instrs
pass-name
global-isel-abort
Enable abort calls when "global" instruction selection fails to lower/select an instruction
Disable the abort
Enable the abort
Disable the abort but emit a diagnostic on failure
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
use-cfl-aa-in-codegen
Enable the new, experimental CFL alias analysis in CodeGen
Disable CFL-AA
steens
Enable unification-based CFL-AA
anders
Enable inclusion-based CFL-AA
both
Enable both variants of CFL-AA
start-after
start-before
stop-after
stop-before
Resume compilation after a specific pass
Resume compilation before a specific pass
Stop compilation after a specific pass
Stop compilation before a specific pass
 specified!
Trying to construct TargetPassConfig without a target machine. Scheduling a CodeGen pass without a target triple set?
Cannot stop compilation after pass that is not run
Register allocator to use
Must use fast (default) register allocator for unoptimized regalloc.
pick register allocator based on -O option
Target Pass Configuration
targetpassconfig
invalid pass instance specifier 
" pass is not registered.
no-realign-stack
stackrealign
$noreg
physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
 sched: [
:%2.2f
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
dataflow-edge-limit
Maximum number of dataflow edges to traverse when evaluating the benefit of commuting operands
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
ppcf128
isVoid
x86mmx
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
register rewriting failed: cycle in copy bundle
Prepare WebAssembly exceptions
wasmehprepare
WebAssembly Exception handling preparation
__wasm_lpad_context
lpad_index_gep
selector_gep
_Unwind_CallPersonality
disable-demotion
Clone multicolor basic blocks but do not demote cross scopes
disable-cleanups
Do not remove implausible terminators or other similar cleanups
demote-catchswitch-only
Demote catchswitch BBs only (for wasm EH)
Prepare Windows exceptions
winehprepare
Windows exception handling preparation
.for.
.wineh.spillslot
.wineh.reload
Cleanup funclets for the SEH personality cannot contain exceptional actions
Cleanup funclets for the MSVC++ personality cannot contain exceptional actions
Insert XRay ops
xray-instrumentation
An attempt to perform XRay instrumentation for an unsupported target.
 = comdat 
exactmatch
largest
noduplicates
samesize
 = type 
; Materializable
; Function Attrs: 
declare
define 
 addrspace(
 section "
 align 
 gc "
 prefix 
 prologue 
 personality 
!<unknown kind #
<empty name> 
!DIExpression(
!DILocation(
column
scope
inlinedAt
isImplicitCode
dso_local 
hidden 
protected 
dllimport 
dllexport 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
cxx_fast_tlscc
ghccc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_regcallcc
x86_vectorcallcc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
avr_intrcc 
avr_signalcc 
ptx_kernel
ptx_device
x86_64_sysvcc
win64cc
spir_func
spir_kernel
swiftcc
x86_intrcc
hhvmcc
hhvm_ccc
amdgpu_vs
amdgpu_ls
amdgpu_hs
amdgpu_es
amdgpu_gs
amdgpu_ps
amdgpu_cs
amdgpu_kernel
sideeffect 
alignstack 
inteldialect 
local_unnamed_addr
unnamed_addr
 comdat
<null operand!>
; uselistorder directives
uselistorder
_bb 
, { 
; ModuleID = '
source_filename = "
target datalayout = "
target triple = "
module asm "
attributes #
 = { 
distinct 
<temporary!> 
!DIGlobalVariableExpression(
expr
!GenericDINode(
operands: {
tag: 
!DISubrange(
lowerBound
!DIEnumerator(
isUnsigned
!DIBasicType(
!DIDerivedType(
baseType
extraData
dwarfAddressSpace
ptrAuthKey
ptrAuthIsAddressDiscriminated
ptrAuthExtraDiscriminator
!DICompositeType(
elements
runtimeLang
vtableHolder
templateParams
discriminator
!DISubroutineType(
types
!DIFile(
checksumkind: 
checksum
!DICompileUnit(
producer
isOptimized
runtimeVersion
splitDebugFilename
emissionKind
retainedTypes
globals
imports
macros
dwoId
splitDebugInlining
debugInfoForProfiling
nameTableKind
rangesBaseAddress
!DISubprogram(
linkageName
scopeLine
containingType
virtualIndex
thisAdjustment
spFlags
unit
retainedNodes
thrownTypes
!DILexicalBlock(
!DILexicalBlockFile(
!DINamespace(
exportSymbols
!DIModule(
configMacros
includePath
!DITemplateTypeParameter(
!DITemplateValueParameter(
!DIGlobalVariable(
isLocal
isDefinition
!DILocalVariable(
!DILabel(
!DIObjCProperty(
attributes
!DIImportedEntity(
entity
!DIMacro(
type: 
!DIMacroFile(
nodes
 = !{
x86_fp80
fp128
ppc_fp128
metadata
x86_mmx
token
%"type 
opaque
<badref> = 
musttail 
tail 
notail 
          cleanup
          catch 
          filter 
 within 
] unwind 
to caller
 void
 unwind 
          to 
inalloca 
swifterror 
, addrspace(
 fast
 reassoc
 nnan
 ninf
 nsz
 arcp
 contract
 afn
 nuw
 nsw
 exact
 inbounds
 syncscope("
 ; (
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
external 
addrspace(
externally_initialized 
constant 
global 
, section "
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
alias 
ifunc 
 <<NULL ALIASEE>>
zeroinitializer
inrange 
<placeholder or erroneous Constant>
alignstack
dereferenceable
dereferenceable_or_null
extractelement
.add.
.sub.
.mul.
cvtu
cvtps2pd
pmovsx
.padds
.paddus
abs.cond
max.cond
min.cond
ctlz
ctlz.trunc
ctpop
ctpop.trunc
.old
Broken module found, compilation aborted!
clang.arc.use
objc_arc_annotation_topdown_bbstart
objc_arc_annotation_topdown_bbend
objc_arc_annotation_bottomup_bbstart
objc_arc_annotation_bottomup_bbend
PIE Level
llvm.ctlz.
^arm\.neon\.vld([1234]|[234]lane)\.v[a-z0-9]*$
.p0i8
^arm\.neon\.vst([1234]|[234]lane)\.v[a-z0-9]*$
sse41.dppd
sse41.mpsadbw
avx2.mpsadbw
llvm.loop.vectorize.
full-set
empty-set
Allocation failed
use-dbg-addr
Use llvm.dbg.addr for all local variables
llvm.dbg.cu
decltype(nullptr)
-m:o
-m:x
-m:w
-m:e
Address space 0 can never be non-integral
Invalid address space, must be a 24bit integer
Missing size specification for pointer in datalayout string
Invalid pointer size of 0 bytes
Missing alignment specification for pointer in datalayout string
Pointer ABI alignment must be a power of 2
Pointer preferred alignment must be a power of 2
Invalid index size of 0 bytes
Sized aggregate specification in datalayout string
Missing alignment specification in datalayout string
ABI alignment specification must be >0 for non-aggregate types
Zero width native integer type in datalayout string
Unexpected trailing characters after mangling specifier in datalayout string
Expected mangling specifier in datalayout string
Unknown mangling specifier in datalayout string
Unknown mangling in datalayout string
Unknown specifier in datalayout string
Invalid bit width, must be a 24bit integer
Invalid ABI alignment, must be a 16bit integer
Invalid preferred alignment, must be a 16bit integer
Invalid ABI alignment, must be a power of 2
Invalid preferred alignment, must be a power of 2
Preferred alignment cannot be less than the ABI alignment
Trailing separator in datalayout string
Expected token before separator in datalayout string
not a number, or does not fit in an unsigned int
number of bits must be a byte width multiple
Invalid address space, must be a 24-bit integer
Allocation failed
llvm.dbg.
DIFlagZero
DIFlagPrivate
DIFlagProtected
DIFlagPublic
DIFlagFwdDecl
DIFlagAppleBlock
DIFlagBlockByrefStruct
DIFlagVirtual
DIFlagArtificial
DIFlagExplicit
DIFlagPrototyped
DIFlagObjcClassComplete
DIFlagObjectPointer
DIFlagVector
DIFlagStaticMember
DIFlagLValueReference
DIFlagRValueReference
DIFlagReserved
DIFlagSingleInheritance
DIFlagMultipleInheritance
DIFlagVirtualInheritance
DIFlagIntroducedVirtual
DIFlagBitField
DIFlagNoReturn
DIFlagMainSubprogram
DIFlagTypePassByValue
DIFlagTypePassByReference
DIFlagFixedEnum
DIFlagThunk
DIFlagTrivial
DIFlagBigEndian
DIFlagLittleEndian
DIFlagAllCallsDescribed
DIFlagIndirectVirtualBase
CSK_MD5
CSK_SHA1
FullDebug
LineTablesOnly
DebugDirectivesOnly
None
DISPFlagZero
DISPFlagVirtual
DISPFlagPureVirtual
DISPFlagLocalToUnit
DISPFlagDefinition
DISPFlagOptimized
 @[ 
pass-remarks
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
Invalid regular expression '
' in -pass-remarks: 
remarks-yaml-string-table
 at line 
 limit
 of 
 exceeded (
) in 
ignoring debug info with an invalid version (
ignoring invalid debug info in 
<UNKNOWN LOCATION>
: in function 
Instruction selection used fallback path for 
!Passed
!Missed
!Analysis
!AnalysisFPCommute
!AnalysisAliasing
!Failure
DebugLoc
Hotness
Args
File
Line
Column
verify-dom-info
Verify dominator info (time consuming)
DominatorTree for function: 
Dominator Tree Construction
domtree
llvm.
nvvm
s390
xcore
null-pointer-is-valid
true
not_intrinsic
llvm.addressofreturnaddress
llvm.adjust.trampoline
llvm.annotation
llvm.assume
llvm.bitreverse
llvm.bswap
llvm.canonicalize
llvm.ceil
llvm.clear_cache
llvm.codeview.annotation
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.copysign
llvm.coro.alloc
llvm.coro.alloca.alloc
llvm.coro.alloca.free
llvm.coro.alloca.get
llvm.coro.begin
llvm.coro.destroy
llvm.coro.done
llvm.coro.end
llvm.coro.frame
llvm.coro.free
llvm.coro.id
llvm.coro.id.retcon
llvm.coro.id.retcon.once
llvm.coro.noop
llvm.coro.param
llvm.coro.prepare.retcon
llvm.coro.promise
llvm.coro.resume
llvm.coro.save
llvm.coro.size
llvm.coro.subfn.addr
llvm.coro.suspend
llvm.coro.suspend.retcon
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.dbg.addr
llvm.dbg.label
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.exceptioncode
llvm.eh.exceptionpointer
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.sjlj.setup.dispatch
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.constrained.ceil
llvm.experimental.constrained.cos
llvm.experimental.constrained.exp
llvm.experimental.constrained.exp2
llvm.experimental.constrained.fadd
llvm.experimental.constrained.fdiv
llvm.experimental.constrained.floor
llvm.experimental.constrained.fma
llvm.experimental.constrained.fmul
llvm.experimental.constrained.frem
llvm.experimental.constrained.fsub
llvm.experimental.constrained.log
llvm.experimental.constrained.log10
llvm.experimental.constrained.log2
llvm.experimental.constrained.maxnum
llvm.experimental.constrained.minnum
llvm.experimental.constrained.nearbyint
llvm.experimental.constrained.pow
llvm.experimental.constrained.powi
llvm.experimental.constrained.rint
llvm.experimental.constrained.round
llvm.experimental.constrained.sin
llvm.experimental.constrained.sqrt
llvm.experimental.constrained.trunc
llvm.experimental.deoptimize
llvm.experimental.gc.relocate
llvm.experimental.gc.result
llvm.experimental.gc.statepoint
llvm.experimental.guard
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.experimental.vector.reduce.add
llvm.experimental.vector.reduce.and
llvm.experimental.vector.reduce.fadd
llvm.experimental.vector.reduce.fmax
llvm.experimental.vector.reduce.fmin
llvm.experimental.vector.reduce.fmul
llvm.experimental.vector.reduce.mul
llvm.experimental.vector.reduce.or
llvm.experimental.vector.reduce.smax
llvm.experimental.vector.reduce.smin
llvm.experimental.vector.reduce.umax
llvm.experimental.vector.reduce.umin
llvm.experimental.vector.reduce.xor
llvm.experimental.widenable.condition
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.fshl
llvm.fshr
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.get.dynamic.area.offset
llvm.icall.branch.funnel
llvm.init.trampoline
llvm.instrprof.increment
llvm.instrprof.increment.step
llvm.instrprof.value.profile
llvm.invariant.end
llvm.invariant.start
llvm.is.constant
llvm.launder.invariant.group
llvm.lifetime.end
llvm.lifetime.start
llvm.load.relative
llvm.localaddress
llvm.localescape
llvm.localrecover
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.masked.compressstore
llvm.masked.expandload
llvm.masked.gather
llvm.masked.load
llvm.masked.scatter
llvm.masked.store
llvm.matrix.add
llvm.matrix.columnwise.load
llvm.matrix.columnwise.store
llvm.matrix.extract
llvm.matrix.insert
llvm.matrix.multiply
llvm.matrix.scalar.multiply
llvm.matrix.subtract
llvm.matrix.transpose
llvm.maximum
llvm.maxnum
llvm.memcpy
llvm.memcpy.element.unordered.atomic
llvm.memmove
llvm.memmove.element.unordered.atomic
llvm.memset
llvm.memset.element.unordered.atomic
llvm.minimum
llvm.minnum
llvm.nearbyint
llvm.objc.arc.annotation.bottomup.bbend
llvm.objc.arc.annotation.bottomup.bbstart
llvm.objc.arc.annotation.topdown.bbend
llvm.objc.arc.annotation.topdown.bbstart
llvm.objc.autorelease
llvm.objc.autoreleasePoolPop
llvm.objc.autoreleasePoolPush
llvm.objc.autoreleaseReturnValue
llvm.objc.clang.arc.use
llvm.objc.copyWeak
llvm.objc.destroyWeak
llvm.objc.initWeak
llvm.objc.loadWeak
llvm.objc.loadWeakRetained
llvm.objc.moveWeak
llvm.objc.release
llvm.objc.retain
llvm.objc.retain.autorelease
llvm.objc.retainAutorelease
llvm.objc.retainAutoreleaseReturnValue
llvm.objc.retainAutoreleasedReturnValue
llvm.objc.retainBlock
llvm.objc.retainedObject
llvm.objc.storeStrong
llvm.objc.storeWeak
llvm.objc.sync.enter
llvm.objc.sync.exit
llvm.objc.unretainedObject
llvm.objc.unretainedPointer
llvm.objc.unsafeClaimAutoreleasedReturnValue
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.prefetch
llvm.ptr.annotation
llvm.ptrauth.auth
llvm.ptrauth.blend
llvm.ptrauth.resign
llvm.ptrauth.sign
llvm.ptrauth.sign.generic
llvm.ptrauth.strip
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.sat
llvm.sadd.with.overflow
llvm.setjmp
llvm.sideeffect
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.fix
llvm.smul.with.overflow
llvm.sponentry
llvm.sqrt
llvm.ssa.copy
llvm.ssub.sat
llvm.ssub.with.overflow
llvm.stackguard
llvm.stackprotector
llvm.stackrestore
llvm.stacksave
llvm.strip.invariant.group
llvm.thread.pointer
llvm.trap
llvm.trunc
llvm.type.checked.load
llvm.type.test
llvm.uadd.sat
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.sat
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.va_start
llvm.var.annotation
llvm.write_register
llvm.xray.customevent
llvm.xray.typedevent
llvm.aarch64.clrex
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.get.fpcr
llvm.aarch64.hint
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmlal
llvm.aarch64.neon.fmlal2
llvm.aarch64.neon.fmlsl
llvm.aarch64.neon.fmlsl2
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.sdot
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.udot
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.sdiv
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.space
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.udiv
llvm.amdgcn.alignbit
llvm.amdgcn.alignbyte
llvm.amdgcn.atomic.dec
llvm.amdgcn.atomic.inc
llvm.amdgcn.buffer.atomic.add
llvm.amdgcn.buffer.atomic.and
llvm.amdgcn.buffer.atomic.cmpswap
llvm.amdgcn.buffer.atomic.or
llvm.amdgcn.buffer.atomic.smax
llvm.amdgcn.buffer.atomic.smin
llvm.amdgcn.buffer.atomic.sub
llvm.amdgcn.buffer.atomic.swap
llvm.amdgcn.buffer.atomic.umax
llvm.amdgcn.buffer.atomic.umin
llvm.amdgcn.buffer.atomic.xor
llvm.amdgcn.buffer.load
llvm.amdgcn.buffer.load.format
llvm.amdgcn.buffer.store
llvm.amdgcn.buffer.store.format
llvm.amdgcn.buffer.wbinvl1
llvm.amdgcn.buffer.wbinvl1.sc
llvm.amdgcn.buffer.wbinvl1.vol
llvm.amdgcn.class
llvm.amdgcn.cos
llvm.amdgcn.cubeid
llvm.amdgcn.cubema
llvm.amdgcn.cubesc
llvm.amdgcn.cubetc
llvm.amdgcn.cvt.pk.i16
llvm.amdgcn.cvt.pk.u16
llvm.amdgcn.cvt.pk.u8.f32
llvm.amdgcn.cvt.pknorm.i16
llvm.amdgcn.cvt.pknorm.u16
llvm.amdgcn.cvt.pkrtz
llvm.amdgcn.dispatch.id
llvm.amdgcn.dispatch.ptr
llvm.amdgcn.div.fixup
llvm.amdgcn.div.fmas
llvm.amdgcn.div.scale
llvm.amdgcn.ds.bpermute
llvm.amdgcn.ds.fadd
llvm.amdgcn.ds.fmax
llvm.amdgcn.ds.fmin
llvm.amdgcn.ds.permute
llvm.amdgcn.ds.swizzle
llvm.amdgcn.else
llvm.amdgcn.end.cf
llvm.amdgcn.exp
llvm.amdgcn.exp.compr
llvm.amdgcn.fcmp
llvm.amdgcn.fdiv.fast
llvm.amdgcn.fdot2
llvm.amdgcn.fmad.ftz
llvm.amdgcn.fmed3
llvm.amdgcn.fmul.legacy
llvm.amdgcn.fract
llvm.amdgcn.frexp.exp
llvm.amdgcn.frexp.mant
llvm.amdgcn.groupstaticsize
llvm.amdgcn.icmp
llvm.amdgcn.if
llvm.amdgcn.if.break
llvm.amdgcn.image.atomic.add.1d
llvm.amdgcn.image.atomic.add.1darray
llvm.amdgcn.image.atomic.add.2d
llvm.amdgcn.image.atomic.add.2darray
llvm.amdgcn.image.atomic.add.2darraymsaa
llvm.amdgcn.image.atomic.add.2dmsaa
llvm.amdgcn.image.atomic.add.3d
llvm.amdgcn.image.atomic.add.cube
llvm.amdgcn.image.atomic.and.1d
llvm.amdgcn.image.atomic.and.1darray
llvm.amdgcn.image.atomic.and.2d
llvm.amdgcn.image.atomic.and.2darray
llvm.amdgcn.image.atomic.and.2darraymsaa
llvm.amdgcn.image.atomic.and.2dmsaa
llvm.amdgcn.image.atomic.and.3d
llvm.amdgcn.image.atomic.and.cube
llvm.amdgcn.image.atomic.cmpswap.1d
llvm.amdgcn.image.atomic.cmpswap.1darray
llvm.amdgcn.image.atomic.cmpswap.2d
llvm.amdgcn.image.atomic.cmpswap.2darray
llvm.amdgcn.image.atomic.cmpswap.2darraymsaa
llvm.amdgcn.image.atomic.cmpswap.2dmsaa
llvm.amdgcn.image.atomic.cmpswap.3d
llvm.amdgcn.image.atomic.cmpswap.cube
llvm.amdgcn.image.atomic.dec.1d
llvm.amdgcn.image.atomic.dec.1darray
llvm.amdgcn.image.atomic.dec.2d
llvm.amdgcn.image.atomic.dec.2darray
llvm.amdgcn.image.atomic.dec.2darraymsaa
llvm.amdgcn.image.atomic.dec.2dmsaa
llvm.amdgcn.image.atomic.dec.3d
llvm.amdgcn.image.atomic.dec.cube
llvm.amdgcn.image.atomic.inc.1d
llvm.amdgcn.image.atomic.inc.1darray
llvm.amdgcn.image.atomic.inc.2d
llvm.amdgcn.image.atomic.inc.2darray
llvm.amdgcn.image.atomic.inc.2darraymsaa
llvm.amdgcn.image.atomic.inc.2dmsaa
llvm.amdgcn.image.atomic.inc.3d
llvm.amdgcn.image.atomic.inc.cube
llvm.amdgcn.image.atomic.or.1d
llvm.amdgcn.image.atomic.or.1darray
llvm.amdgcn.image.atomic.or.2d
llvm.amdgcn.image.atomic.or.2darray
llvm.amdgcn.image.atomic.or.2darraymsaa
llvm.amdgcn.image.atomic.or.2dmsaa
llvm.amdgcn.image.atomic.or.3d
llvm.amdgcn.image.atomic.or.cube
llvm.amdgcn.image.atomic.smax.1d
llvm.amdgcn.image.atomic.smax.1darray
llvm.amdgcn.image.atomic.smax.2d
llvm.amdgcn.image.atomic.smax.2darray
llvm.amdgcn.image.atomic.smax.2darraymsaa
llvm.amdgcn.image.atomic.smax.2dmsaa
llvm.amdgcn.image.atomic.smax.3d
llvm.amdgcn.image.atomic.smax.cube
llvm.amdgcn.image.atomic.smin.1d
llvm.amdgcn.image.atomic.smin.1darray
llvm.amdgcn.image.atomic.smin.2d
llvm.amdgcn.image.atomic.smin.2darray
llvm.amdgcn.image.atomic.smin.2darraymsaa
llvm.amdgcn.image.atomic.smin.2dmsaa
llvm.amdgcn.image.atomic.smin.3d
llvm.amdgcn.image.atomic.smin.cube
llvm.amdgcn.image.atomic.sub.1d
llvm.amdgcn.image.atomic.sub.1darray
llvm.amdgcn.image.atomic.sub.2d
llvm.amdgcn.image.atomic.sub.2darray
llvm.amdgcn.image.atomic.sub.2darraymsaa
llvm.amdgcn.image.atomic.sub.2dmsaa
llvm.amdgcn.image.atomic.sub.3d
llvm.amdgcn.image.atomic.sub.cube
llvm.amdgcn.image.atomic.swap.1d
llvm.amdgcn.image.atomic.swap.1darray
llvm.amdgcn.image.atomic.swap.2d
llvm.amdgcn.image.atomic.swap.2darray
llvm.amdgcn.image.atomic.swap.2darraymsaa
llvm.amdgcn.image.atomic.swap.2dmsaa
llvm.amdgcn.image.atomic.swap.3d
llvm.amdgcn.image.atomic.swap.cube
llvm.amdgcn.image.atomic.umax.1d
llvm.amdgcn.image.atomic.umax.1darray
llvm.amdgcn.image.atomic.umax.2d
llvm.amdgcn.image.atomic.umax.2darray
llvm.amdgcn.image.atomic.umax.2darraymsaa
llvm.amdgcn.image.atomic.umax.2dmsaa
llvm.amdgcn.image.atomic.umax.3d
llvm.amdgcn.image.atomic.umax.cube
llvm.amdgcn.image.atomic.umin.1d
llvm.amdgcn.image.atomic.umin.1darray
llvm.amdgcn.image.atomic.umin.2d
llvm.amdgcn.image.atomic.umin.2darray
llvm.amdgcn.image.atomic.umin.2darraymsaa
llvm.amdgcn.image.atomic.umin.2dmsaa
llvm.amdgcn.image.atomic.umin.3d
llvm.amdgcn.image.atomic.umin.cube
llvm.amdgcn.image.atomic.xor.1d
llvm.amdgcn.image.atomic.xor.1darray
llvm.amdgcn.image.atomic.xor.2d
llvm.amdgcn.image.atomic.xor.2darray
llvm.amdgcn.image.atomic.xor.2darraymsaa
llvm.amdgcn.image.atomic.xor.2dmsaa
llvm.amdgcn.image.atomic.xor.3d
llvm.amdgcn.image.atomic.xor.cube
llvm.amdgcn.image.gather4.2d
llvm.amdgcn.image.gather4.2darray
llvm.amdgcn.image.gather4.b.2d
llvm.amdgcn.image.gather4.b.2darray
llvm.amdgcn.image.gather4.b.cl.2d
llvm.amdgcn.image.gather4.b.cl.2darray
llvm.amdgcn.image.gather4.b.cl.cube
llvm.amdgcn.image.gather4.b.cl.o.2d
llvm.amdgcn.image.gather4.b.cl.o.2darray
llvm.amdgcn.image.gather4.b.cl.o.cube
llvm.amdgcn.image.gather4.b.cube
llvm.amdgcn.image.gather4.b.o.2d
llvm.amdgcn.image.gather4.b.o.2darray
llvm.amdgcn.image.gather4.b.o.cube
llvm.amdgcn.image.gather4.c.2d
llvm.amdgcn.image.gather4.c.2darray
llvm.amdgcn.image.gather4.c.b.2d
llvm.amdgcn.image.gather4.c.b.2darray
llvm.amdgcn.image.gather4.c.b.cl.2d
llvm.amdgcn.image.gather4.c.b.cl.2darray
llvm.amdgcn.image.gather4.c.b.cl.cube
llvm.amdgcn.image.gather4.c.b.cl.o.2d
llvm.amdgcn.image.gather4.c.b.cl.o.2darray
llvm.amdgcn.image.gather4.c.b.cl.o.cube
llvm.amdgcn.image.gather4.c.b.cube
llvm.amdgcn.image.gather4.c.b.o.2d
llvm.amdgcn.image.gather4.c.b.o.2darray
llvm.amdgcn.image.gather4.c.b.o.cube
llvm.amdgcn.image.gather4.c.cl.2d
llvm.amdgcn.image.gather4.c.cl.2darray
llvm.amdgcn.image.gather4.c.cl.cube
llvm.amdgcn.image.gather4.c.cl.o.2d
llvm.amdgcn.image.gather4.c.cl.o.2darray
llvm.amdgcn.image.gather4.c.cl.o.cube
llvm.amdgcn.image.gather4.c.cube
llvm.amdgcn.image.gather4.c.l.2d
llvm.amdgcn.image.gather4.c.l.2darray
llvm.amdgcn.image.gather4.c.l.cube
llvm.amdgcn.image.gather4.c.l.o.2d
llvm.amdgcn.image.gather4.c.l.o.2darray
llvm.amdgcn.image.gather4.c.l.o.cube
llvm.amdgcn.image.gather4.c.lz.2d
llvm.amdgcn.image.gather4.c.lz.2darray
llvm.amdgcn.image.gather4.c.lz.cube
llvm.amdgcn.image.gather4.c.lz.o.2d
llvm.amdgcn.image.gather4.c.lz.o.2darray
llvm.amdgcn.image.gather4.c.lz.o.cube
llvm.amdgcn.image.gather4.c.o.2d
llvm.amdgcn.image.gather4.c.o.2darray
llvm.amdgcn.image.gather4.c.o.cube
llvm.amdgcn.image.gather4.cl.2d
llvm.amdgcn.image.gather4.cl.2darray
llvm.amdgcn.image.gather4.cl.cube
llvm.amdgcn.image.gather4.cl.o.2d
llvm.amdgcn.image.gather4.cl.o.2darray
llvm.amdgcn.image.gather4.cl.o.cube
llvm.amdgcn.image.gather4.cube
llvm.amdgcn.image.gather4.l.2d
llvm.amdgcn.image.gather4.l.2darray
llvm.amdgcn.image.gather4.l.cube
llvm.amdgcn.image.gather4.l.o.2d
llvm.amdgcn.image.gather4.l.o.2darray
llvm.amdgcn.image.gather4.l.o.cube
llvm.amdgcn.image.gather4.lz.2d
llvm.amdgcn.image.gather4.lz.2darray
llvm.amdgcn.image.gather4.lz.cube
llvm.amdgcn.image.gather4.lz.o.2d
llvm.amdgcn.image.gather4.lz.o.2darray
llvm.amdgcn.image.gather4.lz.o.cube
llvm.amdgcn.image.gather4.o.2d
llvm.amdgcn.image.gather4.o.2darray
llvm.amdgcn.image.gather4.o.cube
llvm.amdgcn.image.getlod.1d
llvm.amdgcn.image.getlod.1darray
llvm.amdgcn.image.getlod.2d
llvm.amdgcn.image.getlod.2darray
llvm.amdgcn.image.getlod.3d
llvm.amdgcn.image.getlod.cube
llvm.amdgcn.image.getresinfo.1d
llvm.amdgcn.image.getresinfo.1darray
llvm.amdgcn.image.getresinfo.2d
llvm.amdgcn.image.getresinfo.2darray
llvm.amdgcn.image.getresinfo.2darraymsaa
llvm.amdgcn.image.getresinfo.2dmsaa
llvm.amdgcn.image.getresinfo.3d
llvm.amdgcn.image.getresinfo.cube
llvm.amdgcn.image.load.1d
llvm.amdgcn.image.load.1darray
llvm.amdgcn.image.load.2d
llvm.amdgcn.image.load.2darray
llvm.amdgcn.image.load.2darraymsaa
llvm.amdgcn.image.load.2dmsaa
llvm.amdgcn.image.load.3d
llvm.amdgcn.image.load.cube
llvm.amdgcn.image.load.mip.1d
llvm.amdgcn.image.load.mip.1darray
llvm.amdgcn.image.load.mip.2d
llvm.amdgcn.image.load.mip.2darray
llvm.amdgcn.image.load.mip.3d
llvm.amdgcn.image.load.mip.cube
llvm.amdgcn.image.sample.1d
llvm.amdgcn.image.sample.1darray
llvm.amdgcn.image.sample.2d
llvm.amdgcn.image.sample.2darray
llvm.amdgcn.image.sample.3d
llvm.amdgcn.image.sample.b.1d
llvm.amdgcn.image.sample.b.1darray
llvm.amdgcn.image.sample.b.2d
llvm.amdgcn.image.sample.b.2darray
llvm.amdgcn.image.sample.b.3d
llvm.amdgcn.image.sample.b.cl.1d
llvm.amdgcn.image.sample.b.cl.1darray
llvm.amdgcn.image.sample.b.cl.2d
llvm.amdgcn.image.sample.b.cl.2darray
llvm.amdgcn.image.sample.b.cl.3d
llvm.amdgcn.image.sample.b.cl.cube
llvm.amdgcn.image.sample.b.cl.o.1d
llvm.amdgcn.image.sample.b.cl.o.1darray
llvm.amdgcn.image.sample.b.cl.o.2d
llvm.amdgcn.image.sample.b.cl.o.2darray
llvm.amdgcn.image.sample.b.cl.o.3d
llvm.amdgcn.image.sample.b.cl.o.cube
llvm.amdgcn.image.sample.b.cube
llvm.amdgcn.image.sample.b.o.1d
llvm.amdgcn.image.sample.b.o.1darray
llvm.amdgcn.image.sample.b.o.2d
llvm.amdgcn.image.sample.b.o.2darray
llvm.amdgcn.image.sample.b.o.3d
llvm.amdgcn.image.sample.b.o.cube
llvm.amdgcn.image.sample.c.1d
llvm.amdgcn.image.sample.c.1darray
llvm.amdgcn.image.sample.c.2d
llvm.amdgcn.image.sample.c.2darray
llvm.amdgcn.image.sample.c.3d
llvm.amdgcn.image.sample.c.b.1d
llvm.amdgcn.image.sample.c.b.1darray
llvm.amdgcn.image.sample.c.b.2d
llvm.amdgcn.image.sample.c.b.2darray
llvm.amdgcn.image.sample.c.b.3d
llvm.amdgcn.image.sample.c.b.cl.1d
llvm.amdgcn.image.sample.c.b.cl.1darray
llvm.amdgcn.image.sample.c.b.cl.2d
llvm.amdgcn.image.sample.c.b.cl.2darray
llvm.amdgcn.image.sample.c.b.cl.3d
llvm.amdgcn.image.sample.c.b.cl.cube
llvm.amdgcn.image.sample.c.b.cl.o.1d
llvm.amdgcn.image.sample.c.b.cl.o.1darray
llvm.amdgcn.image.sample.c.b.cl.o.2d
llvm.amdgcn.image.sample.c.b.cl.o.2darray
llvm.amdgcn.image.sample.c.b.cl.o.3d
llvm.amdgcn.image.sample.c.b.cl.o.cube
llvm.amdgcn.image.sample.c.b.cube
llvm.amdgcn.image.sample.c.b.o.1d
llvm.amdgcn.image.sample.c.b.o.1darray
llvm.amdgcn.image.sample.c.b.o.2d
llvm.amdgcn.image.sample.c.b.o.2darray
llvm.amdgcn.image.sample.c.b.o.3d
llvm.amdgcn.image.sample.c.b.o.cube
llvm.amdgcn.image.sample.c.cd.1d
llvm.amdgcn.image.sample.c.cd.1darray
llvm.amdgcn.image.sample.c.cd.2d
llvm.amdgcn.image.sample.c.cd.2darray
llvm.amdgcn.image.sample.c.cd.3d
llvm.amdgcn.image.sample.c.cd.cl.1d
llvm.amdgcn.image.sample.c.cd.cl.1darray
llvm.amdgcn.image.sample.c.cd.cl.2d
llvm.amdgcn.image.sample.c.cd.cl.2darray
llvm.amdgcn.image.sample.c.cd.cl.3d
llvm.amdgcn.image.sample.c.cd.cl.cube
llvm.amdgcn.image.sample.c.cd.cl.o.1d
llvm.amdgcn.image.sample.c.cd.cl.o.1darray
llvm.amdgcn.image.sample.c.cd.cl.o.2d
llvm.amdgcn.image.sample.c.cd.cl.o.2darray
llvm.amdgcn.image.sample.c.cd.cl.o.3d
llvm.amdgcn.image.sample.c.cd.cl.o.cube
llvm.amdgcn.image.sample.c.cd.cube
llvm.amdgcn.image.sample.c.cd.o.1d
llvm.amdgcn.image.sample.c.cd.o.1darray
llvm.amdgcn.image.sample.c.cd.o.2d
llvm.amdgcn.image.sample.c.cd.o.2darray
llvm.amdgcn.image.sample.c.cd.o.3d
llvm.amdgcn.image.sample.c.cd.o.cube
llvm.amdgcn.image.sample.c.cl.1d
llvm.amdgcn.image.sample.c.cl.1darray
llvm.amdgcn.image.sample.c.cl.2d
llvm.amdgcn.image.sample.c.cl.2darray
llvm.amdgcn.image.sample.c.cl.3d
llvm.amdgcn.image.sample.c.cl.cube
llvm.amdgcn.image.sample.c.cl.o.1d
llvm.amdgcn.image.sample.c.cl.o.1darray
llvm.amdgcn.image.sample.c.cl.o.2d
llvm.amdgcn.image.sample.c.cl.o.2darray
llvm.amdgcn.image.sample.c.cl.o.3d
llvm.amdgcn.image.sample.c.cl.o.cube
llvm.amdgcn.image.sample.c.cube
llvm.amdgcn.image.sample.c.d.1d
llvm.amdgcn.image.sample.c.d.1darray
llvm.amdgcn.image.sample.c.d.2d
llvm.amdgcn.image.sample.c.d.2darray
llvm.amdgcn.image.sample.c.d.3d
llvm.amdgcn.image.sample.c.d.cl.1d
llvm.amdgcn.image.sample.c.d.cl.1darray
llvm.amdgcn.image.sample.c.d.cl.2d
llvm.amdgcn.image.sample.c.d.cl.2darray
llvm.amdgcn.image.sample.c.d.cl.3d
llvm.amdgcn.image.sample.c.d.cl.cube
llvm.amdgcn.image.sample.c.d.cl.o.1d
llvm.amdgcn.image.sample.c.d.cl.o.1darray
llvm.amdgcn.image.sample.c.d.cl.o.2d
llvm.amdgcn.image.sample.c.d.cl.o.2darray
llvm.amdgcn.image.sample.c.d.cl.o.3d
llvm.amdgcn.image.sample.c.d.cl.o.cube
llvm.amdgcn.image.sample.c.d.cube
llvm.amdgcn.image.sample.c.d.o.1d
llvm.amdgcn.image.sample.c.d.o.1darray
llvm.amdgcn.image.sample.c.d.o.2d
llvm.amdgcn.image.sample.c.d.o.2darray
llvm.amdgcn.image.sample.c.d.o.3d
llvm.amdgcn.image.sample.c.d.o.cube
llvm.amdgcn.image.sample.c.l.1d
llvm.amdgcn.image.sample.c.l.1darray
llvm.amdgcn.image.sample.c.l.2d
llvm.amdgcn.image.sample.c.l.2darray
llvm.amdgcn.image.sample.c.l.3d
llvm.amdgcn.image.sample.c.l.cube
llvm.amdgcn.image.sample.c.l.o.1d
llvm.amdgcn.image.sample.c.l.o.1darray
llvm.amdgcn.image.sample.c.l.o.2d
llvm.amdgcn.image.sample.c.l.o.2darray
llvm.amdgcn.image.sample.c.l.o.3d
llvm.amdgcn.image.sample.c.l.o.cube
llvm.amdgcn.image.sample.c.lz.1d
llvm.amdgcn.image.sample.c.lz.1darray
llvm.amdgcn.image.sample.c.lz.2d
llvm.amdgcn.image.sample.c.lz.2darray
llvm.amdgcn.image.sample.c.lz.3d
llvm.amdgcn.image.sample.c.lz.cube
llvm.amdgcn.image.sample.c.lz.o.1d
llvm.amdgcn.image.sample.c.lz.o.1darray
llvm.amdgcn.image.sample.c.lz.o.2d
llvm.amdgcn.image.sample.c.lz.o.2darray
llvm.amdgcn.image.sample.c.lz.o.3d
llvm.amdgcn.image.sample.c.lz.o.cube
llvm.amdgcn.image.sample.c.o.1d
llvm.amdgcn.image.sample.c.o.1darray
llvm.amdgcn.image.sample.c.o.2d
llvm.amdgcn.image.sample.c.o.2darray
llvm.amdgcn.image.sample.c.o.3d
llvm.amdgcn.image.sample.c.o.cube
llvm.amdgcn.image.sample.cd.1d
llvm.amdgcn.image.sample.cd.1darray
llvm.amdgcn.image.sample.cd.2d
llvm.amdgcn.image.sample.cd.2darray
llvm.amdgcn.image.sample.cd.3d
llvm.amdgcn.image.sample.cd.cl.1d
llvm.amdgcn.image.sample.cd.cl.1darray
llvm.amdgcn.image.sample.cd.cl.2d
llvm.amdgcn.image.sample.cd.cl.2darray
llvm.amdgcn.image.sample.cd.cl.3d
llvm.amdgcn.image.sample.cd.cl.cube
llvm.amdgcn.image.sample.cd.cl.o.1d
llvm.amdgcn.image.sample.cd.cl.o.1darray
llvm.amdgcn.image.sample.cd.cl.o.2d
llvm.amdgcn.image.sample.cd.cl.o.2darray
llvm.amdgcn.image.sample.cd.cl.o.3d
llvm.amdgcn.image.sample.cd.cl.o.cube
llvm.amdgcn.image.sample.cd.cube
llvm.amdgcn.image.sample.cd.o.1d
llvm.amdgcn.image.sample.cd.o.1darray
llvm.amdgcn.image.sample.cd.o.2d
llvm.amdgcn.image.sample.cd.o.2darray
llvm.amdgcn.image.sample.cd.o.3d
llvm.amdgcn.image.sample.cd.o.cube
llvm.amdgcn.image.sample.cl.1d
llvm.amdgcn.image.sample.cl.1darray
llvm.amdgcn.image.sample.cl.2d
llvm.amdgcn.image.sample.cl.2darray
llvm.amdgcn.image.sample.cl.3d
llvm.amdgcn.image.sample.cl.cube
llvm.amdgcn.image.sample.cl.o.1d
llvm.amdgcn.image.sample.cl.o.1darray
llvm.amdgcn.image.sample.cl.o.2d
llvm.amdgcn.image.sample.cl.o.2darray
llvm.amdgcn.image.sample.cl.o.3d
llvm.amdgcn.image.sample.cl.o.cube
llvm.amdgcn.image.sample.cube
llvm.amdgcn.image.sample.d.1d
llvm.amdgcn.image.sample.d.1darray
llvm.amdgcn.image.sample.d.2d
llvm.amdgcn.image.sample.d.2darray
llvm.amdgcn.image.sample.d.3d
llvm.amdgcn.image.sample.d.cl.1d
llvm.amdgcn.image.sample.d.cl.1darray
llvm.amdgcn.image.sample.d.cl.2d
llvm.amdgcn.image.sample.d.cl.2darray
llvm.amdgcn.image.sample.d.cl.3d
llvm.amdgcn.image.sample.d.cl.cube
llvm.amdgcn.image.sample.d.cl.o.1d
llvm.amdgcn.image.sample.d.cl.o.1darray
llvm.amdgcn.image.sample.d.cl.o.2d
llvm.amdgcn.image.sample.d.cl.o.2darray
llvm.amdgcn.image.sample.d.cl.o.3d
llvm.amdgcn.image.sample.d.cl.o.cube
llvm.amdgcn.image.sample.d.cube
llvm.amdgcn.image.sample.d.o.1d
llvm.amdgcn.image.sample.d.o.1darray
llvm.amdgcn.image.sample.d.o.2d
llvm.amdgcn.image.sample.d.o.2darray
llvm.amdgcn.image.sample.d.o.3d
llvm.amdgcn.image.sample.d.o.cube
llvm.amdgcn.image.sample.l.1d
llvm.amdgcn.image.sample.l.1darray
llvm.amdgcn.image.sample.l.2d
llvm.amdgcn.image.sample.l.2darray
llvm.amdgcn.image.sample.l.3d
llvm.amdgcn.image.sample.l.cube
llvm.amdgcn.image.sample.l.o.1d
llvm.amdgcn.image.sample.l.o.1darray
llvm.amdgcn.image.sample.l.o.2d
llvm.amdgcn.image.sample.l.o.2darray
llvm.amdgcn.image.sample.l.o.3d
llvm.amdgcn.image.sample.l.o.cube
llvm.amdgcn.image.sample.lz.1d
llvm.amdgcn.image.sample.lz.1darray
llvm.amdgcn.image.sample.lz.2d
llvm.amdgcn.image.sample.lz.2darray
llvm.amdgcn.image.sample.lz.3d
llvm.amdgcn.image.sample.lz.cube
llvm.amdgcn.image.sample.lz.o.1d
llvm.amdgcn.image.sample.lz.o.1darray
llvm.amdgcn.image.sample.lz.o.2d
llvm.amdgcn.image.sample.lz.o.2darray
llvm.amdgcn.image.sample.lz.o.3d
llvm.amdgcn.image.sample.lz.o.cube
llvm.amdgcn.image.sample.o.1d
llvm.amdgcn.image.sample.o.1darray
llvm.amdgcn.image.sample.o.2d
llvm.amdgcn.image.sample.o.2darray
llvm.amdgcn.image.sample.o.3d
llvm.amdgcn.image.sample.o.cube
llvm.amdgcn.image.store.1d
llvm.amdgcn.image.store.1darray
llvm.amdgcn.image.store.2d
llvm.amdgcn.image.store.2darray
llvm.amdgcn.image.store.2darraymsaa
llvm.amdgcn.image.store.2dmsaa
llvm.amdgcn.image.store.3d
llvm.amdgcn.image.store.cube
llvm.amdgcn.image.store.mip.1d
llvm.amdgcn.image.store.mip.1darray
llvm.amdgcn.image.store.mip.2d
llvm.amdgcn.image.store.mip.2darray
llvm.amdgcn.image.store.mip.3d
llvm.amdgcn.image.store.mip.cube
llvm.amdgcn.implicit.buffer.ptr
llvm.amdgcn.implicitarg.ptr
llvm.amdgcn.init.exec
llvm.amdgcn.init.exec.from.input
llvm.amdgcn.interp.mov
llvm.amdgcn.interp.p1
llvm.amdgcn.interp.p2
llvm.amdgcn.kernarg.segment.ptr
llvm.amdgcn.kill
llvm.amdgcn.ldexp
llvm.amdgcn.lerp
llvm.amdgcn.log.clamp
llvm.amdgcn.loop
llvm.amdgcn.mbcnt.hi
llvm.amdgcn.mbcnt.lo
llvm.amdgcn.mov.dpp
llvm.amdgcn.mqsad.pk.u16.u8
llvm.amdgcn.mqsad.u32.u8
llvm.amdgcn.msad.u8
llvm.amdgcn.ps.live
llvm.amdgcn.qsad.pk.u16.u8
llvm.amdgcn.queue.ptr
llvm.amdgcn.raw.buffer.atomic.add
llvm.amdgcn.raw.buffer.atomic.and
llvm.amdgcn.raw.buffer.atomic.cmpswap
llvm.amdgcn.raw.buffer.atomic.or
llvm.amdgcn.raw.buffer.atomic.smax
llvm.amdgcn.raw.buffer.atomic.smin
llvm.amdgcn.raw.buffer.atomic.sub
llvm.amdgcn.raw.buffer.atomic.swap
llvm.amdgcn.raw.buffer.atomic.umax
llvm.amdgcn.raw.buffer.atomic.umin
llvm.amdgcn.raw.buffer.atomic.xor
llvm.amdgcn.raw.buffer.load
llvm.amdgcn.raw.buffer.load.format
llvm.amdgcn.raw.buffer.store
llvm.amdgcn.raw.buffer.store.format
llvm.amdgcn.raw.tbuffer.load
llvm.amdgcn.raw.tbuffer.store
llvm.amdgcn.rcp
llvm.amdgcn.rcp.legacy
llvm.amdgcn.readfirstlane
llvm.amdgcn.readlane
llvm.amdgcn.rsq
llvm.amdgcn.rsq.clamp
llvm.amdgcn.rsq.legacy
llvm.amdgcn.s.barrier
llvm.amdgcn.s.buffer.load
llvm.amdgcn.s.dcache.inv
llvm.amdgcn.s.dcache.inv.vol
llvm.amdgcn.s.dcache.wb
llvm.amdgcn.s.dcache.wb.vol
llvm.amdgcn.s.decperflevel
llvm.amdgcn.s.getpc
llvm.amdgcn.s.getreg
llvm.amdgcn.s.incperflevel
llvm.amdgcn.s.memrealtime
llvm.amdgcn.s.memtime
llvm.amdgcn.s.sendmsg
llvm.amdgcn.s.sendmsghalt
llvm.amdgcn.s.sleep
llvm.amdgcn.s.waitcnt
llvm.amdgcn.sad.hi.u8
llvm.amdgcn.sad.u16
llvm.amdgcn.sad.u8
llvm.amdgcn.sbfe
llvm.amdgcn.sdot2
llvm.amdgcn.sdot4
llvm.amdgcn.sdot8
llvm.amdgcn.set.inactive
llvm.amdgcn.sffbh
llvm.amdgcn.sin
llvm.amdgcn.struct.buffer.atomic.add
llvm.amdgcn.struct.buffer.atomic.and
llvm.amdgcn.struct.buffer.atomic.cmpswap
llvm.amdgcn.struct.buffer.atomic.or
llvm.amdgcn.struct.buffer.atomic.smax
llvm.amdgcn.struct.buffer.atomic.smin
llvm.amdgcn.struct.buffer.atomic.sub
llvm.amdgcn.struct.buffer.atomic.swap
llvm.amdgcn.struct.buffer.atomic.umax
llvm.amdgcn.struct.buffer.atomic.umin
llvm.amdgcn.struct.buffer.atomic.xor
llvm.amdgcn.struct.buffer.load
llvm.amdgcn.struct.buffer.load.format
llvm.amdgcn.struct.buffer.store
llvm.amdgcn.struct.buffer.store.format
llvm.amdgcn.struct.tbuffer.load
llvm.amdgcn.struct.tbuffer.store
llvm.amdgcn.tbuffer.load
llvm.amdgcn.tbuffer.store
llvm.amdgcn.trig.preop
llvm.amdgcn.ubfe
llvm.amdgcn.udot2
llvm.amdgcn.udot4
llvm.amdgcn.udot8
llvm.amdgcn.unreachable
llvm.amdgcn.update.dpp
llvm.amdgcn.wave.barrier
llvm.amdgcn.workgroup.id.x
llvm.amdgcn.workgroup.id.y
llvm.amdgcn.workgroup.id.z
llvm.amdgcn.workitem.id.x
llvm.amdgcn.workitem.id.y
llvm.amdgcn.workitem.id.z
llvm.amdgcn.wqm
llvm.amdgcn.wqm.vote
llvm.amdgcn.writelane
llvm.amdgcn.wwm
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dbg
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldc
llvm.arm.ldc2
llvm.arm.ldc2l
llvm.arm.ldcl
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.mrrc
llvm.arm.mrrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sdot
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.udot
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld1x2
llvm.arm.neon.vld1x3
llvm.arm.neon.vld1x4
llvm.arm.neon.vld2
llvm.arm.neon.vld2dup
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3dup
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4dup
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst1x2
llvm.arm.neon.vst1x3
llvm.arm.neon.vst1x4
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qadd16
llvm.arm.qadd8
llvm.arm.qasx
llvm.arm.qsax
llvm.arm.qsub
llvm.arm.qsub16
llvm.arm.qsub8
llvm.arm.sadd16
llvm.arm.sadd8
llvm.arm.sasx
llvm.arm.sel
llvm.arm.set.fpscr
llvm.arm.shadd16
llvm.arm.shadd8
llvm.arm.shasx
llvm.arm.shsax
llvm.arm.shsub16
llvm.arm.shsub8
llvm.arm.smlabb
llvm.arm.smlabt
llvm.arm.smlad
llvm.arm.smladx
llvm.arm.smlald
llvm.arm.smlaldx
llvm.arm.smlatb
llvm.arm.smlatt
llvm.arm.smlawb
llvm.arm.smlawt
llvm.arm.smlsd
llvm.arm.smlsdx
llvm.arm.smlsld
llvm.arm.smlsldx
llvm.arm.smuad
llvm.arm.smuadx
llvm.arm.smulbb
llvm.arm.smulbt
llvm.arm.smultb
llvm.arm.smultt
llvm.arm.smulwb
llvm.arm.smulwt
llvm.arm.smusd
llvm.arm.smusdx
llvm.arm.space
llvm.arm.ssat
llvm.arm.ssat16
llvm.arm.ssax
llvm.arm.ssub16
llvm.arm.ssub8
llvm.arm.stc
llvm.arm.stc2
llvm.arm.stc2l
llvm.arm.stcl
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.sxtab16
llvm.arm.sxtb16
llvm.arm.uadd16
llvm.arm.uadd8
llvm.arm.uasx
llvm.arm.uhadd16
llvm.arm.uhadd8
llvm.arm.uhasx
llvm.arm.uhsax
llvm.arm.uhsub16
llvm.arm.uhsub8
llvm.arm.undefined
llvm.arm.uqadd16
llvm.arm.uqadd8
llvm.arm.uqasx
llvm.arm.uqsax
llvm.arm.uqsub16
llvm.arm.uqsub8
llvm.arm.usad8
llvm.arm.usada8
llvm.arm.usat
llvm.arm.usat16
llvm.arm.usax
llvm.arm.usub16
llvm.arm.usub8
llvm.arm.uxtab16
llvm.arm.uxtb16
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bpf.load.byte
llvm.bpf.load.half
llvm.bpf.load.word
llvm.bpf.pseudo
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.pxorf
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrcrr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrrcr
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.addp.c
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineii
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.subp.c
llvm.hexagon.A4.tfrcpp
llvm.hexagon.A4.tfrpcp
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.ACS
llvm.hexagon.A5.vaddhubs
llvm.hexagon.A6.vcmpbeq.notany
llvm.hexagon.A6.vminub.RdP
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfinvsqrta
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfrecipa
llvm.hexagon.F2.sfsub
llvm.hexagon.L2.loadrb.pbr
llvm.hexagon.L2.loadrb.pci
llvm.hexagon.L2.loadrb.pcr
llvm.hexagon.L2.loadrd.pbr
llvm.hexagon.L2.loadrd.pci
llvm.hexagon.L2.loadrd.pcr
llvm.hexagon.L2.loadrh.pbr
llvm.hexagon.L2.loadrh.pci
llvm.hexagon.L2.loadrh.pcr
llvm.hexagon.L2.loadri.pbr
llvm.hexagon.L2.loadri.pci
llvm.hexagon.L2.loadri.pcr
llvm.hexagon.L2.loadrub.pbr
llvm.hexagon.L2.loadrub.pci
llvm.hexagon.L2.loadrub.pcr
llvm.hexagon.L2.loadruh.pbr
llvm.hexagon.L2.loadruh.pci
llvm.hexagon.L2.loadruh.pcr
llvm.hexagon.L2.loadw.locked
llvm.hexagon.L4.loadd.locked
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mnaci
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysin
llvm.hexagon.M2.mpysip
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.M6.vabsdiffb
llvm.hexagon.M6.vabsdiffub
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.mask
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.storerb.pbr
llvm.hexagon.S2.storerb.pci
llvm.hexagon.S2.storerb.pcr
llvm.hexagon.S2.storerd.pbr
llvm.hexagon.S2.storerd.pci
llvm.hexagon.S2.storerd.pcr
llvm.hexagon.S2.storerf.pbr
llvm.hexagon.S2.storerf.pci
llvm.hexagon.S2.storerf.pcr
llvm.hexagon.S2.storerh.pbr
llvm.hexagon.S2.storerh.pci
llvm.hexagon.S2.storerh.pcr
llvm.hexagon.S2.storeri.pbr
llvm.hexagon.S2.storeri.pci
llvm.hexagon.S2.storeri.pcr
llvm.hexagon.S2.storew.locked
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.stored.locked
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.S6.rol.i.p
llvm.hexagon.S6.rol.i.p.acc
llvm.hexagon.S6.rol.i.p.and
llvm.hexagon.S6.rol.i.p.nac
llvm.hexagon.S6.rol.i.p.or
llvm.hexagon.S6.rol.i.p.xacc
llvm.hexagon.S6.rol.i.r
llvm.hexagon.S6.rol.i.r.acc
llvm.hexagon.S6.rol.i.r.and
llvm.hexagon.S6.rol.i.r.nac
llvm.hexagon.S6.rol.i.r.or
llvm.hexagon.S6.rol.i.r.xacc
llvm.hexagon.S6.vsplatrbp
llvm.hexagon.S6.vtrunehb.ppp
llvm.hexagon.S6.vtrunohb.ppp
llvm.hexagon.V6.extractw
llvm.hexagon.V6.extractw.128B
llvm.hexagon.V6.hi
llvm.hexagon.V6.hi.128B
llvm.hexagon.V6.ld0
llvm.hexagon.V6.ld0.128B
llvm.hexagon.V6.ldcnp0
llvm.hexagon.V6.ldcnp0.128B
llvm.hexagon.V6.ldcnpnt0
llvm.hexagon.V6.ldcnpnt0.128B
llvm.hexagon.V6.ldcp0
llvm.hexagon.V6.ldcp0.128B
llvm.hexagon.V6.ldcpnt0
llvm.hexagon.V6.ldcpnt0.128B
llvm.hexagon.V6.ldnp0
llvm.hexagon.V6.ldnp0.128B
llvm.hexagon.V6.ldnpnt0
llvm.hexagon.V6.ldnpnt0.128B
llvm.hexagon.V6.ldnt0
llvm.hexagon.V6.ldnt0.128B
llvm.hexagon.V6.ldntnt0
llvm.hexagon.V6.ldp0
llvm.hexagon.V6.ldp0.128B
llvm.hexagon.V6.ldpnt0
llvm.hexagon.V6.ldpnt0.128B
llvm.hexagon.V6.ldtnp0
llvm.hexagon.V6.ldtnp0.128B
llvm.hexagon.V6.ldtnpnt0
llvm.hexagon.V6.ldtnpnt0.128B
llvm.hexagon.V6.ldtp0
llvm.hexagon.V6.ldtp0.128B
llvm.hexagon.V6.ldtpnt0
llvm.hexagon.V6.ldtpnt0.128B
llvm.hexagon.V6.ldu0
llvm.hexagon.V6.ldu0.128B
llvm.hexagon.V6.lo
llvm.hexagon.V6.lo.128B
llvm.hexagon.V6.lvsplatb
llvm.hexagon.V6.lvsplatb.128B
llvm.hexagon.V6.lvsplath
llvm.hexagon.V6.lvsplath.128B
llvm.hexagon.V6.lvsplatw
llvm.hexagon.V6.lvsplatw.128B
llvm.hexagon.V6.pred.and
llvm.hexagon.V6.pred.and.128B
llvm.hexagon.V6.pred.and.n
llvm.hexagon.V6.pred.and.n.128B
llvm.hexagon.V6.pred.not
llvm.hexagon.V6.pred.not.128B
llvm.hexagon.V6.pred.or
llvm.hexagon.V6.pred.or.128B
llvm.hexagon.V6.pred.or.n
llvm.hexagon.V6.pred.or.n.128B
llvm.hexagon.V6.pred.scalar2
llvm.hexagon.V6.pred.scalar2.128B
llvm.hexagon.V6.pred.scalar2v2
llvm.hexagon.V6.pred.scalar2v2.128B
llvm.hexagon.V6.pred.xor
llvm.hexagon.V6.pred.xor.128B
llvm.hexagon.V6.shuffeqh
llvm.hexagon.V6.shuffeqh.128B
llvm.hexagon.V6.shuffeqw
llvm.hexagon.V6.shuffeqw.128B
llvm.hexagon.V6.vS32b.nqpred.ai
llvm.hexagon.V6.vS32b.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.nqpred.ai
llvm.hexagon.V6.vS32b.nt.nqpred.ai.128B
llvm.hexagon.V6.vS32b.nt.qpred.ai
llvm.hexagon.V6.vS32b.nt.qpred.ai.128B
llvm.hexagon.V6.vS32b.qpred.ai
llvm.hexagon.V6.vS32b.qpred.ai.128B
llvm.hexagon.V6.vabsb
llvm.hexagon.V6.vabsb.128B
llvm.hexagon.V6.vabsb.sat
llvm.hexagon.V6.vabsb.sat.128B
llvm.hexagon.V6.vabsdiffh
llvm.hexagon.V6.vabsdiffh.128B
llvm.hexagon.V6.vabsdiffub
llvm.hexagon.V6.vabsdiffub.128B
llvm.hexagon.V6.vabsdiffuh
llvm.hexagon.V6.vabsdiffuh.128B
llvm.hexagon.V6.vabsdiffw
llvm.hexagon.V6.vabsdiffw.128B
llvm.hexagon.V6.vabsh
llvm.hexagon.V6.vabsh.128B
llvm.hexagon.V6.vabsh.sat
llvm.hexagon.V6.vabsh.sat.128B
llvm.hexagon.V6.vabsw
llvm.hexagon.V6.vabsw.128B
llvm.hexagon.V6.vabsw.sat
llvm.hexagon.V6.vabsw.sat.128B
llvm.hexagon.V6.vaddb
llvm.hexagon.V6.vaddb.128B
llvm.hexagon.V6.vaddb.dv
llvm.hexagon.V6.vaddb.dv.128B
llvm.hexagon.V6.vaddbnq
llvm.hexagon.V6.vaddbnq.128B
llvm.hexagon.V6.vaddbq
llvm.hexagon.V6.vaddbq.128B
llvm.hexagon.V6.vaddbsat
llvm.hexagon.V6.vaddbsat.128B
llvm.hexagon.V6.vaddbsat.dv
llvm.hexagon.V6.vaddbsat.dv.128B
llvm.hexagon.V6.vaddcarry
llvm.hexagon.V6.vaddcarry.128B
llvm.hexagon.V6.vaddcarrysat
llvm.hexagon.V6.vaddcarrysat.128B
llvm.hexagon.V6.vaddclbh
llvm.hexagon.V6.vaddclbh.128B
llvm.hexagon.V6.vaddclbw
llvm.hexagon.V6.vaddclbw.128B
llvm.hexagon.V6.vaddh
llvm.hexagon.V6.vaddh.128B
llvm.hexagon.V6.vaddh.dv
llvm.hexagon.V6.vaddh.dv.128B
llvm.hexagon.V6.vaddhnq
llvm.hexagon.V6.vaddhnq.128B
llvm.hexagon.V6.vaddhq
llvm.hexagon.V6.vaddhq.128B
llvm.hexagon.V6.vaddhsat
llvm.hexagon.V6.vaddhsat.128B
llvm.hexagon.V6.vaddhsat.dv
llvm.hexagon.V6.vaddhsat.dv.128B
llvm.hexagon.V6.vaddhw
llvm.hexagon.V6.vaddhw.128B
llvm.hexagon.V6.vaddhw.acc
llvm.hexagon.V6.vaddhw.acc.128B
llvm.hexagon.V6.vaddubh
llvm.hexagon.V6.vaddubh.128B
llvm.hexagon.V6.vaddubh.acc
llvm.hexagon.V6.vaddubh.acc.128B
llvm.hexagon.V6.vaddubsat
llvm.hexagon.V6.vaddubsat.128B
llvm.hexagon.V6.vaddubsat.dv
llvm.hexagon.V6.vaddubsat.dv.128B
llvm.hexagon.V6.vaddububb.sat
llvm.hexagon.V6.vaddububb.sat.128B
llvm.hexagon.V6.vadduhsat
llvm.hexagon.V6.vadduhsat.128B
llvm.hexagon.V6.vadduhsat.dv
llvm.hexagon.V6.vadduhsat.dv.128B
llvm.hexagon.V6.vadduhw
llvm.hexagon.V6.vadduhw.128B
llvm.hexagon.V6.vadduhw.acc
llvm.hexagon.V6.vadduhw.acc.128B
llvm.hexagon.V6.vadduwsat
llvm.hexagon.V6.vadduwsat.128B
llvm.hexagon.V6.vadduwsat.dv
llvm.hexagon.V6.vadduwsat.dv.128B
llvm.hexagon.V6.vaddw
llvm.hexagon.V6.vaddw.128B
llvm.hexagon.V6.vaddw.dv
llvm.hexagon.V6.vaddw.dv.128B
llvm.hexagon.V6.vaddwnq
llvm.hexagon.V6.vaddwnq.128B
llvm.hexagon.V6.vaddwq
llvm.hexagon.V6.vaddwq.128B
llvm.hexagon.V6.vaddwsat
llvm.hexagon.V6.vaddwsat.128B
llvm.hexagon.V6.vaddwsat.dv
llvm.hexagon.V6.vaddwsat.dv.128B
llvm.hexagon.V6.valignb
llvm.hexagon.V6.valignb.128B
llvm.hexagon.V6.valignbi
llvm.hexagon.V6.valignbi.128B
llvm.hexagon.V6.vand
llvm.hexagon.V6.vand.128B
llvm.hexagon.V6.vandnqrt
llvm.hexagon.V6.vandnqrt.128B
llvm.hexagon.V6.vandnqrt.acc
llvm.hexagon.V6.vandnqrt.acc.128B
llvm.hexagon.V6.vandqrt
llvm.hexagon.V6.vandqrt.128B
llvm.hexagon.V6.vandqrt.acc
llvm.hexagon.V6.vandqrt.acc.128B
llvm.hexagon.V6.vandvnqv
llvm.hexagon.V6.vandvnqv.128B
llvm.hexagon.V6.vandvqv
llvm.hexagon.V6.vandvqv.128B
llvm.hexagon.V6.vandvrt
llvm.hexagon.V6.vandvrt.128B
llvm.hexagon.V6.vandvrt.acc
llvm.hexagon.V6.vandvrt.acc.128B
llvm.hexagon.V6.vaslh
llvm.hexagon.V6.vaslh.128B
llvm.hexagon.V6.vaslh.acc
llvm.hexagon.V6.vaslh.acc.128B
llvm.hexagon.V6.vaslhv
llvm.hexagon.V6.vaslhv.128B
llvm.hexagon.V6.vaslw
llvm.hexagon.V6.vaslw.128B
llvm.hexagon.V6.vaslw.acc
llvm.hexagon.V6.vaslw.acc.128B
llvm.hexagon.V6.vaslwv
llvm.hexagon.V6.vaslwv.128B
llvm.hexagon.V6.vasr.into
llvm.hexagon.V6.vasr.into.128B
llvm.hexagon.V6.vasrh
llvm.hexagon.V6.vasrh.128B
llvm.hexagon.V6.vasrh.acc
llvm.hexagon.V6.vasrh.acc.128B
llvm.hexagon.V6.vasrhbrndsat
llvm.hexagon.V6.vasrhbrndsat.128B
llvm.hexagon.V6.vasrhbsat
llvm.hexagon.V6.vasrhbsat.128B
llvm.hexagon.V6.vasrhubrndsat
llvm.hexagon.V6.vasrhubrndsat.128B
llvm.hexagon.V6.vasrhubsat
llvm.hexagon.V6.vasrhubsat.128B
llvm.hexagon.V6.vasrhv
llvm.hexagon.V6.vasrhv.128B
llvm.hexagon.V6.vasruhubrndsat
llvm.hexagon.V6.vasruhubrndsat.128B
llvm.hexagon.V6.vasruhubsat
llvm.hexagon.V6.vasruhubsat.128B
llvm.hexagon.V6.vasruwuhrndsat
llvm.hexagon.V6.vasruwuhrndsat.128B
llvm.hexagon.V6.vasruwuhsat
llvm.hexagon.V6.vasruwuhsat.128B
llvm.hexagon.V6.vasrw
llvm.hexagon.V6.vasrw.128B
llvm.hexagon.V6.vasrw.acc
llvm.hexagon.V6.vasrw.acc.128B
llvm.hexagon.V6.vasrwh
llvm.hexagon.V6.vasrwh.128B
llvm.hexagon.V6.vasrwhrndsat
llvm.hexagon.V6.vasrwhrndsat.128B
llvm.hexagon.V6.vasrwhsat
llvm.hexagon.V6.vasrwhsat.128B
llvm.hexagon.V6.vasrwuhrndsat
llvm.hexagon.V6.vasrwuhrndsat.128B
llvm.hexagon.V6.vasrwuhsat
llvm.hexagon.V6.vasrwuhsat.128B
llvm.hexagon.V6.vasrwv
llvm.hexagon.V6.vasrwv.128B
llvm.hexagon.V6.vassign
llvm.hexagon.V6.vassign.128B
llvm.hexagon.V6.vassignp
llvm.hexagon.V6.vassignp.128B
llvm.hexagon.V6.vavgb
llvm.hexagon.V6.vavgb.128B
llvm.hexagon.V6.vavgbrnd
llvm.hexagon.V6.vavgbrnd.128B
llvm.hexagon.V6.vavgh
llvm.hexagon.V6.vavgh.128B
llvm.hexagon.V6.vavghrnd
llvm.hexagon.V6.vavghrnd.128B
llvm.hexagon.V6.vavgub
llvm.hexagon.V6.vavgub.128B
llvm.hexagon.V6.vavgubrnd
llvm.hexagon.V6.vavgubrnd.128B
llvm.hexagon.V6.vavguh
llvm.hexagon.V6.vavguh.128B
llvm.hexagon.V6.vavguhrnd
llvm.hexagon.V6.vavguhrnd.128B
llvm.hexagon.V6.vavguw
llvm.hexagon.V6.vavguw.128B
llvm.hexagon.V6.vavguwrnd
llvm.hexagon.V6.vavguwrnd.128B
llvm.hexagon.V6.vavgw
llvm.hexagon.V6.vavgw.128B
llvm.hexagon.V6.vavgwrnd
llvm.hexagon.V6.vavgwrnd.128B
llvm.hexagon.V6.vcl0h
llvm.hexagon.V6.vcl0h.128B
llvm.hexagon.V6.vcl0w
llvm.hexagon.V6.vcl0w.128B
llvm.hexagon.V6.vcombine
llvm.hexagon.V6.vcombine.128B
llvm.hexagon.V6.vd0
llvm.hexagon.V6.vd0.128B
llvm.hexagon.V6.vdd0
llvm.hexagon.V6.vdd0.128B
llvm.hexagon.V6.vdealb
llvm.hexagon.V6.vdealb.128B
llvm.hexagon.V6.vdealb4w
llvm.hexagon.V6.vdealb4w.128B
llvm.hexagon.V6.vdealh
llvm.hexagon.V6.vdealh.128B
llvm.hexagon.V6.vdealvdd
llvm.hexagon.V6.vdealvdd.128B
llvm.hexagon.V6.vdelta
llvm.hexagon.V6.vdelta.128B
llvm.hexagon.V6.vdmpybus
llvm.hexagon.V6.vdmpybus.128B
llvm.hexagon.V6.vdmpybus.acc
llvm.hexagon.V6.vdmpybus.acc.128B
llvm.hexagon.V6.vdmpybus.dv
llvm.hexagon.V6.vdmpybus.dv.128B
llvm.hexagon.V6.vdmpybus.dv.acc
llvm.hexagon.V6.vdmpybus.dv.acc.128B
llvm.hexagon.V6.vdmpyhb
llvm.hexagon.V6.vdmpyhb.128B
llvm.hexagon.V6.vdmpyhb.acc
llvm.hexagon.V6.vdmpyhb.acc.128B
llvm.hexagon.V6.vdmpyhb.dv
llvm.hexagon.V6.vdmpyhb.dv.128B
llvm.hexagon.V6.vdmpyhb.dv.acc
llvm.hexagon.V6.vdmpyhb.dv.acc.128B
llvm.hexagon.V6.vdmpyhisat
llvm.hexagon.V6.vdmpyhisat.128B
llvm.hexagon.V6.vdmpyhisat.acc
llvm.hexagon.V6.vdmpyhisat.acc.128B
llvm.hexagon.V6.vdmpyhsat
llvm.hexagon.V6.vdmpyhsat.128B
llvm.hexagon.V6.vdmpyhsat.acc
llvm.hexagon.V6.vdmpyhsat.acc.128B
llvm.hexagon.V6.vdmpyhsuisat
llvm.hexagon.V6.vdmpyhsuisat.128B
llvm.hexagon.V6.vdmpyhsuisat.acc
llvm.hexagon.V6.vdmpyhsuisat.acc.128B
llvm.hexagon.V6.vdmpyhsusat
llvm.hexagon.V6.vdmpyhsusat.128B
llvm.hexagon.V6.vdmpyhsusat.acc
llvm.hexagon.V6.vdmpyhsusat.acc.128B
llvm.hexagon.V6.vdmpyhvsat
llvm.hexagon.V6.vdmpyhvsat.128B
llvm.hexagon.V6.vdmpyhvsat.acc
llvm.hexagon.V6.vdmpyhvsat.acc.128B
llvm.hexagon.V6.vdsaduh
llvm.hexagon.V6.vdsaduh.128B
llvm.hexagon.V6.vdsaduh.acc
llvm.hexagon.V6.vdsaduh.acc.128B
llvm.hexagon.V6.veqb
llvm.hexagon.V6.veqb.128B
llvm.hexagon.V6.veqb.and
llvm.hexagon.V6.veqb.and.128B
llvm.hexagon.V6.veqb.or
llvm.hexagon.V6.veqb.or.128B
llvm.hexagon.V6.veqb.xor
llvm.hexagon.V6.veqb.xor.128B
llvm.hexagon.V6.veqh
llvm.hexagon.V6.veqh.128B
llvm.hexagon.V6.veqh.and
llvm.hexagon.V6.veqh.and.128B
llvm.hexagon.V6.veqh.or
llvm.hexagon.V6.veqh.or.128B
llvm.hexagon.V6.veqh.xor
llvm.hexagon.V6.veqh.xor.128B
llvm.hexagon.V6.veqw
llvm.hexagon.V6.veqw.128B
llvm.hexagon.V6.veqw.and
llvm.hexagon.V6.veqw.and.128B
llvm.hexagon.V6.veqw.or
llvm.hexagon.V6.veqw.or.128B
llvm.hexagon.V6.veqw.xor
llvm.hexagon.V6.veqw.xor.128B
llvm.hexagon.V6.vgathermh
llvm.hexagon.V6.vgathermh.128B
llvm.hexagon.V6.vgathermhq
llvm.hexagon.V6.vgathermhq.128B
llvm.hexagon.V6.vgathermhw
llvm.hexagon.V6.vgathermhw.128B
llvm.hexagon.V6.vgathermhwq
llvm.hexagon.V6.vgathermhwq.128B
llvm.hexagon.V6.vgathermw
llvm.hexagon.V6.vgathermw.128B
llvm.hexagon.V6.vgathermwq
llvm.hexagon.V6.vgathermwq.128B
llvm.hexagon.V6.vgtb
llvm.hexagon.V6.vgtb.128B
llvm.hexagon.V6.vgtb.and
llvm.hexagon.V6.vgtb.and.128B
llvm.hexagon.V6.vgtb.or
llvm.hexagon.V6.vgtb.or.128B
llvm.hexagon.V6.vgtb.xor
llvm.hexagon.V6.vgtb.xor.128B
llvm.hexagon.V6.vgth
llvm.hexagon.V6.vgth.128B
llvm.hexagon.V6.vgth.and
llvm.hexagon.V6.vgth.and.128B
llvm.hexagon.V6.vgth.or
llvm.hexagon.V6.vgth.or.128B
llvm.hexagon.V6.vgth.xor
llvm.hexagon.V6.vgth.xor.128B
llvm.hexagon.V6.vgtub
llvm.hexagon.V6.vgtub.128B
llvm.hexagon.V6.vgtub.and
llvm.hexagon.V6.vgtub.and.128B
llvm.hexagon.V6.vgtub.or
llvm.hexagon.V6.vgtub.or.128B
llvm.hexagon.V6.vgtub.xor
llvm.hexagon.V6.vgtub.xor.128B
llvm.hexagon.V6.vgtuh
llvm.hexagon.V6.vgtuh.128B
llvm.hexagon.V6.vgtuh.and
llvm.hexagon.V6.vgtuh.and.128B
llvm.hexagon.V6.vgtuh.or
llvm.hexagon.V6.vgtuh.or.128B
llvm.hexagon.V6.vgtuh.xor
llvm.hexagon.V6.vgtuh.xor.128B
llvm.hexagon.V6.vgtuw
llvm.hexagon.V6.vgtuw.128B
llvm.hexagon.V6.vgtuw.and
llvm.hexagon.V6.vgtuw.and.128B
llvm.hexagon.V6.vgtuw.or
llvm.hexagon.V6.vgtuw.or.128B
llvm.hexagon.V6.vgtuw.xor
llvm.hexagon.V6.vgtuw.xor.128B
llvm.hexagon.V6.vgtw
llvm.hexagon.V6.vgtw.128B
llvm.hexagon.V6.vgtw.and
llvm.hexagon.V6.vgtw.and.128B
llvm.hexagon.V6.vgtw.or
llvm.hexagon.V6.vgtw.or.128B
llvm.hexagon.V6.vgtw.xor
llvm.hexagon.V6.vgtw.xor.128B
llvm.hexagon.V6.vinsertwr
llvm.hexagon.V6.vinsertwr.128B
llvm.hexagon.V6.vlalignb
llvm.hexagon.V6.vlalignb.128B
llvm.hexagon.V6.vlalignbi
llvm.hexagon.V6.vlalignbi.128B
llvm.hexagon.V6.vlsrb
llvm.hexagon.V6.vlsrb.128B
llvm.hexagon.V6.vlsrh
llvm.hexagon.V6.vlsrh.128B
llvm.hexagon.V6.vlsrhv
llvm.hexagon.V6.vlsrhv.128B
llvm.hexagon.V6.vlsrw
llvm.hexagon.V6.vlsrw.128B
llvm.hexagon.V6.vlsrwv
llvm.hexagon.V6.vlsrwv.128B
llvm.hexagon.V6.vlut4
llvm.hexagon.V6.vlut4.128B
llvm.hexagon.V6.vlutvvb
llvm.hexagon.V6.vlutvvb.128B
llvm.hexagon.V6.vlutvvb.nm
llvm.hexagon.V6.vlutvvb.nm.128B
llvm.hexagon.V6.vlutvvb.oracc
llvm.hexagon.V6.vlutvvb.oracc.128B
llvm.hexagon.V6.vlutvvb.oracci
llvm.hexagon.V6.vlutvvb.oracci.128B
llvm.hexagon.V6.vlutvvbi
llvm.hexagon.V6.vlutvvbi.128B
llvm.hexagon.V6.vlutvwh
llvm.hexagon.V6.vlutvwh.128B
llvm.hexagon.V6.vlutvwh.nm
llvm.hexagon.V6.vlutvwh.nm.128B
llvm.hexagon.V6.vlutvwh.oracc
llvm.hexagon.V6.vlutvwh.oracc.128B
llvm.hexagon.V6.vlutvwh.oracci
llvm.hexagon.V6.vlutvwh.oracci.128B
llvm.hexagon.V6.vlutvwhi
llvm.hexagon.V6.vlutvwhi.128B
llvm.hexagon.V6.vmaskedstorenq
llvm.hexagon.V6.vmaskedstorenq.128B
llvm.hexagon.V6.vmaskedstorentnq
llvm.hexagon.V6.vmaskedstorentnq.128B
llvm.hexagon.V6.vmaskedstorentq
llvm.hexagon.V6.vmaskedstorentq.128B
llvm.hexagon.V6.vmaskedstoreq
llvm.hexagon.V6.vmaskedstoreq.128B
llvm.hexagon.V6.vmaxb
llvm.hexagon.V6.vmaxb.128B
llvm.hexagon.V6.vmaxh
llvm.hexagon.V6.vmaxh.128B
llvm.hexagon.V6.vmaxub
llvm.hexagon.V6.vmaxub.128B
llvm.hexagon.V6.vmaxuh
llvm.hexagon.V6.vmaxuh.128B
llvm.hexagon.V6.vmaxw
llvm.hexagon.V6.vmaxw.128B
llvm.hexagon.V6.vminb
llvm.hexagon.V6.vminb.128B
llvm.hexagon.V6.vminh
llvm.hexagon.V6.vminh.128B
llvm.hexagon.V6.vminub
llvm.hexagon.V6.vminub.128B
llvm.hexagon.V6.vminuh
llvm.hexagon.V6.vminuh.128B
llvm.hexagon.V6.vminw
llvm.hexagon.V6.vminw.128B
llvm.hexagon.V6.vmpabus
llvm.hexagon.V6.vmpabus.128B
llvm.hexagon.V6.vmpabus.acc
llvm.hexagon.V6.vmpabus.acc.128B
llvm.hexagon.V6.vmpabusv
llvm.hexagon.V6.vmpabusv.128B
llvm.hexagon.V6.vmpabuu
llvm.hexagon.V6.vmpabuu.128B
llvm.hexagon.V6.vmpabuu.acc
llvm.hexagon.V6.vmpabuu.acc.128B
llvm.hexagon.V6.vmpabuuv
llvm.hexagon.V6.vmpabuuv.128B
llvm.hexagon.V6.vmpahb
llvm.hexagon.V6.vmpahb.128B
llvm.hexagon.V6.vmpahb.acc
llvm.hexagon.V6.vmpahb.acc.128B
llvm.hexagon.V6.vmpahhsat
llvm.hexagon.V6.vmpahhsat.128B
llvm.hexagon.V6.vmpauhb
llvm.hexagon.V6.vmpauhb.128B
llvm.hexagon.V6.vmpauhb.acc
llvm.hexagon.V6.vmpauhb.acc.128B
llvm.hexagon.V6.vmpauhuhsat
llvm.hexagon.V6.vmpauhuhsat.128B
llvm.hexagon.V6.vmpsuhuhsat
llvm.hexagon.V6.vmpsuhuhsat.128B
llvm.hexagon.V6.vmpybus
llvm.hexagon.V6.vmpybus.128B
llvm.hexagon.V6.vmpybus.acc
llvm.hexagon.V6.vmpybus.acc.128B
llvm.hexagon.V6.vmpybusv
llvm.hexagon.V6.vmpybusv.128B
llvm.hexagon.V6.vmpybusv.acc
llvm.hexagon.V6.vmpybusv.acc.128B
llvm.hexagon.V6.vmpybv
llvm.hexagon.V6.vmpybv.128B
llvm.hexagon.V6.vmpybv.acc
llvm.hexagon.V6.vmpybv.acc.128B
llvm.hexagon.V6.vmpyewuh
llvm.hexagon.V6.vmpyewuh.128B
llvm.hexagon.V6.vmpyewuh.64
llvm.hexagon.V6.vmpyewuh.64.128B
llvm.hexagon.V6.vmpyh
llvm.hexagon.V6.vmpyh.128B
llvm.hexagon.V6.vmpyh.acc
llvm.hexagon.V6.vmpyh.acc.128B
llvm.hexagon.V6.vmpyhsat.acc
llvm.hexagon.V6.vmpyhsat.acc.128B
llvm.hexagon.V6.vmpyhsrs
llvm.hexagon.V6.vmpyhsrs.128B
llvm.hexagon.V6.vmpyhss
llvm.hexagon.V6.vmpyhss.128B
llvm.hexagon.V6.vmpyhus
llvm.hexagon.V6.vmpyhus.128B
llvm.hexagon.V6.vmpyhus.acc
llvm.hexagon.V6.vmpyhus.acc.128B
llvm.hexagon.V6.vmpyhv
llvm.hexagon.V6.vmpyhv.128B
llvm.hexagon.V6.vmpyhv.acc
llvm.hexagon.V6.vmpyhv.acc.128B
llvm.hexagon.V6.vmpyhvsrs
llvm.hexagon.V6.vmpyhvsrs.128B
llvm.hexagon.V6.vmpyieoh
llvm.hexagon.V6.vmpyieoh.128B
llvm.hexagon.V6.vmpyiewh.acc
llvm.hexagon.V6.vmpyiewh.acc.128B
llvm.hexagon.V6.vmpyiewuh
llvm.hexagon.V6.vmpyiewuh.128B
llvm.hexagon.V6.vmpyiewuh.acc
llvm.hexagon.V6.vmpyiewuh.acc.128B
llvm.hexagon.V6.vmpyih
llvm.hexagon.V6.vmpyih.128B
llvm.hexagon.V6.vmpyih.acc
llvm.hexagon.V6.vmpyih.acc.128B
llvm.hexagon.V6.vmpyihb
llvm.hexagon.V6.vmpyihb.128B
llvm.hexagon.V6.vmpyihb.acc
llvm.hexagon.V6.vmpyihb.acc.128B
llvm.hexagon.V6.vmpyiowh
llvm.hexagon.V6.vmpyiowh.128B
llvm.hexagon.V6.vmpyiwb
llvm.hexagon.V6.vmpyiwb.128B
llvm.hexagon.V6.vmpyiwb.acc
llvm.hexagon.V6.vmpyiwb.acc.128B
llvm.hexagon.V6.vmpyiwh
llvm.hexagon.V6.vmpyiwh.128B
llvm.hexagon.V6.vmpyiwh.acc
llvm.hexagon.V6.vmpyiwh.acc.128B
llvm.hexagon.V6.vmpyiwub
llvm.hexagon.V6.vmpyiwub.128B
llvm.hexagon.V6.vmpyiwub.acc
llvm.hexagon.V6.vmpyiwub.acc.128B
llvm.hexagon.V6.vmpyowh
llvm.hexagon.V6.vmpyowh.128B
llvm.hexagon.V6.vmpyowh.64.acc
llvm.hexagon.V6.vmpyowh.64.acc.128B
llvm.hexagon.V6.vmpyowh.rnd
llvm.hexagon.V6.vmpyowh.rnd.128B
llvm.hexagon.V6.vmpyowh.rnd.sacc
llvm.hexagon.V6.vmpyowh.rnd.sacc.128B
llvm.hexagon.V6.vmpyowh.sacc
llvm.hexagon.V6.vmpyowh.sacc.128B
llvm.hexagon.V6.vmpyub
llvm.hexagon.V6.vmpyub.128B
llvm.hexagon.V6.vmpyub.acc
llvm.hexagon.V6.vmpyub.acc.128B
llvm.hexagon.V6.vmpyubv
llvm.hexagon.V6.vmpyubv.128B
llvm.hexagon.V6.vmpyubv.acc
llvm.hexagon.V6.vmpyubv.acc.128B
llvm.hexagon.V6.vmpyuh
llvm.hexagon.V6.vmpyuh.128B
llvm.hexagon.V6.vmpyuh.acc
llvm.hexagon.V6.vmpyuh.acc.128B
llvm.hexagon.V6.vmpyuhe
llvm.hexagon.V6.vmpyuhe.128B
llvm.hexagon.V6.vmpyuhe.acc
llvm.hexagon.V6.vmpyuhe.acc.128B
llvm.hexagon.V6.vmpyuhv
llvm.hexagon.V6.vmpyuhv.128B
llvm.hexagon.V6.vmpyuhv.acc
llvm.hexagon.V6.vmpyuhv.acc.128B
llvm.hexagon.V6.vmux
llvm.hexagon.V6.vmux.128B
llvm.hexagon.V6.vnavgb
llvm.hexagon.V6.vnavgb.128B
llvm.hexagon.V6.vnavgh
llvm.hexagon.V6.vnavgh.128B
llvm.hexagon.V6.vnavgub
llvm.hexagon.V6.vnavgub.128B
llvm.hexagon.V6.vnavgw
llvm.hexagon.V6.vnavgw.128B
llvm.hexagon.V6.vnormamth
llvm.hexagon.V6.vnormamth.128B
llvm.hexagon.V6.vnormamtw
llvm.hexagon.V6.vnormamtw.128B
llvm.hexagon.V6.vnot
llvm.hexagon.V6.vnot.128B
llvm.hexagon.V6.vor
llvm.hexagon.V6.vor.128B
llvm.hexagon.V6.vpackeb
llvm.hexagon.V6.vpackeb.128B
llvm.hexagon.V6.vpackeh
llvm.hexagon.V6.vpackeh.128B
llvm.hexagon.V6.vpackhb.sat
llvm.hexagon.V6.vpackhb.sat.128B
llvm.hexagon.V6.vpackhub.sat
llvm.hexagon.V6.vpackhub.sat.128B
llvm.hexagon.V6.vpackob
llvm.hexagon.V6.vpackob.128B
llvm.hexagon.V6.vpackoh
llvm.hexagon.V6.vpackoh.128B
llvm.hexagon.V6.vpackwh.sat
llvm.hexagon.V6.vpackwh.sat.128B
llvm.hexagon.V6.vpackwuh.sat
llvm.hexagon.V6.vpackwuh.sat.128B
llvm.hexagon.V6.vpopcounth
llvm.hexagon.V6.vpopcounth.128B
llvm.hexagon.V6.vprefixqb
llvm.hexagon.V6.vprefixqb.128B
llvm.hexagon.V6.vprefixqh
llvm.hexagon.V6.vprefixqh.128B
llvm.hexagon.V6.vprefixqw
llvm.hexagon.V6.vprefixqw.128B
llvm.hexagon.V6.vrdelta
llvm.hexagon.V6.vrdelta.128B
llvm.hexagon.V6.vrmpybub.rtt
llvm.hexagon.V6.vrmpybub.rtt.128B
llvm.hexagon.V6.vrmpybub.rtt.acc
llvm.hexagon.V6.vrmpybub.rtt.acc.128B
llvm.hexagon.V6.vrmpybus
llvm.hexagon.V6.vrmpybus.128B
llvm.hexagon.V6.vrmpybus.acc
llvm.hexagon.V6.vrmpybus.acc.128B
llvm.hexagon.V6.vrmpybusi
llvm.hexagon.V6.vrmpybusi.128B
llvm.hexagon.V6.vrmpybusi.acc
llvm.hexagon.V6.vrmpybusi.acc.128B
llvm.hexagon.V6.vrmpybusv
llvm.hexagon.V6.vrmpybusv.128B
llvm.hexagon.V6.vrmpybusv.acc
llvm.hexagon.V6.vrmpybusv.acc.128B
llvm.hexagon.V6.vrmpybv
llvm.hexagon.V6.vrmpybv.128B
llvm.hexagon.V6.vrmpybv.acc
llvm.hexagon.V6.vrmpybv.acc.128B
llvm.hexagon.V6.vrmpyub
llvm.hexagon.V6.vrmpyub.128B
llvm.hexagon.V6.vrmpyub.acc
llvm.hexagon.V6.vrmpyub.acc.128B
llvm.hexagon.V6.vrmpyub.rtt
llvm.hexagon.V6.vrmpyub.rtt.128B
llvm.hexagon.V6.vrmpyub.rtt.acc
llvm.hexagon.V6.vrmpyub.rtt.acc.128B
llvm.hexagon.V6.vrmpyubi
llvm.hexagon.V6.vrmpyubi.128B
llvm.hexagon.V6.vrmpyubi.acc
llvm.hexagon.V6.vrmpyubi.acc.128B
llvm.hexagon.V6.vrmpyubv
llvm.hexagon.V6.vrmpyubv.128B
llvm.hexagon.V6.vrmpyubv.acc
llvm.hexagon.V6.vrmpyubv.acc.128B
llvm.hexagon.V6.vror
llvm.hexagon.V6.vror.128B
llvm.hexagon.V6.vrotr
llvm.hexagon.V6.vrotr.128B
llvm.hexagon.V6.vroundhb
llvm.hexagon.V6.vroundhb.128B
llvm.hexagon.V6.vroundhub
llvm.hexagon.V6.vroundhub.128B
llvm.hexagon.V6.vrounduhub
llvm.hexagon.V6.vrounduhub.128B
llvm.hexagon.V6.vrounduwuh
llvm.hexagon.V6.vrounduwuh.128B
llvm.hexagon.V6.vroundwh
llvm.hexagon.V6.vroundwh.128B
llvm.hexagon.V6.vroundwuh
llvm.hexagon.V6.vroundwuh.128B
llvm.hexagon.V6.vrsadubi
llvm.hexagon.V6.vrsadubi.128B
llvm.hexagon.V6.vrsadubi.acc
llvm.hexagon.V6.vrsadubi.acc.128B
llvm.hexagon.V6.vsatdw
llvm.hexagon.V6.vsatdw.128B
llvm.hexagon.V6.vsathub
llvm.hexagon.V6.vsathub.128B
llvm.hexagon.V6.vsatuwuh
llvm.hexagon.V6.vsatuwuh.128B
llvm.hexagon.V6.vsatwh
llvm.hexagon.V6.vsatwh.128B
llvm.hexagon.V6.vsb
llvm.hexagon.V6.vsb.128B
llvm.hexagon.V6.vscattermh
llvm.hexagon.V6.vscattermh.128B
llvm.hexagon.V6.vscattermh.add
llvm.hexagon.V6.vscattermh.add.128B
llvm.hexagon.V6.vscattermhq
llvm.hexagon.V6.vscattermhq.128B
llvm.hexagon.V6.vscattermhw
llvm.hexagon.V6.vscattermhw.128B
llvm.hexagon.V6.vscattermhw.add
llvm.hexagon.V6.vscattermhw.add.128B
llvm.hexagon.V6.vscattermhwq
llvm.hexagon.V6.vscattermhwq.128B
llvm.hexagon.V6.vscattermw
llvm.hexagon.V6.vscattermw.128B
llvm.hexagon.V6.vscattermw.add
llvm.hexagon.V6.vscattermw.add.128B
llvm.hexagon.V6.vscattermwq
llvm.hexagon.V6.vscattermwq.128B
llvm.hexagon.V6.vsh
llvm.hexagon.V6.vsh.128B
llvm.hexagon.V6.vshufeh
llvm.hexagon.V6.vshufeh.128B
llvm.hexagon.V6.vshuffb
llvm.hexagon.V6.vshuffb.128B
llvm.hexagon.V6.vshuffeb
llvm.hexagon.V6.vshuffeb.128B
llvm.hexagon.V6.vshuffh
llvm.hexagon.V6.vshuffh.128B
llvm.hexagon.V6.vshuffob
llvm.hexagon.V6.vshuffob.128B
llvm.hexagon.V6.vshuffvdd
llvm.hexagon.V6.vshuffvdd.128B
llvm.hexagon.V6.vshufoeb
llvm.hexagon.V6.vshufoeb.128B
llvm.hexagon.V6.vshufoeh
llvm.hexagon.V6.vshufoeh.128B
llvm.hexagon.V6.vshufoh
llvm.hexagon.V6.vshufoh.128B
llvm.hexagon.V6.vsubb
llvm.hexagon.V6.vsubb.128B
llvm.hexagon.V6.vsubb.dv
llvm.hexagon.V6.vsubb.dv.128B
llvm.hexagon.V6.vsubbnq
llvm.hexagon.V6.vsubbnq.128B
llvm.hexagon.V6.vsubbq
llvm.hexagon.V6.vsubbq.128B
llvm.hexagon.V6.vsubbsat
llvm.hexagon.V6.vsubbsat.128B
llvm.hexagon.V6.vsubbsat.dv
llvm.hexagon.V6.vsubbsat.dv.128B
llvm.hexagon.V6.vsubcarry
llvm.hexagon.V6.vsubcarry.128B
llvm.hexagon.V6.vsubh
llvm.hexagon.V6.vsubh.128B
llvm.hexagon.V6.vsubh.dv
llvm.hexagon.V6.vsubh.dv.128B
llvm.hexagon.V6.vsubhnq
llvm.hexagon.V6.vsubhnq.128B
llvm.hexagon.V6.vsubhq
llvm.hexagon.V6.vsubhq.128B
llvm.hexagon.V6.vsubhsat
llvm.hexagon.V6.vsubhsat.128B
llvm.hexagon.V6.vsubhsat.dv
llvm.hexagon.V6.vsubhsat.dv.128B
llvm.hexagon.V6.vsubhw
llvm.hexagon.V6.vsubhw.128B
llvm.hexagon.V6.vsububh
llvm.hexagon.V6.vsububh.128B
llvm.hexagon.V6.vsububsat
llvm.hexagon.V6.vsububsat.128B
llvm.hexagon.V6.vsububsat.dv
llvm.hexagon.V6.vsububsat.dv.128B
llvm.hexagon.V6.vsubububb.sat
llvm.hexagon.V6.vsubububb.sat.128B
llvm.hexagon.V6.vsubuhsat
llvm.hexagon.V6.vsubuhsat.128B
llvm.hexagon.V6.vsubuhsat.dv
llvm.hexagon.V6.vsubuhsat.dv.128B
llvm.hexagon.V6.vsubuhw
llvm.hexagon.V6.vsubuhw.128B
llvm.hexagon.V6.vsubuwsat
llvm.hexagon.V6.vsubuwsat.128B
llvm.hexagon.V6.vsubuwsat.dv
llvm.hexagon.V6.vsubuwsat.dv.128B
llvm.hexagon.V6.vsubw
llvm.hexagon.V6.vsubw.128B
llvm.hexagon.V6.vsubw.dv
llvm.hexagon.V6.vsubw.dv.128B
llvm.hexagon.V6.vsubwnq
llvm.hexagon.V6.vsubwnq.128B
llvm.hexagon.V6.vsubwq
llvm.hexagon.V6.vsubwq.128B
llvm.hexagon.V6.vsubwsat
llvm.hexagon.V6.vsubwsat.128B
llvm.hexagon.V6.vsubwsat.dv
llvm.hexagon.V6.vsubwsat.dv.128B
llvm.hexagon.V6.vswap
llvm.hexagon.V6.vswap.128B
llvm.hexagon.V6.vtmpyb
llvm.hexagon.V6.vtmpyb.128B
llvm.hexagon.V6.vtmpyb.acc
llvm.hexagon.V6.vtmpyb.acc.128B
llvm.hexagon.V6.vtmpybus
llvm.hexagon.V6.vtmpybus.128B
llvm.hexagon.V6.vtmpybus.acc
llvm.hexagon.V6.vtmpybus.acc.128B
llvm.hexagon.V6.vtmpyhb
llvm.hexagon.V6.vtmpyhb.128B
llvm.hexagon.V6.vtmpyhb.acc
llvm.hexagon.V6.vtmpyhb.acc.128B
llvm.hexagon.V6.vtran2x2.map
llvm.hexagon.V6.vtran2x2.map.128B
llvm.hexagon.V6.vunpackb
llvm.hexagon.V6.vunpackb.128B
llvm.hexagon.V6.vunpackh
llvm.hexagon.V6.vunpackh.128B
llvm.hexagon.V6.vunpackob
llvm.hexagon.V6.vunpackob.128B
llvm.hexagon.V6.vunpackoh
llvm.hexagon.V6.vunpackoh.128B
llvm.hexagon.V6.vunpackub
llvm.hexagon.V6.vunpackub.128B
llvm.hexagon.V6.vunpackuh
llvm.hexagon.V6.vunpackuh.128B
llvm.hexagon.V6.vxor
llvm.hexagon.V6.vxor.128B
llvm.hexagon.V6.vzb
llvm.hexagon.V6.vzb.128B
llvm.hexagon.V6.vzh
llvm.hexagon.V6.vzh.128B
llvm.hexagon.Y2.dccleana
llvm.hexagon.Y2.dccleaninva
llvm.hexagon.Y2.dcinva
llvm.hexagon.Y2.dczeroa
llvm.hexagon.Y4.l2fetch
llvm.hexagon.Y5.l2fetch
llvm.hexagon.circ.ldb
llvm.hexagon.circ.ldd
llvm.hexagon.circ.ldh
llvm.hexagon.circ.ldub
llvm.hexagon.circ.lduh
llvm.hexagon.circ.ldw
llvm.hexagon.circ.stb
llvm.hexagon.circ.std
llvm.hexagon.circ.sth
llvm.hexagon.circ.sthhi
llvm.hexagon.circ.stw
llvm.hexagon.prefetch
llvm.hexagon.vmemcpy
llvm.hexagon.vmemset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.add.gen.f.cta
llvm.nvvm.atomic.add.gen.f.sys
llvm.nvvm.atomic.add.gen.i.cta
llvm.nvvm.atomic.add.gen.i.sys
llvm.nvvm.atomic.and.gen.i.cta
llvm.nvvm.atomic.and.gen.i.sys
llvm.nvvm.atomic.cas.gen.i.cta
llvm.nvvm.atomic.cas.gen.i.sys
llvm.nvvm.atomic.dec.gen.i.cta
llvm.nvvm.atomic.dec.gen.i.sys
llvm.nvvm.atomic.exch.gen.i.cta
llvm.nvvm.atomic.exch.gen.i.sys
llvm.nvvm.atomic.inc.gen.i.cta
llvm.nvvm.atomic.inc.gen.i.sys
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.add.f64
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.atomic.max.gen.i.cta
llvm.nvvm.atomic.max.gen.i.sys
llvm.nvvm.atomic.min.gen.i.cta
llvm.nvvm.atomic.min.gen.i.sys
llvm.nvvm.atomic.or.gen.i.cta
llvm.nvvm.atomic.or.gen.i.sys
llvm.nvvm.atomic.xor.gen.i.cta
llvm.nvvm.atomic.xor.gen.i.sys
llvm.nvvm.bar.sync
llvm.nvvm.bar.warp.sync
llvm.nvvm.barrier
llvm.nvvm.barrier.n
llvm.nvvm.barrier.sync
llvm.nvvm.barrier.sync.cnt
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.fns
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.match.all.sync.i32p
llvm.nvvm.match.all.sync.i64p
llvm.nvvm.match.any.sync.i32
llvm.nvvm.match.any.sync.i64
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.clock
llvm.nvvm.read.ptx.sreg.clock64
llvm.nvvm.read.ptx.sreg.ctaid.w
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.gridid
llvm.nvvm.read.ptx.sreg.laneid
llvm.nvvm.read.ptx.sreg.lanemask.eq
llvm.nvvm.read.ptx.sreg.lanemask.ge
llvm.nvvm.read.ptx.sreg.lanemask.gt
llvm.nvvm.read.ptx.sreg.lanemask.le
llvm.nvvm.read.ptx.sreg.lanemask.lt
llvm.nvvm.read.ptx.sreg.nctaid.w
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.nsmid
llvm.nvvm.read.ptx.sreg.ntid.w
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.nwarpid
llvm.nvvm.read.ptx.sreg.pm0
llvm.nvvm.read.ptx.sreg.pm1
llvm.nvvm.read.ptx.sreg.pm2
llvm.nvvm.read.ptx.sreg.pm3
llvm.nvvm.read.ptx.sreg.smid
llvm.nvvm.read.ptx.sreg.tid.w
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpid
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.shfl.bfly.f32
llvm.nvvm.shfl.bfly.i32
llvm.nvvm.shfl.down.f32
llvm.nvvm.shfl.down.i32
llvm.nvvm.shfl.idx.f32
llvm.nvvm.shfl.idx.i32
llvm.nvvm.shfl.sync.bfly.f32
llvm.nvvm.shfl.sync.bfly.i32
llvm.nvvm.shfl.sync.down.f32
llvm.nvvm.shfl.sync.down.i32
llvm.nvvm.shfl.sync.idx.f32
llvm.nvvm.shfl.sync.idx.i32
llvm.nvvm.shfl.sync.up.f32
llvm.nvvm.shfl.sync.up.i32
llvm.nvvm.shfl.up.f32
llvm.nvvm.shfl.up.i32
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.nvvm.vote.all
llvm.nvvm.vote.all.sync
llvm.nvvm.vote.any
llvm.nvvm.vote.any.sync
llvm.nvvm.vote.ballot
llvm.nvvm.vote.ballot.sync
llvm.nvvm.vote.uni
llvm.nvvm.vote.uni.sync
llvm.nvvm.wmma.m16n16k16.load.a.col.f16
llvm.nvvm.wmma.m16n16k16.load.a.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.f16
llvm.nvvm.wmma.m16n16k16.load.a.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.f16
llvm.nvvm.wmma.m16n16k16.load.b.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.f16
llvm.nvvm.wmma.m16n16k16.load.b.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.f32
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.col.stride.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.f32
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f16
llvm.nvvm.wmma.m16n16k16.load.c.row.stride.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m16n16k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m16n16k16.store.d.col.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.f32
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.col.stride.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.f32
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f16
llvm.nvvm.wmma.m16n16k16.store.d.row.stride.f32
llvm.nvvm.wmma.m32n8k16.load.a.col.f16
llvm.nvvm.wmma.m32n8k16.load.a.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.f16
llvm.nvvm.wmma.m32n8k16.load.a.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.f16
llvm.nvvm.wmma.m32n8k16.load.b.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.f16
llvm.nvvm.wmma.m32n8k16.load.b.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.f32
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.col.stride.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.f32
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f16
llvm.nvvm.wmma.m32n8k16.load.c.row.stride.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m32n8k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m32n8k16.store.d.col.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.f32
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.col.stride.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.f32
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f16
llvm.nvvm.wmma.m32n8k16.store.d.row.stride.f32
llvm.nvvm.wmma.m8n32k16.load.a.col.f16
llvm.nvvm.wmma.m8n32k16.load.a.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.f16
llvm.nvvm.wmma.m8n32k16.load.a.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.f16
llvm.nvvm.wmma.m8n32k16.load.b.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.f16
llvm.nvvm.wmma.m8n32k16.load.b.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.f32
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.col.stride.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.f32
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f16
llvm.nvvm.wmma.m8n32k16.load.c.row.stride.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.col.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.col.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f16.f32.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f16.satfinite
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32
llvm.nvvm.wmma.m8n32k16.mma.row.row.f32.f32.satfinite
llvm.nvvm.wmma.m8n32k16.store.d.col.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.f32
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.col.stride.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.f32
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f16
llvm.nvvm.wmma.m8n32k16.store.d.row.stride.f32
llvm.ppc.addf128.round.to.odd
llvm.ppc.altivec.crypto.vcipher
llvm.ppc.altivec.crypto.vcipherlast
llvm.ppc.altivec.crypto.vncipher
llvm.ppc.altivec.crypto.vncipherlast
llvm.ppc.altivec.crypto.vpermxor
llvm.ppc.altivec.crypto.vpmsumb
llvm.ppc.altivec.crypto.vpmsumd
llvm.ppc.altivec.crypto.vpmsumh
llvm.ppc.altivec.crypto.vpmsumw
llvm.ppc.altivec.crypto.vsbox
llvm.ppc.altivec.crypto.vshasigmad
llvm.ppc.altivec.crypto.vshasigmaw
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vabsdub
llvm.ppc.altivec.vabsduh
llvm.ppc.altivec.vabsduw
llvm.ppc.altivec.vaddcuq
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddecuq
llvm.ppc.altivec.vaddeuqm
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vbpermq
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vclzlsbb
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequd
llvm.ppc.altivec.vcmpequd.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsd
llvm.ppc.altivec.vcmpgtsd.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtud
llvm.ppc.altivec.vcmpgtud.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vcmpneb
llvm.ppc.altivec.vcmpneb.p
llvm.ppc.altivec.vcmpneh
llvm.ppc.altivec.vcmpneh.p
llvm.ppc.altivec.vcmpnew
llvm.ppc.altivec.vcmpnew.p
llvm.ppc.altivec.vcmpnezb
llvm.ppc.altivec.vcmpnezb.p
llvm.ppc.altivec.vcmpnezh
llvm.ppc.altivec.vcmpnezh.p
llvm.ppc.altivec.vcmpnezw
llvm.ppc.altivec.vcmpnezw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vctzlsbb
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vgbbd
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsd
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxud
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsd
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminud
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmulesw
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmuleuw
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmulosw
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vmulouw
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpksdss
llvm.ppc.altivec.vpksdus
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkudus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vprtybd
llvm.ppc.altivec.vprtybq
llvm.ppc.altivec.vprtybw
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrld
llvm.ppc.altivec.vrldmi
llvm.ppc.altivec.vrldnm
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrlwmi
llvm.ppc.altivec.vrlwnm
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslv
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrv
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuq
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubecuq
llvm.ppc.altivec.vsubeuqm
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupkhsw
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.altivec.vupklsw
llvm.ppc.bpermd
llvm.ppc.cfence
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.divde
llvm.ppc.divdeu
llvm.ppc.divf128.round.to.odd
llvm.ppc.divwe
llvm.ppc.divweu
llvm.ppc.fmaf128.round.to.odd
llvm.ppc.get.texasr
llvm.ppc.get.texasru
llvm.ppc.get.tfhar
llvm.ppc.get.tfiar
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.lwsync
llvm.ppc.mtctr
llvm.ppc.mulf128.round.to.odd
llvm.ppc.qpx.qvfabs
llvm.ppc.qpx.qvfadd
llvm.ppc.qpx.qvfadds
llvm.ppc.qpx.qvfcfid
llvm.ppc.qpx.qvfcfids
llvm.ppc.qpx.qvfcfidu
llvm.ppc.qpx.qvfcfidus
llvm.ppc.qpx.qvfcmpeq
llvm.ppc.qpx.qvfcmpgt
llvm.ppc.qpx.qvfcmplt
llvm.ppc.qpx.qvfcpsgn
llvm.ppc.qpx.qvfctid
llvm.ppc.qpx.qvfctidu
llvm.ppc.qpx.qvfctiduz
llvm.ppc.qpx.qvfctidz
llvm.ppc.qpx.qvfctiw
llvm.ppc.qpx.qvfctiwu
llvm.ppc.qpx.qvfctiwuz
llvm.ppc.qpx.qvfctiwz
llvm.ppc.qpx.qvflogical
llvm.ppc.qpx.qvfmadd
llvm.ppc.qpx.qvfmadds
llvm.ppc.qpx.qvfmsub
llvm.ppc.qpx.qvfmsubs
llvm.ppc.qpx.qvfmul
llvm.ppc.qpx.qvfmuls
llvm.ppc.qpx.qvfnabs
llvm.ppc.qpx.qvfneg
llvm.ppc.qpx.qvfnmadd
llvm.ppc.qpx.qvfnmadds
llvm.ppc.qpx.qvfnmsub
llvm.ppc.qpx.qvfnmsubs
llvm.ppc.qpx.qvfperm
llvm.ppc.qpx.qvfre
llvm.ppc.qpx.qvfres
llvm.ppc.qpx.qvfrim
llvm.ppc.qpx.qvfrin
llvm.ppc.qpx.qvfrip
llvm.ppc.qpx.qvfriz
llvm.ppc.qpx.qvfrsp
llvm.ppc.qpx.qvfrsqrte
llvm.ppc.qpx.qvfrsqrtes
llvm.ppc.qpx.qvfsel
llvm.ppc.qpx.qvfsub
llvm.ppc.qpx.qvfsubs
llvm.ppc.qpx.qvftstnan
llvm.ppc.qpx.qvfxmadd
llvm.ppc.qpx.qvfxmadds
llvm.ppc.qpx.qvfxmul
llvm.ppc.qpx.qvfxmuls
llvm.ppc.qpx.qvfxxcpnmadd
llvm.ppc.qpx.qvfxxcpnmadds
llvm.ppc.qpx.qvfxxmadd
llvm.ppc.qpx.qvfxxmadds
llvm.ppc.qpx.qvfxxnpmadd
llvm.ppc.qpx.qvfxxnpmadds
llvm.ppc.qpx.qvgpci
llvm.ppc.qpx.qvlfcd
llvm.ppc.qpx.qvlfcda
llvm.ppc.qpx.qvlfcs
llvm.ppc.qpx.qvlfcsa
llvm.ppc.qpx.qvlfd
llvm.ppc.qpx.qvlfda
llvm.ppc.qpx.qvlfiwa
llvm.ppc.qpx.qvlfiwaa
llvm.ppc.qpx.qvlfiwz
llvm.ppc.qpx.qvlfiwza
llvm.ppc.qpx.qvlfs
llvm.ppc.qpx.qvlfsa
llvm.ppc.qpx.qvlpcld
llvm.ppc.qpx.qvlpcls
llvm.ppc.qpx.qvlpcrd
llvm.ppc.qpx.qvlpcrs
llvm.ppc.qpx.qvstfcd
llvm.ppc.qpx.qvstfcda
llvm.ppc.qpx.qvstfcs
llvm.ppc.qpx.qvstfcsa
llvm.ppc.qpx.qvstfd
llvm.ppc.qpx.qvstfda
llvm.ppc.qpx.qvstfiw
llvm.ppc.qpx.qvstfiwa
llvm.ppc.qpx.qvstfs
llvm.ppc.qpx.qvstfsa
llvm.ppc.scalar.extract.expq
llvm.ppc.scalar.insert.exp.qp
llvm.ppc.set.texasr
llvm.ppc.set.texasru
llvm.ppc.set.tfhar
llvm.ppc.set.tfiar
llvm.ppc.sqrtf128.round.to.odd
llvm.ppc.subf128.round.to.odd
llvm.ppc.sync
llvm.ppc.tabort
llvm.ppc.tabortdc
llvm.ppc.tabortdci
llvm.ppc.tabortwc
llvm.ppc.tabortwci
llvm.ppc.tbegin
llvm.ppc.tcheck
llvm.ppc.tend
llvm.ppc.tendall
llvm.ppc.trechkpt
llvm.ppc.treclaim
llvm.ppc.tresume
llvm.ppc.truncf128.round.to.odd
llvm.ppc.tsr
llvm.ppc.tsuspend
llvm.ppc.ttest
llvm.ppc.vsx.lxvd2x
llvm.ppc.vsx.lxvd2x.be
llvm.ppc.vsx.lxvl
llvm.ppc.vsx.lxvll
llvm.ppc.vsx.lxvw4x
llvm.ppc.vsx.lxvw4x.be
llvm.ppc.vsx.stxvd2x
llvm.ppc.vsx.stxvd2x.be
llvm.ppc.vsx.stxvl
llvm.ppc.vsx.stxvll
llvm.ppc.vsx.stxvw4x
llvm.ppc.vsx.stxvw4x.be
llvm.ppc.vsx.xsmaxdp
llvm.ppc.vsx.xsmindp
llvm.ppc.vsx.xvcmpeqdp
llvm.ppc.vsx.xvcmpeqdp.p
llvm.ppc.vsx.xvcmpeqsp
llvm.ppc.vsx.xvcmpeqsp.p
llvm.ppc.vsx.xvcmpgedp
llvm.ppc.vsx.xvcmpgedp.p
llvm.ppc.vsx.xvcmpgesp
llvm.ppc.vsx.xvcmpgesp.p
llvm.ppc.vsx.xvcmpgtdp
llvm.ppc.vsx.xvcmpgtdp.p
llvm.ppc.vsx.xvcmpgtsp
llvm.ppc.vsx.xvcmpgtsp.p
llvm.ppc.vsx.xvcvdpsp
llvm.ppc.vsx.xvcvdpsxws
llvm.ppc.vsx.xvcvdpuxws
llvm.ppc.vsx.xvcvhpsp
llvm.ppc.vsx.xvcvspdp
llvm.ppc.vsx.xvcvsphp
llvm.ppc.vsx.xvcvsxdsp
llvm.ppc.vsx.xvcvsxwdp
llvm.ppc.vsx.xvcvuxdsp
llvm.ppc.vsx.xvcvuxwdp
llvm.ppc.vsx.xvdivdp
llvm.ppc.vsx.xvdivsp
llvm.ppc.vsx.xviexpdp
llvm.ppc.vsx.xviexpsp
llvm.ppc.vsx.xvmaxdp
llvm.ppc.vsx.xvmaxsp
llvm.ppc.vsx.xvmindp
llvm.ppc.vsx.xvminsp
llvm.ppc.vsx.xvrdpip
llvm.ppc.vsx.xvredp
llvm.ppc.vsx.xvresp
llvm.ppc.vsx.xvrspip
llvm.ppc.vsx.xvrsqrtedp
llvm.ppc.vsx.xvrsqrtesp
llvm.ppc.vsx.xvtstdcdp
llvm.ppc.vsx.xvtstdcsp
llvm.ppc.vsx.xvxexpdp
llvm.ppc.vsx.xvxexpsp
llvm.ppc.vsx.xvxsigdp
llvm.ppc.vsx.xvxsigsp
llvm.ppc.vsx.xxextractuw
llvm.ppc.vsx.xxinsertw
llvm.ppc.vsx.xxleqv
llvm.r600.cube
llvm.r600.ddx
llvm.r600.ddy
llvm.r600.dot4
llvm.r600.group.barrier
llvm.r600.implicitarg.ptr
llvm.r600.kill
llvm.r600.rat.store.typed
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.r600.recipsqrt.clamped
llvm.r600.recipsqrt.ieee
llvm.r600.store.stream.output
llvm.r600.store.swizzle
llvm.r600.tex
llvm.r600.texc
llvm.r600.txb
llvm.r600.txbc
llvm.r600.txf
llvm.r600.txl
llvm.r600.txlc
llvm.r600.txq
llvm.riscv.masked.atomicrmw.add.i32
llvm.riscv.masked.atomicrmw.max.i32
llvm.riscv.masked.atomicrmw.min.i32
llvm.riscv.masked.atomicrmw.nand.i32
llvm.riscv.masked.atomicrmw.sub.i32
llvm.riscv.masked.atomicrmw.umax.i32
llvm.riscv.masked.atomicrmw.umin.i32
llvm.riscv.masked.atomicrmw.xchg.i32
llvm.riscv.masked.cmpxchg.i32
llvm.s390.efpc
llvm.s390.etnd
llvm.s390.lcbb
llvm.s390.ntstg
llvm.s390.ppa.txassist
llvm.s390.sfpc
llvm.s390.tabort
llvm.s390.tbegin
llvm.s390.tbegin.nofloat
llvm.s390.tbeginc
llvm.s390.tdc
llvm.s390.tend
llvm.s390.vaccb
llvm.s390.vacccq
llvm.s390.vaccf
llvm.s390.vaccg
llvm.s390.vacch
llvm.s390.vaccq
llvm.s390.vacq
llvm.s390.vaq
llvm.s390.vavgb
llvm.s390.vavgf
llvm.s390.vavgg
llvm.s390.vavgh
llvm.s390.vavglb
llvm.s390.vavglf
llvm.s390.vavglg
llvm.s390.vavglh
llvm.s390.vbperm
llvm.s390.vceqbs
llvm.s390.vceqfs
llvm.s390.vceqgs
llvm.s390.vceqhs
llvm.s390.vchbs
llvm.s390.vchfs
llvm.s390.vchgs
llvm.s390.vchhs
llvm.s390.vchlbs
llvm.s390.vchlfs
llvm.s390.vchlgs
llvm.s390.vchlhs
llvm.s390.vcksm
llvm.s390.verimb
llvm.s390.verimf
llvm.s390.verimg
llvm.s390.verimh
llvm.s390.verllb
llvm.s390.verllf
llvm.s390.verllg
llvm.s390.verllh
llvm.s390.verllvb
llvm.s390.verllvf
llvm.s390.verllvg
llvm.s390.verllvh
llvm.s390.vfaeb
llvm.s390.vfaebs
llvm.s390.vfaef
llvm.s390.vfaefs
llvm.s390.vfaeh
llvm.s390.vfaehs
llvm.s390.vfaezb
llvm.s390.vfaezbs
llvm.s390.vfaezf
llvm.s390.vfaezfs
llvm.s390.vfaezh
llvm.s390.vfaezhs
llvm.s390.vfcedbs
llvm.s390.vfcesbs
llvm.s390.vfchdbs
llvm.s390.vfchedbs
llvm.s390.vfchesbs
llvm.s390.vfchsbs
llvm.s390.vfeeb
llvm.s390.vfeebs
llvm.s390.vfeef
llvm.s390.vfeefs
llvm.s390.vfeeh
llvm.s390.vfeehs
llvm.s390.vfeezb
llvm.s390.vfeezbs
llvm.s390.vfeezf
llvm.s390.vfeezfs
llvm.s390.vfeezh
llvm.s390.vfeezhs
llvm.s390.vfeneb
llvm.s390.vfenebs
llvm.s390.vfenef
llvm.s390.vfenefs
llvm.s390.vfeneh
llvm.s390.vfenehs
llvm.s390.vfenezb
llvm.s390.vfenezbs
llvm.s390.vfenezf
llvm.s390.vfenezfs
llvm.s390.vfenezh
llvm.s390.vfenezhs
llvm.s390.vfidb
llvm.s390.vfisb
llvm.s390.vfmaxdb
llvm.s390.vfmaxsb
llvm.s390.vfmindb
llvm.s390.vfminsb
llvm.s390.vftcidb
llvm.s390.vftcisb
llvm.s390.vgfmab
llvm.s390.vgfmaf
llvm.s390.vgfmag
llvm.s390.vgfmah
llvm.s390.vgfmb
llvm.s390.vgfmf
llvm.s390.vgfmg
llvm.s390.vgfmh
llvm.s390.vistrb
llvm.s390.vistrbs
llvm.s390.vistrf
llvm.s390.vistrfs
llvm.s390.vistrh
llvm.s390.vistrhs
llvm.s390.vlbb
llvm.s390.vll
llvm.s390.vlrl
llvm.s390.vmaeb
llvm.s390.vmaef
llvm.s390.vmaeh
llvm.s390.vmahb
llvm.s390.vmahf
llvm.s390.vmahh
llvm.s390.vmaleb
llvm.s390.vmalef
llvm.s390.vmaleh
llvm.s390.vmalhb
llvm.s390.vmalhf
llvm.s390.vmalhh
llvm.s390.vmalob
llvm.s390.vmalof
llvm.s390.vmaloh
llvm.s390.vmaob
llvm.s390.vmaof
llvm.s390.vmaoh
llvm.s390.vmeb
llvm.s390.vmef
llvm.s390.vmeh
llvm.s390.vmhb
llvm.s390.vmhf
llvm.s390.vmhh
llvm.s390.vmleb
llvm.s390.vmlef
llvm.s390.vmleh
llvm.s390.vmlhb
llvm.s390.vmlhf
llvm.s390.vmlhh
llvm.s390.vmlob
llvm.s390.vmlof
llvm.s390.vmloh
llvm.s390.vmob
llvm.s390.vmof
llvm.s390.vmoh
llvm.s390.vmslg
llvm.s390.vpdi
llvm.s390.vperm
llvm.s390.vpklsf
llvm.s390.vpklsfs
llvm.s390.vpklsg
llvm.s390.vpklsgs
llvm.s390.vpklsh
llvm.s390.vpklshs
llvm.s390.vpksf
llvm.s390.vpksfs
llvm.s390.vpksg
llvm.s390.vpksgs
llvm.s390.vpksh
llvm.s390.vpkshs
llvm.s390.vsbcbiq
llvm.s390.vsbiq
llvm.s390.vscbib
llvm.s390.vscbif
llvm.s390.vscbig
llvm.s390.vscbih
llvm.s390.vscbiq
llvm.s390.vsl
llvm.s390.vslb
llvm.s390.vsldb
llvm.s390.vsq
llvm.s390.vsra
llvm.s390.vsrab
llvm.s390.vsrl
llvm.s390.vsrlb
llvm.s390.vstl
llvm.s390.vstrcb
llvm.s390.vstrcbs
llvm.s390.vstrcf
llvm.s390.vstrcfs
llvm.s390.vstrch
llvm.s390.vstrchs
llvm.s390.vstrczb
llvm.s390.vstrczbs
llvm.s390.vstrczf
llvm.s390.vstrczfs
llvm.s390.vstrczh
llvm.s390.vstrczhs
llvm.s390.vstrl
llvm.s390.vsumb
llvm.s390.vsumgf
llvm.s390.vsumgh
llvm.s390.vsumh
llvm.s390.vsumqf
llvm.s390.vsumqg
llvm.s390.vtm
llvm.s390.vuphb
llvm.s390.vuphf
llvm.s390.vuphh
llvm.s390.vuplb
llvm.s390.vuplf
llvm.s390.vuplhb
llvm.s390.vuplhf
llvm.s390.vuplhh
llvm.s390.vuplhw
llvm.s390.vupllb
llvm.s390.vupllf
llvm.s390.vupllh
llvm.wasm.alltrue
llvm.wasm.anytrue
llvm.wasm.atomic.notify
llvm.wasm.atomic.wait.i32
llvm.wasm.atomic.wait.i64
llvm.wasm.bitselect
llvm.wasm.catch
llvm.wasm.current.memory
llvm.wasm.get.ehselector
llvm.wasm.get.exception
llvm.wasm.grow.memory
llvm.wasm.landingpad.index
llvm.wasm.lsda
llvm.wasm.mem.grow
llvm.wasm.mem.size
llvm.wasm.memory.grow
llvm.wasm.memory.size
llvm.wasm.rethrow
llvm.wasm.sub.saturate.signed
llvm.wasm.sub.saturate.unsigned
llvm.wasm.throw
llvm.wasm.trunc.saturate.signed
llvm.wasm.trunc.saturate.unsigned
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.addcarry.32
llvm.x86.addcarry.64
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdec.256
llvm.x86.aesni.aesdec.512
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesdeclast.256
llvm.x86.aesni.aesdeclast.512
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenc.256
llvm.x86.aesni.aesenc.512
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesenclast.256
llvm.x86.aesni.aesenclast.512
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.pblendvb
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx512.add.pd.512
llvm.x86.avx512.add.ps.512
llvm.x86.avx512.broadcastmb.128
llvm.x86.avx512.broadcastmb.256
llvm.x86.avx512.broadcastmb.512
llvm.x86.avx512.broadcastmw.128
llvm.x86.avx512.broadcastmw.256
llvm.x86.avx512.broadcastmw.512
llvm.x86.avx512.cmp.pd.128
llvm.x86.avx512.cmp.pd.256
llvm.x86.avx512.cmp.pd.512
llvm.x86.avx512.cmp.ps.128
llvm.x86.avx512.cmp.ps.256
llvm.x86.avx512.cmp.ps.512
llvm.x86.avx512.cvtsi2sd64
llvm.x86.avx512.cvtsi2ss32
llvm.x86.avx512.cvtsi2ss64
llvm.x86.avx512.cvttsd2si
llvm.x86.avx512.cvttsd2si64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2si
llvm.x86.avx512.cvttss2si64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.dbpsadbw.128
llvm.x86.avx512.dbpsadbw.256
llvm.x86.avx512.dbpsadbw.512
llvm.x86.avx512.div.pd.512
llvm.x86.avx512.div.ps.512
llvm.x86.avx512.exp2.pd
llvm.x86.avx512.exp2.ps
llvm.x86.avx512.fpclass.pd.128
llvm.x86.avx512.fpclass.pd.256
llvm.x86.avx512.fpclass.pd.512
llvm.x86.avx512.fpclass.ps.128
llvm.x86.avx512.fpclass.ps.256
llvm.x86.avx512.fpclass.ps.512
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather3div2.df
llvm.x86.avx512.gather3div2.di
llvm.x86.avx512.gather3div4.df
llvm.x86.avx512.gather3div4.di
llvm.x86.avx512.gather3div4.sf
llvm.x86.avx512.gather3div4.si
llvm.x86.avx512.gather3div8.sf
llvm.x86.avx512.gather3div8.si
llvm.x86.avx512.gather3siv2.df
llvm.x86.avx512.gather3siv2.di
llvm.x86.avx512.gather3siv4.df
llvm.x86.avx512.gather3siv4.di
llvm.x86.avx512.gather3siv4.sf
llvm.x86.avx512.gather3siv4.si
llvm.x86.avx512.gather3siv8.sf
llvm.x86.avx512.gather3siv8.si
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kadd.b
llvm.x86.avx512.kadd.d
llvm.x86.avx512.kadd.q
llvm.x86.avx512.kadd.w
llvm.x86.avx512.ktestc.b
llvm.x86.avx512.ktestc.d
llvm.x86.avx512.ktestc.q
llvm.x86.avx512.ktestc.w
llvm.x86.avx512.ktestz.b
llvm.x86.avx512.ktestz.d
llvm.x86.avx512.ktestz.q
llvm.x86.avx512.ktestz.w
llvm.x86.avx512.mask.add.sd.round
llvm.x86.avx512.mask.add.ss.round
llvm.x86.avx512.mask.cmp.sd
llvm.x86.avx512.mask.cmp.ss
llvm.x86.avx512.mask.compress.b.128
llvm.x86.avx512.mask.compress.b.256
llvm.x86.avx512.mask.compress.b.512
llvm.x86.avx512.mask.compress.d.128
llvm.x86.avx512.mask.compress.d.256
llvm.x86.avx512.mask.compress.d.512
llvm.x86.avx512.mask.compress.pd.128
llvm.x86.avx512.mask.compress.pd.256
llvm.x86.avx512.mask.compress.pd.512
llvm.x86.avx512.mask.compress.ps.128
llvm.x86.avx512.mask.compress.ps.256
llvm.x86.avx512.mask.compress.ps.512
llvm.x86.avx512.mask.compress.q.128
llvm.x86.avx512.mask.compress.q.256
llvm.x86.avx512.mask.compress.q.512
llvm.x86.avx512.mask.compress.w.128
llvm.x86.avx512.mask.compress.w.256
llvm.x86.avx512.mask.compress.w.512
llvm.x86.avx512.mask.conflict.d.128
llvm.x86.avx512.mask.conflict.d.256
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.128
llvm.x86.avx512.mask.conflict.q.256
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.128
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2qq.128
llvm.x86.avx512.mask.cvtpd2qq.256
llvm.x86.avx512.mask.cvtpd2qq.512
llvm.x86.avx512.mask.cvtpd2udq.128
llvm.x86.avx512.mask.cvtpd2udq.256
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtpd2uqq.128
llvm.x86.avx512.mask.cvtpd2uqq.256
llvm.x86.avx512.mask.cvtpd2uqq.512
llvm.x86.avx512.mask.cvtps2dq.128
llvm.x86.avx512.mask.cvtps2dq.256
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2pd.512
llvm.x86.avx512.mask.cvtps2qq.128
llvm.x86.avx512.mask.cvtps2qq.256
llvm.x86.avx512.mask.cvtps2qq.512
llvm.x86.avx512.mask.cvtps2udq.128
llvm.x86.avx512.mask.cvtps2udq.256
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvtps2uqq.128
llvm.x86.avx512.mask.cvtps2uqq.256
llvm.x86.avx512.mask.cvtps2uqq.512
llvm.x86.avx512.mask.cvtqq2pd.512
llvm.x86.avx512.mask.cvtqq2ps.128
llvm.x86.avx512.mask.cvtqq2ps.256
llvm.x86.avx512.mask.cvtqq2ps.512
llvm.x86.avx512.mask.cvtsd2ss.round
llvm.x86.avx512.mask.cvtss2sd.round
llvm.x86.avx512.mask.cvttpd2dq.128
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2qq.128
llvm.x86.avx512.mask.cvttpd2qq.256
llvm.x86.avx512.mask.cvttpd2qq.512
llvm.x86.avx512.mask.cvttpd2udq.128
llvm.x86.avx512.mask.cvttpd2udq.256
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttpd2uqq.128
llvm.x86.avx512.mask.cvttpd2uqq.256
llvm.x86.avx512.mask.cvttpd2uqq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2qq.128
llvm.x86.avx512.mask.cvttps2qq.256
llvm.x86.avx512.mask.cvttps2qq.512
llvm.x86.avx512.mask.cvttps2udq.128
llvm.x86.avx512.mask.cvttps2udq.256
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvttps2uqq.128
llvm.x86.avx512.mask.cvttps2uqq.256
llvm.x86.avx512.mask.cvttps2uqq.512
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.cvtuqq2pd.512
llvm.x86.avx512.mask.cvtuqq2ps.128
llvm.x86.avx512.mask.cvtuqq2ps.256
llvm.x86.avx512.mask.cvtuqq2ps.512
llvm.x86.avx512.mask.div.sd.round
llvm.x86.avx512.mask.div.ss.round
llvm.x86.avx512.mask.expand.b.128
llvm.x86.avx512.mask.expand.b.256
llvm.x86.avx512.mask.expand.b.512
llvm.x86.avx512.mask.expand.d.128
llvm.x86.avx512.mask.expand.d.256
llvm.x86.avx512.mask.expand.d.512
llvm.x86.avx512.mask.expand.pd.128
llvm.x86.avx512.mask.expand.pd.256
llvm.x86.avx512.mask.expand.pd.512
llvm.x86.avx512.mask.expand.ps.128
llvm.x86.avx512.mask.expand.ps.256
llvm.x86.avx512.mask.expand.ps.512
llvm.x86.avx512.mask.expand.q.128
llvm.x86.avx512.mask.expand.q.256
llvm.x86.avx512.mask.expand.q.512
llvm.x86.avx512.mask.expand.w.128
llvm.x86.avx512.mask.expand.w.256
llvm.x86.avx512.mask.expand.w.512
llvm.x86.avx512.mask.fixupimm.pd.128
llvm.x86.avx512.mask.fixupimm.pd.256
llvm.x86.avx512.mask.fixupimm.pd.512
llvm.x86.avx512.mask.fixupimm.ps.128
llvm.x86.avx512.mask.fixupimm.ps.256
llvm.x86.avx512.mask.fixupimm.ps.512
llvm.x86.avx512.mask.fixupimm.sd
llvm.x86.avx512.mask.fixupimm.ss
llvm.x86.avx512.mask.fpclass.sd
llvm.x86.avx512.mask.fpclass.ss
llvm.x86.avx512.mask.getexp.pd.128
llvm.x86.avx512.mask.getexp.pd.256
llvm.x86.avx512.mask.getexp.pd.512
llvm.x86.avx512.mask.getexp.ps.128
llvm.x86.avx512.mask.getexp.ps.256
llvm.x86.avx512.mask.getexp.ps.512
llvm.x86.avx512.mask.getexp.sd
llvm.x86.avx512.mask.getexp.ss
llvm.x86.avx512.mask.getmant.pd.128
llvm.x86.avx512.mask.getmant.pd.256
llvm.x86.avx512.mask.getmant.pd.512
llvm.x86.avx512.mask.getmant.ps.128
llvm.x86.avx512.mask.getmant.ps.256
llvm.x86.avx512.mask.getmant.ps.512
llvm.x86.avx512.mask.getmant.sd
llvm.x86.avx512.mask.getmant.ss
llvm.x86.avx512.mask.max.sd.round
llvm.x86.avx512.mask.max.ss.round
llvm.x86.avx512.mask.min.sd.round
llvm.x86.avx512.mask.min.ss.round
llvm.x86.avx512.mask.mul.sd.round
llvm.x86.avx512.mask.mul.ss.round
llvm.x86.avx512.mask.pmov.db.128
llvm.x86.avx512.mask.pmov.db.256
llvm.x86.avx512.mask.pmov.db.512
llvm.x86.avx512.mask.pmov.db.mem.128
llvm.x86.avx512.mask.pmov.db.mem.256
llvm.x86.avx512.mask.pmov.db.mem.512
llvm.x86.avx512.mask.pmov.dw.128
llvm.x86.avx512.mask.pmov.dw.256
llvm.x86.avx512.mask.pmov.dw.512
llvm.x86.avx512.mask.pmov.dw.mem.128
llvm.x86.avx512.mask.pmov.dw.mem.256
llvm.x86.avx512.mask.pmov.dw.mem.512
llvm.x86.avx512.mask.pmov.qb.128
llvm.x86.avx512.mask.pmov.qb.256
llvm.x86.avx512.mask.pmov.qb.512
llvm.x86.avx512.mask.pmov.qb.mem.128
llvm.x86.avx512.mask.pmov.qb.mem.256
llvm.x86.avx512.mask.pmov.qb.mem.512
llvm.x86.avx512.mask.pmov.qd.128
llvm.x86.avx512.mask.pmov.qd.256
llvm.x86.avx512.mask.pmov.qd.512
llvm.x86.avx512.mask.pmov.qd.mem.128
llvm.x86.avx512.mask.pmov.qd.mem.256
llvm.x86.avx512.mask.pmov.qd.mem.512
llvm.x86.avx512.mask.pmov.qw.128
llvm.x86.avx512.mask.pmov.qw.256
llvm.x86.avx512.mask.pmov.qw.512
llvm.x86.avx512.mask.pmov.qw.mem.128
llvm.x86.avx512.mask.pmov.qw.mem.256
llvm.x86.avx512.mask.pmov.qw.mem.512
llvm.x86.avx512.mask.pmov.wb.128
llvm.x86.avx512.mask.pmov.wb.256
llvm.x86.avx512.mask.pmov.wb.512
llvm.x86.avx512.mask.pmov.wb.mem.128
llvm.x86.avx512.mask.pmov.wb.mem.256
llvm.x86.avx512.mask.pmov.wb.mem.512
llvm.x86.avx512.mask.pmovs.db.128
llvm.x86.avx512.mask.pmovs.db.256
llvm.x86.avx512.mask.pmovs.db.512
llvm.x86.avx512.mask.pmovs.db.mem.128
llvm.x86.avx512.mask.pmovs.db.mem.256
llvm.x86.avx512.mask.pmovs.db.mem.512
llvm.x86.avx512.mask.pmovs.dw.128
llvm.x86.avx512.mask.pmovs.dw.256
llvm.x86.avx512.mask.pmovs.dw.512
llvm.x86.avx512.mask.pmovs.dw.mem.128
llvm.x86.avx512.mask.pmovs.dw.mem.256
llvm.x86.avx512.mask.pmovs.dw.mem.512
llvm.x86.avx512.mask.pmovs.qb.128
llvm.x86.avx512.mask.pmovs.qb.256
llvm.x86.avx512.mask.pmovs.qb.512
llvm.x86.avx512.mask.pmovs.qb.mem.128
llvm.x86.avx512.mask.pmovs.qb.mem.256
llvm.x86.avx512.mask.pmovs.qb.mem.512
llvm.x86.avx512.mask.pmovs.qd.128
llvm.x86.avx512.mask.pmovs.qd.256
llvm.x86.avx512.mask.pmovs.qd.512
llvm.x86.avx512.mask.pmovs.qd.mem.128
llvm.x86.avx512.mask.pmovs.qd.mem.256
llvm.x86.avx512.mask.pmovs.qd.mem.512
llvm.x86.avx512.mask.pmovs.qw.128
llvm.x86.avx512.mask.pmovs.qw.256
llvm.x86.avx512.mask.pmovs.qw.512
llvm.x86.avx512.mask.pmovs.qw.mem.128
llvm.x86.avx512.mask.pmovs.qw.mem.256
llvm.x86.avx512.mask.pmovs.qw.mem.512
llvm.x86.avx512.mask.pmovs.wb.128
llvm.x86.avx512.mask.pmovs.wb.256
llvm.x86.avx512.mask.pmovs.wb.512
llvm.x86.avx512.mask.pmovs.wb.mem.128
llvm.x86.avx512.mask.pmovs.wb.mem.256
llvm.x86.avx512.mask.pmovs.wb.mem.512
llvm.x86.avx512.mask.pmovus.db.128
llvm.x86.avx512.mask.pmovus.db.256
llvm.x86.avx512.mask.pmovus.db.512
llvm.x86.avx512.mask.pmovus.db.mem.128
llvm.x86.avx512.mask.pmovus.db.mem.256
llvm.x86.avx512.mask.pmovus.db.mem.512
llvm.x86.avx512.mask.pmovus.dw.128
llvm.x86.avx512.mask.pmovus.dw.256
llvm.x86.avx512.mask.pmovus.dw.512
llvm.x86.avx512.mask.pmovus.dw.mem.128
llvm.x86.avx512.mask.pmovus.dw.mem.256
llvm.x86.avx512.mask.pmovus.dw.mem.512
llvm.x86.avx512.mask.pmovus.qb.128
llvm.x86.avx512.mask.pmovus.qb.256
llvm.x86.avx512.mask.pmovus.qb.512
llvm.x86.avx512.mask.pmovus.qb.mem.128
llvm.x86.avx512.mask.pmovus.qb.mem.256
llvm.x86.avx512.mask.pmovus.qb.mem.512
llvm.x86.avx512.mask.pmovus.qd.128
llvm.x86.avx512.mask.pmovus.qd.256
llvm.x86.avx512.mask.pmovus.qd.512
llvm.x86.avx512.mask.pmovus.qd.mem.128
llvm.x86.avx512.mask.pmovus.qd.mem.256
llvm.x86.avx512.mask.pmovus.qd.mem.512
llvm.x86.avx512.mask.pmovus.qw.128
llvm.x86.avx512.mask.pmovus.qw.256
llvm.x86.avx512.mask.pmovus.qw.512
llvm.x86.avx512.mask.pmovus.qw.mem.128
llvm.x86.avx512.mask.pmovus.qw.mem.256
llvm.x86.avx512.mask.pmovus.qw.mem.512
llvm.x86.avx512.mask.pmovus.wb.128
llvm.x86.avx512.mask.pmovus.wb.256
llvm.x86.avx512.mask.pmovus.wb.512
llvm.x86.avx512.mask.pmovus.wb.mem.128
llvm.x86.avx512.mask.pmovus.wb.mem.256
llvm.x86.avx512.mask.pmovus.wb.mem.512
llvm.x86.avx512.mask.pmultishift.qb.128
llvm.x86.avx512.mask.pmultishift.qb.256
llvm.x86.avx512.mask.pmultishift.qb.512
llvm.x86.avx512.mask.range.pd.128
llvm.x86.avx512.mask.range.pd.256
llvm.x86.avx512.mask.range.pd.512
llvm.x86.avx512.mask.range.ps.128
llvm.x86.avx512.mask.range.ps.256
llvm.x86.avx512.mask.range.ps.512
llvm.x86.avx512.mask.range.sd
llvm.x86.avx512.mask.range.ss
llvm.x86.avx512.mask.reduce.pd.128
llvm.x86.avx512.mask.reduce.pd.256
llvm.x86.avx512.mask.reduce.pd.512
llvm.x86.avx512.mask.reduce.ps.128
llvm.x86.avx512.mask.reduce.ps.256
llvm.x86.avx512.mask.reduce.ps.512
llvm.x86.avx512.mask.reduce.sd
llvm.x86.avx512.mask.reduce.ss
llvm.x86.avx512.mask.rndscale.pd.128
llvm.x86.avx512.mask.rndscale.pd.256
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.128
llvm.x86.avx512.mask.rndscale.ps.256
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.rndscale.sd
llvm.x86.avx512.mask.rndscale.ss
llvm.x86.avx512.mask.scalef.pd.128
llvm.x86.avx512.mask.scalef.pd.256
llvm.x86.avx512.mask.scalef.pd.512
llvm.x86.avx512.mask.scalef.ps.128
llvm.x86.avx512.mask.scalef.ps.256
llvm.x86.avx512.mask.scalef.ps.512
llvm.x86.avx512.mask.scalef.sd
llvm.x86.avx512.mask.scalef.ss
llvm.x86.avx512.mask.sqrt.sd
llvm.x86.avx512.mask.sqrt.ss
llvm.x86.avx512.mask.sub.sd.round
llvm.x86.avx512.mask.sub.ss.round
llvm.x86.avx512.mask.vcvtph2ps.128
llvm.x86.avx512.mask.vcvtph2ps.256
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.128
llvm.x86.avx512.mask.vcvtps2ph.256
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.mask.vpshldv.d.128
llvm.x86.avx512.mask.vpshldv.d.256
llvm.x86.avx512.mask.vpshldv.d.512
llvm.x86.avx512.mask.vpshldv.q.128
llvm.x86.avx512.mask.vpshldv.q.256
llvm.x86.avx512.mask.vpshldv.q.512
llvm.x86.avx512.mask.vpshldv.w.128
llvm.x86.avx512.mask.vpshldv.w.256
llvm.x86.avx512.mask.vpshldv.w.512
llvm.x86.avx512.mask.vpshrdv.d.128
llvm.x86.avx512.mask.vpshrdv.d.256
llvm.x86.avx512.mask.vpshrdv.d.512
llvm.x86.avx512.mask.vpshrdv.q.128
llvm.x86.avx512.mask.vpshrdv.q.256
llvm.x86.avx512.mask.vpshrdv.q.512
llvm.x86.avx512.mask.vpshrdv.w.128
llvm.x86.avx512.mask.vpshrdv.w.256
llvm.x86.avx512.mask.vpshrdv.w.512
llvm.x86.avx512.mask.vpshufbitqmb.128
llvm.x86.avx512.mask.vpshufbitqmb.256
llvm.x86.avx512.mask.vpshufbitqmb.512
llvm.x86.avx512.maskz.fixupimm.pd.128
llvm.x86.avx512.maskz.fixupimm.pd.256
llvm.x86.avx512.maskz.fixupimm.pd.512
llvm.x86.avx512.maskz.fixupimm.ps.128
llvm.x86.avx512.maskz.fixupimm.ps.256
llvm.x86.avx512.maskz.fixupimm.ps.512
llvm.x86.avx512.maskz.fixupimm.sd
llvm.x86.avx512.maskz.fixupimm.ss
llvm.x86.avx512.maskz.vpshldv.d.128
llvm.x86.avx512.maskz.vpshldv.d.256
llvm.x86.avx512.maskz.vpshldv.d.512
llvm.x86.avx512.maskz.vpshldv.q.128
llvm.x86.avx512.maskz.vpshldv.q.256
llvm.x86.avx512.maskz.vpshldv.q.512
llvm.x86.avx512.maskz.vpshldv.w.128
llvm.x86.avx512.maskz.vpshldv.w.256
llvm.x86.avx512.maskz.vpshldv.w.512
llvm.x86.avx512.maskz.vpshrdv.d.128
llvm.x86.avx512.maskz.vpshrdv.d.256
llvm.x86.avx512.maskz.vpshrdv.d.512
llvm.x86.avx512.maskz.vpshrdv.q.128
llvm.x86.avx512.maskz.vpshrdv.q.256
llvm.x86.avx512.maskz.vpshrdv.q.512
llvm.x86.avx512.maskz.vpshrdv.w.128
llvm.x86.avx512.maskz.vpshrdv.w.256
llvm.x86.avx512.maskz.vpshrdv.w.512
llvm.x86.avx512.max.pd.512
llvm.x86.avx512.max.ps.512
llvm.x86.avx512.min.pd.512
llvm.x86.avx512.min.ps.512
llvm.x86.avx512.mul.pd.512
llvm.x86.avx512.mul.ps.512
llvm.x86.avx512.packssdw.512
llvm.x86.avx512.packsswb.512
llvm.x86.avx512.packusdw.512
llvm.x86.avx512.packuswb.512
llvm.x86.avx512.permvar.df.256
llvm.x86.avx512.permvar.df.512
llvm.x86.avx512.permvar.di.256
llvm.x86.avx512.permvar.di.512
llvm.x86.avx512.permvar.hi.128
llvm.x86.avx512.permvar.hi.256
llvm.x86.avx512.permvar.hi.512
llvm.x86.avx512.permvar.qi.128
llvm.x86.avx512.permvar.qi.256
llvm.x86.avx512.permvar.qi.512
llvm.x86.avx512.permvar.sf.512
llvm.x86.avx512.permvar.si.512
llvm.x86.avx512.pmaddubs.w.512
llvm.x86.avx512.pmaddw.d.512
llvm.x86.avx512.pmul.hr.sw.512
llvm.x86.avx512.pmulh.w.512
llvm.x86.avx512.pmulhu.w.512
llvm.x86.avx512.psad.bw.512
llvm.x86.avx512.pshuf.b.512
llvm.x86.avx512.psll.d.512
llvm.x86.avx512.psll.q.512
llvm.x86.avx512.psll.w.512
llvm.x86.avx512.pslli.d.512
llvm.x86.avx512.pslli.q.512
llvm.x86.avx512.pslli.w.512
llvm.x86.avx512.psllv.d.512
llvm.x86.avx512.psllv.q.512
llvm.x86.avx512.psllv.w.128
llvm.x86.avx512.psllv.w.256
llvm.x86.avx512.psllv.w.512
llvm.x86.avx512.psra.d.512
llvm.x86.avx512.psra.q.128
llvm.x86.avx512.psra.q.256
llvm.x86.avx512.psra.q.512
llvm.x86.avx512.psra.w.512
llvm.x86.avx512.psrai.d.512
llvm.x86.avx512.psrai.q.128
llvm.x86.avx512.psrai.q.256
llvm.x86.avx512.psrai.q.512
llvm.x86.avx512.psrai.w.512
llvm.x86.avx512.psrav.d.512
llvm.x86.avx512.psrav.q.128
llvm.x86.avx512.psrav.q.256
llvm.x86.avx512.psrav.q.512
llvm.x86.avx512.psrav.w.128
llvm.x86.avx512.psrav.w.256
llvm.x86.avx512.psrav.w.512
llvm.x86.avx512.psrl.d.512
llvm.x86.avx512.psrl.q.512
llvm.x86.avx512.psrl.w.512
llvm.x86.avx512.psrli.d.512
llvm.x86.avx512.psrli.q.512
llvm.x86.avx512.psrli.w.512
llvm.x86.avx512.psrlv.d.512
llvm.x86.avx512.psrlv.q.512
llvm.x86.avx512.psrlv.w.128
llvm.x86.avx512.psrlv.w.256
llvm.x86.avx512.psrlv.w.512
llvm.x86.avx512.pternlog.d.128
llvm.x86.avx512.pternlog.d.256
llvm.x86.avx512.pternlog.d.512
llvm.x86.avx512.pternlog.q.128
llvm.x86.avx512.pternlog.q.256
llvm.x86.avx512.pternlog.q.512
llvm.x86.avx512.rcp14.pd.128
llvm.x86.avx512.rcp14.pd.256
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.128
llvm.x86.avx512.rcp14.ps.256
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rsqrt14.pd.128
llvm.x86.avx512.rsqrt14.pd.256
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.128
llvm.x86.avx512.rsqrt14.ps.256
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterdiv2.df
llvm.x86.avx512.scatterdiv2.di
llvm.x86.avx512.scatterdiv4.df
llvm.x86.avx512.scatterdiv4.di
llvm.x86.avx512.scatterdiv4.sf
llvm.x86.avx512.scatterdiv4.si
llvm.x86.avx512.scatterdiv8.sf
llvm.x86.avx512.scatterdiv8.si
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.scattersiv2.df
llvm.x86.avx512.scattersiv2.di
llvm.x86.avx512.scattersiv4.df
llvm.x86.avx512.scattersiv4.di
llvm.x86.avx512.scattersiv4.sf
llvm.x86.avx512.scattersiv4.si
llvm.x86.avx512.scattersiv8.sf
llvm.x86.avx512.scattersiv8.si
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sub.pd.512
llvm.x86.avx512.sub.ps.512
llvm.x86.avx512.vcomi.sd
llvm.x86.avx512.vcomi.ss
llvm.x86.avx512.vcvtsd2si32
llvm.x86.avx512.vcvtsd2si64
llvm.x86.avx512.vcvtsd2usi32
llvm.x86.avx512.vcvtsd2usi64
llvm.x86.avx512.vcvtss2si32
llvm.x86.avx512.vcvtss2si64
llvm.x86.avx512.vcvtss2usi32
llvm.x86.avx512.vcvtss2usi64
llvm.x86.avx512.vfmadd.f32
llvm.x86.avx512.vfmadd.f64
llvm.x86.avx512.vfmadd.pd.512
llvm.x86.avx512.vfmadd.ps.512
llvm.x86.avx512.vfmaddsub.pd.512
llvm.x86.avx512.vfmaddsub.ps.512
llvm.x86.avx512.vpdpbusd.128
llvm.x86.avx512.vpdpbusd.256
llvm.x86.avx512.vpdpbusd.512
llvm.x86.avx512.vpdpbusds.128
llvm.x86.avx512.vpdpbusds.256
llvm.x86.avx512.vpdpbusds.512
llvm.x86.avx512.vpdpwssd.128
llvm.x86.avx512.vpdpwssd.256
llvm.x86.avx512.vpdpwssd.512
llvm.x86.avx512.vpdpwssds.128
llvm.x86.avx512.vpdpwssds.256
llvm.x86.avx512.vpdpwssds.512
llvm.x86.avx512.vpermi2var.d.128
llvm.x86.avx512.vpermi2var.d.256
llvm.x86.avx512.vpermi2var.d.512
llvm.x86.avx512.vpermi2var.hi.128
llvm.x86.avx512.vpermi2var.hi.256
llvm.x86.avx512.vpermi2var.hi.512
llvm.x86.avx512.vpermi2var.pd.128
llvm.x86.avx512.vpermi2var.pd.256
llvm.x86.avx512.vpermi2var.pd.512
llvm.x86.avx512.vpermi2var.ps.128
llvm.x86.avx512.vpermi2var.ps.256
llvm.x86.avx512.vpermi2var.ps.512
llvm.x86.avx512.vpermi2var.q.128
llvm.x86.avx512.vpermi2var.q.256
llvm.x86.avx512.vpermi2var.q.512
llvm.x86.avx512.vpermi2var.qi.128
llvm.x86.avx512.vpermi2var.qi.256
llvm.x86.avx512.vpermi2var.qi.512
llvm.x86.avx512.vpermilvar.pd.512
llvm.x86.avx512.vpermilvar.ps.512
llvm.x86.avx512.vpmadd52h.uq.128
llvm.x86.avx512.vpmadd52h.uq.256
llvm.x86.avx512.vpmadd52h.uq.512
llvm.x86.avx512.vpmadd52l.uq.128
llvm.x86.avx512.vpmadd52l.uq.256
llvm.x86.avx512.vpmadd52l.uq.512
llvm.x86.avx512.vpshld.d.128
llvm.x86.avx512.vpshld.d.256
llvm.x86.avx512.vpshld.d.512
llvm.x86.avx512.vpshld.q.128
llvm.x86.avx512.vpshld.q.256
llvm.x86.avx512.vpshld.q.512
llvm.x86.avx512.vpshld.w.128
llvm.x86.avx512.vpshld.w.256
llvm.x86.avx512.vpshld.w.512
llvm.x86.avx512.vpshrd.d.128
llvm.x86.avx512.vpshrd.d.256
llvm.x86.avx512.vpshrd.d.512
llvm.x86.avx512.vpshrd.q.128
llvm.x86.avx512.vpshrd.q.256
llvm.x86.avx512.vpshrd.q.512
llvm.x86.avx512.vpshrd.w.128
llvm.x86.avx512.vpshrd.w.256
llvm.x86.avx512.vpshrd.w.512
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.cldemote
llvm.x86.clflushopt
llvm.x86.clrssbsy
llvm.x86.clwb
llvm.x86.clzero
llvm.x86.directstore32
llvm.x86.directstore64
llvm.x86.flags.read.u32
llvm.x86.flags.read.u64
llvm.x86.flags.write.u32
llvm.x86.flags.write.u64
llvm.x86.fxrstor
llvm.x86.fxrstor64
llvm.x86.fxsave
llvm.x86.fxsave64
llvm.x86.incsspd
llvm.x86.incsspq
llvm.x86.int
llvm.x86.invpcid
llvm.x86.llwpcb
llvm.x86.lwpins32
llvm.x86.lwpins64
llvm.x86.lwpval32
llvm.x86.lwpval64
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.monitorx
llvm.x86.movdir64b
llvm.x86.mwaitx
llvm.x86.pclmulqdq
llvm.x86.pclmulqdq.256
llvm.x86.pclmulqdq.512
llvm.x86.ptwrite32
llvm.x86.ptwrite64
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpid
llvm.x86.rdpkru
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdsspd
llvm.x86.rdsspq
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.rstorssp
llvm.x86.saveprevssp
llvm.x86.seh.ehguard
llvm.x86.seh.ehregnode
llvm.x86.seh.lsda
llvm.x86.seh.recoverfp
llvm.x86.setssbsy
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.slwpcb
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.stmxcsr
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.pause
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.insertps
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.phminposuw
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.subborrow.32
llvm.x86.subborrow.64
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.tpause
llvm.x86.umonitor
llvm.x86.umwait
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.vgf2p8affineinvqb.128
llvm.x86.vgf2p8affineinvqb.256
llvm.x86.vgf2p8affineinvqb.512
llvm.x86.vgf2p8affineqb.128
llvm.x86.vgf2p8affineqb.256
llvm.x86.vgf2p8affineqb.512
llvm.x86.vgf2p8mulb.128
llvm.x86.vgf2p8mulb.256
llvm.x86.vgf2p8mulb.512
llvm.x86.wbinvd
llvm.x86.wbnoinvd
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.wrpkru
llvm.x86.wrssd
llvm.x86.wrssq
llvm.x86.wrussd
llvm.x86.wrussq
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xgetbv
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xrstor
llvm.x86.xrstor64
llvm.x86.xrstors
llvm.x86.xrstors64
llvm.x86.xsave
llvm.x86.xsave64
llvm.x86.xsavec
llvm.x86.xsavec64
llvm.x86.xsaveopt
llvm.x86.xsaveopt64
llvm.x86.xsaves
llvm.x86.xsaves64
llvm.x86.xsetbv
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
vararg
Metadata
f128
value isn't a global
global isn't in section "llvm.ptrauth"
global doesn't have an initializer
global isn't a struct
global doesn't have type '{ i8*, i32, i64, i64 }'
key isn't a constant integer
address discriminator isn't a constant integer or expr
discriminator isn't a constant integer
<unknown>:
 (function: 
Print Module IR
Print Function IR
Print BasicBlock IR
marker for objc_retainAutoreleaseReturnValue
switch
indirectbr
invoke
resume
unreachable
cleanupret
catchret
catchpad
catchswitch
fneg
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
load
store
cmpxchg
atomicrmw
fence
getelementptr
trunc
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
inttoptr
ptrtoint
bitcast
addrspacecast
icmp
fcmp
select
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
cleanuppad
<Invalid operator> 
both values to select must have same type
select values cannot have token type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
xchg
nand
umin
<invalid operation>
mallocsize
malloccall
prof
fpmath
tbaa.struct
alias.scope
llvm.mem.parallel_loop_access
make.implicit
unpredictable
invariant.group
llvm.loop
section_prefix
absolute_symbol
associated
callees
irr_loop
llvm.access.group
deopt
gc-transition
singlethread
Allocation failed
Allocation failed
debug-pass
Print PassManager debugging information
Disabled
disable debug output
print pass arguments to pass to 'opt'
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
print-module-scope
When printing IR for print-[before|after]{-all} always print a module IR
filter-print-funcs
function names
Only print IR for functions whose name match this for all print-[before|after][-all] options
IRSizeChange
: IR instruction count changed from 
IRInstrsBefore
IRInstrsAfter
DeltaInstrCount
Releasing pass '
Running pass '
 on module '
basic block
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
FunctionPass Manager
FunctionIRSizeChange
Module Pass Manager
ModulePass Manager
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
Error reading bitcode file: 
__unnamed_
 /EXPORT:
 -export:
,DATA
,data
 /INCLUDE:
llvm.module.flags
PIC Level
Code Model
ProfileSummary
RtLibUseGOT
SDK Version
Target Variant SDK Version
Allocation failed
digraph Summary {
  // Module: 
  subgraph cluster_
    style = filled;
    color = lightgrey;
    label = "
    node [style=filled,fillcolor=lightblue];
shape
style
dotted,filled
Mrecord
immutable
fillcolor
dead
yellow
not eligible to import
    // Edges:
  // Cross-module edges:
 // 
, ffl: 
 [label="
"]; // defined externally
 [style=dotted]; // alias
 [style=dashed]; // ref
 [style=dashed,color=forestgreen]; // const-ref
 // call (hotness : Unknown)
 [color=blue]; // call (hotness : Cold)
 // call (hotness : None)
 [color=brown]; // call (hotness : Hot)
 [style=bold,color=red]; // call (hotness : Critical)
opt-bisect-limit
Maximum optimization to perform
module (
function (
basic block (
) in function (
<<null function>>
NOT 
BISECT: 
running pass 
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
Starting 
 pass manager run.
Finished 
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Function]
time-passes
Time each pass, printing elapsed time for each on exit
{0} #{1}
pass
... Pass execution timing report ...
remark-binary-format
InstrProf
SampleProfile
DetailedSummary
ProfileFormat
TotalCount
MaxCount
MaxInternalCount
MaxFunctionCount
NumCounts
NumFunctions
statepoint-id
statepoint-num-patch-bytes
Allocation failed
non-global-value-max-name-size
Maximum size for the name of non-global values.
Allocation failed
Base nodes must have at least two operands
Access tag nodes must have the number of operands that is a multiple of 3!
Struct tag nodes must have an odd number of operands!
Type size nodes must be constants!
Struct tag nodes have a string as their first operand
Incorrect field entry in struct type node!
Offset entries must be constants!
Bitwidth between the offsets and struct type entries must match
Offsets must be increasing!
Member size entries must be constants!
Could not find TBAA parent in struct type node
This instruction shall not have a TBAA access tag!
Old-style TBAA is no longer allowed, use struct-path TBAA instead
Access tag metadata must have either 4 or 5 operands
Struct tag metadata must have either 3 or 4 operands
Access size field must be a constant
Immutability tag on struct tag metadata must be a constant
Immutability part of the struct tag metadata must be either 0 or 1
Malformed struct tag metadata: base and access-type should be non-null and point to Metadata nodes
Access type node must be a valid scalar type
Offset must be constant integer
Cycle detected in struct path
Offset not zero at the point of scalar access
Access bit-width not the same as description bit-width
Did not see access type in access path!
Broken function found, compilation aborted!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Calling convention requires void return type
Calling convention does not allow sret
Calling convention does not support varargs or perfect forwarding!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
Function takes token but isn't an intrinsic
Functions returns a token but isn't an intrinsic
Referencing personality function in another module!
unmaterialized function cannot have metadata
function declaration may not have a !dbg attachment
function declaration may not have a !prof attachment
Function declaration shouldn't have a personality routine
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
function must have a single !dbg attachment
function !dbg attachment must be a subprogram
DISubprogram attached to more than one function
function must have a single !prof attachment
Invalid user of intrinsic instruction!
DILocation's scope must be a DILocalScope
!dbg attachment points at wrong subprogram for function
Global is external, but doesn't have external or weak linkage!
huge alignment values are unsupported
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Declaration may not be in a Comdat!
GlobalValue with DLLImport Storage is dso_local!
Global is marked as dllimport, but not external
GlobalValue with private or internal linkage must be dso_local!
GlobalValue with non default visibility must be dso_local!
Global is referenced by parentless instruction!
Global is referenced in a different module!
Global is used by function in a different module
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', 'returned', 'swiftself', and 'swifterror' do not apply to return values!
Attribute '
' does not apply to function returns
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
Cannot have multiple 'swiftself' parameters!
Cannot have multiple 'swifterror' parameters!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'readnone and writeonly' are incompatible!
Attributes 'readonly and writeonly' are incompatible!
Attributes 'readnone and inaccessiblemem_or_argmemonly' are incompatible!
Attributes 'readnone and inaccessiblememonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
element size
number of elements
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'swifterror' only applies to parameters with pointer to pointer type!
Attribute 'byval' only applies to parameters with pointer type!
Attribute 'swifterror' only applies to parameters with pointer type!
' only applies to functions!
' does not apply to functions!
'allocsize' 
 argument is out of bounds
 argument must refer to an integer parameter
swifterror value can only be loaded and stored from, or as a swifterror argument!
swifterror value should be the second operand when used by stores
swifterror value when used in a callsite should be marked with swifterror attribute
!prof annotations should have no less than 2 operands
first operand should not be null
expected string with name of the !prof annotation
first operand should be 'function_entry_count' or 'synthetic_function_entry_count'
second operand should not be null
expected integer argument to function_entry_count
Invalid operand for global metadata!
Expected no forward declarations!
All nodes should be resolved!
location requires a valid scope
inlined-at should be a location
scope points into the type hierarchy
invalid expression
missing variable
fragment is larger than or outside of variable
fragment covers entire variable
invalid tag
Count must either be a signed constant or a DIVariable
invalid subrange count
has conflicting flags
invalid pointer to member type
invalid scope
invalid base type
DWARF address space only applies to pointer or reference types
invalid file
invalid composite elements
invalid vtable holder
invalid reference flags
invalid vector, expected one element of type subrange
class/union requires a filename
discriminator can only appear on variant part
invalid template params
invalid template parameter
invalid subroutine type ref
invalid checksum kind
invalid checksum length
invalid checksum
compile units must be distinct
invalid filename
invalid emission kind
invalid enum list
invalid enum type
invalid retained type list
invalid retained type
invalid global variable list
invalid global variable ref
invalid imported entity list
invalid imported entity ref
invalid macro list
invalid macro ref
inconsistent use of embedded source
line specified with no file
invalid subroutine type
invalid containing type
invalid subprogram declaration
invalid retained nodes list
invalid retained nodes, expected DILocalVariable or DILabel
subprogram definitions must be distinct
subprogram definitions must have a compile unit
invalid unit type
subprogram declarations must not have a compile unit
invalid thrown types list
invalid thrown type
DIFlagAllCallsDescribed must be attached to a definition
cannot have column info without line info
invalid local scope
invalid scope ref
anonymous module
invalid type ref
missing global variable name
missing global variable type
invalid static data member declaration
local variable requires a valid scope
invalid type
label requires a valid scope
invalid scope for imported entity
invalid imported entity
invalid macinfo type
anonymous macro
Expected valid value
Unexpected metadata round-trip through values
function-local metadata used outside a function
function-local metadata not in basic block
function-local metadata used in wrong function
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Instruction has bogus parent pointer!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsic other than donothing, patchpoint, statepoint, coro_resume or coro_destroy
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy must have float type
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
nonnull applies only to pointer types
nonnull applies only to load instructions, use attributes for calls or invokes
align applies only to pointer types
align applies only to load instructions, use attributes for calls or invokes
align takes one operand!
align metadata value must be an i64!
align metadata value must be a power of 2!
alignment is larger that implementation defined limit
invalid !dbg metadata attachment
Instruction does not dominate all uses!
Invalid bitcast
inttoptr not supported for non-integral pointers
ptrtoint not supported for non-integral pointers
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match instruction type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
dereferenceable, dereferenceable_or_null apply only to pointer types
dereferenceable, dereferenceable_or_null apply only to load instructions, use attributes for calls or invokes
dereferenceable, dereferenceable_or_null take one operand!
dereferenceable, dereferenceable_or_null metadata value must be an i64!
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have an exception handling instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function is not the same type as the call!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
speculatable attribute may not apply to call sites
inalloca argument for call has mismatched alloca
swifterror argument for call has mismatched alloca
swifterror argument should come from an alloca or parameter
swifterror argument for call has mismatched parameter
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Function has token parameter but isn't an intrinsic
Return type cannot be token for indirect call!
Multiple deopt operand bundles
Multiple gc-transition operand bundles
Multiple funclet operand bundles
Expected exactly one funclet bundle operand
Funclet bundle operands should correspond to a FuncletPadInst
ptrauth
Multiple ptrauth operand bundles
Expected exactly two ptrauth bundle operand
Ptrauth bundle key operand must be an i32 constant
Ptrauth bundle discriminator operand must be an i64
inlinable function call in a function with debug info must have a !dbg location
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
info argument of llvm.coro.begin must refer to an initialized constant
info argument of llvm.coro.begin must refer to either a struct or an array
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
alignment of arg 0 of memory intrinsic must be 0 or a power of 2
alignment of arg 1 of memory intrinsic must be 0 or a power of 2
isvolatile argument of memory intrinsics must be a constant int
element size of the element-wise unordered atomic memory intrinsic must be a constant int
element size of the element-wise atomic memory intrinsic must be a power of 2
constant length must be a multiple of the element size in the element-wise atomic memory intrinsic
incorrect alignment of the destination argument
incorrect alignment of the source argument
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
llvm.localescape used outside of entry block
multiple calls to llvm.localescape in one function
llvm.localescape only accepts static allocas
llvm.localrecover first argument must be function defined in this module
idx argument of llvm.localrecover must be a constant int
gc.statepoint support for inline assembly unimplemented
gc.result operand #1 must be from a statepoint
gc.result result type does not match wrapped callee
wrong number of arguments
gc.relocate must return a pointer or a vector of pointers
safepoints should have unique landingpads
safepoint block should be well formed
gc relocate should be linked to a statepoint
gc relocate is incorrectly tied to the statepoint
gc.relocate operand #2 must be integer offset
gc.relocate operand #3 must be integer offset
gc.relocate: statepoint base index out of bounds
gc.relocate: statepoint derived index out of bounds
gc.statepoint: insufficient arguments
gc.statement: number of call arguments must be constant integer
gc.statepoint: mismatch in number of call arguments
gc.statepoint: number of transition arguments must be a constant integer
gc.statepoint: number of deoptimization arguments must be a constant integer
gc.relocate: statepoint base index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: statepoint derived index doesn't fall within the 'gc parameters' section of the statepoint call
gc.relocate: relocated value must be a gc pointer
gc.relocate: vector relocates to vector and pointer to pointer
gc.relocate: relocating a pointer shouldn't change its address space
eh.exceptionpointer argument must be a catchpad
masked_load: must return a vector
masked_load: mask must be vector
masked_load: return must match pointer type
masked_load: pass through and data type must match
masked_load: vector mask must be same length as data
masked_store: mask must be vector
masked_store: storee must match pointer type
masked_store: vector mask must be same length as data
experimental_guard cannot be invoked
experimental_guard must have exactly one "deopt" operand bundle
experimental_deoptimize cannot be invoked
experimental_deoptimize must have exactly one "deopt" operand bundle
experimental_deoptimize return type must match caller return type
calls to experimental_deoptimize must be followed by a return
calls to experimental_deoptimize must be followed by a return of the value computed by experimental_deoptimize
first operand of [us][add|sub]_sat must be an int type or vector of ints
second operand of [us][add|sub]_sat must be an int type or vector of ints
ptrauth key must be a constant integer
first operand of smul_fix must be an int type or vector of ints
second operand of smul_fix must be an int type or vector of ints
third argument of smul_fix must be a constant integer
third argument of smul_fix must fit within 32 bits
the scale of smul_fix must be less than the width of the operands
invalid arguments for constrained FP intrinsic
invalid exception behavior argument
invalid rounding mode argument
invalid llvm.dbg.
 intrinsic address/value
 intrinsic variable
 intrinsic expression
 intrinsic requires a !dbg attachment
mismatched subprogram between llvm.dbg.
 variable and !dbg attachment
BlockByRef variable without complex expression
dbg intrinsic without variable
conflicting debug info for argument
 label and !dbg attachment
gc.statepoint must read and write all memory to preserve reordering restrictions required by safepoint semantics
gc.statepoint ID must be a constant integer
gc.statepoint number of patchable bytes must be a constant integer
gc.statepoint number of patchable bytes must be positive
gc.statepoint callee must be of function pointer type
gc.statepoint number of arguments to underlying call must be constant integer
gc.statepoint number of arguments to underlying call must be positive
gc.statepoint mismatch in number of vararg call args
gc.statepoint doesn't support wrapping non-void vararg functions yet
gc.statepoint mismatch in number of call args
gc.statepoint flags must be constant integer
unknown flag used in gc.statepoint flags argument
gc.statepoint call argument does not match wrapped function type
gc.statepoint number of transition arguments must be constant integer
gc.statepoint number of transition arguments must be positive
gc.statepoint number of deoptimization arguments must be constant integer
gc.statepoint number of deoptimization arguments must be positive
gc.statepoint too few arguments according to length fields
illegal use of statepoint token
gc.result or gc.relocate are the only value uses of a gc.statepoint
gc.result connected to wrong gc.statepoint
gc.relocate connected to wrong gc.statepoint
ResumeInst needs to be in a function with a personality.
The resume instruction should have a consistent result type inside a function.
CleanupReturnInst needs to be provided a CleanupPad
CleanupReturnInst must unwind to an EH block which is not a landingpad.
CatchReturnInst needs to be provided a CatchPad
CatchSwitchInst needs to be in a function with a personality.
CatchSwitchInst not the first non-PHI instruction in the block.
CatchSwitchInst has an invalid parent.
CatchSwitchInst must unwind to an EH block which is not a landingpad.
CatchSwitchInst cannot have empty handler list
CatchSwitchInst handlers must be catchpads
EH pad cannot be in entry block.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
Block containg CatchPadInst must be jumped to only by its catchswitch.
Catchswitch cannot unwind to one of its catchpads
EH pad must be jumped to via an unwind edge
A cleanupret must exit its cleanup
EH pad cannot handle exceptions raised within it
A single unwind edge may only enter one EH pad
EH pad jumps through a cycle of pads
Unary operators must have same type foroperands and result!
FNeg operator only works with float types!
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the stack address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
loading unsized types is not allowed
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer, pointer, or floating point type!
Non-atomic load cannot have SynchronizationScope specified
atomic memory access' size must be byte-sized
atomic memory access' operand must have a power-of-two size
Store operand must be a pointer.
Stored value type does not match pointer operand type!
storing unsized types is not allowed
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer, pointer, or floating point type!
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
GEP indexes must be integers
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Invalid GEP index vector width
All GEP indices should be of integer type
GEP address space doesn't match type
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions failure argument shall be no stronger than the success argument
cmpxchg failure ordering cannot include release semantics
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer or pointer type
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw 
 operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
CleanupPadInst needs to be in a function with a personality.
CleanupPadInst not the first non-PHI instruction in the block.
CleanupPadInst has an invalid parent.
FuncletPadInst must not be nested within itself
Bogus funclet pad use
Unwind edges out of a funclet pad must have the same unwind dest
Unwind edges out of a catch must have the same unwind dest as the parent catchswitch
CatchPadInst needs to be in a function with a personality.
CatchPadInst needs to be directly nested in a CatchSwitchInst.
CatchPadInst not the first non-PHI instruction in the block.
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI nodes cannot have token type!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must precede a ret with an optional bitcast
musttail call result must be returned
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
The landingpad instruction should have a consistent result type inside a function.
LandingPadInst needs to be in a function with a personality.
LandingPadInst not the first non-PHI instruction in the block.
Catch operand does not have pointer type!
Clause is neither catch nor filter!
Filter operand is not an array of constants!
EH pads can't handle each other's exceptions
all indices passed to llvm.localrecover must be less than the number of arguments passed ot llvm.localescape in the parent function
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
invalid llvm.ptrauth global: 
!dbg attachment of global variable must be a DIGlobalVariableExpression
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to an interposable alias
unrecognized named metadata node in the llvm.dbg namespace
invalid compile unit
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid behavior operand in module flag (unexpected constant)
invalid ID operand in module flag (expected metadata string)
invalid value for 'max' module flag (expected constant integer)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
wchar_size metadata requires constant integer argument
Linker Options
'Linker Options' named metadata no longer supported
expected a MDNode triple
expected an integer constant
expected a Function or null
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
incorrect number of operands in llvm.commandline metadata
invalid value for llvm.commandline metadata entry operand(the operand should be a string)
DICompileUnit not listed in llvm.dbg.cu
All llvm.experimental.deoptimize declarations must have the same calling convention
Module Verifier
in function 
Inliner for always_inline functions
always-inline
always inliner
.val
argpromotion
Promote 'by reference' arguments to scalars
A No-Op Barrier Pass
cvp-max-functions-per-value
The maximum number of functions to track per lattice value
untracked
unknown lattice value
unknown lattice key
Undefined  
Overdefined
Untracked  
FunctionSet
<reg> 
<mem> 
<ret> 
Called Value Propagation
called-value-propagation
constmerge
Merge Duplicate Global Constants
cross-dso-cfi
cfi.functions
CallSiteTypeId
Addr
CFICheckFailData
fail
newret
oldret
Dead Argument Elimination
deadargelim
elim-avail-extern
Eliminate Available Externally Globals
force-attribute
Add an attribute to a function. This should be a pair of 'function-name:attribute-name', for example -force-attribute=foo:noinline. This option can be specified multiple times.
Force set function attributes
forceattrs
enable-nonnull-arg-prop
Try to propagate nonnull argument attributes from callsites to caller functions.
disable-nounwind-inference
Stop inferring nounwind attribute during function-attrs pass
Deduce function attributes
functionattrs
Deduce function attributes in RPO
rpo-functionattrs
import-instr-limit
Only import functions with less than N instructions
import-cutoff
Only import first N functions if N>=0 (default -1)
import-instr-evolution-factor
As we import functions, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-evolution-factor
As we import functions called from hot callsite, multiply the `import-instr-limit` threshold by this factor before processing newly imported functions
import-hot-multiplier
Multiply the `import-instr-limit` threshold for hot callsites
import-critical-multiplier
Multiply the `import-instr-limit` threshold for critical callsites
import-cold-multiplier
Multiply the `import-instr-limit` threshold for cold callsites
print-imports
Print imported functions
print-import-failures
Print information for functions rejected for importing
compute-dead
Compute dead symbols
enable-import-metadata
Enable import metadata like 'thinlto_src_module'
summary-file
The summary file to use for function importing.
import-all-index
Import all external functions in index.
thinlto_src_module
: Import 
Function Import: link error
Missed imports into module 
: Reason = 
, Threshold = 
, Size = 
, MaxHotness = 
, Attempts = 
function-import
GlobalVar
NotLive
TooLarge
InterposableLinkage
LocalLinkageNotInModule
NotEligible
thinlto-internalize
error: -function-import requires -summary-file
Error loading file '
Error renaming module
Error importing module: 
Abort
Dead Global Elimination
globaldce
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Module>]
enable-coldcc-stress-test
Enable stress test of coldcc by adding calling conv to all internal functions.
coldcc-rel-freq
Maximum block frequency, expressed as a percentage of caller's entry frequency, for a call site to be considered cold for enablingcoldcc
globalopt
.body
newgv
.init
notinit
malloc_cont
malloc_ret_null
free_it
next
Global Variable Optimizer
Global splitter
globalsplit
hot-cold-static-analysis
hotcoldsplit-threshold
Base penalty for splitting cold code (as a multiple of TCC_Basic)
hotcoldsplit-max-params
Maximum number of parameters for a split function
hotcoldsplit
cold.
HotColdSplit
Original
 split cold code into 
Split
ExtractFailed
Failed to extract region at block 
Hot Cold Splitting
Interprocedural constant propagation
ipconstprop
Infer set function attributes
inferattrs
Function Integration/Inlining
disable-inlined-alloca-merging
inliner-function-import-stats
basic statistics
printing of statistics for each inlined function
Enable inliner stats for imported functions
inline-remark-attribute
Enable adding inline-remark attribute to callsites processed by inliner but decided to be not inlined
unavailable definition
recursive SCC split
deferred
trivially dead
NoDefinition
 will not be inlined into 
Caller
 because its definition is unavailable
NotInlined
Reason
inline-remark
 not inlined into 
 because it should never be inlined 
(cost=always)
(cost=never)
(cost=
, threshold=
Threshold
TooCostly
 because too costly to inline 
IncreaseCostInOtherContexts
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
Inlined
 inlined into 
 with 
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
A list of symbol names to preserve
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
Extract loops into new functions
loop-extract
lowertypetests-avoid-reuse
Try to avoid reuse of byte array addresses using aliases
lowertypetests-summary-action
What to do with the summary when running this pass
Do nothing
Import typeid resolutions from summary and globals
Export typeid resolutions to summary and globals
lowertypetests-read-summary
Read summary from given YAML file before running pass
lowertypetests-write-summary
Write summary to given YAML file after running pass
Lower type metadata
lowertypetests
-lowertypetests-read-summary: 
-lowertypetests-write-summary: 
GlobalValueMap
TypeIdMap
WithGlobalValueDeadStripping
CfiFunctionDefs
CfiFunctionDecls
Linkage
NotEligibleToImport
Live
Local
Refs
TypeTests
TypeTestAssumeVCalls
TypeCheckedLoadVCalls
TypeTestAssumeConstVCalls
TypeCheckedLoadConstVCalls
GUID
Offset
VFunc
key not an integer
TTRes
WPDRes
Kind
SizeM1BitWidth
AlignLog2
SizeM1
BitMask
InlineBits
Unsat
ByteArray
Inline
Single
AllOnes
SingleImplName
ResByArg
Indir
SingleImpl
BranchFunnel
Info
Byte
UniformRetVal
UniqueRetVal
VirtualConstProp
unexpected call to llvm.icall.branch.funnel during import phase
Second argument of llvm.type.test must be metadata
llvm.icall.branch.funnel not supported on this target
number of arguments should be odd
Expected branch funnel operand to be global value
aliases
symvers
.symver 
Second argument of llvm.type.test must be a metadata string
size_m1
byte_array
bit_mask
inline_bits
__typeid_
bits_use
.cfi
.cfi_jt
__cfi_global_var_init
All operands of type metadata must have 2 elements
Bit set element may not be thread-local
A member of a type identifier may not have an explicit section
Type offset must be a constant
Type offset must be an integer constant
Type identifier may not contain both global variables and functions
Unsupported architecture for jump tables
.cfi.jumptable
jmp ${
:c}@plt
int3
int3
int3
b.w $
wasm.index
bits
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
mergefunc-preserve-debug-info
Preserve debug info in thunk when mergefunc transformations are made.
mergefunc-use-aliases
Allow mergefunc to create aliases
Merge Functions
mergefunc
disable-partial-inlining
Disable partial inlining
disable-mr-partial-inlining
Disable multi-region partial inlining
pi-force-live-exit-outline
Force outline regions with live exits
pi-mark-coldcc
Mark outline function calls with ColdCC
skip-partial-inlining-cost-analysis
Skip Cost Analysis
min-region-size-ratio
Minimum ratio comparing relative sizes of each outline candidate and original function
min-block-execution
Minimum block executions to consider its BranchProbabilityInfo valid
cold-branch-ratio
Minimum BranchProbability to consider a region cold.
max-num-inline-blocks
Max number of blocks to be partially inlined
max-partial-inlining
Max number of partial inlining. The default is unlimited
outline-region-freq-percent
Relative frequency of outline region to the entry block
partial-inlining-extra-penalty
A debug option to add additional penalty to the computed one.
Partial Inliner
partial-inliner
partial-inlining
MultiExitRegion
Region dominated by 
 has more than one region exit edge.
 inline cost-savings smaller than 
Cost
PartiallyInlined
 partially inlined into 
OutlineRegionTooSmall
 not partially inlined into callers (Original Size = 
OutlinedRegionOriginalSize
, Size of call sequence to outlined function = 
NewSize
 should always be fully inlined, not partially
 not partially inlined into 
 because it should never be inlined (cost=never)
 because too costly to inline (cost=
OutliningCallcostTooHigh
 runtime overhead (overhead=
Overhead
, savings=
Savings
 of making the outlined call is too high
CanBePartiallyInlined
 can be partially inlined into 
 with cost=
 (threshold=
Partially inlined into at least one caller
enable-partial-inlining
Run Partial inlinining pass
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
extra-vectorizer-passes
Run cleanup optimization passes after vectorization.
reroll-loops
Run the loop rerolling pass
enable-newgvn
Run the NewGVN pass
run-slp-after-loop-vectorization
Run the SLP vectorizer (and BB vectorizer) after the Loop vectorizer instead of before
use-cfl-aa
Enable the new, experimental CFL alias analysis
enable-loopinterchange
Enable the new, experimental LoopInterchange Pass
enable-unroll-and-jam
Enable Unroll And Jam Pass
prepare-for-thinlto
Enable preparation for ThinLTO.
hot-cold-split
Enable hot-cold splitting pass
profile-generate
Enable PGO instrumentation.
profile-generate-file
Specify the path of profile data file.
profile-use
Enable use phase of PGO instrumentation and specify the path of profile data file
enable-loop-versioning-licm
Enable the experimental Loop Versioning LICM pass
disable-preinline
Disable pre-instrumentation inliner
preinline-threshold
Control the amount of inlining in pre-instrumentation inliner (default = 75)
enable-earlycse-memssa
Enable the EarlyCSE w/ MemorySSA pass (default = on)
enable-gvn-hoist
Enable the GVN hoisting pass (default = off)
disable-libcalls-shrinkwrap
Disable shrink-wrap library calls
enable-simple-loop-unswitch
Enable the simple loop unswitch pass. Also enables independent cleanup passes integrated into the loop pass manager pipeline.
enable-gvn-sink
Enable the GVN sinking pass (default = off)
enable-chr
Enable control height reduction optimization (CHR)
enable-matrix
Enable the matrix type
Remove unused exception handling info
prune-eh
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-remapping-file
Profile remapping file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
sample-profile-check-record-coverage
Emit a warning if less than N% of records in the input profile are matched to the IR.
sample-profile-check-sample-coverage
Emit a warning if less than N% of samples in the input profile are matched to the IR.
no-warn-sample-unused
Use this option to turn off/on warnings about function with samples but without debug information to use those samples. 
If the sample profile is accurate, we will mark all un-sampled callsite and function as having 0 samples. Otherwise, treat un-sampled callsites and functions conservatively as unknown. 
Sample Profile loader
sample-profile
Sample profile pass
Could not open profile remapping file: 
 available profile records (
%) were applied
 available profile samples (
No debug information found in function 
: Function profile not used
Callee function not available
Not inline
incompatible inlining
HotInline
inlined hot callee '
' into '
AppliedSamples
Applied 
NumSamples
 samples from profile (offset: 
LineOffset
Discriminator
PopularDest
most popular destination for conditional branches at 
CondBranchesLoc
Interprocedural Sparse Conditional Constant Propagation
ipsccp
strip-dead-prototypes
Strip Unused Function Prototypes
Strip all symbols from a module
strip
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip debug info for unused symbols
strip-dead-debug-info
initial-synthetic-count
Initial value of synthetic entry count.
inline-synthetic-count
Initial synthetic entry count for inline functions.
cold-synthetic-count
Initial synthetic entry count for cold functions.
Write ThinLTO Bitcode
write-thinlto-bitcode
ThinLTO Bitcode Writer
wholeprogramdevirt-summary-action
wholeprogramdevirt-read-summary
wholeprogramdevirt-write-summary
wholeprogramdevirt-branch-funnel-threshold
Maximum number of call targets per call site to enable branch funnels
Whole program devirtualization
wholeprogramdevirt
-wholeprogramdevirt-read-summary: 
-wholeprogramdevirt-write-summary: 
Devirtualized
devirtualized 
FunctionName
unique_member
branch_funnel
single-impl
Optimization
: devirtualized a call to 
uniform-ret-val
unique-ret-val
virtual-const-prop-1-bit
virtual-const-prop
+retpoline
branch-funnel
$merged
Combine pattern based expressions
aggressive-instcombine
instcombine-visit
Controls which instructions are visited
instcombine-code-sinking
Enable code sinking
expensive-combines
Enable expensive instruction combines
instcombine-maxarray-size
Maximum array size considered when doing a combine
instcombine-lower-dbg-declare
phitmp
narrow
instcombine
Combine redundant instructions
srem
urem
addconv
diff.neg
.not
notmask
.off
.masked
and.shrunk
bitfield
notlhs
notrhs
.simplified
.demorgan
instcombine-guard-widening-window
How wide an instruction window to bypass looking for another guard
.cast
blendv
nest
unmaskedload
castvec
tmpcast
.lobit
.mask
.mask
.unshifted
.sext
.add
to.ptr
.ptr
.conv
.trunc
sadd
sadd.result
sadd.overflow
umul
umul.value
.highbits
storemerge
.sub
.unpack
.elt
.repack
suba
subc
instcombine-max-num-phis
Maximum number phis to handle in intptr/ptrint folding
.shrunk
extract.t
not.
.inv
.Elt
.extract
asan-kernel
Enable KernelAddressSanitizer instrumentation
asan-recover
Enable recovery mode (continue-after-error).
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-force-dynamic-shadow
Load shadow address into a local variable for each function
asan-with-ifunc
Access dynamic shadow through an ifunc global on platforms that support this
asan-with-ifunc-suppress-remat
Suppress rematerialization of dynamic shadow address by passing it through inline asm in prologue.
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-max-inline-poisoning-size
Inline shadow poisoning for blocks up to the given size in bytes.
asan-use-after-return
Check stack-use-after-return
asan-redzone-byval-args
Create redzones for byval arguments (extra copy required)
asan-use-after-scope
Check stack-use-after-scope
asan-globals
Handle global objects
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
Prefix for memory access callbacks
asan-instrument-dynamic-allocas
instrument dynamic allocas
asan-skip-promotable-allocas
Do not instrument promotable allocas
asan-mapping-scale
scale of asan shadow mapping
asan-mapping-offset
offset of asan shadow mapping [EXPERIMENTAL]
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-opt-stack
Don't instrument scalar stack variables
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-force-experiment
Force optimization experiment (for testing)
asan-use-private-alias
Use private aliases for global variables
asan-use-odr-indicator
Use odr indicators to improve ODR reporting
asan-globals-live-support
Use linker features to support dead code stripping of globals
asan-with-comdat
Place ASan constructors in comdat sections
asan-debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug max inst
AddressSanitizer: detects use-after-free and out-of-bounds bugs.
AddressSanitizerFunctionPass
llvm.asan.globals
 load]
__asan_init
exp_
_noabort
__sanitizer_ptr_cmp
__sanitizer_ptr_sub
__asan_shadow
=r,0
.asan.shadow
__asan_shadow_memory_dynamic_address
.byval
__asan_stack_malloc_
__asan_stack_free_
__asan_poison_stack_memory
__asan_unpoison_stack_memory
__asan_set_shadow_
__asan_alloca_poison
__asan_allocas_unpoison
asan_local_stack_base
__asan_option_detect_stack_use_after_return
___asan_gen_
MyAlloca
AddressSanitizerModule
__asan_version_mismatch_check_apple_clang_
asan.module_ctor
asan.module_dtor
__asan_before_dynamic_init
__asan_after_dynamic_init
__asan_register_globals
__asan_unregister_globals
__asan_register_image_globals
__asan_unregister_image_globals
__asan_register_elf_globals
__asan_unregister_elf_globals
__TEXT,__asan_cstring,regular
__odr_asan_gen_
__llvm
__LLVM
__OBJC
__sancov_gen_
__llvm_gcov_ctr
___asan_globals_registered
__asan_global_
_anon_global
.ASAN$GL
asan_globals
__DATA,__asan_globals,regular
__asan_binder_
__DATA,__asan_liveness,regular,live_support
bounds-checking-single-trap
Use one trap block per function
bounds-checking
Run-time bounds checking
force-chr
Apply CHR for all functions
chr-bias-threshold
CHR considers a branch bias greater than this ratio as biased
chr-merge-threshold
CHR merges a group of N branches/selects where N >= this value
chr-module-list
Specify file to retrieve the list of modules to apply CHR to
chr-function-list
Specify file to retrieve the list of functions to apply CHR to
Reduce control height in the hot paths
Error: Couldn't read the chr-module-list file 
Error: Couldn't read the chr-function-list file 
BranchNotBiased
Branch not biased
SelectNotBiased
Select not biased
DropUnhoistableSelect
Dropped unhoistable select
DropSelectUnhoistableBranch
Dropped select due to unhoistable branch
SplitScopeFromOuter
Split scope from outer due to unhoistable branch/select 
and/or lack of common condition values
SplitScopeFromPrev
Split scope from previous due to unhoistable branch/select 
DropScopeWithOneBranchOrSelect
Drop scope with < 
CHRMergeThreshold
 biased branch(es) or select(s)
.nonchr
Merged 
NumCHRedBranches
 branches or selects
Stats
Reduced the number of branches in hot paths by 
NumBranchesDelta
 (static) and 
WeightedNumBranchesDelta
 (weighted by PGO count)
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
unsupported triple
skip
__dfsan_arg_tls
__dfsan_retval_tls
__dfsan_shadow_ptr_mask
__dfsan_union
dfsan_union
__dfsan_union_load
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
__dfsan_vararg_wrapper
uninstrumented
discard
labelva
labelreturn
default-gcov-version
402*
gcov-exit-block-before-body
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
insert-gcov-profiling
GCOV Profiler
__gcov_flush
Regex 
 is not valid: 
failed to open coverage notes file for writing: 
oncg
__llvm_gcov_init
llvm_gcov_init
__llvm_gcov_writeout
__llvm_internal_gcov_emit_function_args.
__llvm_internal_gcov_emit_arcs_args.
__llvm_internal_gcov_emit_file_info
file.loop.header
counter.loop.header
file.loop.latch
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_flush
invalid return type for __llvm_gcov_flush
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given pattern
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-handle-asm-conservative
conservative handling of inline assembly
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-kernel
Enable KernelMemorySanitizer instrumentation
msan-check-constant-shadow
Insert checks for constant shadow values
msan-with-comdat
Place MSan constructors in comdat sections
msan-and-mask
Define custom MSan AndMask
msan-xor-mask
Define custom MSan XorMask
msan-shadow-base
Define custom MSan ShadowBase
msan-origin-base
Define custom MSan OriginBase
unsupported architecture
unsupported operating system
__msan_init
__msan_track_origins
__msan_keep_going
MemorySanitizerLegacyPass
-sse
_msarg_va_s
_msarg_va_o
_msarg
_msarg_o
__msan_chain_origin
__msan_memmove
__msan_memcpy
__msan_memset
__msan_instrument_asm_store
__msan_warning
__msan_get_context_state
__msan_metadata_ptr_for_load_
__msan_metadata_ptr_for_store_
__msan_metadata_ptr_for_load_n
__msan_metadata_ptr_for_store_n
__msan_poison_alloca
__msan_unpoison_alloca
__msan_warning_noreturn
__msan_retval_tls
__msan_retval_origin_tls
__msan_param_tls
__msan_param_origin_tls
__msan_va_arg_tls
__msan_va_arg_origin_tls
__msan_va_arg_overflow_size_tls
__msan_origin_tls
__msan_maybe_warning_
__msan_maybe_store_origin_
__msan_set_alloca_origin4
__msan_poison_stack
param_shadow
retval_shadow
va_arg_shadow
va_arg_origin
va_arg_overflow_size
param_origin
retval_origin
_msret
ZZZ call 
ZZZ 
QQQ 
_msprop
msprop_mul_cst
----
_msld
_msprop_ptrtoint
_msprop_inttoptr
_msprop_icmp
_msprop_icmp_s
_msphi_s
_msphi_o
_msmaskedld
_ldmxcsr
_msprop_vector_pack
_msprop_select
_mscmp
disable-icp
Disable indirect call promotion
icp-cutoff
Max number of promotions for this compilation
icp-csskip
Skip Callsite up to this number for this compilation
icp-lto
Run indirect-call promotion in LTO mode
icp-samplepgo
Run indirect-call promotion in SamplePGO mode
icp-call-only
Run indirect-call promotion for call instructions only
icp-invoke-only
Run indirect-call promotion for invoke instruction only
icp-dumpafter
Dump IR after transformation happens
Use PGO instrumentation profile to promote indirect calls to direct calls.
pgo-icall-prom
PGOIndirectCallPromotion
UserOptions
 Not promote: User options
UnableToFindTarget
Cannot promote indirect call: target with md5sum 
target md5sum
 not found
UnableToPromote
Cannot promote indirect call to 
TargetFunction
 with count of 
Count
Promoted
Promote indirect call to 
DirectCallee
 with count 
 out of 
memop-size-range
Set the range of size in memory intrinsic calls to be profiled precisely, in a format of <start_val>:<end_val>
memop-size-large
Set large value thresthold in memory intrinsic size profiling. Value of 0 disables the large value profiling.
enable-name-compression
Enable name string compression
hash-based-counter-split
Rename counter variable of a comdat function based on cfg hash
vp-static-alloc
Do static counter allocation for value profiler
vp-counters-per-site
The average number of profile counters allocated per value profiling site.
instrprof-atomic-counter-update-all
Make all profile counter updates atomic (for testing only)
atomic-counter-update-promoted
Do counter update using atomic fetch add  for promoted counters only
do-counter-promotion
Do counter register promotion
max-counter-promotions-per-loop
Max number counter promotions per loop to avoid increasing register pressure too much
max-counter-promotions
Max number of allowed counter promotions
speculative-counter-promotion-max-exiting
The max number of exiting blocks of a loop to allow  speculative counter promotion
speculative-counter-promotion-to-loop
When the option is false, if the target block is in a loop, the promotion will be disallowed unless the promoted counter  update can be further/iteratively promoted into an acyclic  region.
iterative-counter-promotion
Allow counter promotion across the whole loop nest.
pgocount
__llvm_profile_filename
Frontend instrumentation-based coverage lowering
pgocount.promoted
__llvm_profile_instrument_target
__llvm_profile_instrument_range
__profv_
__profc_
__profvp_
__profd_
__llvm_prf_vnodes
__llvm_prf_nm
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_register_names_function
__llvm_profile_runtime_user
__llvm_profile_init
pgo-test-profile-file
Specify the path of profile data file. This ismainly for test purpose.
pgo-test-profile-remapping-file
Specify the path of profile remapping file. This is mainly for test purpose.
disable-vp
Disable Value Profiling
icp-max-annotations
Max number of annotations for a single indirect call callsite
memop-max-annotations
Max number of preicise value annotations for a single memopintrinsic
do-comdat-renaming
Append function hash to the name of COMDAT function to avoid function hash mismatch due to the preinliner
pgo-warn-missing-function
Use this option to turn on/off warnings about missing profile data for functions.
no-pgo-warn-mismatch
Use this option to turn off/on warnings about profile cfg mismatch.
no-pgo-warn-mismatch-comdat
The option is used to turn on/off warnings about hash mismatch for comdat functions.
pgo-instr-select
Use this option to turn on/off SELECT instruction instrumentation. 
pgo-view-raw-counts
A boolean option to show CFG dag or text with raw profile counts from profile data. See also option -pgo-view-counts. To limit graph display to only one function, use filtering option -view-bfi-func-name.
pgo-instr-memop
Use this option to turn on/off memory intrinsic size profiling.
pgo-emit-branch-prob
When this option is on, the annotated branch probability will be emitted as optimization remarks: -{Rpass|pass-remarks}=pgo-instrumentation
 (total count : 
PGO instrumentation.
pgo-instr-gen
PGOInstrumentationGenPass
Read PGO instrumentation profile.
pgo-instr-use
PGOInstrumentationUsePass
__llvm_profile_raw_version
pgo-instrumentation
Cannot get PGOReader
Not an IR level instrumentation profile
pgo-view-counts: 
PGORawCounts_
pgo-view-raw-counts: 
Inconsistent number of value sites for kind = 
Count : 
Unknown\l
SELECT : { T = 
Unknown, F = Unknown }\l
, F = 
 }\l
Dump Function 
 Hash: 
  Number of Basic Blocks: 
  BB: 
FakeNode
  Number of Edges: 
 (*: Instrument, C: CriticalEdge, -: Removed)
  Edge 
  Count=
Index=
  W=
_Zero
_One
_MinusOne
_Const
 is true with probability : 
pgo-memop-count-threshold
The minimum count to optimize memory intrinsic calls
disable-memop-opt
Disable optimize
pgo-memop-percent-threshold
The percentage threshold for the memory intrinsic calls optimization
pgo-memop-max-version
The max version for the optimized memory  intrinsic calls
pgo-memop-scale-count
Scale the memop size counts using the basic  block count value
Optimize memory intrinsic using its size value profile
pgo-memop-opt
PGOMemOPSize
MemOP.Merge
MemOP.Default
MemOP.Case.
memopt-opt
optimized 
Intrinsic
Total
Versions
 versions
sanitizer-coverage-level
Sanitizer Coverage. 0: none, 1: entry block, 2: all blocks, 3: all blocks and critical edges
sanitizer-coverage-trace-pc
Experimental pc tracing
sanitizer-coverage-trace-pc-guard
pc tracing with a guard
sanitizer-coverage-pc-table
create a static PC table
sanitizer-coverage-inline-8bit-counters
increments 8-bit counter for every edge
sanitizer-coverage-trace-compares
Tracing of CMP and similar instructions
sanitizer-coverage-trace-divs
Tracing of DIV instructions
sanitizer-coverage-trace-geps
Tracing of GEP instructions
sanitizer-coverage-prune-blocks
Reduce the number of instrumented blocks
sanitizer-coverage-stack-depth
max stack depth tracing
SanitizerCoverage: TODO.ModulePass
sancov
SanitizerCoverageModule
__sanitizer_cov_trace_pc_indir
__sanitizer_cov_trace_cmp1
__sanitizer_cov_trace_cmp2
__sanitizer_cov_trace_cmp4
__sanitizer_cov_trace_cmp8
__sanitizer_cov_trace_const_cmp1
__sanitizer_cov_trace_const_cmp2
__sanitizer_cov_trace_const_cmp4
__sanitizer_cov_trace_const_cmp8
__sanitizer_cov_trace_div4
__sanitizer_cov_trace_div8
__sanitizer_cov_trace_gep
__sanitizer_cov_trace_switch
__sancov_lowest_stack
' should not be declared by the user
__sanitizer_cov_trace_pc
__sanitizer_cov_trace_pc_guard
__sanitizer_cov_trace_pc_guard_init
sancov_guards
__sanitizer_cov_8bit_counters_init
sancov_cntrs
sancov_pcs
__sanitizer_cov_pcs_init
.module_ctor
__DATA,__
__sancov_gen_cov_switch_values
sancov.module_ctor
section$start$__DATA$__
__start___
section$end$__DATA$__
__stop___
Lower pointer authentication intrinsics for soft targets
soft-ptrauth
Soft Pointer Auth Lowering
Soft. lowering of return address auth unsupported
__ptrauth_auth
__ptrauth_sign
__ptrauth_strip
__ptrauth_blend
__ptrauth_sign_generic
ptrauth_soft_init
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-handle-cxx-exceptions
Handle C++ exceptions (insert cleanup blocks for unwinding)
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
ThreadSanitizer
tsan.module_ctor
__tsan_init
tsan_cleanup
__tsan_func_entry
__tsan_func_exit
__tsan_ignore_thread_begin
__tsan_ignore_thread_end
__tsan_read
__tsan_write
__tsan_unaligned_read
__tsan_unaligned_write
__tsan_atomic
_load
_store
_exchange
_fetch_add
_fetch_sub
_fetch_and
_fetch_or
_fetch_xor
_fetch_nand
_compare_exchange_val
__tsan_vptr_update
__tsan_vptr_read
__tsan_atomic_thread_fence
__tsan_atomic_signal_fence
tsan_ignore_cleanup
esan-cache-frag
Detect data cache fragmentation
esan-working-set
Measure the working set size
esan-instrument-loads-and-stores
Instrument loads and stores
esan-instrument-memintrinsics
esan-instrument-fastpath
Instrument fastpath
esan-aux-field-info
Generate binary with auxiliary struct field information
esan-assume-intra-cache-line
Assume each memory access touches just one cache line, for better performance but with a potential loss of accuracy.
EfficiencySanitizer
esan.module_ctor
__esan_init
__esan_which_tool
esan.module_dtor
__esan_exit
__esan_aligned_load
__esan_aligned_store
__esan_unaligned_load
__esan_unaligned_store
__esan_unaligned_loadN
__esan_unaligned_storeN
hwasan-memory-access-callback-prefix
hwasan-instrument-with-calls
instrument reads and writes with callbacks
hwasan-instrument-reads
hwasan-instrument-writes
hwasan-instrument-atomics
hwasan-recover
hwasan-instrument-stack
instrument stack (allocas)
hwasan-uar-retag-to-zero
Clear alloca tags before returning from the function to allow non-instrumented and instrumented function calls mix. When set to false, allocas are retagged before returning from the function to detect use after return.
hwasan-generate-tags-with-calls
generate new tags with runtime library calls
hwasan-match-all-tag
don't report bad accesses via pointers with this tag
hwasan-kernel
Enable KernelHWAddressSanitizer instrumentation
hwasan-mapping-offset
HWASan shadow mapping offset [EXPERIMENTAL]
hwasan-with-ifunc
hwasan-with-tls
Access dynamic shadow through an thread-local pointer on platforms that support this
hwasan-record-stack-history
Record stack frames with tagged allocations in a thread-local ring buffer
hwasan-create-frame-descriptions
create static frame descriptions
hwasan-instrument-mem-intrinsics
instrument memory intrinsics
HWAddressSanitizer
hwasan.module_ctor
__hwasan_init
__hwasan
__hwasan_init_frames
__hwasan_tls
__hwasan_frames
__start___hwasan_frames
__stop___hwasan_frames
__hwasan_tag_memory
__hwasan_generate_tag
__hwasan_shadow
hwasan.shadow
.hwasan.shadow
__hwasan_shadow_memory_dynamic_address
hwasan.stack.base.tag
alloca.
.hwasan
int3
nopl 
(%rax)
{rdi}
brk #
{x0}
Unexpected instruction
A @@ version cannot be undefined
Multiple symbol versions defined for 
No relocation available to represent this relative expression
Cannot represent a difference across sections
.strtab
.llvm.call-graph-profile
.dwo
.debug_frame
ZLIB
.rela
.rel
.symtab
Undefined temporary symbol
Undefined section reference: 
.symtab_shndxr
Size expression must be absolute.
A dwo section may not contain relocations
A relocation may not refer to a dwo section
dwo only supported with ELF
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_DTPRel_4
FK_DTPRel_8
FK_TPRel_4
FK_TPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
FK_Data_Add_1
FK_Data_Add_2
FK_Data_Add_4
FK_Data_Add_8
FK_Data_Sub_1
FK_Data_Sub_2
FK_Data_Sub_4
FK_Data_Sub_8
dwarf-extended-loc
Disable emission of the extended flags in .loc directives.
Default for platform
Enable
Enabled
Disable
NO_APP
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.note.GNU-stack
.cfi_startproc
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.watchos_version_min
.tvos_version_min
.ios_version_min
.macosx_version_min
sdk_version 
.build_version 
iossimulator
tvossimulator
watchossimulator
.thumb_func
.set 
.weakref 
.type
gnu_indirect_function
tls_object
notype
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.safeseh
.symidx
.secidx
.secrel32
.rva
.size
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.fill
.p2align
.p2alignw 
.p2alignl 
.balign
.balignw
.balignl
.org 
.file
.ident
 md5 0x
 source 
.cfi_b_key_frame
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cv_file
0123456789ABCDEF
.cv_func_id 
.cv_inline_site_id 
 inlined_at 
.cv_loc
 is_stmt 1
.cv_linetable
.cv_inline_linetable
.cv_def_range
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cfi_sections 
.eh_frame
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_restore 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_escape 
.cfi_return_column 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.cfi_negate_ra_state
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.cg_profile 
.intel_syntax noprefix
.reloc 
.addrsig
.addrsig_sym 
encoding: [
  fixup 
offset: 
, value: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
expected relocatable expression
unsupported subtraction of qualified symbol
expected assembly-time absolute expression
invalid number of bytes
expected absolute expression
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
unable to write NOP sequence of 
cannot have fixups in virtual section!
non-zero initializer found in section '
non-zero initializer found in virtual section
sleb128 and uleb128 expressions must be absolute
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
checksum_offset
strtab_begin
strtab_end
filechecksums_begin
filechecksums_end
linetable_begin
linetable_end
Segment for file '
' begins
as-secure-log-file-name
As secure log file name (initialized from AS_SECURE_LOG_FILE env variable)
AS_SECURE_LOG_FILE
$frame_escape_
$parent_frame_offset
__ehtable$
invalid symbol redefinition
.group
<stdin>
file number already allocated
inconsistent use of embedded source
SmallVector capacity overflow during allocation
Allocation failed
llvm-mc (based on LLVM 11.0.0)
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
Unterminated .bundle_lock when changing a section
Symbol: 
 redeclared as different type
Emitting values inside a locked bundle is forbidden
.comment
Reference to undefined temporary symbol 
.bundle_align_mode cannot be changed once set
.bundle_lock forbidden when bundling is disabled
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
A Bundle can only have one Subtarget.
<<invalid>>
<<none>>
DTPOFF
DTPREL
GOTOFF
GOTREL
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
TPREL
tlscall
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
WEAKREF
ABS8
target1
target2
prel31
sbrel
tlsldo
tlsdescseq
hlo8
diff8
diff16
diff32
high
higha
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel@l
tprel@h
tprel@ha
tprel@high
tprel@higha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel@l
dtprel@h
dtprel@ha
dtprel@high
dtprel@higha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
IMGREL
PCREL
LO16
HI16
GPREL
GDGOT
LDGOT
GDPLT
LDPLT
IEGOT
FUNCTION
GLOBAL
TYPEINDEX
EVENT
gotpcrel32@lo
gotpcrel32@hi
rel32@lo
rel32@hi
rel64
pcrel
Allocation failed
expression could not be evaluated
' could not be evaluated in a subtraction expression
Common symbol '
' cannot be used in assignment expr
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
<MCOperand 
INVALID
FPImm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
-0x%llx
0x%llx
-0%llxh
-%llxh
0%llxh
%llxh
__DWARF
The usage of .zerofill is restricted to sections of ZEROFILL type. Use .zero or .space instead.
__eh_frame
__text
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__thread_ptr
__gcc_except_tab
__LD
__compact_unwind
__debug_names
debug_names_begin
__apple_names
names_begin
__apple_objc
objc_begin
__apple_namespac
namespac_begin
__apple_types
types_begin
__swift_ast
__debug_abbrev
section_abbrev
__debug_info
section_info
__debug_line
section_line
__debug_line_str
section_line_str
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
info_string
__debug_str_offs
section_str_off
__debug_addr
__debug_loc
section_debug_loc
__debug_loclists
__debug_aranges
__debug_ranges
debug_range
__debug_rnglists
__debug_macinfo
debug_macinfo
__debug_inlined
__debug_cu_index
__debug_tu_index
__LLVM_STACKMAPS
__llvm_stackmaps
__LLVM_FAULTMAPS
__llvm_faultmaps
__remarks
.rodata.cst4
.rodata.cst8
.rodata.cst16
.rodata.cst32
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_line_str
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.debug_names
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_str_offsets
.debug_addr
.debug_rnglists
.debug_loclists
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_rnglists.dwo
.debug_cu_index
.debug_tu_index
.llvm_stackmaps
.llvm_faultmaps
.stack_sizes
.remarks
.debug$S
.debug$T
.debug$H
section_info_dwo
section_types_dwo
section_abbrev_dwo
skel_string
skel_loc
section_str_off_dwo
addr_sec
.drectve
.pdata
.sxdata
.gfids$y
.rodata.gcc_except_table
Cannot initialize MC for non-Windows COFF object files.
Cannot initialize MC for unknown object file format.
Cannot get DWARF comdat section for this object file format: not implemented.
unresolved relocation offset
value evaluated as 
 is out of range.
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
'.fill' directive with negative repeat count has no effect
target does not implement codeview register mapping
unknown codeview register 
sec_end
Mismatched bundle_lock/unlock directives
.section
.linkonce
one_only
same_size
same_contents
associative
newest
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
progbits
unwind
0x7000001e
llvm_odrtab
llvm_linker_options
llvm_call_graph_profile
unsupported type 0x
 for section 
,comdat
,unique,
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
this directive must appear between .cfi_startproc and .cfi_endproc directives
parent function id not introduced by .cv_func_id or .cv_inline_site_id
function id not introduced by .cv_func_id or .cv_inline_site_id
all .cv_loc directives for a function must be in the same section
invalid symbol redefinition
starting new .cfi frame before finishing the previous one
.seh_* directives are not supported on this target
.seh_ directive must appear within an active frame
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
frame register and offset can be set at most once
offset is not a multiple of 16
frame offset must be less than or equal to 240
stack allocation size must be non-zero
stack allocation size is not a multiple of 8
register save offset is not 8 byte aligned
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it (target backend is likely missing an AsmStreamer implementation)
Unfinished frame!
' is not a recognized processor for this target
 (ignoring processor)
Symbol name with unsupported characters
SEH unwind data splitting not yet implemented
starting a new symbol definition without completing the previous one
storage class specified outside of symbol definition
storage class value '
' out of range
symbol type specified outside of a symbol definition
type value '
ending symbol definition without starting one
alignment is limited to 32-bytes
 -aligncomm:"
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
unsupported relocation expression
indirect symbol '
' not in a symbol pointer or stub section
Data region not terminated
invalid 'common' alignment '
' for '
' is not a recognized feature for this target
 (ignoring feature)
+help
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
section already has a defining function: 
relocations for function or section offsets are only supported in metadata sections
section symbol is required for relocation
relocations against un-named temporaries are not yet supported by wasm
__linear_memory
__indirect_function_table
undefined global symbol cannot be weak
undefined event symbol cannot be weak
section name and begin symbol should match: 
function sections must contain one function each
function symbols must have a size set with .size
data symbols must have a size set with .size: 
.size expression must be evaluatable
don't yet support defined globals
don't yet support global/event aliases
.fini_array sections are unsupported
only one .init_array section fragment supported
.init_array section should be aligned
.init_array section should be aligned for pointers
only data supported in .init_array section
.init_array section priority should start with '.'
invalid .init_array section priority
non-symbolic data in .init_array section
fixups in .init_array should be symbol references
symbols in .init_array should be for functions
symbols in .init_array should exist in symbtab
CODE
DATA
only data supported in data sections
only byte values supported for alignment
section size does not fit in a uint32_t
symbol not found in wasm index space: 
symbol not found in type index space: 
linking
.llvm_addrsig
two sections have the same comdat
conflicting sections for symbol
.weak.
.default
symbol '
' can not be undefined
assembler label '
' can not be undefined in a subtraction expression
PE COFF object files can't have more than 2147483647 sections
cannot make section 
 associative with sectionless symbol 
.file
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
invalid binary number
invalid hexdecimal number
invalid decimal number
invalid octal number
asm-macro-max-nesting-depth
The maximum nesting depth allowed for assembly macros.
missing expression
Recursive use of '
invalid assignment to '
invalid reassignment of non-absolute variable '
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.value
.long
.int
.octa
.single
.float
.double
.align32
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.cold
.comm
.common
.lcomm
.abort
.include
.incbin
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifnes
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.line
.loc
.stabs
.cv_file
.cv_func_id
.cv_loc
.cv_linetable
.cv_inline_linetable
.cv_inline_site_id
.cv_def_range
.cv_string
.cv_stringtable
.cv_filechecksums
.cv_filechecksumoffset
.cv_fpo_data
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_return_column
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
.altmacro
.noaltmacro
.reloc
.dc.a
.dc.b
.dc.d
.dc.l
.dc.s
.dc.w
.dc.x
.dcb
.dcb.b
.dcb.d
.dcb.l
.dcb.s
.dcb.w
.dcb.x
.ds.b
.ds.d
.ds.l
.ds.p
.ds.s
.ds.w
.ds.x
.print
.addrsig
.addrsig_sym
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
directional label undefined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
 not currently supported for this target
unknown directive
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected string parameter for '.ifnes' directive
expected comma after first string for '.ifeqs' directive
expected comma after first string for '.ifnes' directive
expected identifier after '.ifdef'
unexpected token in '.ifdef'
Encountered a .elseif that doesn't follow an .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow  an .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow an .if or .else
macros cannot be nested more than 
 levels deep.
 Use -asm-macro-max-nesting-depth to increase this limit.
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
expected absolute expression
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
 in '
out of range literal value
infinity
invalid floating point literal
 in directive
p2align directive with no operand(s) is ignored
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
 in '.org' directive
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
skip is negative
Could not find incbin file '
negative count has no effect
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected End of Statement
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
expected end of statement
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
in '
negative file number
unexpected token in '.file' directive
explicit path specified, but no file number
MD5 checksum specified, but no file number
source specified, but no file number
file 0 not supported prior to DWARF-5
inconsistent use of MD5 checksums
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
expected file number in '.cv_file' directive
file number less than one
unexpected token in '.cv_file' directive
expected checksum kind in '.cv_file' directive
file number already allocated
unexpected token in '.cv_func_id' directive
function id already allocated
expected function id in '
expected function id within range [0, UINT_MAX)
expected 'within' identifier in '.cv_inline_site_id' directive
expected 'inlined_at' identifier in '.cv_inline_site_id' directive
expected line number after 'inlined_at'
unexpected token in '.cv_inline_site_id' directive
expected integer in '
file number less than one in '
unassigned file number in '
line number less than zero in '.cv_loc' directive
column position less than zero in '.cv_loc' directive
unexpected token in '.cv_loc' directive
unknown sub-directive in '.cv_loc' directive
unexpected token in '.cv_linetable' directive
expected SourceField in '.cv_inline_linetable' directive
File id less than zero in '.cv_inline_linetable' directive
expected SourceLineNum in '.cv_inline_linetable' directive
Line number less than zero in '.cv_inline_linetable' directive
Expected End of Statement
 in '.cv_string' directive
 in '.cv_fpo_data' directive
Expected an identifier
 in '.cfi_startproc' directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
macro '
' has multiple parameters named '
missing parameter qualifier for '
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
expected end of statement in '.warning' directive
expression is negative
expected non-negative number or a label
expected relocation name
expression must be relocatable
unexpected token in .reloc directive
unknown relocation name
' directive with negative repeat count has no effect
literal value out of range for directive
expected double quoted string after .print
expected identifier in '.addrsig_sym' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
 * $$
 + $$
xword ptr 
while in macro instantiation
expected string
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
expected a symbol reference
unexpected modifier on variable reference
brackets expression not supported on this target
expected '(' after operator
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.section
.def
.scl
.type
.endef
.secrel32
.symidx
.safeseh
.secidx
.linkonce
.rva
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
.weak
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
unrecognized COMDAT type '
invalid '.secrel32' directive offset, can't be less than zero or greater than std::numeric_limits<uint32_t>::max()
cannot make section associative with .linkonce
section '
' is already linkonce
invalid '.rva' directive offset, can't be less than -2147483648 or greater than 2147483647
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
you must specify an offset on the stack
expected @code
.alt_entry
.indirect_symbol
.lsym
.dump
.load
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.thread_local_variable_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.ident
.bridgeos_version_min
.build_version
.alt_entry must preceed symbol definition
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
non-local symbol required in directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
section "
" is deprecated
change section name to "
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
expected string in '
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
invalid OS update specifier, comma expected
OS update
invalid 
 major version number, integer expected
 major version number
 minor version number required, comma expected
 minor version number, integer expected
 minor version number
 version number, integer expected
 version number
SDK subminor
 used while targeting 
overriding previous version directive
platform name expected
unknown platform name
version number required, comma expected
 in '.build_version' directive
.data.rel
.size
.symver
.version
.weakref
.local
.protected
.internal
.hidden
.subsection
.cg_profile
.rodata.
.text.
.data.
.init_array.
.fini_array.
.preinit_array.
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
unknown section type
DWARF2 only supports one section per compilation unit
expected '@<type>', '%<type>' or "<type>"
expected '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
invalid group name
invalid linkage
Linkage must be 'comdat'
expected metadata symbol
invalid metadata symbol
symbol is not in a section: 
unique
expected 'unique'
expected commma
unique id must be positive
unique id is too large
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '%<type>' or "<type>"
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
expected integer count in '.cg_profile' directive
Expected label after .type directive, got: 
Expected label,@type declaration, got: 
Unknown WASM symbol type: 
, instead got: 
arc-opt-max-ptr-states
Maximum number of ptr states the optimizer keeps track of
ObjC ARC optimization
objc-arc
__objc_methname
ObjC ARC expansion
objc-arc-expand
ObjC ARC autorelease pool elimination
objc-arc-apelim
arc-contract-max-bb-size
Maximum basic block size to discover the dominance relation of two instructions in the same basic block
ObjC ARC contraction
objc-arc-contract
OVERVIEW: 
USAGE: 
OPTIONS
 <value>
<value>
adce-remove-control-flow
adce-remove-loops
adce
Aggressive Dead Code Elimination
alignment-from-assumptions
bdce
Bit-Tracking Dead Code Elimination
callsite-splitting-duplication-threshold
Only allow instructions before a call, if their cost is below DuplicationThreshold
Call-site splitting
callsite-splitting
phi.call
consthoist-with-block-frequency
Enable the use of the block frequency analysis to reduce the chance to execute const materialization more frequently than without hoisting.
consthoist-gep
Try hoisting constant gep expressions
consthoist-min-num-to-rebase
Do not rebase if number of dependent constants of a Base is less than this number.
base_bitcast
mat_gep
mat_bitcast
const_mat
Constant Hoisting
consthoist
constprop-transform
Controls which instructions are killed
Simple constant propagation
constprop
cvp-dont-process-adds
Value Propagation
correlated-propagation
.lhs.trunc
.rhs.trunc
.zext
dce-transform
Controls which instructions are eliminated
Dead Instruction Elimination
Dead Code Elimination
enable-dse-partial-overwrite-tracking
Enable partial-overwrite tracking in DSE
enable-dse-partial-store-merging
Enable partial store merging in DSE
Dead Store Elimination
div-rem-pairs-transform
Controls transformations in div-rem-pairs pass
Hoist/decompose integer division and remainder
div-rem-pairs
early-cse
Controls which instructions are removed
Early CSE
Early CSE w/ MemorySSA
early-cse-memssa
float2int-max-integer-bw
Max integer bitwidth to consider in float2int(default=64)
Float to int
float2int
guard-widening-widen-frequent-branches
Widen conditions of explicit branches into dominating guards in case if their taken frequency exceeds threshold set by guard-widening-frequent-branch-threshold option
guard-widening-frequent-branch-threshold
When WidenFrequentBranches is set to true, this option is used to determine which branches are frequently taken. The criteria that a branch is taken more often than ((FrequentBranchThreshold - 1) / FrequentBranchThreshold), then it is considered frequently taken
wide.chk
inverted
guard-widening
Widen guards
Widen guards (within a single loop, as a loop pass)
loop-guard-widening
enable-pre
enable-load-pre
enable-gvn-memdep
gvn-max-recurse-depth
Max recurse depth in GVN (default = 1000)
gvn-max-num-deps
Max number of dependences to attempt Load PRE (default = 100)
.pre
.pre-phi
LoadClobbered
load of type 
 not eliminated
 in favor of 
OtherAccess
 because it is clobbered by 
ClobberedBy
LoadElim
 eliminated
InfavorOfValue
Global Value Numbering
LoadPRE
load eliminated by PRE
gvn-max-hoisted
Max number of instructions to hoist (default unlimited = -1)
gvn-hoist-max-bbs
Max number of basic blocks on the path between hoisting locations (default = 4, unlimited = -1)
gvn-hoist-max-depth
Hoist instructions from the beginning of the BB up to the maximum specified depth (default = 100, unlimited = -1)
gvn-hoist-max-chain-length
Maximum length of dependent chains to hoist (default = 10, unlimited = -1)
gvn-hoist
Early GVN Hoisting of Expressions
.gvnsink.split
ExpressionTypeBasic, 
operands = {
] = 
etype = 
opcode = 
.sink
gvn-sink
Early GVN sinking of Expressions
irce-loop-size-cutoff
irce-print-changed-loops
irce-print-range-checks
irce-max-exit-prob-reciprocal
irce-skip-profitability-checks
irce-allow-unsigned-latch
Inductive range check elimination
irce
irce: looking at loop 
irce: loop has 
 inductive range checks: 
InductiveRangeCheck:
  Kind: 
  Begin: 
  Step: 
  End: 
  CheckUse: 
 Operand: 
RANGE_CHECK_UNKNOWN
RANGE_CHECK_UPPER
RANGE_CHECK_LOWER
RANGE_CHECK_BOTH
loop not in LoopSimplify form
loop has already been cloned
no loop latch
no preheader
latch terminator not conditional branch
short running loop, not profitable
latch terminator branch not conditional on integral icmp
could not compute latch count
no add recurrences in the icmp
LHS in icmp not induction variable
LHS in icmp needs nsw for equality predicates
expected icmp slt semantically, found something else
unsigned latch conditions are explicitly prohibited
Unsafe loop bounds
expected icmp sgt semantically, found something else
Unsafe bounds
indvar.start
irce.loop.clone
exit.preloop.at
exit.mainloop.at
preloop
postloop
mainloop
.exit.selector
.pseudo.exit
.copy
indvar.end
llvm.loop.licm_versioning.disable
irce: in function 
constrained 
verify-indvars
Verify the ScalarEvolution result after running indvars
replexitval
Choose the strategy to replace exit value in IndVarSimplify
never replace exit value
cheap
only replace exit value when the cost is cheap
always replace exit value whenever possible
indvars-post-increment-ranges
Use post increment control-dependent ranges in IndVarSimplify
disable-lftr
Disable Linear Function Test Replace optimization
indvars
indvar.conv
.wide
wide.trip.count
lftr.wideiv
exitcond
lftr.limit
Induction Variable Simplification
Remove redundant instructions
instsimplify
jump-threading-threshold
Max block size to duplicate for jump threading
jump-threading-implication-search-threshold
The number of predecessors to search for a stronger condition to use to thread over a weaker condition
print-lvi-after-jump-threading
Print the LazyValueInfo cache after JumpThreading
thread-pre-split
.thr_comm
.thread
.split-lp
select.unfold
Jump Threading
jump-threading
LVI for function '
disable-licm-promotion
Disable memory promotion in LICM pass
licm-control-flow-hoisting
Enable control flow (and PHI) hoisting in LICM
licm-max-num-uses-traversed
Max num uses visited for identifying load invariance in loop using invariant start (default = 8)
licm-n2-threshold
How many instruction to cross product using AA
LICM: OptimizationRemarkEmitterAnalysis not cached at a higher level
.promoted
Loop Invariant Code Motion
licm
.licm
InstSunk
sinking 
Inst
.split.loop.exit
.lcssa
Hoisted
hoisting 
LoadWithLoopInvariantAddressCondExecuted
failed to hoist load with loop-invariant address because load is conditionally executed
LoadWithLoopInvariantAddressInvalidated
failed to move load with loop-invariant address because the loop may invalidate its value
PromoteLoopAccessesToScalar
Moving accesses to memory location out of the loop
Loop access info in function '
sink-freq-percent-threshold
Do not sink instructions that require cloning unless they execute less than this percent of the time.
max-uses-for-sinking
Do not sink instructions that have too many uses.
Loop Sink
loop-sink
Delete dead loops
loop-deletion
loop-prefetch-writes
Prefetch write addresses
prefetch-distance
Number of instructions to prefetch ahead
min-prefetch-stride
Min stride to add prefetches
max-prefetch-iters-ahead
Max number of iterations to prefetch ahead
Loop Data Prefetch
loop-data-prefetch
prefaddr
Prefetched
prefetched memory access
loop-distribute-verify
Turn on DominatorTree and LoopInfo verification after Loop Distribution
loop-distribute-non-if-convertible
Whether to distribute into a loop that may not be if-convertible by the loop vectorizer
loop-distribute-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Distribution
loop-distribute-scev-check-threshold-with-pragma
The maximum number of SCEV checks allowed for Loop Distribution for loop marked with #pragma loop distribute(enable)
enable-loop-distribute
Enable the new, experimental LoopDistribution Pass
MultipleExitBlocks
multiple exit blocks
NotLoopSimplifyForm
loop is not in loop-simplify form
MemOpsCanBeVectorized
memory operations are safe for vectorization
NoUnsafeDeps
no unsafe dependences to isolate
CantIsolateUnsafeDeps
cannot isolate unsafe dependencies
TooManySCEVRuntimeChecks
too many SCEV run-time checks needed.
HeuristicDisabled
distribution heuristic disabled
llvm.loop.distribute.followup_all
llvm.loop.distribute.followup_fallback
llvm.loop.distribute.
loop-distribute
loop not distributed: 
loop not distributed: failed explicitly specified loop distribution
NotDistributed
loop not distributed: use -Rpass-analysis=loop-distribute for more info
.ldist
llvm.loop.distribute.followup_sequential
llvm.loop.distribute.followup_coincident
Distribute
distributed loop
use-lir-code-size-heurs
Use loop idiom recognition code size heuristics when compilingwith -Os/-Oz
Recognize loop idioms
loop-idiom
.memset_pattern
tcphi
tcdec
loop-instsimplify
Simplify instructions in loops
loop-interchange-threshold
Interchange if you gain more than this number
Interchanges loops for cache reuse
loop-interchange
Dependence
Cannot interchange loops due to dependences.
CallInst
Cannot interchange loops due to call instruction.
ExitingNotLatch
Loops where the latch is not the exiting block cannot be interchange currently.
UnsupportedPHIOuter
Only outer loops with induction or reduction PHI nodes can be interchanged currently.
MultiIndutionOuter
Only outer loops with 1 induction variable can be interchanged currently.
UnsupportedPHIInner
Only inner loops with induction or reduction PHI nodes can be interchange currently.
MultiInductionInner
Only inner loops with 1 induction variable can be interchanged currently.
UnsupportedStructureInner
Inner loop structure not understood currently.
NoLCSSAPHIOuterInner
Only inner loops with LCSSA PHIs can be interchange currently.
NoIncrementInInner
The inner loop does not increment the induction variable.
UnsupportedInsBetweenInduction
Found unsupported instruction between induction variable increment and branch.
NoIndutionVariable
Did not find the induction variable.
NotTightlyNested
Cannot interchange loops because they are not tightly nested.
UnsupportedExitPHI
Found unsupported PHI node in loop exit.
InterchangeNotProfitable
Interchanging loops is too costly (cost=
) and it does not improve parallelism.
Interchanged
Loop interchanged with enclosing loop.
runtime-check-per-loop-load-elim
Max number of memchecks allowed per eliminated load on average
loop-load-elimination-scev-check-threshold
The maximum number of SCEV checks allowed for Loop Load Elimination
loop-load-elim
storeforward
load_initial
store_forwarded
Starting Loop pass manager run.
Finished Loop pass manager run.
loop-predication-enable-iv-truncation
loop-predication-enable-count-down-loop
loop-predication-skip-profitability-checks
loop-predication-latch-probability-scale
scale factor for the latch probability. Value should be greater than 1. Lower values are ignored
Loop predication
loop-predication
reroll-num-tolerated-failed-matches
The maximum number of failures to tolerate during fuzzy matching. (default: 400)
Reroll loops
loop-reroll
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
enable-loop-simplifycfg-term-folding
-split
loop-simplifycfg
Simplify loop CFG
enable-lsr-phielim
Enable LSR phi elimination
lsr-insns-cost
Add instruction count to a LSR cost model
lsr-exp-narrow
Narrow LSR complex solution using expectation of registers number
lsr-filter-same-scaled-reg
Narrow LSR search space by filtering non-optimal formulae with the same ScaledReg and Scale
lsr-complexity-limit
LSR search space complexity limit
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
Loop Strength Reduction
loop-reduce
unroll-threshold
The cost threshold for loop unrolling
unroll-partial-threshold
The cost threshold for partial loop unrolling
unroll-max-percent-threshold-boost
The maximum 'boost' (represented as a percentage >= 100) applied to the threshold when aggressively unrolling a loop due to the dynamic cost savings. If completely unrolling a loop will reduce the total runtime from X to Y, we boost the loop unroll threshold to DefaultThreshold*std::min(MaxPercentThresholdBoost, X/Y). This limit avoids excessive code bloat.
unroll-max-iteration-count-to-analyze
Don't allow loop unrolling to simulate more than this number ofiterations when checking full unroll profitability
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-max-count
Set the max unroll count for partial and runtime unrolling, fortesting purposes
unroll-full-max-count
Set the max unroll count for full unrolling, for testing purposes
unroll-peel-count
Set the unroll peeling count, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-allow-remainder
Allow generation of a loop remainder (extra iterations) when unrolling a loop.
unroll-runtime
Unroll loops with run-time trip counts
unroll-max-upperbound
The max of trip count upper bound that is considered in unrolling
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
flat-loop-tripcount-threshold
If the runtime tripcount for the loop is lower than the threshold, the loop is considered as flat and will be less aggressively unrolled.
unroll-allow-peeling
Allows loops to be peeled when the dynamic trip count is known to be low.
unroll-remainder
Allow the loop remainder to be unrolled.
unroll-revisit-child-loops
Enqueue and re-visit child loops in the loop PM after unrolling. This shouldn't typically be needed as child loops (or their clones) were already visited.
LoopFullUnrollPass: OptimizationRemarkEmitterAnalysis not cached at a higher level
Unroll loops
loop-unroll
llvm.loop.unroll.followup_all
llvm.loop.unroll.followup_remainder
llvm.loop.unroll.followup_unrolled
UnrollAsDirectedTooLarge
Unable to unroll loop as directed by unroll(enable) pragma because unrolled size is too large.
FullUnrollAsDirectedTooLarge
Unable to fully unroll loop as directed by unroll pragma because unrolled size is too large.
CantFullUnrollAsDirectedRuntimeTripCount
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
DifferentUnrollCountFromDirected
Unable to unroll loop the number of times directed by unroll_count pragma because remainder loop is restricted (that could architecture specific or because the loop contains a convergent instruction) and so must have an unroll count that divides the loop trip multiple of 
TripMultiple
.  Unrolling instead 
UnrollCount
 time(s).
allow-unroll-and-jam
Allows loops to be unroll-and-jammed.
unroll-and-jam-count
Use this unroll count for all loops including those with unroll_and_jam_count pragma values, for testing purposes
unroll-and-jam-threshold
Threshold to use for inner loop when doing unroll and jam.
pragma-unroll-and-jam-threshold
Unrolled size limit for loops with an unroll_and_jam(full) or unroll_count pragma.
LoopUnrollAndJamPass: OptimizationRemarkEmitterAnalysis not cached at a higher level
Unroll and Jam loops
loop-unroll-and-jam
llvm.loop.unroll_and_jam.
llvm.loop.unroll_and_jam.followup_all
llvm.loop.unroll_and_jam.followup_remainder_inner
llvm.loop.unroll_and_jam.followup_remainder_outer
llvm.loop.unroll_and_jam.followup_inner
llvm.loop.unroll_and_jam.followup_outer
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
licm-versioning-invariant-threshold
LoopVersioningLICM's minimum allowed percentageof possible invariant instructions per loop
licm-versioning-max-depth-threshold
LoopVersioningLICM's threshold for maximum allowed loop nest/depth
Loop Versioning For LICM
loop-versioning-licm
Loop Versioning for LICM
IllegalLoopStruct
 Unsafe Loop structure
IllegalLoopInst
 Unsafe Loop Instruction
RuntimeCheck
Number of runtime checks 
RuntimeChecks
 exceeds threshold 
InvariantThreshold
Invariant load & store 
LoadAndStoreCounter
 are less then defined threshold 
IllegalLoopMemoryAccess
 Unsafe Loop memory access
IsLegalForVersioning
 Versioned loop for LICM.
 Number of runtime checks we had to insert 
LVDomain
LVAliasScope
Lower atomic intrinsics to non-atomic form
loweratomic
likely-branch-weight
Weight of the branch likely to be taken (default = 2000)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 1)
Lower 'expect' Intrinsics
lower-expect
fuse-matrix
force-fuse-matrix
fuse-matrix-tile-size
matmul-use-fma
st_b
st_e
alias_cont
ld_b
ld_e
lower-matrix-type
matrix-lowered
Lowered with 
 tiling, 
NumStores
 stores, 
NumLoads
 loads, 
NumFPOps
 fp ops
TileRows
TileColumns
 tiles
additionally 
 are shared with other expressions
shared with remark at line 
 column 
stack addr
external addr
widenable_cond
exiplicit_guard_cond
MemCpy Optimization
memcpyopt
Merge contiguous icmps into a memcmp
mergeicmps
MergedLoadStoreMotion
mldst-motion
Nary reassociation
nary-reassociate
newgvn-vn
Controls which instructions are value numbered
newgvn-phi
Controls which instructions we create phi of ops for
enable-store-refinement
enable-phi-of-ops
newgvn
ExpressionTypeConstant, 
 constant = 
ExpressionTypeVariable, 
 variable = 
phiofops
ExpressionTypeUnknown, 
 inst = 
ExpressionTypeCall, 
 represents call at 
ExpressionTypeLoad, 
 represents Load at 
 with MemoryLeader 
ExpressionTypeStore, 
 represents Store  
 with StoredValue 
 and MemoryLeader 
ExpressionTypeAggregateValue, 
, intoperands = {
ExpressionTypePhi, 
bb = 
partially-inline-libcalls-transform
Controls transformations in partially-inline-libcalls
call.sqrt
Partially inline calls to library functions
partially-inline-libcalls
factor
reass.mul
reassociate
and.ra
reass.add
.neg
Reassociate expressions
Demote all values to stack slots
reg2mem
reg2mem alloca point
spp-print-liveset
spp-print-liveset-size
spp-print-base-pointers
spp-rematerialization-threshold
rs4gc-clobber-non-live
rs4gc-allow-statepoint-with-no-deopt-info
coreclr
Base Pairs: (w/Relocation)
 derived 
 base 
__tmp_use
Live Variables:
Safepoint For: 
Number live values: 
Base Pairs (w/o Relocation):
base_ee
is_base_value
base_phi
base_select
base_ie
base_sv
.remat
safepoint_token
statepoint_token
deopt-lowering
live-through
.relocated
Sparse Conditional Constant Propagation
sccp
sroa-random-shuffle-slices
sroa-strict-inbounds
.sroa.
sroa_raw_cast
sroa_raw_idx
sroa_cast
sroa_idx
sroa
load.ext
endian_shift
.shift
.ext
.insert
load.trunc
.expand
oldload
copyload
zext
isplat
vsplat
.fca
.gep
.sroa.speculated
.sroa.speculate.load.
.sroa.speculate.load.true
.sroa.speculate.load.false
SROA
Scalar Replacement Of Aggregates
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
Scalarize vector operations
scalarizer
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
reassociate-geps-verify-no-dead-code
Verify this pass produces no dead code
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
Dead instruction detected!
enable-nontrivial-unswitch
Forcibly enables non-trivial loop unswitching rather than following the configuration passed into the pass.
unswitch-threshold
The cost threshold for unswitching a loop.
enable-unswitch-cost-multiplier
Enable unswitch cost multiplier that prohibits exponential explosion in nontrivial unswitch.
unswitch-siblings-toplevel-div
Toplevel siblings divisor for cost multiplier.
unswitch-num-initial-unscaled-candidates
Number of unswitch candidates that are ignored when calculating cost multiplier.
simple-loop-unswitch-guards
If enabled, simple loop unswitching will also consider llvm.experimental.guard intrinsics as unswitch candidates.
.split
simple-loop-unswitch
Cannot unswitch because of cleanuppad in exit block
guarded
.us-phi
Simple unswitch loops
bonus-inst-threshold
Control the number of bonus instructions (default = 1)
keep-loops
Preserve canonical loop structure (default = true)
switch-to-lookup
Convert switches to lookup tables (default = false)
forward-switch-cond
Forward switch condition to phi ops (default = false)
sink-common-insts
Sink common instructions (default = false)
merge
simplifycfg
Simplify the CFG
Code sinking
spec-exec-max-speculation-cost
Speculative execution is not applied to basic blocks where the cost of the instructions to speculatively execute exceeds this limit.
spec-exec-max-not-hoisted
Speculative execution is not applied to basic blocks where the number of instructions that would not be speculatively executed exceeds this limit.
spec-exec-only-if-divergent-target
Speculative execution is applied only to targets with divergent branches, even if the pass was configured to apply only to all targets.
Speculatively execute instructions
Speculatively execute instructions if target has divergent branches
.phi
Straight line strength reduction
slsr
structurizecfg-skip-uniform-regions
Force whether the StructurizeCFG pass skips uniform regions
Structurize the CFG
structurizecfg
Structurize control flow
structurizecfg.uniform
entry.orig
Flow
Tail Call Elimination
tailcallelim
tailcall-readnone
marked as tail call candidate (readnone)
tailrecurse
accumulator.tr
tailcall-recursion
transforming tail recursion into loop
transform-warning
FailedRequestedUnrolling
loop not unrolled: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedUnrollAndJamming
loop not unroll-and-jammed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedVectorization
loop not vectorized: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedInterleaving
loop not interleaved: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
FailedRequestedDistribution
loop not distributed: the optimizer was unable to perform the requested transformation; the transformation might be disabled or specified as part of an unsupported transformation ordering
Warn about non-applied transformations
+spe
+ras
+lse
+rdm
+rcpc
+v8.5a
8.1-A
8.2-A
8.3-A
8.4-A
8.5-A
-lse
-rdm
-dotprod
-spe
-ras
-sve
-rcpc
+rand
-rand
memtag
+mte
-mte
+ssbs
-ssbs
v6sm
v6-m
v6kz
v7-a
v7-r
v7-m
v7em
v7e-m
aarch64
arm64
v8-a
v8.1-a
v8.2-a
v8.3-a
v8.4-a
v8.5-a
v8-r
v8-m.base
v8-m.main
+d16
-fp-only-sp
-d16
-vfp4
-fp16
-vfp3
-vfp2
thumb
vfpv2
vfpv3
vfpv4
vfpv4-d16
fpv4-sp-d16
fpv5-sp-d16
fpv5-d16
arm2
arm3
arm6
arm7m
arm9312
arm1136jz-s
-hwdiv-arm
-hwdiv
-dsp
5TEJ
v7ve
7E-M
8-M.Baseline
8-M.Mainline
vfpv3-fp16
vfpv3-d16-fp16
vfpv3xd
vfpv3xd-fp16
neon-fp16
neon-vfpv4
neon-fp-armv8
crypto-neon-fp-armv8
softvfp
idiv
arm,thumb
+Inf
-Inf
0.0E+0
e+00
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
Tag_File
Tag_Section
Tag_Symbol
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_FP_arch
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_DSP_extension
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Attribute
TagName
Value
Description
Pre-v4
ARM v4
ARM v4T
ARM v5T
ARM v5TE
ARM v5TEJ
ARM v6
ARM v6KZ
ARM v6T2
ARM v6K
ARM v7
ARM v6-M
ARM v6S-M
ARM v7E-M
ARM v8
Application
Real-time
Microcontroller
Classic
Not Permitted
Permitted
Thumb-1
Thumb-2
VFPv1
VFPv2
VFPv3
VFPv3-D16
VFPv4
VFPv4-D16
ARMv8-a FP
ARMv8-a FP-D16
WMMXv1
WMMXv2
NEONv1
NEONv2+FMA
ARMv8-a NEON
ARMv8.1-a NEON
Bare Platform
Linux Application
Linux DSO
Palm OS 2004
Reserved (Palm OS)
Symbian OS 2004
Reserved (Symbian OS)
Static Base
Absolute
PC-relative
SB-relative
Direct
GOT-Indirect
2-byte
4-byte
IEEE-754
Runtime
Unsupported
Sign Only
Finite Only
RTABI
8-byte alignment
4-byte alignment
Reserved
Not Required
8-byte data alignment
8-byte data and code alignment
External Int32
Single-Precision
Tag_FP_arch (deprecated)
AAPCS
AAPCS VFP
Custom
iWMMX
Speed
Aggressive Speed
Aggressive Size
Debugging
Best Debugging
Accuracy
Best Accuracy
Value: 
No Specific Requirements
AEABI Conformant
AEABI Non-Conformant
v6-style
If Available
Virtualization Extensions
TrustZone + Virtualization Extensions
Unspecified Tags UNDEFINED
unhandled AEABI Tag 
SectionLength
Vendor
subsection length greater than section length
FileAttributes
SectionAttributes
Sections
SymbolAttributes
Symbols
unrecognised tag: 0x
Section 
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Stream Error: 
An unspecified error has occurred.
The stream is too short to perform the requested operation.
The buffer size is not a multiple of the array element size.
The specified offset is invalid for the current stream.
An I/O error occurred on the file system.
0x%08x / 0x%08x = %.2f%%
%Y-%m-%d %H:%M:%S
%.9lu
%Y-%m-%d %H:%M:%S.%N
%.3lu
%.6lu
BAD-DATE-FORMAT
General options
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
>...
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
Generic Options
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
Display available options (-help-hidden for more)
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
Display the version of this program
: CommandLine Error: Option '
' registered more than once!
inconsistency in registered CommandLine options
Cannot specify more than one option with cl::ConsumeAfter!
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
' is all messed up!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
This argument does not take a value.
Instead, it consumes any positional arguments until the next recognized option.
: Not enough positional command line arguments specified!
Must specify at least 
 positional argument
: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
 positional arguments: See: 
must be specified at least once!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
 [subcommand]
 [options]
SUBCOMMAND '
SUBCOMMANDS:
  Type "
 <subcommand> -help" to get more help on a specific subcommand
OPTIONS:
Apple
LLVM
 version 
(clang-1100.0.33.12)
Optimized build
  Default target: 
  Host CPU: 
uint
zlib error: Z_MEM_ERROR
zlib error: Z_BUF_ERROR
zlib error: Z_STREAM_ERROR
zlib error: Z_DATA_ERROR
debug-counter
Comma separated list of debug counter skip and count
print-debug-counter
Print out debug counter info after all counters accumulated
DebugCounter Error: 
 does not have an = in it
 is not a number
 is not a registered counter
 does not end with -skip or -count
Multiple errors:
Error
Inconvertible error value. An error has occurred that could not be converted to a known std::error_code. Please file a bug.
LLVM ERROR: 
LLVM ERROR: out of memory
UNREACHABLE executed
 at 
Allocation failed
view-background
Execute graph viewer in the background. Creates tmp file litter.
Error: 
'... 
Trying 'open' program... 
xdg-open
Trying 'xdg-open' program... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
decimal64
decimal128
decimal32
decimal16
 complex
 imaginary
alignof (
noexcept (
sizeof (
sizeof... (
typeid (
%LaL
operator?
std::basic_string
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
string literal
vtable for 
VTT for 
typeinfo for 
typeinfo name for 
covariant return thunk to 
thread-local wrapper routine for 
thread-local initialization routine for 
virtual thunk to 
non-virtual thunk to 
guard variable for 
reference temporary for 
invocation function for block in 
Invalid UTF-8 sequence
[{0}:{1}, byte={2}]: {3}
Unexpected EOF
Invalid JSON value (null?)
Invalid JSON value (true?)
Invalid JSON value (false?)
Expected , or ] after array element
Expected object key
Expected : after object key
Expected , or } after object property
Invalid JSON value
Unterminated string
Control character in string
Invalid escape sequence
Invalid \u escape sequence
Invalid JSON value (number?)
Text after end of document
%.*g
failed to get host id
LLT_invalid
%.2x
BCSymbolMap Version: 2.0
warning: missing version string. Assuming 1.0.
warning: symbol map version 
is not supported. Not unobfuscating.
rng-seed
Seed for the random number generator
replacement string contained trailing backslash
invalid backreference string '
Allocation failed
SmallVector capacity overflow during allocation
Allocation failed
Included from 
Supplied regexp was blank
can't open file '
error parsing file '
malformed section header on line 
malformed regex for section 
malformed line 
malformed section 
malformed regex in line 
Enable statistics output from program (available with Asserts)
stats-json
Display statistics as json data
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_ENABLE_STATS
Allocation failed
Expected 'kind mangled_name mangled_name', found '
Invalid kind, expected 'name', 'type', or 'encoding', found '
Manglings '
' and '
' have both been used in prior remappings. Move this remapping earlier in the file.
Could not demangle '
' as a <
>; invalid mangling?
tahiti
hainan
oland
pitcairn
verde
kaveri
hawaii
kabini
mullins
bonaire
carrizo
iceland
tonga
fiji
polaris10
polaris11
stoney
r630
rv670
rv710
rv730
juniper
redwood
barts
caicos
turks
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
"time.
%.*e
.wall
.user
.sys
.mem
misc
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
unknown
aarch64
aarch64_be
armeb
bpfel
bpfeb
hexagon
mips
mipsel
mips64
mips64el
msp430
nios2
powerpc64
powerpc64le
powerpc
r600
amdgcn
riscv32
riscv64
sparc
sparcv9
sparcel
s390x
tcele
thumb
thumbeb
i386
x86_64
xcore
nvptx
nvptx64
igil32
igil64
air64
gpu_32
gpu_64
le32
le64
amdil
amdil64
hsail
hsail64
spir
spir64
kalimba
lanai
shave
wasm32
wasm64
renderscript32
renderscript64
igil
scei
nvidia
mesa
suse
ananas
cloudabi
dragonfly
fuchsia
kfreebsd
solaris
haiku
minix
rtems
nacl
nvcl
amdhsa
elfiamcu
mesa3d
contiki
amdpal
hermit
gnuabin32
gnuabi64
gnueabihf
gnueabi
gnux32
code16
eabihf
musl
musleabi
musleabihf
itanium
cygnus
coff
macho
expected root node
SymbolicLink to -> 
expected mapping node
case-sensitive
use-external-names
overlay-relative
roots
expected array
expected integer
invalid version number
version mismatch, expected 0
unknown key
duplicate key '
expected mapping node for file or directory entry
external-contents
use-external-name
unknown value for 'type'
entry already has 'contents' or 'external-contents'
missing key 'contents' or 'external-contents'
'use-external-name' is not supported for directories
entry with relative path at the root level is not discoverable
expected boolean value
missing key '
  'version': 0,
  'case-sensitive': '
  'use-external-names': '
  'overlay-relative': '
  'roots': [
'type': 'directory',
'name': "
'contents': [
'type': 'file',
'external-contents': "
Color Options
color
Use colors in output (default=autodetect)
remark: 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Expected a line break after block scalar header
Leading all-spaces line must be smaller than the block indent
A text line is less indented than the block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
not a sequence
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
Map value must not be empty
unknown node kind
invalid call
                
invalid boolean
invalid number
out of range number
IO failure on output stream: 
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
hyphen
hyphen-minus
full-stop
solidus
three
four
five
seven
eight
nine
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin18.0.0
-darwin
.0.0
Allocation failed
HOME
0123456789abcdef
TMPDIR
TEMP
TEMPDIR
COLUMNS
colors
Program could not be executed
 (core dumped)
Cannot open file '
' for 
Allocation failed
disable-symbolication
Disable symbolizing crash backtraces.
llvm-symbolizer
LLVM_DISABLE_CRASH_REPORT
too many signal callbacks already registered
Unable to find target for this triple (no targets are registered)
No available targets are compatible with triple "
" and "
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
lpad.phi
_crit_edge
.clone
Break critical edges in CFG
break-crit-edges
cstr
chari
Return type mismatch
The number of arguments mismatch
Argument type mismatch
if.true.direct_targ
if.false.orig_indirect
if.end.icp
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
lt.cast
.reg2mem
Instrument function entry/exit with calls to e.g. mcount() (pre inlining)
ee-instrument
Instrument function entry/exit with calls to e.g. mcount() (post inlining)
post-inline-ee-instrument
Unknown instrumentation function: '
Scoped EH not supported
cleanup.lpad
guards-predicate-pass-branch-weight
The probability of a guard failing is assumed to be the reciprocal of this value (default = 1 << 20)
deoptcall
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
preserve-alignment-assumptions-during-inlining
Convert align attributes to assumptions during inlining.
external or indirect
unsupported operand bundle
incompatible GC
incompatible personality
catch in cleanup funclet
SEH in cleanup funclet
savedstack
: argument 
.lpad-body
eh.lpad-body
------- Dumping inliner stats for [
] -------
-- List of inlined functions:
Inlined 
imported 
not imported 
function [
: #inlines = 
, #inlines_to_importing_module = 
-- Summary:
All functions: 
, imported functions: 
inlined functions
all functions
imported functions inlined anywhere
imported functions
imported functions inlined into importing module
, remaining
non-imported functions inlined anywhere
non-imported functions
non-imported functions inlined into importing module
% of 
Assign names to anonymous instructions
instnamer
verify-loop-lcssa
Verify loop lcssa form (time consuming)
lcssa
Loop-Closed SSA Form Pass
Conditionally eliminate dead library calls
libcalls-shrinkwrap
cdce.call
cdce.end
.noexc
gc-leaf-function
.lr.ph
.preheader
.outer
loop-simplify
.backedge
Canonicalize natural loops
unroll-runtime-epilog
Allow runtime unrolled loops to be unrolled with epilog instead of prolog.
unroll-verify-domtree
Verify domtree after unrolling
FullyUnrolled
completely unrolled loop with 
 iterations
Peeled
 peeled loop by 
PeelCount
 with a breakout at trip 
BreakoutTrip
PartialUnrolled
unrolled loop by a factor of 
 trips per branch
 with run-time trip count
completely unroll and jammed loop with 
unroll and jammed loop by a factor of 
unroll-peel-max-count
Max average trip count which will cause loop peeling.
unroll-force-peel-count
Force a peel count regardless of profiling information.
.peel.begin
.peel.next
.peel.newph
.peel
unroll-runtime-multi-exit
Allow runtime unrolling for loops with multiple exits, when epilog is generated
.new
.unr-lcssa
.epil.preheader
.prol.preheader
.prol.loopexit
xtraiter
lcmp.mod
unroll_iter
niter
.nsub
.ncmp
epil
prol
.iter
.cmp
.unr
.epilog-lcssa
.loopexit
llvm.loop.isvectorized
llvm.loop.distribute.enable
rdx.minmax.cmp
rdx.minmax.select
bin.rdx
rdx.shuf
.loopexit
llvm.loop.disable_nonforced
loop-version-annotate-no-alias
Add no-alias annotation for instructions that are disambiguated by memchecks
scev.check
lver.safe
.lver.check
.lver.orig
.lver
LVerDomain
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
mem2reg
Promote Memory to Register
Assign new names to everything
metarenamer
struct.
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
Sanitizer interface function redefined: 
Sanitizer interface function defined with wrong type: 
anon.
Name Anon Globals
verify-predicateinfo
Verify PredicateInfo in legacy printer pass.
predicateinfo-rename
Controls which variables are renamed with predicateinfo
llvm.ssa.copy.
__sanitizer_stat_report
__sanitizer_stat_init
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 2)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
simplifycfg-merge-cond-stores
Hoist conditional stores even if an unconditional store does not precede - hoist multiple conditional stores into a single predicated store
simplifycfg-merge-cond-stores-aggressively
When merging conditional stores, do so even if the resultant basic blocks are unlikely to be if-converted as a result
speculate-one-expensive-inst
Allow exactly one expensive instruction to be speculatively executed
max-speculation-depth
Limit maximum recursion depth when calculating costs of speculatively executed instructions
or.cond
not.cond
and.cond
.sink.split
switch.edge
.fold.split
magicptr
infloop
switch.early.test
spec.store.select
spec.select
.critedge
brmerge
.mux
condstore.split
simplifycfg.merge
switch.selectcmp
switch.select
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table.
switch.idx.cast
switch.idx.mult
switch.offset
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
inverted.cmp
iv.rem
.urem
.udiv
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
endptr
strcmpload
strlenfirst
memchr.bounds
memchr.bits
lhsc
lhsv
rhsc
rhsv
chardiff
real
imag
reciprocal
square
logmul
cttz
isdigittmp
leninc
sincospi
sinpi
cospi
simplify-libcalls
folded strlen(select) to select of constants
rewrite-map-file
Symbol Rewrite Map
unable to read rewrite map '
unable to parse rewrite map '
DescriptorList node must be a map
rewrite type must be a scalar
rewrite descriptor must be a map
unknown rewrite type
descriptor key must be a scalar
descriptor value must be a scalar
invalid regex: 
unknown key for function
exactly one of transform or target must be specified
descriptor Key must be a scalar
unknown Key for Global Variable
unknown key for Global Alias
Rewrite Symbols
rewrite-symbols
unable to transforn 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
Vectorize load and store instructions
load-store-vectorizer
GPU Load and Store Vectorizer
enable-if-conversion
Enable if-conversion during vectorization.
pragma-vectorize-memory-check-threshold
The maximum allowed number of runtime memory checks with a vectorize(enable) pragma.
vectorize-scev-check-threshold
The maximum number of SCEV checks allowed.
pragma-vectorize-scev-check-threshold
The maximum number of SCEV checks allowed with a vectorize(enable) pragma
loop not vectorized: 
vectorize.width
interleave.count
vectorize.enable
isvectorized
loop-vectorize
loop control flow is not understood by vectorizer
UnsupportedPhi
Unsupported outer loop Phi(s)
control flow not understood by vectorizer
NonReductionValueUsedOutsideLoop
value that could not be identified as reduction is used outside the loop
CantVectorizeCall
call instruction cannot be vectorized
CantVectorizeIntrinsic
intrinsic instruction cannot be vectorized
CantVectorizeInstructionReturnType
instruction return type cannot be vectorized
CantVectorizeStore
store instruction cannot be vectorized
ValueUsedOutsideLoop
value cannot be used outside the loop
NoInductionVariable
loop induction variable could not be identified
NoIntegerInductionVariable
integer loop induction variable could not be identified
CantVectorizeStoreToLoopInvariantAddress
write to a loop invariant address could not be vectorized
IfConversionDisabled
if-conversion is disabled
LoopContainsSwitch
loop contains a switch statement
NoCFGForSelect
control flow cannot be substituted for a select
TooManySCEVRunTimeChecks
Too many SCEV assumptions need to be made and checked 
at runtime
NoPrimaryInduction
Missing a primary induction variable in the loop, which is 
needed in order to fold tail by masking as required.
ReductionFoldingTailByMasking
Cannot fold tail by masking in the presence of reductions.
LiveOutFoldingTailByMasking
Cannot fold tail by masking in the presence of live outs.
llvm.loop.
AllDisabled
loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized
MissedExplicitlyDisabled
loop not vectorized: vectorization is explicitly disabled
MissedDetails
loop not vectorized
 (Force=
, Vector Width=
VectorWidth
, Interleave Count=
InterleaveCount
CantReorderFPOps
loop not vectorized: cannot prove it is safe to reorder floating-point operations
CantReorderMemOps
loop not vectorized: cannot prove it is safe to reorder memory operations
vectorizer-min-trip-count
Loops with a constant trip count that is smaller than this value are vectorized only if no scalar iteration overheads are incurred.
vectorizer-maximize-bandwidth
Maximize bandwidth when selecting vectorization factor which will be determined by the smallest type in loop.
enable-interleaved-mem-accesses
Enable vectorization on interleaved memory accesses in a loop
enable-masked-interleaved-mem-accesses
Enable vectorization on masked interleaved memory accesses in a loop
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-interleave
A flag that overrides the target's max interleave factor for scalar loops.
force-target-max-vector-interleave
A flag that overrides the target's max interleave factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the interleaver.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-interleave
Enable runtime interleaving until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when interleaving
enable-cond-stores-vec
Enable if predication of stores during vectorization.
max-nested-scalar-reduction-interleave
The maximum interleave count to use when interleaving a scalar reduction in a nested loop.
enable-vplan-native-path
Enable VPlan-native vectorization path with support for outer loop vectorization.
vplan-build-stress-test
Build VPlan for every supported loop nest in the function and bail out right after the build (stress test the VPlan H-CFG construction in the VPlan-native vectorization path).
broadcast
vec.ind
step.add
vec.ind.next
offset.idx
reverse
interleaved.mask
wide.masked.vec
wide.vec
strided.vec
interleaved.vec
wide.masked.gather
wide.masked.load
wide.load
.cloned
index.next
exitcount.ptrcnt.to.int
n.rnd.up
n.mod.vf
n.vec
min.iters.check
vector.ph
vector.scevcheck
vector.memcheck
vector.body
middle.block
scalar.ph
bc.resume.val
cast.crd
ind.end
cmp.n
llvm.loop.vectorize.followup_all
llvm.loop.vectorize.followup_vectorized
cast.cmo
ind.escape
vector.recur.init
vector.recur
vector.recur.extract
vector.recur.extract.for.phi
scalar.recur.init
scalar.recur
minmax.ident
bc.merge.rdx
vec.phi
next.gep
CantVersionLoopWithDivergentTarget
runtime pointer checks needed. Not enabled for divergent target
CantVersionLoopWithOptForSize
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
runtime SCEV checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
runtime stride == 1 checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
SingleIterationLoop
loop trip count is one, irrelevant for vectorization
UnknownLoopCountComplexCFG
unable to calculate the loop count due to complex control flow
NoTailLoopWithOptForSize
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os/-Oz
ConditionalStore
store that is conditionally executed prevents vectorization
pred.
.entry
.continue
Pre-Entry
Initial VPlan for VF={
},UF>=1
"INTERLEAVE-GROUP with factor 
predphi
NoImplicitFloat
loop not vectorized due to NoImplicitFloat attribute
UnsafeFP
loop not vectorized due to unsafe FP support.
VectorizationNotBeneficial
the cost-model indicates that vectorization is not beneficial
InterleavingAvoided
Ignoring UserIC, because interleaving was avoided up front
InterleavingNotBeneficial
the cost-model indicates that interleaving is not beneficial
InterleavingNotBeneficialAndDisabled
 and is explicitly disabled or interleave count is set to 1
InterleavingBeneficialButDisabled
the cost-model indicates that interleaving is beneficial but is explicitly disabled or interleave count is set to 1
llvm.loop.vectorize.followup_epilogue
loop-vectorize
"BRANCH-ON-MASK 
 All-One
Interleaved
interleaved loop (interleaved count: 
Vectorized
vectorized loop (vectorization width: 
VectorizationFactor
, interleaved count: 
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-max-reg-size
Attempt to vectorize for this register size in bits
slp-schedule-budget
Limit the size of the SLP scheduling region per block
slp-min-reg-size
slp-recursion-max-depth
Limit the recursion depth when building a vectorizable tree
slp-min-tree-size
Only vectorize small trees if they are fully vectorizable
view-slp-tree
Display the SLP trees with Graphviz
SLP: Spill Cost = 
SLP: Extract Cost = 
SLP: Total Cost = 
reorder_shuffle
slp-vectorizer
StoresVectorized
Stores SLP vectorized with cost 
 and with tree size 
TreeSize
VectorizedList
SLP vectorized with cost 
op.rdx
op.extra
HorSLPNotBeneficial
Vectorizing horizontal reduction is possible
but not beneficial with cost 
 and threshold 
VectorizedHorizontalReduction
Vectorized horizontal reduction with cost 
rdx.shuf.l
rdx.shuf.r
<splat> 
 <extract>
SmallVF
Cannot SLP vectorize list: vectorization factor 
less than 2 is not supported
UnsupportedType
Cannot SLP vectorize list: type 
 is unsupported by vectorizer
NotBeneficial
List vectorization was possible but not beneficial with cost 
 >= 
NotPossible
Cannot SLP vectorize list: vectorization was impossible
 with available vectorization factors
"EMIT 
icmp ule
combined load
combined store
trip.count.minus.1
vector.body.latch
"WIDEN\l"
"WIDEN-INDUCTION
"WIDEN-PHI 
"BLEND 
CLONE 
REPLICATE 
 (S->V)
"PHI-PREDICATED-INSTRUCTION 
"WIDEN 
vplan-verify-hcfg
Verify VPlan H-CFG.
Only one suspend point can be marked as final
coroutine should have exactly one defining @llvm.coro.begin
Only one coro.end can be marked as fallthrough
coro.id must be paired with coro.suspend
ptrauth-signed prototype must not have address diversity
coro.id.retcon.* must be paired with coro.suspend.retcon
argument to coro.suspend.retcon does not match corresponding prototype function result
wrong number of arguments to coro.suspend.retcon
wrong number of results from coro.suspend.retcon
result from coro.suspend.retcon does not match corresponding prototype function param
size argument to coro.id.retcon.* must be constant
alignment argument to coro.id.retcon.* must be constant
llvm.coro.id.retcon.* prototype not a Function
llvm.coro.id.retcon prototype must return pointer as first result
llvm.coro.id.retcon prototype return type must be same ascurrent function return type
llvm.coro.id.retcon.* prototype must take pointer as its first parameter
llvm.coro.* allocator not a Function
llvm.coro.* allocator must return a pointer
llvm.coro.* allocator must take integer as only param
llvm.coro.* deallocator not a Function
llvm.coro.* deallocator must return void
llvm.coro.* deallocator must take pointer as only param
Lower all coroutine related intrinsics
coro-cleanup
Coroutine Cleanup
Lower early coroutine intrinsics
coro-early
coroutine.presplit
NoopCoro.Frame
NoopCoro.ResumeDestroy
NoopCoro.Frame.Const
Coroutine frame allocation elision and indirect calls replacement
coro-elide
Coroutine Elision
coro.devirt.trigger
vFrame
Call referring to the coroutine frame cannot be marked as musttail
CoroSave
CoroSuspend
CoroEnd
token definition is separated from the use by a suspend point
After
.from.
cannot move instruction since its users are not dominated by CoroBegin
FramePtr
Coroutines cannot handle non static allocas yet
.spill.addr
AllocaSpillBB
PostSpill
.reload.addr
Split coroutine into a set of functions driving its state machine
coro-split
Coroutine Splitting
While splitting coroutine 
.resume
.destroy
resume.entry
index.addr
ResumeFn.addr
resume.
.landing
Switch
resume.addr
destroy.addr
.resumers
.resume.
coro.return
llvm.coveragemap
dump-thin-cg-sccs
Dump the SCCs in the ThinLTO index's callgraph
enable-lto-internalization
Enable global value internalization in LTO
.thin.
.yaml
resolution.txt
ld-temp.o
failed to open 
unable to parse AA pipeline description '
unable to parse pass pipeline description '
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VerifierPass]
Error parsing default AA pipeline
Failed to create directory 
Failed to open 
Failed to setup codegen
index.bc
index.dot
thinlto-synthesize-entry-counts
Synthesize entry counts based on the summary
pm-max-devirt-iterations
enable-npm-partial-inlining
enable-npm-newgvn
Run NewGVN instead of GVN
enable-npm-earlycse-memssa
Enable the EarlyCSE w/ MemorySSA pass for the new PM (default = on)
enable-npm-gvn-hoist
Enable the GVN hoisting pass for the new PM (default = off)
enable-npm-gvn-sink
enable-npm-unroll-and-jam
Enable the Unroll and Jam pass for the new PM (default = off)
enable-npm-synthetic-counts
Run synthetic function entry count generation pass
^(default|thinlto-pre-link|thinlto|lto-pre-link|lto)<(O[0123sz])>$
enable-chr-npm
cgscc
invalid use of '{0}' pass as module pipeline
unknown default pipeline alias '{0}'
unknown module pass '{0}'
invalid use of '{0}' pass as cgscc pipeline
unknown cgscc pass '{0}'
invalid use of '{0}' pass as function pipeline
unknown function pass '{0}'
invalid use of '{0}' pass as loop pipeline
unknown loop pass '{0}'
invalid pipeline '{0}'
unknown {0} name '{1}'
pipeline
unknown alias analysis name '{0}'
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallGraphAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleSummaryIndexAnalysis]
NoOpModuleAnalysis
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ProfileSummaryAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyGlobalAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::VerifierAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassInstrumentationAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalsAA]
NoOpCGSCCAnalysis
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionAnalysisManagerCGSCCProxy]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumptionAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BlockFrequencyAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BranchProbabilityAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreeAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostDominatorTreeAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DemandedBitsAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominanceFrontierAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyValueAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DependenceAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemoryDependenceAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PhiValuesAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoAnalysis]
NoOpFunctionAnalysis
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OptimizationRemarkEmitterAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarEvolutionAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TargetIRAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BasicAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFLAndersAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFLSteensAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SCEVAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScopedNoAliasAA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TypeBasedAA]
NoOpLoopAnalysis
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAccessAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IVUsersAnalysis]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SROA]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EarlyCSEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVNHoistPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVNSinkPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SimplifyCFGPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SpeculativeExecutionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::JumpThreadingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CorrelatedValuePropagationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AggressiveInstCombinePass]
InstCombinePass
LibCallsShrinkWrapPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOMemOPSizeOpt]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::TailCallElimPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ReassociatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopInstSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSimplifyCFGPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopRotatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LICMPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SimpleLoopUnswitchPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IndVarSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopIdiomRecognizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDeletionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopFullUnrollPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::OptimizationRemarkEmitterAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Loop, llvm::LoopAnalysisManager, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionToLoopPassAdaptor<llvm::PassManager<llvm::Loop, llvm::LoopAnalysisManager, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MergedLoadStoreMotionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NewGVNPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GVN]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemCpyOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SCCPPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BDCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DSEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionToLoopPassAdaptor<llvm::LICMPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ADCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ControlHeightReductionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CGSCCToFunctionPassAdaptor<llvm::PassManager<llvm::Function> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToPostOrderCGSCCPassAdaptor<llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalDCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOInstrumentationGen]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionToLoopPassAdaptor<llvm::LoopRotatePass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor<llvm::PassManager<llvm::Function> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstrProfiling]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOInstrumentationUse]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InferFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerExpectIntrinsicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallSiteSplittingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SampleProfileLoaderPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PGOIndirectCallPromotion]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IPSCCPPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CalledValuePropagationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalOptPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PromotePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor<llvm::PromotePass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DeadArgumentEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SyntheticCountsPropagation]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::GlobalsAA, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ProfileSummaryAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostOrderFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ArgumentPromotionPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DevirtSCCRepeatedPass<llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToPostOrderCGSCCPassAdaptor<llvm::DevirtSCCRepeatedPass<llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &> > >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::HotColdSplittingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PartialInlinerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EliminateAvailableExternallyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ReversePostOrderFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::Float2IntPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDistributePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVectorizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopLoadEliminationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SLPVectorizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopUnrollAndJamPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionToLoopPassAdaptor<llvm::LoopUnrollAndJamPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopUnrollPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::WarnMissedTransformationsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AlignmentFromAssumptionsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSinkPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InstSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DivRemPairsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SpeculateAroundPHIsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CGProfilePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ConstantMergePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ForceFunctionAttrsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AddDiscriminatorsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor<llvm::AddDiscriminatorsPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PassManager<llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::WholeProgramDevirtPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerTypeTestsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToPostOrderCGSCCPassAdaptor<llvm::PostOrderFunctionAttrsPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GlobalSplitPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToPostOrderCGSCCPassAdaptor<llvm::InlinerPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CrossDSOCFIPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ModuleToFunctionPassAdaptor<llvm::SimplifyCFGPass>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Module> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CallGraphAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CallGraphAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LazyCallGraphAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LazyCallGraphAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ModuleSummaryIndexAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ModuleSummaryIndexAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpModuleAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpModuleAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ProfileSummaryAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::StackSafetyGlobalAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::StackSafetyGlobalAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TargetLibraryAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TargetLibraryAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::VerifierAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::VerifierAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Module, llvm::AnalysisManager<llvm::Module>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PassInstrumentationAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::GlobalsAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::FunctionImportPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InternalizePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAllAnalysesPass]
NoOpModulePass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PreISelIntrinsicLoweringPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ProfileSummaryPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CallGraphPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LazyCallGraphDOTPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyGlobalPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RewriteStatepointsForGC]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RewriteSymbolPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StripDeadPrototypesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<LazyCallGraph::SCC, llvm::CGSCCAnalysisManager, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpCGSCCAnalysis, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpCGSCCAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::FunctionAnalysisManagerCGSCCProxy, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::FunctionAnalysisManagerCGSCCProxy>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::LazyCallGraph::SCC, llvm::AnalysisManager<LazyCallGraph::SCC, llvm::LazyCallGraph &>, llvm::LazyCallGraph &, llvm::CGSCCUpdateResult &>]
NoOpCGSCCPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Function> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::AAManager, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::AAManager>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::AssumptionAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::AssumptionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BlockFrequencyAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BlockFrequencyAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BranchProbabilityAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BranchProbabilityAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DominatorTreeAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DominatorTreeAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PostDominatorTreeAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PostDominatorTreeAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DemandedBitsAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DemandedBitsAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DominanceFrontierAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DominanceFrontierAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LoopAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LoopAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LazyValueAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LazyValueAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::DependenceAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::DependenceAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::MemoryDependenceAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::MemoryDependenceAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::MemorySSAAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::MemorySSAAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PhiValuesAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::PhiValuesAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::RegionInfoAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::RegionInfoAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpFunctionAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpFunctionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::OptimizationRemarkEmitterAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ScalarEvolutionAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ScalarEvolutionAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::StackSafetyAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::StackSafetyAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TargetLibraryAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TargetIRAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TargetIRAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::VerifierAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::BasicAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::BasicAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CFLAndersAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CFLAndersAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::CFLSteensAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::CFLSteensAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::SCEVAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::SCEVAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::ScopedNoAliasAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::ScopedNoAliasAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::TypeBasedAA, llvm::Function, llvm::AnalysisManager<llvm::Function>>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::TypeBasedAA>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AAEvaluator]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BreakCriticalEdgesPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ConstantHoistingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGOnlyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::EntryExitInstrumenterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MakeGuardsExplicitPass]
NoOpFunctionPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerAtomicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerGuardIntrinsicPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::GuardWideningPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoadStoreVectorizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopSimplifyPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LowerInvokePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::NaryReassociatePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PartiallyInlineLibCallsPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LCSSAPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopDataPrefetchPass]
PrintFunctionPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::AssumptionPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BlockFrequencyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::BranchProbabilityPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PostDominatorTreePrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DemandedBitsPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominanceFrontierPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PhiValuesPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarEvolutionPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::StackSafetyPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::ScalarizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::SinkingPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::UnreachableBlockElimPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::DominatorTreeVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySSAVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RegionInfoVerifierPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGViewerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::CFGOnlyViewerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::MemorySanitizerPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RepeatedPass<llvm::PassManager<llvm::Loop, llvm::LoopAnalysisManager, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &> >]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<(anonymous namespace)::NoOpLoopAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<(anonymous namespace)::NoOpLoopAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::LoopAccessAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::LoopAccessAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::IVUsersAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InvalidateAnalysisPass<llvm::IVUsersAnalysis>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::RequireAnalysisPass<llvm::PassInstrumentationAnalysis, llvm::Loop, llvm::AnalysisManager<llvm::Loop, llvm::LoopStandardAnalysisResults &>, llvm::LoopStandardAnalysisResults &, llvm::LPMUpdater &>]
NoOpLoopPass
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::PrintLoopPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopStrengthReducePass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IRCEPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopAccessInfoPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::IVUsersPrinterPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::LoopPredicationPass]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::CGSCCAnalysisManager, llvm::Module>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::ModuleAnalysisManager, LazyCallGraph::SCC, llvm::LazyCallGraph &>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::CGSCCAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::ModuleAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::InnerAnalysisManagerProxy<llvm::LoopAnalysisManager, llvm::Function>]
llvm::StringRef llvm::getTypeName() [DesiredTypeName = llvm::OuterAnalysisManagerProxy<llvm::FunctionAnalysisManager, llvm::Loop, llvm::LoopStandardAnalysisResults &>]
Could not open input file: 
Parse IR
irparse
LLVM IR Parsing
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in COMDAT variable name
Null bytes are not allowed in names
end of file in string constant
invalid value number (too large)!
end of file in global variable name
bitwidth for integer type out of range!
info
Can't read textual IR with a Context that discards named Values
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
use of undefined metadata '!
use of undefined summary '^
use of undefined type id summary '^
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after source_filename
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
DIExpression
expected end of metadata node
unexpected type in metadata definition
Metadata id is already used
Expected 'gv', 'module', or 'typeid' at the start of summary entry
expected ':' at start of summary entry
expected '(' at start of summary entry
found end of file while parsing summary entry
unexpected summary kind
invalid linkage type for alias
symbol with local linkage must have default visibility
expected comma after alias or ifunc's type
invalid aliasee
An alias or ifunc must have pointer type
explicit pointee type doesn't match operand's pointee type
explicit pointee type should be a function type
redefinition of global '@
forward reference and definition of alias have different types
invalid type for global variable
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected attribute group id
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
' is not a basic block
' defined with type '
' but expected '
global variable reference must have pointer type
expected string constant
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
dso_location and DLL-StorageClass mismatch
expected metadata after comma
alignment is not a power of two
huge alignments are not supported yet
expected '('
dereferenceable bytes must be non-zero
expected metadata or 'align'
expected metadata or 'addrspace'
'allocsize' indices can't refer to the same parameter
Expected '(' in syncscope
Expected synchronization scope name
Expected ')' in syncscope
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected index
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
unexpected ellipsis in argument list for 
non-musttail call
musttail call in non-varargs function
expected ')' at end of argument list
expected '...' at end of argument list for musttail call in varargs function
expected ',' in input list
expected '(' in operand bundle
operand bundle set must not be empty
argument can not have void type
invalid type for function argument
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected ']' to close array
invalid array element type
expected 'x' after the number of columns
expected '>' to close matrix
matrix must have non-zero rows
matrix must have non-zero columns
matrix has too many rows
matrix has too many columns
invalid matrix element type
expected '>' to close vector
vector must have more than 0 elements
too many elements for vector
invalid vector element type
use of undefined value '%
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
insertvalue operand and field disagree in type: '
' instead of '
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in unary constantexpr
expected ')' in unary constantexpr
constexpr requires fp operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected comma after getelementptr's type
expected ')' in constantexpr
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
inrange keyword may not appear on pointer operand
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
expected ')' after comdat var
comdat cannot be unnamed
expected '!' here
DILocation
DIGlobalVariableExpression
GenericDINode
DISubrange
DIEnumerator
DIBasicType
DIDerivedType
DICompositeType
DISubroutineType
DIFile
DICompileUnit
DISubprogram
DILexicalBlock
DILexicalBlockFile
DINamespace
DIModule
DITemplateTypeParameter
DITemplateValueParameter
DIGlobalVariable
DILocalVariable
DILabel
DIObjCProperty
DIImportedEntity
DIMacro
DIMacroFile
expected metadata type
missing required field 'scope'
missing required field 'tag'
missing required field 'count'
missing required field 'name'
missing required field 'value'
unsigned enumerator with negative value
missing required field 'baseType'
missing required field 'types'
missing required field 'filename'
missing required field 'directory'
'checksumkind' and 'checksum' must be provided together
missing 'distinct', required for !DICompileUnit
missing required field 'language'
missing required field 'file'
missing 'distinct', required for !DISubprogram that is a Definition
missing required field 'discriminator'
missing required field 'type'
missing required field 'line'
expected '(' here
invalid DWARF op '
expected unsigned integer
element too large, limit is 
expected ')' here
missing required field 'var'
missing required field 'expr'
invalid metadata-value-metadata roundtrip
expected metadata operand
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
invalid type for none constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type: expected '
' but was '
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree: expected '
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
unable to create block named '
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
invoke instructions may not have an alignment
expected '[' in catchpad/cleanuppad
expected 'from' after cleanupret
expected 'unwind' in cleanupret
expected 'caller' in cleanupret
expected 'from' after catchret
expected 'to' in catchret
expected 'within' after catchswitch
expected scope value for catchswitch
expected '[' with catchswitch labels
expected ']' after catchswitch labels
expected 'unwind' after catchswitch scope
expected 'caller' in catchswitch
expected 'within' after catchpad
expected scope value for catchpad
expected 'within' after cleanuppad
expected scope value for cleanuppad
invalid operand type for instruction
expected ',' in arithmetic operation
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
expected 'catch' or 'filter' clause type
'catch' clause has an invalid type
'filter' clause has an invalid type
clause argument must be a constant
expected 'tail call', 'musttail call', or 'notail call'
fast-math-flags specified for call without floating-point scalar or vector return type
call instructions may not have an alignment
invalid type for alloca
element count must have integer type
expected comma after load's type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg failure argument shall be no stronger than the success argument
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be a first class value
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
 operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected ':' here
expected 'path' here
expected ',' here
expected 'hash' here
expected 'name' here
expected 'summary' here
expected 'typeTestRes' here
expected 'kind' here
unexpected TypeTestResolution kind
expected 'sizeM1BitWidth' here
expected ':'
expected optional TypeTestResolution field
expected 'wpdResolutions' here
expected 'offset' here
expected 'wpdRes' here
unexpected WholeProgramDevirtResolution kind
expected optional WholeProgramDevirtResolution field
expected 'resByArg' here
expected 'byArg here
unexpected WholeProgramDevirtResolution::ByArg kind
expected optional whole program devirt field
expected 'args' here
expected name or guid tag
expected 'summaries' here
expected summary type
expected 'insts' here
expected optional function summary field
expected 'aliasee' here
expected ':' in funcFlags
expected '(' in funcFlags
expected function flag type
expected ')' in funcFlags
expected ':' in calls
expected '(' in calls
expected 'callee' in call
expected relbf
expected ')' in call
expected ')' in calls
invalid call edge hotness
expected ':' in refs
expected '(' in refs
expected ')' in refs
expected '(' in typeIdInfo
invalid typeIdInfo list type
expected ')' in typeIdInfo
expected 'guid' here
expected 'linkage' here
expected 'notEligibleToImport' here
expected 'live' here
expected 'dsoLocal' here
expected 'readonly' here
expected 'module' here
expected module ID
expected GV ID
expected type
expected field label here
invalid field '
field '
' cannot be specified more than once
value for '
' too large, limit is 
' cannot be null
expected 'true' or 'false'
operands
expected DWARF tag
invalid DWARF tag
' cannot be empty
expected signed integer
' too small, limit is 
expected DWARF type attribute encoding
invalid DWARF type attribute encoding
expected debug info flag
invalid debug info flag flag '
expected DWARF language
invalid DWARF language
expected DWARF calling convention
invalid DWARF calling convention
checksumkind
debugBaseAddress
expected emission kind
expected nameTable kind
invalid nameTable kind
virtuality
expected DWARF virtuality code
invalid DWARF virtuality code
invalid subprogram debug info flag '
expected DWARF macinfo type
invalid DWARF macinfo type
Linking globals named '
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
Linking two modules of different data layouts: '
' is '
' whereas '
Linking two modules of different target triples: 
.text
.balign 2
.thumb
.text
.balign 4
.arm
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
': IDs have conflicting values ('
' from 
 with '
': does not have the required value
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
': symbol multiply defined!
#pragma clang module build 
#pragma clang module endbuild /*
#if 0 /* expanded by -frewrite-includes */
#endif /* expanded by -frewrite-includes */
 /* clang -frewrite-includes: implicit import */
mark
No changes
rewriting sub-expression within a macro (may not be correct)
rewriting block literal declared in global scope is not implemented
rewriter doesn't support user-specified control flow semantics for @try/@finally (code may not execute properly)
#ifndef __OBJC2__
#define __OBJC2__
#endif
struct objc_selector; struct objc_class;
struct __rw_objc_super { 
struct objc_object *object; 
struct objc_object *superClass; 
__rw_objc_super(struct objc_object *o, struct objc_object *s) 
: object(o), superClass(s) {} 
#pragma section(".objc_classlist$B", long, read, write)
#pragma section(".objc_catlist$B", long, read, write)
#pragma section(".objc_imageinfo$B", long, read, write)
#pragma section(".objc_nlclslist$B", long, read, write)
#pragma section(".objc_nlcatlist$B", long, read, write)
#pragma section(".cat_cls_meth$B", long, read, write)
#pragma section(".inst_meth$B", long, read, write)
#pragma section(".cls_meth$B", long, read, write)
#pragma section(".objc_ivar$B", long, read, write)
#pragma section(".objc_selrefs$B", long, read, write)
#pragma section(".objc_classrefs$B", long, read, write)
#pragma section(".objc_superrefs$B", long, read, write)
#ifndef _REWRITER_typedef_Protocol
typedef struct objc_object Protocol;
#define _REWRITER_typedef_Protocol
#define __OBJC_RW_DLLIMPORT extern "C" __declspec(dllimport)
#define __OBJC_RW_STATICIMPORT extern "C"
#define __OBJC_RW_DLLIMPORT extern
__OBJC_RW_DLLIMPORT void objc_msgSend(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSendSuper_stret(void);
__OBJC_RW_DLLIMPORT void objc_msgSend_fpret(void);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getClass
(const char *);
__OBJC_RW_DLLIMPORT struct objc_class *class_getSuperclass
(struct objc_class *);
__OBJC_RW_DLLIMPORT struct objc_class *objc_getMetaClass
__OBJC_RW_DLLIMPORT void objc_exception_throw( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_enter( struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_exit( struct objc_object *);
__OBJC_RW_DLLIMPORT Protocol *objc_getProtocol(const char *);
#ifdef _WIN64
typedef unsigned long long  _WIN_NSUInteger;
#else
typedef unsigned int _WIN_NSUInteger;
#ifndef __FASTENUMERATIONSTATE
struct __objcFastEnumerationState {
unsigned long state;
void **itemsPtr;
unsigned long *mutationsPtr;
unsigned long extra[5];
__OBJC_RW_DLLIMPORT void objc_enumerationMutation(struct objc_object *);
#define __FASTENUMERATIONSTATE
#ifndef __NSCONSTANTSTRINGIMPL
struct __NSConstantStringImpl {
  int *isa;
  int flags;
  char *str;
#if _WIN64
  long long length;
  long length;
#ifdef CF_EXPORT_CONSTANT_STRING
extern "C" __declspec(dllexport) int __CFConstantStringClassReference[];
__OBJC_RW_DLLIMPORT int __CFConstantStringClassReference[];
#define __NSCONSTANTSTRINGIMPL
#ifndef BLOCK_IMPL
#define BLOCK_IMPL
struct __block_impl {
  void *isa;
  int Flags;
  int Reserved;
  void *FuncPtr;
// Runtime copy/destroy helper functions (from Block_private.h)
#ifdef __OBJC_EXPORT_BLOCKS
extern "C" __declspec(dllexport) void _Block_object_assign(void *, const void *, const int);
extern "C" __declspec(dllexport) void _Block_object_dispose(const void *, const int);
extern "C" __declspec(dllexport) void *_NSConcreteGlobalBlock[32];
extern "C" __declspec(dllexport) void *_NSConcreteStackBlock[32];
__OBJC_RW_DLLIMPORT void _Block_object_assign(void *, const void *, const int);
__OBJC_RW_DLLIMPORT void _Block_object_dispose(const void *, const int);
__OBJC_RW_DLLIMPORT void *_NSConcreteGlobalBlock[32];
__OBJC_RW_DLLIMPORT void *_NSConcreteStackBlock[32];
#undef __OBJC_RW_DLLIMPORT
#undef __OBJC_RW_STATICIMPORT
#ifndef KEEP_ATTRIBUTES
#define __attribute__(X)
#ifndef __weak
#define __weak
#ifndef __block
#define __block
#include <stdarg.h>
struct __NSContainer_literal {
  void * *arr;
  __NSContainer_literal (unsigned int count, ...) {
va_list marker;
va_start(marker, count);
arr = new void *[count];
for (unsigned i = 0; i < count; i++)
  arr[i] = va_arg(marker, void *);
va_end( marker );
  };
  ~__NSContainer_literal() {
delete[] arr;
extern "C" __declspec(dllimport) void * objc_autoreleasePoolPush(void);
extern "C" __declspec(dllimport) void objc_autoreleasePoolPop(void *);
struct __AtAutoreleasePool {
  __AtAutoreleasePool() {atautoreleasepoolobj = objc_autoreleasePoolPush();}
  ~__AtAutoreleasePool() {objc_autoreleasePoolPop(atautoreleasepoolobj);}
  void * atautoreleasepoolobj;
#define __OFFSETOFIVAR__(TYPE, MEMBER) ((long long) &((TYPE *)0)->MEMBER)
// @class 
#ifndef _REWRITER_typedef_
#define _REWRITER_typedef_
typedef struct objc_object 
typedef struct {} _objc_exc_
#endif
sel_registerName
/** 
**/ 
/* @end */
#if 0
/* @optional */
/* @required */
class_getSuperclass
__rw_objc_super
extern "C" void * __cdecl memset(void *_Dst, int _Val, size_t _Size);
namespace {
(id receiver, SEL sel
  unsigned size = sizeof(
  if (size == 1 || size == 2 || size == 4 || size == 8)
    s = ((
)(void *)objc_msgSend)(receiver, sel
, arg
  else if (receiver == 0)
    memset((void*)&s, 0, sizeof(s));
  else
)(void *)objc_msgSend_stret)(receiver, sel
, ...);
...);
_IMPL
__GRBF_
__T_
_block_func_
__global_
_block_impl_
_block_desc_
_DATA
__Block_byref_
static __NSConstantStringImpl 
 __attribute__ ((section ("__DATA, __cfstring"))) = {__CFConstantStringClassReference,
0x000007c8,
__NSConstantStringImpl
/* @autoreleasepool */
{ __AtAutoreleasePool __autoreleasepool; 
{ id volatile _rethrow = 0;
{ id volatile _rethrow = 0;
try {
catch (_objc_exc_
 = (
catch (id e) {_rethrow = e;}
#line 
{ struct _FIN { _FIN(id reth) : rethrow(reth) {}
~_FIN() { if (rethrow) objc_exception_throw(rethrow); }
id rethrow;
} _fin_force_rethow(_rethrow);
{ id _rethrow = 0; id _sync_obj = (id)
; objc_sync_enter(_sync_obj);
try {
struct _SYNC_EXIT { _SYNC_EXIT(id arg) : sync_exit(arg) {}
~_SYNC_EXIT() {objc_sync_exit(sync_exit);}
id sync_exit;
} _sync_exit(_sync_obj);
} catch (id e) {_rethrow = e;}
objc_exception_throw(
_OBJC_PROTOCOL_REFERENCE_$_
struct __objcFastEnumerationState enumState = { 0 };
id __rw_items[16];
id l_collection = (id)
_WIN_NSUInteger limit =
if (limit) {
unsigned long startMutations = *enumState.mutationsPtr;
do {
unsigned long counter = 0;
do {
if (startMutations != *enumState.mutationsPtr)
objc_enumerationMutation(l_collection);
)enumState.itemsPtr[counter++];
__continue_label_
} while (counter < limit);
} while ((limit = 
 = ((
)0);
__break_label_
else
((_WIN_NSUInteger (*) (id, SEL, struct __objcFastEnumerationState *, id *, _WIN_NSUInteger))(void *)objc_msgSend)
((id)l_collection,
sel_registerName("countByEnumeratingWithState:objects:count:"),
&enumState, (id *)__rw_items, (_WIN_NSUInteger)16)
goto __break_label_
goto __continue_label_
  void *__isa;
 *__forwarding;
 int __flags;
 int __size;
 void (*__Block_byref_id_object_copy)(void*, void*);
 void (*__Block_byref_id_object_dispose)(void*);
 = {(void*)
, __Block_byref_id_object_copy_
, __Block_byref_id_object_dispose_
static void __Block_byref_id_object_copy_
(void *dst, void *src) {
 _Block_object_assign((char*)dst + 
, *(void * *) ((char*)src + 
static void __Block_byref_id_object_dispose_
(void *src) {
 _Block_object_dispose(*(void * *) ((char*)src + 
__block_impl
FuncPtr
() {}
const 
restrict 
struct 
  struct __block_impl impl;
  struct 
* Desc;
(void *fp, 
 *desc
struct __block_impl *
, void *
; // by ref
, int flags=0)
((struct __block_impl *)_
->__forwarding)
    impl.isa = &_NSConcreteGlobalBlock;
    impl.isa = &_NSConcreteStackBlock;
    impl.Flags = flags;
    impl.FuncPtr = fp;
    Desc = desc;
, int flags=0) {
 *__cself)
 *__cself, 
 = __cself->
; // bound by ref
__cself->
; // bound by copy
_block_copy_
*dst, 
*src) {
_Block_object_assign((void*)&dst->
, (void*)src->
/*BLOCK_FIELD_IS_BYREF*/);
/*BLOCK_FIELD_IS_BLOCK*/);
/*BLOCK_FIELD_IS_OBJECT*/);
static void __
_block_dispose_
_Block_object_dispose((void*)src->
static struct 
  size_t reserved;
  size_t Block_size;
  void (*copy)(struct 
*, struct 
  void (*dispose)(struct 
_DATA = { 0, sizeof(struct 
, __
_OBJC_PROTOCOL_METHOD_TYPES_
_OBJC_PROTOCOL_REFS_
_OBJC_PROTOCOL_INSTANCE_METHODS_
_OBJC_PROTOCOL_CLASS_METHODS_
_OBJC_PROTOCOL_OPT_INSTANCE_METHODS_
_OBJC_PROTOCOL_OPT_CLASS_METHODS_
_OBJC_PROTOCOL_PROPERTIES_
struct _protocol_t _OBJC_PROTOCOL_
 __attribute__ ((used)) = {
(const struct _protocol_list_t *)&
(const struct method_list_t *)&_OBJC_PROTOCOL_INSTANCE_METHODS_
(const struct method_list_t *)&_OBJC_PROTOCOL_CLASS_METHODS_
(const struct method_list_t *)&_OBJC_PROTOCOL_OPT_INSTANCE_METHODS_
(const struct method_list_t *)&_OBJC_PROTOCOL_OPT_CLASS_METHODS_
(const struct _prop_list_t *)&_OBJC_PROTOCOL_PROPERTIES_
sizeof(_protocol_t)
(const char **)&
struct _protocol_t *
 = &_OBJC_PROTOCOL_
struct _prop_t {
const char *name;
const char *attributes;
struct _protocol_t;
struct _objc_method {
struct objc_selector * _cmd;
const char *method_type;
void  *_imp;
struct _protocol_t {
void * isa;  // NULL
const char *protocol_name;
const struct _protocol_list_t * protocol_list; // super protocols
const struct method_list_t *instance_methods;
const struct method_list_t *class_methods;
const struct method_list_t *optionalInstanceMethods;
const struct method_list_t *optionalClassMethods;
const struct _prop_list_t * properties;
const unsigned int size;  // sizeof(struct _protocol_t)
const unsigned int flags;  // = 0
const char ** extendedMethodTypes;
struct _ivar_t {
unsigned long int *offset;  // pointer to ivar offset location
const char *type;
unsigned int alignment;
unsigned int  size;
struct _class_ro_t {
unsigned int flags;
unsigned int instanceStart;
unsigned int instanceSize;
unsigned int reserved;
const unsigned char *ivarLayout;
const struct _method_list_t *baseMethods;
const struct _objc_protocol_list *baseProtocols;
const struct _ivar_list_t *ivars;
const unsigned char *weakIvarLayout;
const struct _prop_list_t *properties;
struct _class_t {
struct _class_t *isa;
struct _class_t *superclass;
void *cache;
void *vtable;
struct _class_ro_t *ro;
struct _category_t {
struct _class_t *cls;
const struct _method_list_t *instance_methods;
const struct _method_list_t *class_methods;
const struct _protocol_list_t *protocols;
extern "C" __declspec(dllimport) struct objc_cache _objc_empty_cache;
#pragma warning(disable:4273)
static const char *
 [] __attribute__ ((used, section ("__DATA,__objc_const"))) = 
static 
 __attribute__ ((used, section ("__DATA,__objc_const"))) = {
_OBJC_PROTOCOL_
struct /*_protocol_list_t*/
long protocol_count;  // Note, this is 32/64 bit
struct _protocol_t *super_protocols[
sizeof(_objc_method)
{{(struct objc_selector *)"
{(struct objc_selector *)"
(void *)
struct /*_method_list_t*/
unsigned int entsize;  // sizeof(struct _objc_method)
unsigned int method_count;
struct _objc_method method_list[
sizeof(_prop_t)
struct /*_prop_list_t*/
unsigned int entsize;  // sizeof(struct _prop_t)
unsigned int count_of_properties;
struct _prop_t prop_list[
 = &
 self, 
 _cmd
extern "C" __declspec(dllimport) id objc_getProperty(id, SEL, long, bool);
 _TYPE
return (_TYPE)
objc_getProperty(self, _cmd, 
, 1)
extern "C" __declspec(dllimport) void objc_setProperty (id, SEL, long, id, bool, bool);
objc_setProperty (self, _cmd, 
, (id)
__OFFSETOFIVAR__(struct 
((char *)self + 
__declspec(allocate(".objc_ivar$B")) 
extern "C" 
__declspec(dllimport) 
unsigned long 
_IMPL {
struct 
_IMPL 
_IVARS;
struct 
union 
enum 
__declspec(allocate(".objc_classlist$B")) 
static struct _class_t *L_OBJC_LABEL_CLASS_$ [
 __attribute__((used, section ("__DATA, __objc_classlist,regular,no_dead_strip")))= {
&OBJC_CLASS_$_
__declspec(allocate(".objc_nlclslist$B")) 
static struct _class_t *_OBJC_LABEL_NONLAZY_CLASS_$[] = {
__declspec(allocate(".objc_catlist$B")) 
static struct _category_t *L_OBJC_LABEL_CATEGORY_$ [
 __attribute__((used, section ("__DATA, __objc_catlist,regular,no_dead_strip")))= {
&_OBJC_$_CATEGORY_
__declspec(allocate(".objc_nlcatlist$B")) 
static struct _category_t *_OBJC_LABEL_NONLAZY_CATEGORY_$[] = {
_OBJC_$_INSTANCE_VARIABLES_
_OBJC_$_INSTANCE_METHODS_
_OBJC_$_CLASS_METHODS_
_OBJC_CLASS_PROTOCOLS_$_
_OBJC_$_PROP_LIST_
sizeof(struct _class_t)
_OBJC_METACLASS_RO_$_
sizeof(struct 
_IMPL)
_OBJC_CLASS_RO_$_
sizeof(_ivar_t)
(unsigned long int *)&
extern "C" unsigned long int 
extern "C" __declspec(dllexport) unsigned long int 
 __attribute__ ((used, section ("__DATA,__objc_ivar")))
struct /*_ivar_list_t*/
unsigned int count;
struct _ivar_t ivar_list[
static struct _class_ro_t 
(unsigned int)0, 
(const struct _method_list_t *)&
(const struct _objc_protocol_list *)&
(const struct _ivar_list_t *)&
(const struct _prop_list_t *)&
__declspec(dllexport) 
struct _class_t OBJC_CLASS_$_
struct _class_t 
extern "C" __declspec(dllexport) struct _class_t 
 __attribute__ ((used, section ("__DATA,__objc_data"))) = {
0, // &
0, // &OBJC_CLASS_$_
0, // &OBJC_METACLASS_$_
0, // (void *)&_objc_empty_cache,
0, // unused, was (void *)&_objc_empty_vtable,
&_OBJC_METACLASS_RO_$_
&_OBJC_CLASS_RO_$_
static void OBJC_CLASS_SETUP_$_
(void ) {
OBJC_METACLASS_$_
.isa = 
&OBJC_METACLASS_$_
.superclass = 
&OBJC_CLASS_$_
.cache = 
&_objc_empty_cache
OBJC_CLASS_$_
#pragma section(".objc_inithooks$B", long, read, write)
__declspec(allocate(".objc_inithooks$B")) 
static void *OBJC_CLASS_SETUP[] = {
(void *)&OBJC_CLASS_SETUP_$_
_OBJC_$_CATEGORY_INSTANCE_METHODS_
_OBJC_$_CATEGORY_CLASS_METHODS_
_OBJC_CATEGORY_PROTOCOLS_$_
static struct _category_t 
_OBJC_$_CATEGORY_
 __attribute__ ((used, section ("__DATA,__objc_const"))) = 
0, // &
(const struct _method_list_t *)&
(const struct _prop_list_t *)&
static void OBJC_CATEGORY_SETUP_$_
_OBJC_$_CATEGORY_
.cls = 
static void *OBJC_CATEGORY_SETUP[] = {
(void *)&OBJC_CATEGORY_SETUP_$_
__declspec(allocate(".objc_imageinfo$B")) 
static struct IMAGE_INFO { unsigned version; unsigned flag; } 
_OBJC_IMAGE_INFO = { 0, 2 };
struct __rw_objc_super { struct objc_object *object; 
struct objc_object *superClass; 
__rw_objc_super(struct objc_object *o, struct objc_object *s) : 
object(o), superClass(s) {} 
__OBJC_RW_DLLIMPORT struct objc_object *objc_msgSend
(struct objc_object *, struct objc_selector *, ...);
__OBJC_RW_DLLIMPORT struct objc_object *objc_msgSendSuper
(struct objc_super *, struct objc_selector *, ...);
__OBJC_RW_DLLIMPORT struct objc_object* objc_msgSend_stret
__OBJC_RW_DLLIMPORT struct objc_object* objc_msgSendSuper_stret
__OBJC_RW_DLLIMPORT double objc_msgSend_fpret
__OBJC_RW_DLLIMPORT struct objc_object *objc_getClass
__OBJC_RW_DLLIMPORT struct objc_object *objc_getMetaClass
__OBJC_RW_DLLIMPORT void objc_exception_throw(struct objc_object *);
__OBJC_RW_DLLIMPORT void objc_exception_try_enter(void *);
__OBJC_RW_DLLIMPORT void objc_exception_try_exit(void *);
__OBJC_RW_DLLIMPORT struct objc_object *objc_exception_extract(void *);
__OBJC_RW_DLLIMPORT int objc_exception_match
(struct objc_class *, struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_enter(struct objc_object *);
__OBJC_RW_DLLIMPORT int objc_sync_exit(struct objc_object *);
#ifndef _REWRITER_typedef_
/* @end */
    struct 
    struct 
_IVARS;
/* @try scope begin */ { struct _objc_exception_data {
int buf[18/*32-bit i386*/];
char *pointers[4];} _stack;
id volatile _rethrow = 0;
objc_exception_try_enter(&_stack);
if (!_setjmp(_stack.buf)) /* @try block continue */
 /* @catch begin */ else {
 id _caught = objc_exception_extract(&_stack);
 objc_exception_try_enter (&_stack);
 if (_setjmp(_stack.buf))
   _rethrow = objc_exception_extract(&_stack);
 else { /* @catch continue */
else {
  _rethrow = objc_exception_extract(&_stack);
else if (
1) { id _tmp = _caught;
1) { 
objc_exception_match((struct objc_class *)objc_getClass("
"), (struct objc_object *)_caught)) { 
 = _caught;
} /* last catch end */
else {
 _rethrow = _caught;
 objc_exception_try_exit(&_stack);
} } /* @catch end */
/* @finally */
 if (!_rethrow) objc_exception_try_exit(&_stack);
 if (_rethrow) objc_exception_throw(_rethrow);
{ /* implicit finally clause */
 } /* @try scope end */
{ objc_exception_try_exit(&_stack); return
objc_sync_enter((id)
/* @try scope begin */ 
{ struct _objc_exception_data {
  if (!_rethrow) objc_exception_try_exit(&_stack);
 objc_sync_exit(
  if (_rethrow) objc_exception_throw(_rethrow);
{ objc_exception_try_exit(&_stack);
 return
objc_exception_throw(_caught
unsigned long limit =
} while (limit = 
((unsigned int (*) (id, SEL, struct __objcFastEnumerationState *, id *, unsigned int))(void *)objc_msgSend)
&enumState, (id *)__rw_items, (unsigned int)16)
__Block_byref_id_object_copy_
block_func_
  unsigned long reserved;
  unsigned long Block_size;
((struct 
_IMPL *)self)->
struct _objc_symtab {
long sel_ref_cnt;
SEL *refs;
short cls_def_cnt;
short cat_def_cnt;
void *defs[
static struct _objc_symtab _OBJC_SYMBOLS __attribute__((used, section ("__OBJC, __symbols")))= {
0, 0, 
,&_OBJC_CLASS_
,&_OBJC_CATEGORY_
struct _objc_module {
long version;
long size;
struct _objc_symtab *symtab;
static struct _objc_module _OBJC_MODULES __attribute__ ((used, section ("__OBJC, __module_info")))= {
, sizeof(struct _objc_module), "", &_OBJC_SYMBOLS
#pragma section(".objc_protocol$B",long,read,write)
#pragma data_seg(push, ".objc_protocol$B")
static struct _objc_protocol *_POINTER_OBJC_PROTOCOL_
#pragma data_seg(pop)
#pragma section(".objc_module_info$B",long,read,write)
#pragma data_seg(push, ".objc_module_info$B")
static struct _objc_module *_POINTER_OBJC_MODULES = 
&_OBJC_MODULES;
static struct {
struct _objc_protocol_list *next;
int    protocol_count;
struct _objc_protocol *class_protocols[
} _OBJC_
_PROTOCOLS_
 __attribute__ ((used, section ("__OBJC, __cat_cls_meth")))= {
,{&_OBJC_PROTOCOL_
 ,&_OBJC_PROTOCOL_
CATEGORY_
CATEGORY
struct _objc_category {
char *category_name;
char *class_name;
struct _objc_method_list *instance_methods;
struct _objc_method_list *class_methods;
struct _objc_protocol_list *protocols;
unsigned int size;
struct _objc_property_list *instance_properties;
static struct _objc_category _OBJC_CATEGORY_
 __attribute__ ((used, section ("__OBJC, __category")))= {
, (struct _objc_method_list *)&_OBJC_CATEGORY_INSTANCE_METHODS_
, (struct _objc_method_list *)&_OBJC_CATEGORY_CLASS_METHODS_
, (struct _objc_protocol_list *)&_OBJC_CATEGORY_PROTOCOLS_
, sizeof(struct _objc_category), 0
SEL _cmd;
char *method_types;
void *_imp;
struct _objc_method_list *next_method;
int method_count;
INSTANCE
CLASS
_METHODS_
 __attribute__ ((used, section ("__OBJC, __
_meth")))= 
,{{(SEL)"
", (void *)
  ,{(SEL)"
struct _protocol_methods {
struct objc_selector *_cmd;
int protocol_method_count;
struct _protocol_methods protocol_methods[
} _OBJC_PROTOCOL_INSTANCE_METHODS_
 __attribute__ ((used, section ("__OBJC, __cat_inst_meth")))= {
  ,{{(struct objc_selector *)"
  ,{(struct objc_selector *)"
} _OBJC_PROTOCOL_CLASS_METHODS_
 __attribute__ ((used, section ("__OBJC, __cat_cls_meth")))= {
struct _objc_protocol {
struct _objc_protocol_extension *isa;
char *protocol_name;
struct _objc_protocol **protocol_list;
struct _objc_protocol_method_list *instance_methods;
struct _objc_protocol_method_list *class_methods;
static struct _objc_protocol _OBJC_PROTOCOL_
 __attribute__ ((used, section ("__OBJC, __protocol")))= {
0, "
", 0, 
(struct _objc_protocol_method_list *)&_OBJC_PROTOCOL_INSTANCE_METHODS_
(struct _objc_protocol_method_list *)&_OBJC_PROTOCOL_CLASS_METHODS_
struct _objc_ivar {
char *ivar_name;
char *ivar_type;
int ivar_offset;
int ivar_count;
struct _objc_ivar ivar_list[
} _OBJC_INSTANCE_VARIABLES_
 __attribute__ ((used, section ("__OBJC, __instance_vars")))= {
,{{"
  ,{"
struct _objc_class {
struct _objc_class *isa;
const char *super_class_name;
char *name;
long info;
long instance_size;
struct _objc_ivar_list *ivars;
struct _objc_method_list *methods;
struct objc_cache *cache;
const char *ivar_layout;
struct _objc_class_ext  *ext;
static struct _objc_class _OBJC_METACLASS_
 __attribute__ ((used, section ("__OBJC, __meta_class")))= {
(struct _objc_class *)"
, 0, "
, 0,2, sizeof(struct _objc_class), 0
, (struct _objc_method_list *)&_OBJC_CLASS_METHODS_
,0, (struct _objc_protocol_list *)&_OBJC_CLASS_PROTOCOLS_
,0,0
,0,0,0,0
static struct _objc_class _OBJC_CLASS_
 __attribute__ ((used, section ("__OBJC, __class")))= {
&_OBJC_METACLASS_
, 0,1
,sizeof(struct 
, (struct _objc_ivar_list *)&_OBJC_INSTANCE_VARIABLES_
, (struct _objc_method_list *)&_OBJC_INSTANCE_METHODS_
,0,0
, (struct _objc_protocol_list*)&_OBJC_CLASS_PROTOCOLS_
, 0,0
,0,0,0
</i>
abseil-module
Add Abseil checks.
abseil-duration-comparison
abseil-duration-division
abseil-duration-factory-float
abseil-duration-factory-scale
abseil-duration-subtraction
abseil-faster-strsplit-delimiter
abseil-no-internal-dependencies
abseil-no-namespace
abseil-redundant-strcat-calls
abseil-str-cat-append
abseil-string-find-startswith
abseil-upgrade-duration-conversions
function_decl
binop
perform comparison in the duration domain
::absl::ToDoubleHours
::absl::ToDoubleMinutes
::absl::ToDoubleSeconds
::absl::ToDoubleMilliseconds
::absl::ToDoubleMicroseconds
::absl::ToDoubleNanoseconds
::absl::ToInt64Hours
::absl::ToInt64Minutes
::absl::ToInt64Seconds
::absl::ToInt64Milliseconds
::absl::ToInt64Microseconds
::absl::ToInt64Nanoseconds
OpCall
operator/ on absl::Duration objects performs integer division; did you mean to use FDivDuration()?
use the integer version of absl::
::absl::Nanoseconds
::absl::Microseconds
::absl::Milliseconds
::absl::Seconds
::absl::Minutes
::absl::Hours
call_decl
mult_binop
div_binop
use ZeroDuration() for zero-length time intervals
internal duration scaling can be removed
absl::Hours
absl::Minutes
absl::Seconds
absl::Milliseconds
absl::Microseconds
absl::Nanoseconds
cast_arg
ToDoubleHours
ToInt64Hours
ToDoubleMinutes
ToInt64Minutes
ToDoubleSeconds
ToInt64Seconds
ToDoubleMilliseconds
ToInt64Milliseconds
ToDoubleMicroseconds
ToInt64Microseconds
ToDoubleNanoseconds
ToInt64Nanoseconds
lhs_arg
perform subtraction in the duration domain
absl::
Literal
::absl::string_view
::absl::ByAnyChar
ByAnyChar
StrSplit
%select{absl::StrSplit()|absl::MaxSplits()}0 called with a string literal consisting of a single character; consider using the character overload
InternalDep
do not reference any 'internal' namespaces; those implementation details are reserved to Abseil
container
abslNamespace
namespace 'absl' is reserved for implementation of the Abseil library and should not be opened in user code
::absl::StrCat
::absl::StrAppend
StrCat
StrAppend
multiple calls to 'absl::StrCat' can be flattened into a single call
Arg0
Call
call to 'absl::StrCat' has no effect
call 'absl::StrAppend' instead of 'absl::StrCat' when appending to a string to avoid a performance penalty
StringLikeClasses
::std::basic_string
IncludeStyle
AbseilStringsMatchHeader
absl/strings/match.h
needle
findexpr
!absl::StartsWith
absl::StartsWith
 instead of find() 
::absl::operator*
::absl::operator/
implicit conversion to 'int64_t' is deprecated in this context; use an explicit cast instead
android-module
Adds Android platform checks.
android-cloexec-accept4
android-cloexec-accept
android-cloexec-creat
android-cloexec-dup
android-cloexec-epoll-create1
android-cloexec-epoll-create
android-cloexec-fopen
android-cloexec-inotify-init1
android-cloexec-inotify-init
android-cloexec-memfd-create
android-cloexec-open
android-cloexec-socket
android-comparison-in-temp-failure-retry
SOCK_CLOEXEC
accept4(
, SOCK_CLOEXEC)
prefer accept4() to accept() because accept4() allows SOCK_CLOEXEC
funcDecl
%0 should use %1 where possible
use %0 mode '%1' to set O_CLOEXEC
open (
, O_WRONLY | O_CREAT | O_TRUNC | O_CLOEXEC, 
prefer open() to creat() because open() allows O_CLOEXEC
fcntl(
, F_DUPFD_CLOEXEC)
prefer fcntl() to dup() because fcntl() allows F_DUPFD_CLOEXEC
EPOLL_CLOEXEC
prefer epoll_create() to epoll_create1() because epoll_create1() allows EPOLL_CLOEXEC
epoll_create1(EPOLL_CLOEXEC)
IN_CLOEXEC
prefer inotify_init() to inotify_init1() because inotify_init1() allows IN_CLOEXEC
inotify_init1(IN_CLOEXEC)
MFD_CLOEXEC
openat
O_CLOEXEC
top-level comparison in TEMP_FAILURE_RETRY
boost-module
Add boost checks.
boost-use-to-string
char_type
to_string
wstring
use std::to_%0 instead of boost::lexical_cast<std::%0>
std::to_
cert-module
Adds lint checks corresponding to CERT secure coding guidelines.
cert-dcl21-cpp
cert-dcl50-cpp
cert-dcl54-cpp
cert-dcl58-cpp
cert-dcl59-cpp
cert-oop11-cpp
cert-err09-cpp
cert-err52-cpp
cert-err58-cpp
cert-err60-cpp
cert-err61-cpp
cert-msc50-cpp
cert-msc51-cpp
cert-dcl03-c
cert-dcl16-c
cert-env33-c
cert-flp30-c
cert-fio38-c
cert-err34-c
cert-msc30-c
cert-msc32-c
L;LL;LU;LLU
calling %0 uses a command processor
nmspc
modification of %0 namespace can result in undefined behavior
loop induction expression should not have floating-point type
randomGenerator
; use C++11 random library instead
rand() has limited randomness
overloaded %0 returns a reference instead of a constant object type
overloaded %0 returns a non-constant object instead of a constant object type
DisallowedSeedTypes
time_t,std::time_t
::std::linear_congruential_engine
::std::mersenne_twister_engine
::std::subtract_with_carry_engine
::std::discard_block_engine
::std::independent_bits_engine
::std::shuffle_order_engine
ctor
::srand
::std::srand
srand
random number generator seeded with a default argument will generate a predictable sequence of values
random number generator seeded with a constant value will generate a predictable sequence of values
random number generator seeded with a disallowed source of seed value will generate a predictable sequence of values
initialization of %0 with %select{static|thread_local}1 storage duration may throw an exception that cannot be caught
possibly throwing %select{constructor|function}0 declared here
::atoi
::atof
::atol
::atoll
converter
::scanf
::sscanf
::fscanf
::vfscanf
::vscanf
::vsscanf
formatted
%0 used to convert a string to %1, but function will not report conversion errors; consider using '%2' instead
an integer value
an unsigned integer value
a floating-point value
strtoimax
strtoumax
thrown exception type is not nothrow copy constructible
do not define a C-style variadic function; consider using a function parameter pack or currying instead
stmt
calling a function that uses a default argument is disallowed
default parameter was declared here
declaring a parameter with a default argument is disallowed
fuchsia-module
Adds Fuchsia platform checks.
fuchsia-default-arguments
fuchsia-header-anon-namespaces
fuchsia-multiple-inheritance
fuchsia-overloaded-operator
fuchsia-restrict-system-includes
fuchsia-statically-constructed-objects
fuchsia-trailing-return
fuchsia-virtual-inheritance
Includes
inheriting mulitple classes that aren't pure virtual is discouraged
overloading %0 is disallowed
system include %0 not allowed, transitively included from %1
system include %0 not allowed
static objects are disallowed; if possible, use a constexpr constructor instead
a trailing return type is disallowed for this type of declaration
direct virtual inheritance is disallowed
templ_type
bad_throw
throwing an exception whose type %0 is not derived from 'std::exception'
type %0 is a template instantiation of %1
type defined here
hicpp-module
Adds High-Integrity C++ checks.
hicpp-avoid-c-arrays
hicpp-avoid-goto
hicpp-braces-around-statements
hicpp-deprecated-headers
hicpp-exception-baseclass
hicpp-multiway-paths-covered
hicpp-signed-bitwise
hicpp-explicit-conversions
hicpp-function-size
hicpp-named-parameter
hicpp-invalid-access-moved
hicpp-member-init
hicpp-move-const-arg
hicpp-new-delete-operators
hicpp-noexcept-move
hicpp-no-array-decay
hicpp-no-assembler
hicpp-no-malloc
hicpp-special-member-functions
hicpp-static-assert
hicpp-use-auto
hicpp-undelegated-constructor
hicpp-use-emplace
hicpp-use-equals-default
hicpp-use-equals-delete
hicpp-use-noexcept
hicpp-use-nullptr
hicpp-use-override
hicpp-uppercase-literal-suffix
hicpp-vararg
WarnOnMissingElse
CheckTriviallyCopyableMove
Allocations
::malloc;::calloc
Reallocations
::realloc
Deallocations
::free
IgnoreMacros
non-enum-condition
enum-condition
else-if
potentially uncovered codepath; add an ending else statement
switch statement without labels has no effect
degenerated switch with default label only
switch could be better written as an if/else statement
switch with only one case; use an if statement
potential uncovered code path; add a default label
asm-stmt
asm-file-scope
asm-var
do not use inline assembler in safety-critical code
signed-operand
::std::locale::category
::std::ctype_base::mask
::std::ios_base::fmtflags
::std::ios_base::iostate
::std::ios_base::openmode
binary-no-sign-interference
binary-sign-interference
unary-signed
use of a signed integer operand with a %select{binary|unary}0 bitwise operator
StrictMode
^(/\* *)([_A-Za-z][_A-Za-z0-9]*)( *= *\*/)$
NewCallback
NewPermanentCallback
argument name '%0' in comment does not match parameter name %1
actual callee (%0) is declared here
CheckFunctionCalls
AssertMacros
condStmt
found %0() with side effect
dubious check of 'bool *' against 'nullptr', did you mean to dereference it?
bugprone-module
Adds checks for bugprone code constructs.
bugprone-argument-comment
bugprone-assert-side-effect
bugprone-bool-pointer-implicit-conversion
bugprone-copy-constructor-init
bugprone-dangling-handle
bugprone-exception-escape
bugprone-fold-init-type
bugprone-forward-declaration-namespace
bugprone-forwarding-reference-overload
bugprone-inaccurate-erase
bugprone-incorrect-roundings
bugprone-integer-division
bugprone-lambda-function-name
bugprone-macro-parentheses
bugprone-macro-repeated-side-effects
bugprone-misplaced-operator-in-strlen-in-alloc
bugprone-misplaced-widening-cast
bugprone-move-forwarding-reference
bugprone-multiple-statement-macro
bugprone-too-small-loop-variable
bugprone-narrowing-conversions
bugprone-parent-virtual-call
bugprone-sizeof-container
bugprone-sizeof-expression
bugprone-string-constructor
bugprone-string-integer-assignment
bugprone-string-literal-with-embedded-nul
bugprone-suspicious-enum-usage
bugprone-suspicious-memset-usage
bugprone-suspicious-missing-comma
bugprone-suspicious-semicolon
bugprone-suspicious-string-compare
bugprone-swapped-arguments
bugprone-terminating-continue
bugprone-throw-keyword-missing
bugprone-undefined-memory-manipulation
bugprone-undelegated-constructor
bugprone-unused-raii
bugprone-unused-return-value
bugprone-use-after-move
bugprone-virtual-near-miss
calling a base constructor other than the copy constructor
HandleClasses
std::basic_string_view;std::experimental::basic_string_view
handle
bad_stmt
%0 outlives its value
push_back
::std::deque
::std::forward_list
::std::list
::std::vector
::std::set
::std::multiset
::std::unordered_set
::std::unordered_multiset
::std::map
::std::multimap
::std::unordered_map
::std::unordered_multimap
FunctionsThatShouldNotThrow
IgnoredExceptions
thrower
an exception may be thrown in function %0 which should not throw exceptions
IterValueType
Iter2ValueType
InitType
::std::accumulate
::std::reduce
folding type %0 into type %1 might result in loss of precision
record_decl
friend_decl
declaration %0 is never referenced, but a declaration with the same name found in another namespace '%1'
a declaration of %0 is found here
no definition found for %0, but a definition with the same name %1 found in another namespace '%2'
a definition of %0 is found here
type-parm-decl
parm-var
constructor accepting a forwarding reference can hide the %select{copy|move|copy and move}0 constructor%s1
%select{copy|move}0 constructor declared here
remove_if
erase
this call will remove at most one item even when multiple items should be removed
casting (double + 0.5) to integer leads to incorrect rounding; consider using lround (#include <cmath>) instead
FloatCast
IntDiv
result of integer division used in a floating point context; possible loss of precision
inside a lambda, '%0' expands to the name of the function call operator; consider capturing the name of the enclosing function explicitly
macro replacement list should be enclosed in parentheses
macro argument should be enclosed in parentheses
side effects in the %ordinal0 macro argument %1 are repeated in macro expansion
BinOp
StrLen
Alloc
addition operator is applied to the argument of %0 instead of its result
CheckImplicitCasts
Calc
Cast
either cast from %0 to %1 is ineffective, or there is loss of precision before the conversion
::std::move
lookup
call-move
forwarding reference passed to std::move(), which may unexpectedly cause lvalues to be moved; use std::forward() instead
forward<
::std::
inner
outer
multiple statement macro used without braces; some statements will be unconditionally executed
castToType
thisType
member
qualified name '%0' refers to a member overridden in subclass%1; did you mean %2?
sizeof() doesn't return the size of the container; did you mean .size()?
WarnOnSizeOfConstant
WarnOnSizeOfIntegerExpression
WarnOnSizeOfThis
WarnOnSizeOfCompareToConstant
sizeof-constant
sizeof-integer-call
sizeof-this
sizeof-charp
sizeof-pointer-to-aggregate
sizeof-compare-constant
sizeof-comma-expr
elem-type
elem-ptr-type
num-type
denom-type
sizeof-divide-expr
sizeof-multiply-sizeof
sizeof-sizeof-expr
suspicious usage of 'sizeof(K)'; did you mean 'K'?
suspicious usage of 'sizeof()' on an expression that results in an integer
suspicious usage of 'sizeof(this)'; did you mean 'sizeof(*this)'
suspicious usage of 'sizeof(char*)'; do you mean 'strlen'?
suspicious usage of 'sizeof(A*)'; pointer to aggregate
suspicious comparison of 'sizeof(expr)' to a constant
suspicious usage of 'sizeof(..., ...)'
suspicious usage of 'sizeof(...)/sizeof(...)'; numerator is not a multiple of denominator
suspicious usage of sizeof pointer 'sizeof(T)/sizeof(T)'
suspicious usage of sizeof pointer 'sizeof(T*)/sizeof(T)'
suspicious usage of sizeof pointer 'sizeof(P*)/sizeof(Q*)'
suspicious usage of 'sizeof(sizeof(...))'
suspicious 'sizeof' by 'sizeof' multiplication
WarnOnLargeLength
LargeLengthThreshold
swapped-parameter
empty-string
negative-length
large-length
literal-with-length
string constructor parameters are probably swapped; expecting string(count, character)
constructor creating an empty string
negative value used as length parameter
suspicious large length parameter
length is bigger then string literal size
an integer is interpreted as a character code when assigning it to a string; if this is intended, cast the integer to the appropriate character type; if you want a string representation, use the appropriate conversion facility
std::to_wstring(
std::to_string(
strlit
truncated
suspicious embedded NUL character
truncated string literal with embedded NUL character
enumDecl
otherEnumDecl
diffEnumOp
lhsExpr
rhsExpr
enumExpr
char-zero-fill
num-fill
memset fill value is char '0', potentially mistaken for int 0
memset fill value is out of unsigned character range, gets truncated
memset of size zero, potentially swapped arguments
SizeThreshold
RatioThreshold
MaxConcatenatedTokens
suspicious string literal, probably missing a comma
potentially unintended semicolon
WarnOnImplicitComparison
WarnOnLogicalNotComparison
StringCompareLikeFunctions
missing-comparison
logical-not-comparison
invalid-conversion
suspicious-operator
invalid-comparison
function %0 is called without explicitly comparing result
function %0 is compared using logical not operator
function %0 is compared to a suspicious constant
results of function %0 used by operator '%1'
function %0 has suspicious implicit cast
argument with implicit conversion from %0 to %1 followed by argument converted from %2 to %3, potentially swapped arguments.
closestLoop
'continue' in loop with false condition is equivalent to 'break'
temporary-exception-not-thrown
suspicious exception object created but not thrown; did you mean 'throw %0'?
loop variable has narrower type %0 than iteration's upper bound %1
loopVar
loopVarCast
loopUpperBound
loopIncrement
forLoopName
::memset
::memcpy
::memmove
dest
undefined behavior, destination object type %0 is not TriviallyCopyable
undefined behavior, source object type %0 is not TriviallyCopyable
parent
construct
did you intend to call a delegated constructor? A temporary object is created here instead
temp
compound
object destroyed immediately after creation; did you mean to name the object?
CheckedFunctions
::std::async;::std::launder;::std::remove;::std::remove_if;::std::unique;::std::unique_ptr::release;::std::basic_string::empty;::std::vector::empty
the value returned by this function should be used
cast the expression to void to silence this warning
unique_ptr
shared_ptr
weak_ptr
containing-lambda
containing-func
moving-call
declref
::std::unique_ptr
::std::shared_ptr
::std::weak_ptr
clear
reset
reinit
'%0' used after it was moved
move occurred here
the use and move are unsequenced, i.e. there is no guarantee about the order in which they are evaluated
the use happens in a later loop iteration than the move
method '%0' has a similar name and the same signature as virtual method '%1'; did you mean to override it?
avoid using 'goto' for flow control
label defined here
cppcoreguidelines-module
Adds checks for the C++ Core Guidelines.
cppcoreguidelines-avoid-c-arrays
cppcoreguidelines-avoid-goto
cppcoreguidelines-avoid-magic-numbers
cppcoreguidelines-interfaces-global-init
cppcoreguidelines-macro-usage
cppcoreguidelines-narrowing-conversions
cppcoreguidelines-no-malloc
cppcoreguidelines-non-private-member-variables-in-classes
cppcoreguidelines-owning-memory
cppcoreguidelines-pro-bounds-array-to-pointer-decay
cppcoreguidelines-pro-bounds-constant-array-index
cppcoreguidelines-pro-bounds-pointer-arithmetic
cppcoreguidelines-pro-type-const-cast
cppcoreguidelines-pro-type-cstyle-cast
cppcoreguidelines-pro-type-member-init
cppcoreguidelines-pro-type-reinterpret-cast
cppcoreguidelines-pro-type-static-cast-downcast
cppcoreguidelines-pro-type-union-access
cppcoreguidelines-pro-type-vararg
cppcoreguidelines-special-member-functions
cppcoreguidelines-slicing
cppcoreguidelines-c-copy-assignment-signature
AllowedRegexp
^DEBUG_*
CheckCapsOnly
IgnoreCommandLineMacros
LegacyResourceProducers
::malloc;::aligned_alloc;::realloc;::calloc;::fopen;::freopen;::tmpfile
LegacyResourceConsumers
::free;::realloc;::freopen;::fclose
cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
referencee
initializing non-local variable with non-const expression depending on uninitialized non-local variable %0
macro '%0' used to declare a constant; consider using a 'constexpr' constant
variadic macro '%0' used; consider using a 'constexpr' variadic template function
function-like macro '%0' used; consider a 'constexpr' template function
macro definition does not define the macro name '%0' using all uppercase characters
WarnOnFloatingPointNarrowingConversion
PedanticMode
::ceil
::std::ceil
::floor
::std::floor
binary_op
narrowing conversion from %0 to %1
narrowing conversion from %0 to signed type %1 is implementation-defined
narrowing conversion from constant value %0 of type %1 to %2
narrowing conversion from constant value %0 of type %1 to signed type %2 is implementation-defined
narrowing conversion from constant %0 to %1
constant value should be of type of type %0 instead of %1
 (0x
allocation
consider a container or a smart pointer
consider std::vector or std::string
use RAII
do not manage memory manually; %0
deleted_variable
delete_expr
legacy_consumer
owner_assignment
owner_initialization
owner_member_initializer
bad_owner_creation_assignment
deduced_type
bad_owner_creation_variable
expected_owner_argument
bad_owner_creation_argument
bad_owner_creation_parameter
bad_owner_return
undestructed_owner_member
non_destructor_class
deleting a pointer through a type that is not marked 'gsl::owner<>'; consider using a smart pointer instead
variable declared here
calling legacy resource function without passing a 'gsl::owner<>'
expected argument of type 'gsl::owner<>'; got %0
expected assignment source to be of type 'gsl::owner<>'; got %0
expected initialization with value of type 'gsl::owner<>'; got %0
expected initialization of owner member variable with value of type 'gsl::owner<>'; got %0
assigning newly created 'gsl::owner<>' to non-owner %0
initializing non-owner %0 with a newly created 'gsl::owner<>'
type deduction did not result in an owner
initializing non-owner argument of type %0 with a newly created 'gsl::owner<>'
returning a newly created resource of type %0 or 'gsl::owner<>' from a function whose return type is not 'gsl::owner<>'
member variable of type 'gsl::owner<>' requires the class %0 to implement a destructor to release the owned resource
do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead
GslHeader
IncludeStyle
llvm
::std::array
do not use array subscript when the index is not an integer constant expression; use gsl::at() instead
std::array<> index %0 is negative
std::array<> index %0 is past the end of the array (which contains %1 elements)
do not use pointer arithmetic
do not use const_cast
do not use C-style cast to convert between unrelated types
do not use C-style cast to downcast from a base to a derived class; use dynamic_cast instead
dynamic_cast<
do not use C-style cast to downcast from a base to a derived class
do not use C-style cast to cast away constness
IgnoreArrays
union constructor should initialize one of these fields: %0
constructor does not initialize these fields: %0
constructor does not initialize these bases: %0
uninitialized record type: %0
fieldDecl
(), 
do not use reinterpret_cast
do not use static_cast to downcast from a base to a derived class; use dynamic_cast instead
do not use static_cast to downcast from a base to a derived class
do not access members of unions; use (boost::)variant instead
va_use
callvararg
do not call c-style vararg functions
do not use va_start/va_arg to define c-style vararg functions; use variadic templates instead
do not declare variables of type va_list; use variadic templates instead
BaseDecl
DerivedDecl
slicing object from type %0 to %1 discards override %2
slicing object from type %0 to %1 discards %2 bytes of state
AllowMissingMoveFunctions
AllowSoleDefaultDtor
dtor
copy-ctor
copy-assign
move-ctor
move-assign
class-def
class '%0' defines %1 but does not define %2
a destructor
a default destructor
a non-default destructor
a copy constructor
a copy assignment operator
a move constructor
a move assignment operator
redundant cast to the same type
C-style casts are discouraged; use %0
constructor call syntax
static_cast (if needed, the cast may be redundant)
static_cast/const_cast/reinterpret_cast
throwStmt
NSException
raiseException
pass in NSError ** instead of throwing exception to indicate Objective-C errors
default arguments on virtual or override methods are prohibited
conversion
initializer-list
%0 constructor should not be declared explicit
single-argument constructors
constructors that are callable with a single argument
std::initializer_list
for C++11-compatibility, use pair directly
for C++11-compatibility, omit template arguments from make_pair
%select{static function|function in global namespace}1 named %0 must %select{be in|have an appropriate prefix followed by}1 Pascal case as required by Google Objective-C style guide
[A-Z][A-Z0-9]+
[A-Z][a-zA-Z0-9]*
HeaderFileExtensions
Invalid header file extension: 
using_decl
using declarations in the global namespace in headers are prohibited
,h,hh,hpp,hxx
global_var
global_const
non-const global variable '%0' must have a name which starts with 'g[A-Z]'
const global variable '%0' must have a name which starts with an appropriate prefix
google-module
Adds Google lint checks.
google-build-explicit-make-pair
google-build-namespaces
google-build-using-namespace
google-default-arguments
google-explicit-constructor
google-global-names-in-headers
google-objc-avoid-throwing-exception
google-objc-function-naming
google-objc-global-variable-declaration
google-runtime-int
google-runtime-operator
google-runtime-references
google-readability-casting
google-readability-todo
google-readability-braces-around-statements
google-readability-function-size
google-readability-namespace-comments
UnsignedTypePrefix
uint
SignedTypePrefix
TypeSuffix
unsigned short port
consider replacing %0 with '%1'
WhiteListTypes
referenced_type
non-const reference parameter at index %0, make it const or use a pointer
non-const reference parameter %0, make it const or use a pointer
do not overload unary operator&, it is dangerous.
^// *TODO *(\(.*\))?:?( )?(.*)$
// TODO(
missing username/bug in TODO
anonymousNamespace
do not use unnamed namespaces in header files
usingNamespace
do not use namespace using-directives; use using-declarations instead
tools/clang/
LLVM_
#includes are not sorted properly
llvm-module
Adds LLVM lint checks.
llvm-header-guard
llvm-include-order
llvm-namespace-comment
llvm-twine-local
twine variables are prone to use-after-free bugs
UseHeaderFileExtension
name-decl
%select{function|full function template specialization}0 %1 defined in a header file; function definitions in header files can lead to ODR violations
variable %0 defined in a header file; variable definitions in header files can lead to ODR violations
misc-module
Adds miscellaneous lint checks.
misc-definitions-in-headers
misc-misplaced-const
misc-new-delete-overloads
misc-non-copyable-objects
misc-non-private-member-variables-in-classes
misc-redundant-expression
misc-static-assert
misc-throw-by-value-catch-by-reference
misc-unconventional-assign-operator
misc-uniqueptr-reset-release
misc-unused-alias-decls
misc-unused-parameters
misc-unused-using-decls
%0 declared with a const-qualified typedef type; results in the type being '%1' instead of '%2'
typedef declared here
declaration of %0 has no matching declaration of '%1' at the same scope
::FILE
std::FILE
type_decl
::pthread_cond_t
::pthread_mutex_t
pthread_cond_t
pthread_mutex_t
%0 declared as type '%1', which is unsafe to copy; did you mean '%1 *'?
expression has opaque data structure type %0; type should only be used as a pointer and not dereferenced
IgnoreClassesWithAllMemberVariablesBeingPublic
IgnorePublicMemberVariables
member variable %0 has %1 visibility
binary
logical-bitwise-confusion
shift-const
and-const
left-right-shift-confusion
binop-const-compare-to-const
binop-const-compare-to-sym
binop-const-compare-to-binop-const
comparisons-of-symbol-and-const
logical expression is always false
logical expression is always true
ineffective-bitwise
expression always evaluates to 0
expression always evaluates to '%0'
equivalent expression on both sides of logical operator
expression is redundant
both sides of operator are equivalent
'true' and 'false' expressions are equivalent
both sides of overloaded operator are equivalent
ineffective logical negation operator used; did you mean '~'?
ineffective bitwise and operation
EAGAIN
EWOULDBLOCK
SIGCLD
SIGCHLD
-const
-sym
-cast
-swap
-negate
-overload
isAlwaysFalse
castExpr
assertMSG
assertExprRoot
found assert() that could be replaced by static_assert()
CheckThrowTemporaries
throw expression throws a pointer; it should throw a non-pointer value instead
throw expression should throw anonymous temporary values instead
catch handler catches a pointer value; should throw a non-pointer value and catch by reference instead
catch handler catches by value; should catch by reference instead
ReturnType
ArgumentType
returnStmt
operator=() should always return '*this'
operator=() should return '%0&'
operator=() should take '%0 const&', '%0&&' or '%0'
operator=() should not be marked '%1'
left
reset_member
left_class
right
release_member
right_class
reset_call
prefer ptr1 = std::move(ptr2) over ptr1.reset(ptr2.release())
prefer ptr = ReturnUnique() over ptr.reset(ReturnUnique().release())
namespace alias decl %0 is unused
parameter %0 is unused
using decl %0 is unused
bind
prefer a lambda to std::bind
 { return 
); };
^_([0-9]+)$
auto && arg
typeloc
do not declare C-style arrays, use std::array<> instead
do not declare C VLA arrays, use std::vector<> instead
nested namespaces can be concatenated
inclusion of deprecated C++ header '%0'; consider using '%1' instead
including '%0' has no effect in C++; consider removing it
::std::ios_base::io_state
::std::ios_base::open_mode
::std::ios_base::seek_dir
::std::ios_base::streamoff
::std::ios_base::streampos
io_state
iostate
open_mode
openmode
seek_dir
seekdir
'std::ios_base::%0' is deprecated; use 'std::ios_base::%1' instead
'std::ios_base::%0' is deprecated
cbegin
cend
MaxCopySize
MinConfidence
reasonable
NamingStyle
CamelCase
camelBack
lower_case
UPPER_CASE
use range-based for loop instead
std::make_shared
MakeSmartPtrFunctionHeader
MakeSmartPtrFunction
use %0 instead
std::make_unique
MakeSmartPtrFunction
modernize-module
Add modernize checks.
modernize-avoid-bind
modernize-avoid-c-arrays
modernize-concat-nested-namespaces
modernize-deprecated-headers
modernize-deprecated-ios-base-aliases
modernize-loop-convert
modernize-make-shared
modernize-make-unique
modernize-pass-by-value
modernize-raw-string-literal
modernize-redundant-void-arg
modernize-replace-auto-ptr
modernize-replace-random-shuffle
modernize-return-braced-init-list
modernize-shrink-to-fit
modernize-unary-static-assert
modernize-use-auto
modernize-use-bool-literals
modernize-use-default-member-init
modernize-use-emplace
modernize-use-equals-default
modernize-use-equals-delete
modernize-use-noexcept
modernize-use-nullptr
modernize-use-override
modernize-use-transparent-functors
modernize-use-uncaught-exceptions
modernize-use-using
ValuesOnly
Param
Initializer
Ctor
pass by value and use std::move
DelimiterStem
ReplaceShorterLiterals
escaped string literal can be written as a raw string literal
'\"?x01
function definition
function declaration
redundant void argument list in 
type alias
field declaration
variable declaration with initializer
variable declaration
named cast
cast expression
IncludeStyle
llvm
use std::move to transfer ownership
auto_ptr is deprecated, use unique_ptr instead
IncludeStyle
llvm
randomFunc
'std::random_shuffle' has been removed in C++17; use 'std::shuffle' and an alternative random mechanism instead
'std::random_shuffle' has been removed in C++17; use 'std::shuffle' instead
avoid repeating the return type from the declaration; use a braced initializer list instead
ContainerDecl
std::deque
std::vector
ContainerToShrink
CopyAndSwapTrick
->shrink_to_fit()
.shrink_to_fit()
the shrink_to_fit method should be used to reduce the capacity of a shrinkable container
use unary 'static_assert' when the string literal is an empty string
MinTypeNameLength
RemoveStars
use auto when declaring iterators
use auto when initializing with new to avoid duplicating the type name
use auto when initializing with a cast to avoid duplicating the type name
use auto when initializing with a template cast to avoid duplicating the type name
unordered_multimap
unordered_multiset
converting integer literal to bool, use bool literal instead
UseAssignment
existing
use default member initializer for %0
member initializer for %0 is redundant
'\0'
0.0f
0.0hk
0.0k
0.0lk
0.0uhk
0.0uk
0.0ulk
0.0hr
0.0r
0.0lr
0.0uhr
0.0ur
0.0ulr
IgnoreImplicitConstructors
ContainersWithPushBack
::std::vector; ::std::list; ::std::deque
SmartPointers
::std::shared_ptr; ::std::unique_ptr; ::std::auto_ptr; ::std::weak_ptr
TupleTypes
::std::pair; ::std::tuple
TupleMakeFunctions
::std::make_pair; ::std::make_tuple
make
use emplace_back instead of push_back
emplace_back
emplace_back(
default constructor
copy constructor
copy-assignment operator
use '= default' to define a trivial 
use '= delete' to prohibit calling of a special member function
deleted member function should be public
ReplacementString
UseNoexceptFalse
del-dtor
parmVarDecl
noexcept(false)
dynamic exception specification '%0' is deprecated; consider %select{using '%2'|removing it}1 instead
NullMacros
use nullptr
prefer using 'override' or (rarely) 'final' instead of 'virtual'
annotate this function with 'override' or (rarely) 'final'
'virtual' and 'override' are
'virtual' is
'override' is
'final'
'override'
 redundant since the function is already declared 
override 
 override 
SafeMode
::std::plus
::std::minus
::std::multiplies
::std::divides
::std::modulus
::std::negate
::std::equal_to
::std::not_equal_to
::std::greater
::std::less
::std::greater_equal
::std::less_equal
::std::logical_and
::std::logical_or
::std::logical_not
::std::bit_and
::std::bit_or
::std::bit_xor
::std::bit_not
FunctorClass
Functor
FunctorParentLoc
FuncInst
prefer transparent functors '%0'
decl_ref_expr
call_expr
init_call_expr
'std::uncaught_exception' is deprecated, use 'std::uncaught_exceptions' instead
use 'using' instead of 'typedef'
nserrorInit
use errorWithDomain:code:userInfo: or initWithDomain:code:userInfo: to create a new NSError
OSSpinlockLock
OSSpinlockUnlock
OSSpinlockTry
spinlock
use os_unfair_lock_lock() or dispatch queue APIs instead of the deprecated OSSpinLock
ClassNames
subclass
Objective-C interface %0 subclasses %1, which is not intended to be subclassed
ForbiddenSuperClassNames
objc-module
Adds Objective-C lint checks.
objc-avoid-nserror-init
objc-avoid-spinlock
objc-forbidden-subclassing
objc-property-declaration
Acronyms
IncludeDefaultAcronyms
property name '%0' not using lowerCamelCase style or not prefixed in a category, according to the Apple Coding Guidelines
([a-z]|[A-Z][A-Z0-9])[a-z0-9A-Z]*$
^[a-zA-Z]+_[a-zA-Z0-9][a-zA-Z0-9_]+$
find
rfind
find_first_of
find_first_not_of
find_last_of
find_last_not_of
%0 called with a string literal consisting of a single character; consider using the more effective overload accepting a character
WarnOnAllAutoCopies
AllowedTypes
forRange
the loop variable's type is not a reference type; this creates a copy in each iteration; consider making this a reference
loop variable is copied but only used as const reference; consider making it a const reference
operator-call
faulty-var
::std::find
::std::count
::std::equal_range
::std::lower_bound
::std::upper_bound
IneffContObj
IneffCont
IneffContPtr
IneffContExpr
AlgParam
IneffAlg
different comparers used in the algorithm and the container
this STL algorithm call should be replaced with a container method
plusOperator
lhsStrT
lhsStr
string concatenation results in allocation of unnecessary temporary strings; consider using 'operator+=' or 'string::append()' instead
VectorLikeClasses
.reserve(
.size()
%0 is called inside a loop; consider pre-allocating the vector capacity before the loop
receiving-expr
std::move of the %select{|const }0%select{expression|variable %4}1 %select{|of the trivially-copyable type %5 }2has no effect; remove std::move()%select{| or make the variable non-const}3
passing result of std::move() as a const reference argument; no move will actually happen
IncludeStyle
llvm
move-init
move constructor initializes %0 by calling a copy constructor
base class
class member
copy constructor being called
candidate move constructor here
assignment operator
move %0s should be marked noexcept
noexcept specifier on the move %0 evaluates to 'false'
performance-module
Adds performance checks.
performance-faster-string-find
performance-for-range-copy
performance-implicit-conversion-in-loop
performance-inefficient-algorithm
performance-inefficient-string-concatenation
performance-inefficient-vector-operation
performance-move-const-arg
performance-move-constructor-init
performance-noexcept-move-constructor
performance-type-promotion-in-math-fn
performance-unnecessary-copy-initialization
performance-unnecessary-value-param
IncludeStyle
llvm
::acos
::acosh
::asin
::asinh
::atan
::atanh
::cbrt
::cos
::cosh
::erf
::erfc
::exp
::exp2
::expm1
::fabs
::ilogb
::lgamma
::llrint
::log
::log10
::log1p
::log2
::logb
::lrint
::modf
::nearbyint
::rint
::round
::sin
::sinh
::sqrt
::tan
::tanh
::tgamma
::trunc
::llround
::lround
::atan2
::copysign
::fdim
::fmax
::fmin
::fmod
::hypot
::ldexp
::nextafter
::pow
::remainder
call to '%0' promotes float to double
objectArg
oldVarDecl
newVarDecl
blockStmt
ctorCall
declStmt
the const qualified variable %0 is copy-constructed from a const reference; consider making it a const reference
the variable %0 is copy-constructed from a const reference but is only used as const reference; consider making it a const reference
local copy %0 of the variable %1 is never modified; consider avoiding the copy
functionDecl
the const qualified parameter %0 is copied for each invocation; consider making it a reference
the parameter %0 is copied for each invocation but only used as a const reference; consider making it a const reference
parameter %0 is passed by value and only copied once; consider moving it to avoid unnecessary copies
portability-module
Adds portability-related checks.
portability-simd-intrinsics
Suggest
std::experimental
' can be replaced by 
\$std
\$simd
::simd
' is a non-portable 
 intrinsic function
$std::max
$std::min
operator+ on $simd objects
operator- on $simd objects
operator* on $simd objects
$simd::max
$simd::min
parameter %0 is const-qualified in the function declaration; const-qualification of parameters only has an effect in function definitions
ShortStatementLines
for-range
statement should be inside braces
return type %0 is 'const'-qualified at the top level, which may reduce code readability without improving const correctness
could not transform this declaration
SizeBinaryOp
NegOnSize
SizeCallExpr
Pointee
STLObject
BinCmp
->empty()
.empty()
the 'empty' method should be used to check for emptiness instead of 'size'
the 'empty' method should be used to check for emptiness instead of comparing to an empty object
method %0::empty() defined here
deletedPointer
deleteExpr
deletedMemberPointer
deleteMemberExpr
ifWithDelete
'if' statement is unnecessary; deleting null pointer has no effect
method-decl
%0 is explicitly defaulted but implicitly deleted, probably because %1; definition can either be removed or explicitly deleted
a non-static data member or a base class is lacking a default constructor
a non-static data member or a base class is not copyable
move constructor
a non-static data member or a base class is neither copyable nor movable
copy assignment operator
move assignment operator
a base class or a non-static data member is not assignable, e.g. because the latter is marked 'const'
do not use 'else' after '%0'
LineThreshold
StatementThreshold
BranchThreshold
ParameterThreshold
NestingThreshold
VariableThreshold
function %0 exceeds recommended size/complexity thresholds
%0 lines including whitespace and comments (threshold %1)
%0 statements (threshold %1)
%0 branches (threshold %1)
%0 parameters (threshold %1)
nesting level %0 starts here (threshold %1)
%0 variables (threshold %1)
InlineNamespace
ConstexprVariable
ConstantMember
PrivateMember
ProtectedMember
PublicMember
Member
ClassConstant
ClassMember
GlobalConstant
GlobalConstantPointer
GlobalPointer
GlobalVariable
LocalConstant
LocalConstantPointer
LocalPointer
LocalVariable
StaticConstant
StaticVariable
Constant
Variable
ConstantParameter
ParameterPack
Parameter
PointerParameter
ConstantPointerParameter
AbstractClass
Struct
Union
GlobalFunction
ConstexprFunction
ConstexprMethod
VirtualMethod
ClassMethod
PrivateMethod
ProtectedMethod
PublicMethod
Method
TypeTemplateParameter
ValueTemplateParameter
TemplateParameter
MacroDefinition
ObjcIvar
Case
Prefix
Suffix
IgnoreFailedSplit
declRef
classRef
typeLoc
nestedNameLoc
invalid case style for %0 '%1'
aNy_CasE
Camel_Snake_Case
camel_Snake_Back
^.*$
^[a-z][a-z0-9_]*$
^[a-z][a-zA-Z0-9]*$
^[A-Z][A-Z0-9_]*$
^[A-Z][a-zA-Z0-9]*$
^[A-Z]([a-z0-9]*(_[A-Z])?)*
^[a-z]([a-z0-9]*(_[A-Z])?)*
([a-z0-9A-Z]*)(_+)|([A-Z]?[a-z0-9]+)([A-Z]|$)|([A-Z]+)([A-Z]|$)
AllowIntegerConditions
AllowPointerConditions
parentStmt
implicitCastToBool
implicitCastFromBool
furtherImplicitCast
implicit conversion %0 -> bool
implicit conversion bool -> %0
1.0f
Strict
function template specialization
primary template declaration
definition
%0 %q1 has a %2 with different parameter names
the %0 seen here
differing parameters are named here: (%0), in %1: (%2)
function %q0 has %1 other declaration%s1 with different parameter names
the %ordinal0 inconsistent declaration seen here
the other declaration
decl_stmt
multiple declarations in a single statement reduces readability
IgnoreAllFloatingPointValues
IgnorePowersOf2IntegerValues
IgnoredIntegerValues
IgnoredFloatingPointValues
%0 is a magic number; consider replacing it with a named constant
different indentation for 'if' and corresponding 'else'
misleading indentation: statement is indented too deeply
did you mean this line to be inside this '%0'
confusing array subscript expression, usually the index is inside the []
testing::Unused
all parameters should be named in a function
^/[/*] *(end (of )?)? *(anonymous|unnamed)? *namespace( +([a-zA-Z0-9_:]+))?\.? *(\*/)?$
ShortNamespaceLines
SpacesBeforeComments
%0 ends with a comment that refers to a wrong namespace '
%0 ends with an unrecognized comment
namespace '
%0 starts here
Parm
Mark
pointer parameter '%0' can be pointer to const
readability-module
Adds readability-related checks.
readability-avoid-const-params-in-decls
readability-braces-around-statements
readability-const-return-type
readability-container-size-empty
readability-delete-null-pointer
readability-deleted-default
readability-else-after-return
readability-function-size
readability-identifier-naming
readability-implicit-bool-conversion
readability-inconsistent-declaration-parameter-name
readability-isolate-declaration
readability-magic-numbers
readability-misleading-indentation
readability-misplaced-array-index
readability-redundant-function-ptr-dereference
readability-redundant-member-init
readability-simplify-subscript-expr
readability-static-accessed-through-instance
readability-static-definition-in-anonymous-namespace
readability-string-compare
readability-named-parameter
readability-non-const-parameter
readability-redundant-control-flow
readability-redundant-declaration
readability-redundant-smartptr-get
readability-redundant-string-cstr
readability-redundant-string-init
readability-simplify-boolean-expr
readability-uniqueptr-delete-release
readability-uppercase-literal-suffix
NameSpecifierNestingThreshold
redundant return statement at the end of a function with a void return type
redundant continue statement at the end of loop statement
redundant %0 declaration
previously declared here
redundant repeated dereference of function pointer
initializer for member %0 is redundant
initializer for base class %0 is redundant
ptr_to_ptr
memberExpr
redundant_get
smart_pointer
redundant get() call on smart pointer
duck_typing
op->Type
op*Type
getType
data
append
compare
::llvm::StringRef::StringRef
::llvm::Twine::Twine
redundant call to %0
redundant string initialization
ChainedConditionalReturn
ChainedConditionalAssignment
redundant boolean literal in ternary expression result
redundant boolean literal in conditional assignment
returns-bool
static_cast<bool>(
Types
accessing an element of the container does not require a call to 'data()'; did you mean to use 'operator[]'?
memberExpression
static member accessed through instance
static-def
%0 is a static definition in anonymous namespace; static is redundant here
do not use 'compare' to test equality of strings; use the string equality operator instead
str2
str1
match1
match2
uptr
prefer '= nullptr' to 'delete x.release()' to reset unique_ptr<> objects
NewSuffixes
floating point
%0 literal has suffix '%1', which is not uppercase
temps
creating a temporary object of type %q0 is prohibited
Names
zircon-module
Adds Zircon kernel checks.
zircon-temporary-objects
buffer is insufficiently dereferenced: %0
mpi-module
Adds MPI clang-tidy checks.
mpi-buffer-deref
mpi-type-mismatch
buffer type '%0' does not match the MPI datatype '%1'
 _Complex
complex<
constructExpr
operatorCallExpr
endif // 
header guard does not follow preferred style
#endif for a header guard should reference the guard macro in a comment
code/includes outside of area guarded by header guard; consider moving it
header is missing header guard
#ifndef 
#define 
#include <
llvm
google
/internal/
/proto/
ClangTidyDiags
clang-analyzer-
Allocation failed
()^$|*+?.[]\{}
Error reading configuration from 
: directory doesn't exist.
Can't read 
Error parsing 
Allocation failed
Checks
WarningsAsErrors
HeaderFilterRegex
AnalyzeTemporaryDtors
FormatStyle
User
CheckOptions
ExtraArgs
ExtraArgsBefore
value
%Y%m%d%H%M%S%N
.json
"file": "
"timestamp": "
"profile": {
Unable to create output directory '
Error opening output file '
clang-tidy
clang-tidy checks profiling
model-path
Analyzer timers
Analyzer total time
ClangDiags
XBS_RUN_STATIC_ANALYZER
CC_LOG_DIAGNOSTICS
CC_LOG_DIAGNOSTICS_FILE
.StaticAnalyzer
Skipping bison-generated file
All checks are disabled using a supplied option
block (line: 
, col: 
UnifiedSource
ANALYZE
 (Syntax)
 (Path, 
 Inline_Minimal
 Inline_Regular
OVERVIEW: Clang Static Analyzer Checkers List
USAGE: -analyzer-checker <CHECKER or PACKAGE,...>
OVERVIEW: Clang Static Analyzer Enabled Checkers List
OVERVIEW: Clang Static Analyzer -analyzer-config Option List
USAGE: clang -cc1 [CLANG_OPTIONS] -analyzer-config <OPTION1=VALUE,OPTION2=VALUE,...>
       clang -cc1 [CLANG_OPTIONS] -analyzer-config OPTION1=VALUE, -analyzer-config OPTION2=VALUE, ...
       clang [CLANG_OPTIONS] -Xclang -analyzer-config -Xclang<OPTION1=VALUE,OPTION2=VALUE,...>
       clang [CLANG_OPTIONS] -Xclang -analyzer-config -Xclang OPTION1=VALUE, -Xclang -analyzer-config -Xclang OPTION2=VALUE, ...
OPTIONS:
) (string) Controls the high-level analyzer mode, which influences the default settings for some of the lower-level config options (such as IPAMode). Value: "deep", "shallow". (default: "deep")
) Whether or not implicit destructors for C++ objects should be included in the CFG. (default: true)
) Whether or not the destructors for C++ temporary objects should be included in the CFG. (default: true)
) Whether or not end-of-lifetime information should be included in the CFG. (default: false)
) Whether or not the end of the loop information should be included in the CFG. (default: false)
) Whether or not construction site information should be included in the CFG C++ constructor elements. (default: true)
) Whether or not scope information should be included in the CFG. (default: false)
) Whether or not templated functions may be considered for inlining. (default: true)
) Whether or not C++ standard library functions may be considered for inlining. (default: true)
) Whether or not allocator call may be considered for inlining. (default: true)
) Whether or not the destructor of C++ 'shared_ptr' may be considered for inlining. This covers std::shared_ptr, std::tr1::shared_ptr, and boost::shared_ptr, and indeed any destructor named '~shared_ptr'. (default: false)
) Whether C++ temporary destructors should be inlined during analysis. If temporary destructors are disabled in the CFG via the 'cfg-temporary-dtors' option, temporary destructors would not be inlined anyway. (default: true)
) Whether or not paths that go through null returns should be suppressed. This is a heuristic for avoiding bug reports with paths that go through inlined functions that are more defensive than their callers. (default: true)
) Whether a bug report should not be suppressed if its path includes a call with a null argument, even if that call has a null return. This option has no effect when ShouldSuppressNullReturnPaths is false. This is a counter-heuristic to avoid false negatives. (default: false)
) Whether or not diagnostics containing inlined defensive NULL checks should be suppressed. (default: true)
) Whether or not methods of C++ container objects may be considered for inlining. (default: false)
) Whether or not diagnostics reported within the C++ standard library should be suppressed. (default: true)
) Whether bug reports should be crosschecked with the Z3 constraint manager backend. (default: false)
) Whether or not the diagnostic report should be always reported in the main source file and not the headers. (default: false)
) Whether or not the report filename should be random or not. (default: false)
) Whether the analyzer should serialize statistics to plist output. Statistics would be serialized in JSON format inside the main dictionary under the statistics key. Available only if compiled in assert mode or with LLVM statistics explicitly enabled. (default: false)
) Whether ObjectiveC inlining is enabled, false otherwise. (default: true)
) Whether irrelevant parts of a bug report path should be pruned out of the final output. (default: true)
) Whether 'static' initializers should be in conditional logic in the CFG. (default: true)
) Whether the analyzer engine should synthesize fake bodies for well-known functions. (default: true)
) Whether elidable C++ copy-constructors and move-constructors should be actually elided during analysis. Both behaviors are allowed by the C++ standard, and the analyzer, like CodeGen, defaults to eliding. Starting with C++17 some elisions become mandatory, and in these cases the option will be ignored. (default: true)
) Whether lambdas should be inlined. Otherwise a sink node will be generated each time a LambdaExpr is visited. (default: true)
) Whether the analysis should try to widen loops. (default: false)
) Whether the analysis should try to unroll loops with known bounds. (default: false)
) Whether the bug reporter should transparently treat extra note diagnostic pieces as event diagnostic pieces. Useful when the diagnostic consumer doesn't support the extra note pieces. (default: false)
) Whether SValBuilder should rearrange comparisons and additive operations of symbolic expressions which consist of a sum of a symbol and a concrete integer into the format where symbols are on the left-hand side and the integer is on the right. This is only done if both symbols and both concrete integers are signed, greater than or equal to the quarter of the minimum value of the type and less than or equal to the quarter of the maximum value of that type. A + n <OP> B + m becomes A - B <OP> m - n, where A and B symbolic, n and m are integers. <OP> is any of '==', '!=', '<', '<=', '>', '>=', '+' or '-'. The rearrangement also happens with '-' instead of '+' on either or both side and also if any or both integers are missing. (default: false)
) Whether we should eagerly assume evaluations of conditionals, thus, bifurcating the path. This indicates how the engine should handle expressions such as: 'x = (y != 0)'. When this is true then the subexpression 'y != 0' will be eagerly assumed to be true or false, thus evaluating it to the integers 0 or 1 respectively. The upside is that this can increase analysis precision until we have a better way to lazily evaluate such logic. The downside is that it eagerly bifurcates paths. (default: true)
) Whether naive cross translation unit analysis is enabled. This is an experimental feature to inline functions from other translation units. (default: false)
) Whether macros related to the bugpath should be expanded and included in the plist output. (default: false)
) Whether to emit verbose output about the analyzer's progress related to ctu. (default: false)
) The size of the functions (in basic blocks), which should be considered to be small enough to always inline. (default: 3)
) How often nodes in the ExplodedGraph should be recycled to save memory. To disable node reclamation, set the option to 0. (default: 1000)
) The number of basic blocks a function needs to have to be considered large for the 'max-times-inline-large' config option. (default: 14)
) The maximum complexity of symbolic constraint. (default: 35)
) The maximum times a large function could be inlined. (default: 32)
) The bound on the number of basic blocks in an inlined function. (default: 4 in shallow mode, 100 in deep mode)
) The maximum number of nodes the analyzer can generate while exploring a top level function (for each exploded graph). 0 means no limit. (default: 75000 in shallow mode, 225000 in deep mode)
) The largest number of fields a struct can have and still be considered small This is currently used to decide whether or not it is worth forcing a LazyCompoundVal on bind. To disable all small-struct-dependent behavior, set the option to 0. (default: 2)
) The directory containing the CTU related files. (default: "")
) the name of the file containing the CTU index of definitions. (default: "externalDefMap.txt")
) The analyzer can inline an alternative implementation written in C at the call site if the called function's body is not available. This is a path where to look for those alternative implementations (called models). (default: "")
) Controls which C++ member functions will be considered for inlining. Value: "constructors", "destructors", "methods". (default: "destructors")
) Controls the mode of inter-procedural analysis. Value: "none", "basic-inlining", "inlining", "dynamic", "dynamic-bifurcate". (default: "inlining" in shallow mode, "dynamic-bifurcate" in deep mode)
) Value: "dfs", "bfs", "unexplored_first", "unexplored_first_queue", "unexplored_first_location_queue", "bfs_block_dfs_contents". (default: "unexplored_first_queue")
debug.AnalysisOrder
Print callbacks that are called during analysis in order
debug.Stats
Emit warnings with analyzer statistics
alpha.security.ArrayBound
Warn about buffer overflows (older checker)
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.ArrayBound
alpha.security.ArrayBoundV2
Warn about buffer overflows (newer checker)
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.ArrayBoundV2
osx.cocoa.AutoreleaseWrite
Warn about potentially crashing writes to autoreleasing objects from different autoreleasing pools in Objective-C
alpha.unix.BlockInCriticalSection
Check for calls to blocking functions inside a critical section
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.BlockInCriticalSection
alpha.core.BoolAssignment
Warn about assigning non-{0,1} values to Boolean variables
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.BoolAssignment
core.builtin.BuiltinFunctions
Evaluate compiler builtin functions (e.g., alloca())
osx.coreFoundation.CFError
Check usage of CFErrorRef* parameters
https://clang-analyzer.llvm.org/available_checks.html#osx.coreFoundation.CFError
debug.DumpCFG
Display Control-Flow Graphs
debug.ViewCFG
View Control-Flow Graphs using GraphViz
osx.coreFoundation.CFNumber
Check for proper uses of CFNumber APIs
https://clang-analyzer.llvm.org/available_checks.html#osx.coreFoundation.CFNumber
osx.coreFoundation.CFRetainRelease
Check for null arguments to CFRetain/CFRelease/CFMakeCollectable
https://clang-analyzer.llvm.org/available_checks.html#osx.coreFoundation.CFRetainRelease
alpha.unix.cstring.BufferOverlap
Checks for overlap in two buffer arguments
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.cstring.BufferOverlap
unix.cstring.CStringModeling
The base of several CString related checkers. On it's own it emits no reports, but adds valuable information to the analysis when enabled.
alpha.unix.cstring.NotNullTerminated
Check for arguments which are not null-terminating strings
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.cstring.NotNullTerminated
unix.cstring.NullArg
Check for null pointers being passed as arguments to C string functions
https://clang-analyzer.llvm.org/available_checks.html#unix.cstring.NullArg
alpha.unix.cstring.OutOfBounds
Check for out-of-bounds access in string functions
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.cstring.OutOfBounds
unix.cstring.BadSizeArg
Check the size argument passed into C string functions for common erroneous patterns
https://clang-analyzer.llvm.org/available_checks.html#unix.cstring.BadSizeArg
cplusplus.SelfAssignment
Checks C++ copy and move assignment operators for self assignment
core.CallAndMessage
Check for logical errors for function calls and Objective-C message expressions (e.g., uninitialized arguments, null function pointers)
https://clang-analyzer.llvm.org/available_checks.html#core.CallAndMessage
alpha.core.CallAndMessageUnInitRefArg
Check for logical errors for function calls and Objective-C message expressions (e.g., uninitialized arguments, null function pointers, and pointer to undefined variables)
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.CallAndMessageUnInitRefArg
debug.DumpCalls
Print calls as they are traversed by the engine
debug.DumpCallGraph
Display Call Graph
debug.ViewCallGraph
View Call Graph using GraphViz
alpha.core.CastSize
Check when casting a malloc'ed type T, whether the size is a multiple of the size of T
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.CastSize
alpha.core.CastToStruct
Check for cast from non-struct pointer to struct pointer
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.CastToStruct
alpha.unix.Chroot
Check improper use of chroot
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.Chroot
osx.cocoa.ClassRelease
Check for sending 'retain', 'release', or 'autorelease' directly to a Class
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.ClassRelease
alpha.clone.CloneChecker
Reports similar pieces of code.
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.clone.CloneChecker
debug.ConfigDumper
Dump config table
alpha.core.Conversion
Loss of sign/precision in implicit conversions
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.Conversion
valist.CopyToSelf
Check for va_lists which are copied onto itself.
deadcode.DeadStores
Check for values stored to variables that are never read afterwards
https://clang-analyzer.llvm.org/available_checks.html#deadcode.DeadStores
alpha.cplusplus.DeleteWithNonVirtualDtor
Reports destructions of polymorphic objects with a non-virtual destructor in their base class
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.DeleteWithNonVirtualDtor
core.NullDereference
Check for dereferences of null pointers
https://clang-analyzer.llvm.org/available_checks.html#core.NullDereference
alpha.osx.cocoa.DirectIvarAssignment
Check for direct assignments to instance variables
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.osx.cocoa.DirectIvarAssignment
alpha.osx.cocoa.DirectIvarAssignmentForAnnotatedFunctions
Check for direct assignments to instance variables in the methods annotated with objc_no_direct_instance_variable_assignment
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.osx.cocoa.DirectIvarAssignmentForAnnotatedFunctions
core.DivideZero
Check for division by zero
https://clang-analyzer.llvm.org/available_checks.html#core.DivideZero
debug.DumpDominators
Print the dominance tree for a given CFG
unix.DynamicMemoryModeling
The base of several malloc() related checkers. On it's own it emits no reports, but adds valuable information to the analysis when enabled.
alpha.core.DynamicTypeChecker
Check for cases where the dynamic and the static type of an object are unrelated.
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.DynamicTypeChecker
core.DynamicTypePropagation
Generate dynamic type information
optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
Check that NSLocalizedString macros include a comment for context
https://clang-analyzer.llvm.org/available_checks.html#optin.osx.cocoa.localizability.EmptyLocalizationContextChecker
alpha.cplusplus.EnumCastOutOfRange
Check integer to enumeration casts for out of range values
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.EnumCastOutOfRange
debug.ViewExplodedGraph
View Exploded Graphs using GraphViz
debug.ExprInspection
Check the analyzer's understanding of expressions
alpha.core.FixedAddr
Check for assignment of a fixed address to a pointer
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.FixedAddr
security.FloatLoopCounter
Warn on using a floating point value as a loop counter (CERT: FLP30-C, FLP30-CPP)
https://clang-analyzer.llvm.org/available_checks.html#security.FloatLoopCounter
optin.performance.GCDAntipattern
Check for performance anti-patterns when using Grand Central Dispatch
apiModeling.google.GTest
Model gtest assertion APIs
alpha.security.taint.TaintPropagation
Generate taint information used by other checkers
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.taint.TaintPropagation
alpha.core.IdenticalExpr
Warn about unintended use of identical expressions in operators
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.IdenticalExpr
cplusplus.InnerPointer
Check for inner pointers of C++ containers used after re/deallocation
alpha.osx.cocoa.InstanceVariableInvalidation
Check that the invalidatable instance variables are invalidated in the methods annotated with objc_instance_variable_invalidator
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.osx.cocoa.InstanceVariableInvalidation
alpha.cplusplus.InvalidatedIterator
Check for use of invalidated iterators
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.InvalidatedIterator
alpha.cplusplus.IteratorModeling
Models iterators of C++ containers
alpha.cplusplus.IteratorRange
Check for iterators used outside their valid ranges
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.IteratorRange
alpha.osx.cocoa.IvarInvalidationModeling
Gathers information for annotation driven invalidation checking for classes that contains a method annotated with 'objc_instance_variable_invalidator'
alpha.llvm.Conventions
Check code for LLVM codebase conventions
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.llvm.Conventions
debug.DumpLiveStmts
Print results of live statement analysis
debug.DumpLiveVars
Print results of live variable analysis
osx.MIG
Find violations of the Mach Interface Generator calling convention
optin.mpi.MPI-Checker
Checks MPI code
https://clang-analyzer.llvm.org/available_checks.html#optin.mpi.MPI-Checker
osx.SecKeychainAPI
Check for proper uses of Secure Keychain APIs
https://clang-analyzer.llvm.org/available_checks.html#osx.SecKeychainAPI
osx.API
Check for proper uses of various Apple APIs
https://clang-analyzer.llvm.org/available_checks.html#osx.API
unix.Malloc
Check for memory leaks, double free, and use-after-free problems. Traces memory managed by malloc()/free().
https://clang-analyzer.llvm.org/available_checks.html#unix.Malloc
alpha.security.MallocOverflow
Check for overflows in the arguments to malloc()
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.MallocOverflow
unix.MallocSizeof
Check for dubious malloc arguments involving sizeof
https://clang-analyzer.llvm.org/available_checks.html#unix.MallocSizeof
unix.MismatchedDeallocator
Check for mismatched deallocators.
https://clang-analyzer.llvm.org/available_checks.html#unix.MismatchedDeallocator
alpha.cplusplus.MismatchedIterator
Check for use of iterators of different containers where iterators of the same container are expected
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.MismatchedIterator
alpha.osx.cocoa.MissingInvalidationMethod
Check that the invalidation methods are present in classes that contain invalidatable instance variables
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.osx.cocoa.MissingInvalidationMethod
alpha.security.MmapWriteExec
Warn on mmap() calls that are both writable and executable
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.MmapWriteExec
cplusplus.Move
Find use-after-move bugs in C++
https://clang-analyzer.llvm.org/available_checks.html#cplusplus.Move
osx.cocoa.NSAutoreleasePool
Warn for suboptimal uses of NSAutoreleasePool in Objective-C GC mode
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.NSAutoreleasePool
osx.cocoa.NSError
Check usage of NSError** parameters
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.NSError
osx.NSOrCFErrorDerefChecker
Implementation checker for NSErrorChecker and CFErrorChecker
cplusplus.NewDelete
Check for double-free and use-after-free problems. Traces memory managed by new/delete.
https://clang-analyzer.llvm.org/available_checks.html#cplusplus.NewDelete
cplusplus.NewDeleteLeaks
Check for memory leaks. Traces memory managed by new/delete.
https://clang-analyzer.llvm.org/available_checks.html#cplusplus.NewDeleteLeaks
osx.cocoa.NilArg
Check for prohibited nil arguments to ObjC method calls
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.NilArg
core.builtin.NoReturnFunctions
Evaluate "panic" functions that are known to not return to the caller
optin.osx.cocoa.localizability.NonLocalizedStringChecker
Warns about uses of non-localized NSStrings passed to UI methods expecting localized NSStrings
https://clang-analyzer.llvm.org/available_checks.html#optin.osx.cocoa.localizability.NonLocalizedStringChecker
core.NonNullParamChecker
Check for null pointers passed as arguments to a function whose arguments are references or marked with the 'nonnull' attribute
https://clang-analyzer.llvm.org/available_checks.html#core.NonNullParamChecker
core.NonnilStringConstants
Assume that const string-like globals are non-null
nullability.NullPassedToNonnull
Warns when a null pointer is passed to a pointer which has a _Nonnull type.
https://clang-analyzer.llvm.org/available_checks.html#nullability.NullPassedToNonnull
nullability.NullReturnedFromNonnull
Warns when a null pointer is returned from a function that has _Nonnull return type.
https://clang-analyzer.llvm.org/available_checks.html#nullability.NullReturnedFromNonnull
nullability.NullabilityBase
Stores information during the analysis about nullability.
nullability.NullableDereferenced
Warns when a nullable pointer is dereferenced.
https://clang-analyzer.llvm.org/available_checks.html#nullability.NullableDereferenced
nullability.NullablePassedToNonnull
Warns when a nullable pointer is passed to a pointer which has a _Nonnull type.
https://clang-analyzer.llvm.org/available_checks.html#nullability.NullablePassedToNonnull
nullability.NullableReturnedFromNonnull
Warns when a nullable pointer is returned from a function that has _Nonnull return type.
osx.NumberObjectConversion
Check for erroneous conversions of objects representing numbers into numbers
optin.osx.OSObjectCStyleCast
Checker for C-style casts of OSObjects
osx.OSObjectRetainCount
Check for leaks and improper reference count management for OSObject
osx.cocoa.AtSync
Check for nil pointers used as mutexes for @synchronized
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.AtSync
osx.coreFoundation.containers.PointerSizedValues
Warns if 'CFArray', 'CFDictionary', 'CFSet' are created with non-pointer-size values
https://clang-analyzer.llvm.org/available_checks.html#osx.coreFoundation.containers.PointerSizedValues
osx.coreFoundation.containers.OutOfBounds
Checks for index out-of-bounds when using 'CFArray' API
https://clang-analyzer.llvm.org/available_checks.html#osx.coreFoundation.containers.OutOfBounds
osx.cocoa.Dealloc
Warn about Objective-C classes that lack a correct implementation of -dealloc
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.Dealloc
osx.cocoa.ObjCGenerics
Check for type errors when using Objective-C generics
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.ObjCGenerics
osx.cocoa.Loops
Improved modeling of loops using Cocoa collection types
osx.cocoa.IncompatibleMethodTypes
Warn about Objective-C method signatures with type incompatibilities
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.IncompatibleMethodTypes
osx.cocoa.NonNilReturnValue
Model the APIs that are guaranteed to return a non-nil value
osx.ObjCProperty
Check for proper uses of Objective-C properties
osx.cocoa.SelfInit
Check that 'self' is properly initialized inside an initializer method
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.SelfInit
osx.cocoa.MissingSuperCall
Warn about Objective-C methods that lack a necessary call to super
osx.cocoa.SuperDealloc
Warn about improper use of '[super dealloc]' in Objective-C
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.SuperDealloc
osx.cocoa.UnusedIvars
Warn about private ivars that are never used
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.UnusedIvars
optin.performance.Padding
Check for excessively padded structs.
alpha.osx.cocoa.localizability.PluralMisuseChecker
Warns against using one vs. many plural pattern in code when generating localized strings.
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.osx.cocoa.localizability.PluralMisuseChecker
alpha.core.PointerArithm
Check for pointer arithmetic on locations other than array elements
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.PointerArithm
alpha.core.PointerSub
Check for pointer subtractions on two pointers pointing to different memory chunks
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.PointerSub
alpha.unix.PthreadLock
Simple lock -> unlock checker
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.PthreadLock
debug.ReportStmts
Emits a warning for every statement.
osx.cocoa.RetainCountBase
Common base of various retain count related checkers
osx.cocoa.RetainCount
Check for leaks and improper reference count management
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.RetainCount
alpha.security.ReturnPtrRange
Check for an out-of-bound pointer being returned to callers
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.security.ReturnPtrRange
core.uninitialized.UndefReturn
Check for uninitialized values being returned to the caller
https://clang-analyzer.llvm.org/available_checks.html#core.uninitialized.UndefReturn
osx.cocoa.RunLoopAutoreleaseLeak
Check for leaked memory in autorelease pools that will never be drained
security.insecureAPI.SecuritySyntaxChecker
Base of various security function related checkers
alpha.unix.SimpleStream
Check for misuses of stream APIs
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.SimpleStream
alpha.core.SizeofPtr
Warn about unintended use of sizeof() on pointer expressions
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.SizeofPtr
cplusplus.SmartPtr
Model behavior of C++ smart pointers
alpha.core.StackAddressAsyncEscape
Check that addresses to stack memory do not escape the function
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.StackAddressAsyncEscape
core.StackAddrEscapeBase
Generate information about stack address escapes.
core.StackAddressEscape
https://clang-analyzer.llvm.org/available_checks.html#core.StackAddressEscape
apiModeling.StdCLibraryFunctions
Improve modeling of the C standard library functions
alpha.unix.Stream
Check stream handling functions
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.unix.Stream
debug.TaintTest
Mark tainted symbols as such.
alpha.core.TestAfterDivZero
Check for division by variable that is later compared against 0. Either the comparison is useless or there is division by zero.
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.core.TestAfterDivZero
debug.DumpTraversal
Print branch conditions as they are traversed by the engine
apiModeling.TrustNonnull
Trust that returns from framework methods annotated with _Nonnull are not null
security.insecureAPI.UncheckedReturn
Warn on uses of functions whose return values must be always checked
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.UncheckedReturn
core.uninitialized.Branch
Check for uninitialized values used as branch conditions
https://clang-analyzer.llvm.org/available_checks.html#core.uninitialized.Branch
core.uninitialized.CapturedBlockVariable
Check for blocks that capture uninitialized values
core.UndefinedBinaryOperatorResult
Check for undefined results of binary operators
https://clang-analyzer.llvm.org/available_checks.html#core.UndefinedBinaryOperatorResult
core.uninitialized.ArraySubscript
Check for uninitialized values used as array subscripts
https://clang-analyzer.llvm.org/available_checks.html#core.uninitialized.ArraySubscript
core.uninitialized.Assign
Check for assigning uninitialized values
https://clang-analyzer.llvm.org/available_checks.html#core.uninitialized.Assign
valist.Uninitialized
Check for usages of uninitialized (or already released) va_lists.
alpha.cplusplus.UninitializedObject
Reports uninitialized fields after object construction
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.cplusplus.UninitializedObject
unix.API
Check calls to various UNIX/Posix functions
https://clang-analyzer.llvm.org/available_checks.html#unix.API
optin.portability.UnixAPI
Finds implementation-defined behavior in UNIX/Posix functions
alpha.deadcode.UnreachableCode
Check unreachable code
https://clang-analyzer.llvm.org/alpha_checks.html#alpha.deadcode.UnreachableCode
valist.Unterminated
Check for va_lists which are not released by a va_end call.
core.VLASize
Check for declarations of VLA of undefined or zero size
https://clang-analyzer.llvm.org/available_checks.html#core.VLASize
valist.ValistBase
Gathers information about va_lists.
osx.cocoa.VariadicMethodTypes
Check for passing non-Objective-C types to variadic collection initialization methods that expect only Objective-C types
https://clang-analyzer.llvm.org/available_checks.html#osx.cocoa.VariadicMethodTypes
unix.Vfork
Check for proper usage of vfork
https://clang-analyzer.llvm.org/available_checks.html#unix.Vfork
optin.cplusplus.VirtualCall
Check virtual function calls during construction or destruction
https://clang-analyzer.llvm.org/available_checks.html#optin.cplusplus.VirtualCall
security.insecureAPI.bcmp
Warn on uses of the 'bcmp' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.bcmp
security.insecureAPI.bcopy
Warn on uses of the 'bcopy' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.bcopy
security.insecureAPI.bzero
Warn on uses of the 'bzero' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.bzero
security.insecureAPI.getpw
Warn on uses of the 'getpw' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.getpw
security.insecureAPI.gets
Warn on uses of the 'gets' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.gets
security.insecureAPI.mkstemp
Warn when 'mkstemp' is passed fewer than 6 X's in the format string
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.mkstemp
security.insecureAPI.mktemp
Warn on uses of the 'mktemp' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.mktemp
security.insecureAPI.rand
Warn on uses of the 'rand', 'random', and related functions
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.rand
security.insecureAPI.strcpy
Warn on uses of the 'strcpy' and 'strcat' functions
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.strcpy
security.insecureAPI.vfork
Warn on uses of the 'vfork' function
https://clang-analyzer.llvm.org/available_checks.html#security.insecureAPI.vfork
clang_analyzerAPIVersionString
clang_registerCheckers
CHECKERS:
.model
PreStmtCastExpr
PreStmt<CastExpr> (Kind : 
PostStmtCastExpr
PostStmt<CastExpr> (Kind : 
PreStmtArraySubscriptExpr
PreStmt<ArraySubscriptExpr>
PostStmtArraySubscriptExpr
PostStmt<ArraySubscriptExpr>
PreStmtCXXNewExpr
PreStmt<CXXNewExpr>
PostStmtCXXNewExpr
PostStmt<CXXNewExpr>
PreStmtOffsetOfExpr
PreStmt<OffsetOfExpr>
PostStmtOffsetOfExpr
PostStmt<OffsetOfExpr>
PreCall
PostCall
EndFunction
EndFunction
ReturnStmt: 
CFGElement: 
CFGStmt
CFGAutomaticObjDtor
NewAllocator
NewAllocator
Bind
Bind
RegionChanges
RegionChanges
LiveSymbols
LiveSymbols
block(line:
:col:
 -> Total CFGBlocks: 
 | Unreachable CFGBlocks: 
 | Exhausted Block: 
 | Empty WorkList: 
Analyzer Statistics
Internal Statistics
: The analyzer generated a sink at this point
Sink Point
Out-of-bound array access
Access out-of-bound array element (buffer overflow)
Out-of-bound access
Out of bound memory access 
(accessed memory precedes memory block)
(access exceeds upper limit of memory block)
(index is tainted)
caseInsensitiveCompare
options
componentsSeparatedByCharactersInSet
initWithFormat
localizedCaseInsensitiveCompare
localizedCompare
localizedStandardCompare
arrayByAddingObject
removeObjectForKey
NSNull
NSOrderedSet
Array element cannot be nil
Value stored into '
' cannot be nil
' key cannot be nil
Value argument 
Key argument 
to '
Argument to '
' method '
nil argument
API Misuse (Apple)
Dictionary key cannot be nil
Dictionary value cannot be nil
CFNumberCreate
CFNumberGetValue
-bit integer is used to initialize a 
CFNumber object that represents 
-bit integer; 
A CFNumber object that represents 
-bit integer is used to initialize 
 bits of the CFNumber value will 
be garbage.
overwrite adjacent storage.
 bits of the integer value will be 
lost.
garbage.
Bad use of CFNumber APIs
null passed to CF memory management function
CFRelease
CFAutorelease
Null pointer argument in call to 
message incorrectly sent to class instead of class instance
The '
' message should be sent to instances of class '
' and not the class directly
Arguments passed to variadic method aren't all Objective-C pointer types
setWithObjects
orderedSetWithObjects
Argument to method '
' should be an Objective-C pointer type, not '
unlock
sleep
recv
pthread_mutex_lock
pthread_mutex_trylock
pthread_mutex_unlock
mtx_lock
mtx_timedlock
mtx_trylock
mtx_unlock
lock_guard
unique_lock
Call to blocking function in critical section
Blocking Error
Call to blocking function '
' inside of critical section
Assignment of a non-Boolean value
copy_backward
explicit_memset
strsep
explicit_bzero
memory copy function
Memory copy function overflows destination buffer
Null pointer argument in call to byte string function
 accesses out-of-bound array element
Byte string function accesses out-of-bound array element
Arguments must not be overlapping buffers
memory comparison function
memory set function
string copy function
Size argument is greater than the free space in the destination buffer
Size argument is greater than the length of the destination buffer
String copy function overflows destination buffer
Argument to 
 is the address of the label '
', which is not a null-terminated string
, which is not a null-terminated string
not a null-terminated string
Argument is not a null-terminated string.
the address of the function '
the address of a function
block text
a block
a C++ temp object of type 
a variable of type
a field of type 
an instance variable of type 
Sum of expressions causes overflow.
This expression will create a string whose length is too big to be represented as a size_t
string length function
string comparison function
strsep()
memory clearance function
Potential buffer overflow. 
Replace with 'sizeof(
) - strlen(
) - 1'
 or u
se a safer 'strlcat' API
Anti-pattern in the argument
C String API
The third argument allows to potentially copy more bytes than it should. 
Replace with the value 
sizeof(<destination buffer>)
 or lower
Called function pointer is an uninitialized pointer value
Called function pointer is null (null dereference)
Uninitialized argument value
Argument to 'delete[]' is uninitialized
Argument to 'delete' is uninitialized
Receiver in message expression is an uninitialized value
Property access on an uninitialized object pointer
Subscript access on an uninitialized object pointer
NilReceiver
Receiver in message expression is 'nil'
The receiver of message '
' is nil
, which results in forming a null reference
 and returns a value of type '
' that will be garbage
Called C++ object pointer is uninitialized
Called C++ object pointer is null
Function call with too few arguments
Function 
Block 
taking 
 argument
 is called with fewer (
Passed-by-value struct argument contains uninitialized data
 (e.g., field: '
 (e.g., via the field chain: '
 function call argument is a pointer to uninitialized value
 function call argument is an uninitialized value
 argument in message expression is an uninitialized value
Argument for property setter is an uninitialized value
Argument for subscript setter is an uninitialized value
Subscript index is an uninitialized value
 block call argument is an uninitialized value
Cast region with wrong size.
Cast a region whose size is not a multiple of the destination type size.
Cast from non-struct type to struct type
Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.
Widening cast to struct type
Casting data to a larger structure type and accessing a field can lead to memory access errors or data corruption.
Missing ivar release (leak)
Extra ivar release
Mistaken dealloc
Missing -dealloc
' lacks a 'dealloc' instance method but 
must release '
 and others
SenTestCase
_Block_release
CIFilter
' should be released rather than deallocated
' ivar in '
' will be released by '-[CIFilter dealloc]' but also released here
' was synthesized for 
a weak
an assign, readwrite
 property but was released in 'dealloc'
' was 
retained
copied
 by a synthesized property but not released before '[super dealloc]'
The Objective-C class '
', which is derived from class '
', defines the instance method '
' whose return type is '
'.  A method with the same name (same selector) is also defined in class '
' and has a return type of '
'.  These two types are incompatible, and may result in undefined behavior for clients of these classes.
Incompatible instance method return type
setuid
setgid
seteuid
setegid
setreuid
setregid
Return value is not checked in call to '
The return value from the call to '
' is not checked.  If an error occurs in '
', the following code may execute with unexpected privileges
Security
Use of deprecated function in call to 'bcmp()'
The bcmp() function is obsoleted by memcmp().
Use of deprecated function in call to 'bcopy()'
The bcopy() function is obsoleted by memcpy() or memmove().
Use of deprecated function in call to 'bzero()'
The bzero() function is obsoleted by memset().
Potential buffer overflow in call to 'gets'
Call to function 'gets' is extremely insecure as it can always result in a buffer overflow
Potential buffer overflow in call to 'getpw'
The getpw() function is dangerous as it may overflow the provided buffer. It is obsoleted by getpwuid().
Potential insecure temporary file in call 'mktemp'
Call to function 'mktemp' is insecure as it always creates or uses insecure temporary file.  Use 'mkstemp' instead
Call to '
' should have at least 6 'X's in the format string to be secure (
 'X'
 seen
 character
 used as a suffix
Insecure temporary file creation
Potential insecure memory buffer bounds restriction in call 'strcpy'
Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119.
Potential insecure memory buffer bounds restriction in call 'strcat'
Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119.
' is a poor random number generator
' is obsolete because it implements a poor random number generator.
  Use 'arc4random' instead
'random' is not a secure random number generator
The 'random' function produces a sequence of values that an adversary may be able to predict.  Use 'arc4random' instead
Potential insecure implementation-specific behavior in call 'vfork'
Call to function 'vfork' is insecure as it can lead to denial of service situations in the parent process. Replace calls to vfork with calls to the safer 'posix_spawn' function
Variable '
' with floating point type '
' should not be used as a loop counter
Floating point variable used as loop counter
Potential unintended use of sizeof() on pointer type
The code calls sizeof() on a pointer type. This can produce an unexpected result.
chroot
chdir
Break out of jail
No call of chdir("/") immediately after chroot
MinimumCloneComplexity
ReportSuspiciousClones
ReportNormalClones
IgnoredFilesPattern
Suspicious code clone
Code clone
Potential copy-paste error; did you really mean to use '
' here?
Similar code using '
' here
Exact code clone
Duplicate code detected
Similar code here
Loss of sign in implicit conversion
Loss of precision in implicit conversion
Conversion
Possible loss of sign/precision.
Dead initialization
Value stored to '
' during its initialization is never read
Dead increment
Dead assignment
' is never read
Dead store
Immediate dominance tree (Node#,IDom#):
[config]
[stats]
num-entries = 
Statement
Destruction of a polymorphic object with no virtual destructor
Logic error
Conversion from derived to base happened here
Dereference of undefined pointer value
Dereference of null pointer
Array access
 results in a null pointer dereference
Access to field '
' results in a dereference of a null pointer
Access to instance variable '
loaded from
 variable '
 field '
 ivar '
objc_no_direct_instance_variable_assignment
Init
Property access
Direct assignment to an instance variable backing a property; use the setter instead
objc_allow_direct_instance_variable_assignment
Division by zero
Division by a tainted value, possibly zero
IllegalConversion
Conversion from value of type '
' to incompatible type '
Generics
Type '
' is inferred from 
explicit cast (from '
implicit cast (from '
this context
ArgTypeMismatch
Object has a dynamic type '
' which is incompatible with static type '
Dynamic and static type mismatch
Type Error
Enum cast out of range
The value provided to the cast expression is not in the valid range of values for the enum
Checking analyzer assumptions
Missing assertion argument
REACHABLE
Missing argument for explaining
concrete memory address '
a value unsupported by the explainer: (
pointer to 
a symbolic expression unsupported by the explainer: (
symbol of type '
' conjured at statement '
value derived from (
) for 
extent of 
metadata of type '
' tied to 
argument '
initial value of 
a memory region unsupported by the explainer (
region allocated by '
object at 
heap segment that starts at 
pointee of 
compound literal 
base object '
' inside 
temporary object constructed at statement '
' of 
instance variable '
parameter '
block variable '
local variable '
static local variable '
global variable '
element of type '
' with index 
string literal 
signed 
unsigned 
-bit integer '
lazily frozen compound value of 
Missing argument for dumping
Missing region for obtaining extent
Obtaining extent of a non-region
Category
clang_analyzer_denote() requires a symbol and a string literal
Not a symbol
Not a string literal
clang_analyzer_express() requires a symbol
Unable to express
SYMBOL DEAD
Use fixed address
Using a fixed address is not portable because that address will probably not be valid in all environments or platforms.
semaphore
group
mock
semaphore_name
dispatch_semaphore_create
dispatch_semaphore_signal
dispatch_semaphore_wait
waitcall
Waiting on a callback using a 
 creates useless threads 
and is subject to priority inversion; consider 
using a synchronous API or changing the caller to be asynchronous
GCD performance anti-pattern
Performance
group_name
dispatch_group_create
dispatch_group_enter
dispatch_group_leave
dispatch_group_wait
setproctitle
Use of Untrusted Data
Untrusted Data
getline
getdelim
strdupa
wcsdup
stdin
AssertionResult
success_
Identical expressions in conditional expression
identical expressions on both sides of ':' in conditional expression
identical expressions on both sides of bitwise operator
identical expressions on both sides of logical operator
Use of identical expressions
comparison of identical expressions always evaluates to 'equal'
comparison of identical expressions always evaluates to true
comparison of identical expressions always evaluates to false
Compare of identical expressions
Identical conditions
conditions of the inner and outer statements are identical
expression is identical to previous condition
Identical branches
true and false branches are identical
Pointer to inner buffer of '
' obtained here
pop_back
reserve
shrink_to_fit
Iterator out of range
Misuse of STL APIs
Iterator(s) mismatched
Iterator invalidated
Invalidated iterator accessed.
Iterator decremented ahead of its valid range.
Iterator incremented behind the past-the-end iterator.
Past-the-end iterator dereferenced.
iter
Iterators of different containers used where the same container is expected.
Container accessed using foreign iterator argument.
objc_instance_variable_invalidator
objc_instance_variable_invalidator_partial
needs to be invalidated; 
no invalidation method is declared for 
no invalidation method is defined in the @implementation for 
Incomplete invalidation
Property 
Instance variable 
needs to be invalidated or set to nil
AST class '
' has a field '
' that allocates heap memory
 via the following chain: 
 (type 
AST node allocates heap memory
LLVM Conventions
StringRef should not be bound to temporary std::string that it outlives
AggressiveReport
Unlocalizable string
Localizability Issue (Apple)
NonLocalizedStringChecker
UnlocalizedString
User-facing text should use localized string macro
Non-localized string literal here
localizedStringForKey
NSBundle
NSDateFormatter
stringFromDate
localizedStringFromDate
dateStyle
timeStyle
NSNumberFormatter
stringFromNumber
UITextField
UITextView
UILabel
CFDateFormatterCreateStringWithDate
CFDateFormatterCreateStringWithAbsoluteTime
CFNumberFormatterCreateStringWithNumber
UISearchDisplayController
setSearchResultsTitle
UITabBarItem
initWithTitle
selectedImage
NSDockTile
setBadgeLabel
NSStatusItem
setTitle
setToolTip
UITableViewRowAction
rowActionWithStyle
title
handler
NSBox
NSButton
setAlternateTitle
radioButtonWithTitle
action
buttonWithTitle
checkboxWithTitle
NSSavePanel
setPrompt
setNameFieldLabel
setNameFieldStringValue
setMessage
UIPrintInfo
setJobName
NSTabViewItem
setLabel
NSBrowser
ofColumn
UIAccessibilityElement
setAccessibilityLabel
setAccessibilityHint
setAccessibilityValue
UIAlertAction
actionWithTitle
NSPopUpButton
addItemWithTitle
insertItemWithTitle
removeItemWithTitle
selectItemWithTitle
NSTableViewRowAction
NSImage
setAccessibilityDescription
NSUserActivity
NSPathControlItem
NSCell
initTextCell
setStringValue
NSPathControl
setPlaceholderString
UIAccessibility
NSTableColumn
setHeaderToolTip
NSSegmentedControl
forSegment
NSButtonCell
NSDatePickerCell
NSSliderCell
NSControl
NSAccessibility
setAccessibilityValueDescription
setAccessibilityTitle
setAccessibilityPlaceholderValue
setAccessibilityHelp
NSMatrix
forCell
NSPrintPanel
setDefaultButtonTitle
UILocalNotification
setAlertBody
setAlertAction
setAlertTitle
NSSlider
UIMenuItem
UIAlertController
alertControllerWithTitle
preferredStyle
UIApplicationShortcutItem
initWithType
localizedTitle
localizedSubtitle
icon
userInfo
UIActionSheet
cancelButtonTitle
destructiveButtonTitle
otherButtonTitles
addButtonWithTitle
UIAccessibilityCustomAction
initWithName
setName
UISearchBar
setText
setPlaceholder
UIBarItem
NSView
NSTextField
textFieldWithString
wrappingLabelWithString
labelWithString
NSAttributedString
NSText
setString
UIKeyCommand
keyCommandWithInput
modifierFlags
discoverabilityTitle
setDiscoverabilityTitle
NSAlert
alertWithMessageText
defaultButton
alternateButton
otherButton
informativeTextWithFormat
setMessageText
setInformativeText
setHelpAnchor
UIMutableApplicationShortcutItem
setLocalizedTitle
setLocalizedSubtitle
UIButton
forState
NSWindow
minFrameWidthWithTitle
styleMask
setMiniwindowTitle
NSPathCell
UIDocumentMenuViewController
addOptionWithTitle
order
UINavigationItem
UIAlertView
NSFormCell
NSUserNotification
setSubtitle
setActionButtonTitle
setOtherButtonTitle
setResponsePlaceholder
NSToolbarItem
setPaletteLabel
NSProgress
setLocalizedDescription
setLocalizedAdditionalDescription
NSSegmentedCell
NSUndoManager
setActionName
undoMenuTitleForUndoActionName
redoMenuTitleForUndoActionName
NSMenuItem
keyEquivalent
NSPopUpButtonCell
pullsDown
NSViewController
NSMenu
UIMutableUserNotificationAction
NSForm
addEntry
insertEntry
NSTextFieldCell
NSUserNotificationAction
actionWithIdentifier
UIBarButtonItem
UIViewController
UISegmentedControl
insertSegmentWithTitle
animated
forSegmentAtIndex
NSAccessibilityCustomRotorItemResult
initWithItemLoadingToken
customLabel
setCustomLabel
UIContextualAction
contextualActionWithStyle
NSAccessibilityCustomRotor
initWithLabel
itemSearchDelegate
NSWindowTab
NSAccessibilityCustomAction
localizedStringForKey:value:table:
Context Missing
Localized string macro should include a non-empty comment for translators
Plural Misuse
Plural cases are not supported across all languages. Use a .stringsdict file instead
KeychainAPIChecker :
Allocated data should be released before another call to 
the allocator: missing a call to '
Trying to free data which has not been allocated.
CFStringCreateWithBytesNoCopy
kCFAllocatorDefault
kCFAllocatorSystemDefault
kCFAllocatorMalloc
SecKeychainItemCopyContent
SecKeychainFindGenericPassword
SecKeychainFindInternetPassword
SecKeychainItemFreeContent
SecKeychainItemCopyAttributesAndData
SecKeychainItemFreeAttributesAndData
Improper use of SecKeychain API
Data is allocated here.
Deallocator doesn't match the allocator: '
' should be used.
DeadSymbolsLeak
Allocated data is not released: missing a call to '
' uses
 memory within
 the block variable '
 the local variable '
 the instance variable '
 heap-allocated memory
 stack allocated memory
 for the predicate value.  Using such transient memory for the predicate is potentially dangerous.
  Perhaps you intended to declare the variable as 'static'?
Improper use of 'dispatch_once'
Optimistic
MallocChecker :
Allocated
AllocatedOfSizeZero
Released
Relinquished
Escaped
MallocChecker
Memory leak
Potential leak of memory pointed to by 
Potential memory leak
Memory is allocated
Memory is released
Inner buffer of '
deallocated by call to destructor
reallocated by call to '
Memory ownership is transferred
Reallocation failed
Attempt to reallocate memory
intrusive
Reallocation of 
 parameter failed
funopen
setbuffer
setlinebuf
CGBitmapContextCreate
CGBitmapContextCreateWithData
CVPixelBufferCreateWithBytes
CVPixelBufferCreateWithPlanarBytes
OSAtomicEnqueue
postEvent
QCoreApplication::postEvent
connectImpl
QObject::connectImpl
kmalloc
if_nameindex
if_freenameindex
_strdup
_wcsdup
g_malloc
g_malloc0
g_realloc
g_try_malloc
g_try_malloc0
g_try_realloc
g_free
g_memdup
g_malloc_n
g_malloc0_n
g_realloc_n
g_try_malloc_n
g_try_malloc0_n
g_try_realloc_n
Use-after-free
Inner pointer of container used after re/deallocation
Use of memory after it is freed
Double delete
Attempt to delete released memory
Bad free
deallocator
, which is not memory allocated by 
not memory allocated by 
the address of the local variable '
the address of a local stack variable
the address of the parameter '
the address of a parameter
the address of the static variable '
the address of the global variable '
the address of a global variable
an integer (
a constant address (
the address of the label '
malloc()
'new'
'new[]'
'if_nameindex()'
container-specific allocator
Free alloca()
Memory allocated by alloca() should not be deallocated
Double free
Attempt to free released memory
Attempt to free non-owned memory
Bad deallocator
 cannot
Cannot
 take ownership of memory
 allocated by 
Memory
 should be deallocated by 
, not 
free()
'delete'
'delete[]'
'if_freenameindex()'
container-specific deallocator
Offset free
 is offset by 
 from the start of 
memory allocated by 
allocated memory
 is a function pointer
Use of zero allocated
Use of zero-allocated memory
malloc() size overflow
the computation of the size of the memory allocation may overflow
Result of 
 is converted to a pointer of type '
', which is incompatible with 
sizeof operand type '
Allocator sizeof operand mismatch
MmapProtExec
MmapProtRead
mmap
mprotect
W^X check fails, Write Exec prot flags set
Both PROT_WRITE and PROT_EXEC flags are set. This can lead to exploitable memory regions, which could be overwritten with malicious code
Use-after-free (MIG calling convention violation)
vm_deallocate
mach_vm_deallocate
mig_deallocate
mach_port_deallocate
device_deallocate
iokit_remove_connect_reference
iokit_remove_reference
iokit_release_port
ipc_port_release
ipc_port_release_sonce
ipc_voucher_attr_control_release
ipc_voucher_release
lock_set_dereference
memory_object_control_deallocate
pset_deallocate
semaphore_dereference
space_deallocate
space_inspect_deallocate
task_deallocate
task_inspect_deallocate
task_name_deallocate
thread_deallocate
thread_inspect_deallocate
upl_deallocate
vm_map_deallocate
IOUserClient
releaseAsyncReference64
releaseNotificationPort
os_ref_retain
MIG callback fails with error after deallocating argument value. This is a use-after-free vulnerability because the caller will try to deallocate it again
Value passed through parameter '
' is deallocated
WarnOn
basic_filebuf
basic_ios
packaged_taskpromise
shared_future
shared_lock
Moved-from objects :
: moved
: moved and reported
Use-after-move
C++ move semantics
Method called on moved-from object
Moved-from object
 is copied
 is moved
Dereference of null smart pointer
 of type '
Smart pointer
 is reset to null when moved from
 is left in a valid but unspecified state after move
shrink
Double nonblocking on request 
Request 
 has no matching wait. 
 has no matching nonblocking call. 
MPI-Checker
UnmatchedWait
MissingWait
Unmatched wait
Double nonblocking
Missing wait
MPI_Send
MPI_Isend
MPI_Ssend
MPI_Issend
MPI_Bsend
MPI_Ibsend
MPI_Rsend
MPI_Irsend
MPI_Recv
MPI_Irecv
MPI_Scatter
MPI_Iscatter
MPI_Gather
MPI_Igather
MPI_Allgather
MPI_Iallgather
MPI_Bcast
MPI_Ibcast
MPI_Reduce
MPI_Ireduce
MPI_Allreduce
MPI_Iallreduce
MPI_Alltoall
MPI_Ialltoall
MPI_Comm_rank
MPI_Comm_size
MPI_Wait
MPI_Waitall
MPI_Barrier
Use -drain instead of -release
API Upgrade (Apple)
Use -drain instead of -release when using NSAutoreleasePool and garbage collection
CFErrorRef
Potential null dereference.  According to coding standards 
in 'Creating and Returning NSError Objects' the parameter
documented in CoreFoundation/CFError.h the parameter
 may be null
NSError** null dereference
Coding conventions (Apple)
CFErrorRef* null dereference
Method accepting NSError** should have a non-void return value to indicate whether or not an error occurred
Bad return type when passing NSError**
Function accepting CFErrorRef* should have a non-void return value to indicate whether or not an error occurred
Bad return type when passing CFErrorRef*
NSAssertionHandler
handleFailureInFunction
lineNumber
description
handleFailureInMethod
Argument with 'nonnull' attribute passed null
Null pointer passed as an argument to a 'nonnull' parameter
Forming reference to null pointer
CFBooleanRef
NoDiagnoseCallsToSystemHeaders
Nullability invariant was violated, warnings suppressed.
contradicted
NullPassedToNonnull
 assigned to a pointer which is expected to have non-null value
NullablePassedToNonnull
Nullable pointer is assigned to a pointer which is expected to have non-null value
Nullability '
' is inferred
 passed to a callee that requires a non-null 
 parameter
Nullable pointer is passed to a callee that requires a non-null 
Nullable pointer is dereferenced
NullReturnedFromNonnull
 returned from a 
 that is expected to return a non-null value
NullableReturnedFromNonnull
Nullable pointer is returned from a 
Dictionary
Array
Nullable pointer is passed to a callee that requires a non-null
c_object
osnumber
cpp_object
objc_bool_type
cpp_bool_type
int_type
check_if_null
comparison
Comparing 
Converting 
a pointer value of type '
' to a 
-boolValue
getValue()
CFNumberGetValue()
a method on '
' to get the scalar value
 integer value
 BOOL value
 bool value
 boolean value
; instead, either compare the pointer to 
; did you mean to 
compare the result of calling 
call 
Suspicious number object conversion
Uninitialized value used as mutex for @synchronized
Nil value used as mutex for @synchronized() (no synchronization will occur)
dispatch_async
parambind
capturedbind
problematicwrite
ismethodbind
Write to
Capture of
 autoreleasing out parameter inside autorelease pool
 autoreleasing out parameter 
inside 
autorelease pool that may exit before 
 returns; consider writing first to a strong local variable declared outside of the block
 Invalid use of '
 The 
second
third
 argument to '
' must be a C array of pointer-sized values, not '
ObjC container sizes :
Index is out of bounds
CFArray API
Missing call to superclass
' instance method in 
 subclass '
' is missing a [super 
] call
addChildViewController
viewDidAppear
viewDidDisappear
viewWillAppear
viewWillDisappear
removeFromParentViewController
didReceiveMemoryWarning
viewDidUnload
viewDidLoad
viewWillUnload
updateViewConstraints
encodeRestorableStateWithCoder
restoreStateWithCoder
resignFirstResponder
UIResponder
NSResponder
NSDocument
Property of mutable type '
' has 'copy' attribute; an immutable object will be stored instead
Objective-C property misuse
  An init method has been called.
  An argument of the current call came from the 'self' variable.
  An argument of the current call came from an init method.
self variable
result of init method
Instance variable used while 'self' is not set to the result of '[(super or self) init...]'
Missing "self = [(super or self) init...]"
Returning 'self' while it is not set to the result of '[(super or self) init...]'
[super dealloc] should not be called more than once
[super dealloc] should not be called multiple times
Use of 'self' after it has been deallocated
[super dealloc] called here
Use of instance variable '
' after 'self' has been deallocated
Instance variable '
' in class '
' is never used by the methods in its @implementation (although it may be used by category methods).
Unused instance variable
OSMetaClassBase
OSObjCast
C-style cast of OSObject. Use OSDynamicCast instead.
OSObject C-Style Cast
AllowedPad
Excessive Padding
Excessive padding in '
 instantiated here: 
 padding bytes, where 
 is optimal). 
Optimal fields order: 
consider reordering the fields or adding explicit padding members.
Dangerous pointer arithmetic
Pointer arithmetic on a pointer to base class is dangerous because derived and base class may have different size.
Pointer arithmetic on non-array variables relies on memory layout, which is dangerous.
Pointer subtraction
Subtraction of two pointers that do not point to the same memory chunk may cause incorrect result.
Mutex states:
: locked
: unlocked
: destroyed
: not tracked, possibly destroyed
: unlocked, possibly destroyed
Mutex lock order:
Double locking
Lock checker
This lock has already been acquired
Use destroyed lock
This lock has already been destroyed
Double unlocking
This lock has already been unlocked
Lock order reversal
This was not the most recently acquired lock. Possible lock order reversal
This lock is still locked
Destroy invalid lock
This lock is still being held
This lock has already been initialized
Init invalid lock
Tracked 
Owned
 (+ 
NotOwned
ReturnedOwned
ReturnedNotOwned
-dealloc (not-owned)
Leaked
Leaked (Bad naming)
Use-After-Release [ERROR]
Release of Not-Owned [ERROR]
Over-autoreleased
Non-owned object returned instead of owned
 [direct ivar access]
 [released after direct ivar access]
 [autorelease -
Autorelease
ReturnsOwnLeak
ReturnNotOwnedForOwned
Object was autoreleased 
 times but the object 
but 
has a +
 retain count
DeadSymbolAutorelease
TrackNSCFStartParam
CheckOSObject
osx.cocoa.RetainCount:
DeallocSent
DynamicCastFail
Use-after-release
Bad release
-dealloc sent to non-exclusively owned object
freeing non-exclusively owned object
Object autoreleased too many times
Method should return an owned object
Leak
Leak of returned object
Reference-counted object is used after it is released
Incorrect decrement of the reference count of an object that is not owned at this point by the caller
-dealloc sent to object that may be referenced elsewhere
'free' called on an object that may be referenced elsewhere
Object with a +0 retain count returned to caller where a +1 (owning) retain count is expected
metaClass
Object is now not exclusively owned
NSArray literal is an object with a +0 retain count
NSDictionary literal is an object with a +0 retain count
NSNumber literal is an object with a +0 retain count
oxed expression produces an object with a +0 retain count
Object loaded from instance variable
Assuming dynamic cast returns null due to type mismatch
Object leaked: 
object allocated and stored into '
allocated object of type '
 is returned from a method 
 is returned from a function 
that is annotated as CF_RETURNS_NOT_RETAINED
that is annotated as NS_RETURNS_NOT_RETAINED
that is annotated as OS_RETURNS_NOT_RETAINED
managed by Automatic Reference Counting
whose name ('
') does not start with 'copy', 'mutableCopy', 'alloc' or 'new'.  This violates the naming convention rules given in the Memory Management Guide for Cocoa
') does not contain 'Copy' or 'Create'.  This violates the naming convention rules given in the Memory Management Guide for Core Foundation
') starts with '
 is not referenced later in this execution path and has a retain count of +
Potential leak of an object
 stored into '
Parameter '
' is marked as consuming, but the function did not consume 
the reference
' starts at +
1, as it is marked as consuming
Call to method '
Call to function '
function call
Operator 'new'
Property
Subscript
 returns 
 writes 
a Core Foundation object of type '
' with a 
an OSObject of type '
an object of type '
an Objective-C object with a 
an instance of 
 with a 
+1 retain count
+0 retain count
 into an out parameter '
 (assuming the call returns zero)
 (assuming the call returns non-zero)
Object released by directly sending the '-dealloc' message
Object autoreleased
Reference count decremented.
Reference count incremented.
 The object now has a +
 retain count.
Strong instance variable relinquished. 
Object released.
Object returned to caller as an owning reference (single retain count transferred to caller)
Object returned to caller with a +0 retain count
Return of pointer value outside of expected range
Returned pointer value points outside the original object (potential buffer overflow)
Garbage return value
Undefined or garbage value returned to caller
Returning null reference
NSRunLoopM
RunLoopRunM
OtherMessageSentM
OtherAutoreleasePoolM
AutoreleasePoolM
Memory leak inside autorelease pool
Temporary objects allocated in the
 autorelease pool 
of last resort 
followed by the launch of 
main run loop 
xpc_main 
may never get released; consider moving them to a separate autorelease pool
Double fclose
Unix Stream API Error
Resource Leak
Closing a previously closed file stream
Opened file is never closed; potential resource leak
dispatch_after
Address of stack-allocated memory is captured
 is captured by an asynchronously-executed block
dispatch_semaphore_t
Address of 
stack memory associated with a compound literal declared on line 
 returned to caller
stack memory allocated by call to alloca() on line 
stack-allocated block declared on line 
stack memory associated with local variable '
stack memory associated with temporary object of type '
 is captured by a returned block
Return of address to stack-allocated memory
Stack address stored into global variable
Stack address was saved into a global variable. This is dangerous because the address will become invalid after returning from the function
 is still referred to by the 
' upon returning to the caller.  This will be a dangling reference
Try to close a file Descriptor already closed. Cause undefined behaviour.
NULL stream pointer
Stream pointer might be NULL.
Illegal whence argument
The whence argument to fseek() should be SEEK_SET, SEEK_END, or SEEK_CUR.
Opened File never closed. Potential Resource leak.
tainted
Tainted data
General
Value being compared against zero has already been used for division
Division with compared value made here
--BEGIN FUNCTION--
--END FUNCTION--
Returning void
Returning 
Branch condition evaluates to a garbage value
uninitialized variable captured by block
' is uninitialized when captured by block
Result of operation is garbage or undefined
The 
 operand of '
' is a garbage value
 due to array index out of bounds
The result of the 
 shift is undefined because the right operand is negative
 shift is undefined due to shifting by 
a value that is
', which is
 greater or equal to the width of type '
The result of the left shift is undefined because the left operand is negative
The result of the left shift is undefined due to shifting '
' by '
', which is unrepresentable in the unsigned version of 
the return type '
The result of the '
' expression is undefined
Array subscript is undefined
Assigned value is garbage or undefined
The expression is an uninitialized value. The computed value will also be garbage
The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage
Value assigned to field '
' in implicit constructor is garbage or undefined
/*captured variable*/
NotesAsWarnings
CheckPointeeInitialization
IgnoreRecordsWithField
uninitialized field 
Uninitialized fields
 uninitialized field
 at the end of the constructor call
uninitialized pointee 
uninitialized pointer 
object references itself 
' is not an integer
' with more than 
 arguments
' requires a 
 argument when the 'O_CREAT' flag is set
Improper use of 'open'
Call to 'pthread_once' uses
 for the "control" value.  Using such transient memory for the control value is potentially dangerous.
Improper use of 'pthread_once'
Undefined allocation of 0 bytes (CERT MEM04-C; CWE-131)
' has an allocation size of 0 bytes
Unreachable code
Dead code
This statement is never executed
This function call
Dangerous construct in a vforked process
 is prohibited after a successful vfork
This assignment
Return
call _exit() instead
Dangerous variable-length array (VLA) declaration
Declared variable-length array (VLA) 
uses a garbage value as its size
has zero size
has tainted size
has negative size
vfwprintf
vfwscanf
vwprintf
vwscanf
vswprintf
vswscanf
' is called with an uninitialized va_list argument
 is copied onto itself
Initialized va_list
 is overwritten by an uninitialized one
Uninitialized va_list is copied
 is initialized again
Leaked va_list
Ended va_list
va_end() is called on an uninitialized va_list
Uninitialized va_list
va_arg() is called on an uninitialized va_list
 is leaked
PureOnly
Call to pure virtual function during construction
Call to virtual function during construction
Call to pure virtual function during destruction
Call to virtual function during destruction
Call to virtual function during construction or destruction
C++ Object Lifecycle
This constructor of an object of type '
' has not returned when the virtual method was called
This destructor of an object of type '
Looping back to the head of the loop
'?' condition is 
Loop condition is true. 
Loop condition is false.  Exiting loop
Loop condition is false. 
Loop condition is true.  Entering loop body
Taking false branch
Taking true branch
Control jumps to line 
No cases match in the switch statement. Control jumps to line 
Control jumps to the 'default' case at line 
Control jumps to 'case 
:'  at line 
'Default' branch taken. 
Execution continues on line 
Execution jumps to the end of the 
anonymous block
Left side of '
' is 
initialized to 
Initializing to 
captured by block as 
Captured by block as 
TrackConstraintBRVisitor
Assuming pointer value is 
non-null
Suppress IDC
Suppress Macro IDC
' not called
No method is called
 because the receiver is nil
ConditionBRVisitor
Assuming 
equal to 
not equal to 
not null
not nil
non-zero
Assuming '
non-nil
not equal to 0
Assuming the condition is true
Assuming the condition is false
Taint originated here
Infeasible constraints
Returning nil
Returning null pointer
Returning zero
Returning the value 
Returning pointer
Returning value
 (reference to 
 (loaded from '
a null pointer value
initialized
Initializing
 to a garbage value
declared
Declaring
 without an initial value
Initialized
 here
Passing 
nil object reference
null pointer value
uninitialized value
the value 
 via 
nil object reference stored
Null pointer value stored
Storing null pointer value
Uninitialized value stored
Storing uninitialized value
The value 
 is assigned
Assigning 
Value assigned
Assigning value
Ivar
Returning without writing to '
Call to 
Unknown call (type 
Insert
InsertValue
AddValue
SetValue
WithData
AppendValue
SetAttribute
Core Foundation/Objective-C
Memory (Core Foundation/Objective-C/OSObject)
Memory error
Unix API
Dynamic types of regions:
 (or its subclass)
Invalid type info
Expressions by stack frame:
Objects under construction:
Clean Node
Error evaluating statement
Error evaluating end of the loop
Error evaluating initializer
Block count exceeded
Error evaluating branch
Location
Eagerly Assume True
Eagerly Assume False
Warning: viewing graph requires assertions
Warning: dumping graph requires assertions
While analyzing stack: 
ExprEngine
construct into local variable
construct into new-allocator
construct into return address
materialize temporary
destroy temporary
elide destructor
elide constructor
construct into argument
construct into member variable
Prepare for object construction
SkipInvalidDestructor
Error evaluating destructor
Error evaluating New Allocator Call
Bind Return Value
Finish argument construction
iterator_category
warning: could not create directory '
warning: no diagnostics generated for main file.
report-%%%%%%.html
warning: could not make '
' absolute: 
warning: could not create file in '
report-
.html
warning: could not create file '
<hr class=divider>
<div id=File
<div class=FileNav><a href="#File
">&#x2190;</a></div>
<h4 class=FileName>
</h4>
">&#x2192;</a></div>
</div>
Event
Control
Note
<tr><td class="num"></td><td class="line"><div id="
EndPath
Path
" class="msg
 msg
" style="margin-left:
; max-width:
; max-width:100em
<table class="msgT"><tr><td valign="top">
<div class="PathIndex
 PathIndex
</td><td><div class="PathNav"><a href="#Path
" title="Previous event (
)">&#x2190;</a></div></td>
</td><td>
Within the expansion of the macro '
</td>
<td><div class="PathNav"><a href="#
" title="Next event (
)">&#x2192;</a></div></td>
</tr></table>
</div></td></tr>
<span class="mrange">
</span>
<div class="msg msgEvent" style="width:94%; margin-left:5px"><table class="msgT"><tr><td valign="top"><div class="PathIndex PathIndexEvent">
</div></td><td valign="top">
</td></tr></table></div>
<!-- REPORTHEADER -->
<h3>Bug Summary</h3>
<table class="simpletable">
<tr><td class="rowname">File:</td><td>
</td></tr>
<tr><td class="rowname">Warning:</td><td><a href="#EndPath">line 
, column 
</a><br />
</td></tr>
<tr><td class="rowname">Note:</td><td>
<a href="#Note
">line 
</td></tr>
<tr><td></td><td>
</table>
<!-- REPORTSUMMARYEXTRA -->
<h3>Annotated Source Code</h3>
<p>Press <a href="#" onclick="toggleHelp(); return false;">'?'</a>
   to see keyboard shortcuts</p>
<input type="checkbox" class="spoilerhider" id="showinvocation" />
<label for="showinvocation" >Show analyzer invocation</label>
<div class="spoiler">clang -cc1 
</div>
<div id='tooltiphint' hidden="true">
  <p>Keyboard shortcuts: </p>
  <ul>
    <li>Use 'j/k' keys for keyboard navigation</li>
    <li>Use 'Shift+S' to show/hide relevant lines</li>
    <li>Use '?' to toggle this window</li>
  </ul>
  <a href="#" onclick="toggleHelp(); return false;">Close</a>
</div>
<!-- BUGDESC 
 -->
<!-- BUGTYPE 
<!-- BUGCATEGORY 
<!-- BUGFILE 
<!-- FILENAME 
<!-- FUNCTIONNAME 
<!-- ISSUEHASHCONTENTOFLINEINCONTEXT 
<!-- BUGLINE 
<!-- BUGCOLUMN 
<!-- BUGPATHLENGTH 
<!-- BUGMETAEND -->
<script type='text/javascript'>
var toggleHelp = function() {
    var hint = document.querySelector("#tooltiphint");
    var attributeName = "hidden";
    if (hint.hasAttribute(attributeName)) {
      hint.removeAttribute(attributeName);
    } else {
      hint.setAttribute("hidden", "true");
    }
window.addEventListener("keydown", function (event) {
  if (event.defaultPrevented) {
    return;
  if (event.key == "?") {
    toggleHelp();
  } else {
    return;
  event.preventDefault();
</script>
<script type='text/javascript'>
var digitMatcher = new RegExp("[0-9]+");
document.addEventListener("DOMContentLoaded", function() {
    document.querySelectorAll(".PathNav > a").forEach(
        function(currentValue, currentIndex) {
            var hrefValue = currentValue.getAttribute("href");
            currentValue.onclick = function() {
                scrollTo(document.querySelector(hrefValue));
                return false;
            };
        });
var findNum = function() {
    var s = document.querySelector(".selected");
    if (!s || s.id == "EndPath") {
        return 0;
    }
    var out = parseInt(digitMatcher.exec(s.id)[0]);
    return out;
var scrollTo = function(el) {
    document.querySelectorAll(".selected").forEach(function(s) {
        s.classList.remove("selected");
    });
    el.classList.add("selected");
    window.scrollBy(0, el.getBoundingClientRect().top -
        (window.innerHeight / 2));
var move = function(num, up, numItems) {
  if (num == 1 && up || num == numItems - 1 && !up) {
    return 0;
  } else if (num == 0 && up) {
    return numItems - 1;
  } else if (num == 0 && !up) {
    return 1 % numItems;
  return up ? num - 1 : num + 1;
var numToId = function(num) {
  if (num == 0) {
    return document.getElementById("EndPath")
  return document.getElementById("Path" + num);
var navigateTo = function(up) {
  var numItems = document.querySelectorAll(
      ".line > .msgEvent, .line > .msgControl").length;
  var currentSelected = findNum();
  var newSelected = move(currentSelected, up, numItems);
  var newEl = numToId(newSelected, numItems);
  // Scroll element into center.
  scrollTo(newEl);
window.addEventListener("keydown", function (event) {
  if (event.defaultPrevented) {
    return;
  if (event.key == "j") {
    navigateTo(/*up=*/false);
  } else if (event.key == "k") {
    navigateTo(/*up=*/true);
  } else {
    return;
  event.preventDefault();
}, true);
</script>
<script type='text/javascript'>
var filterCounterexample = function (hide) {
  var tables = document.getElementsByClassName("code");
  for (var t=0; t<tables.length; t++) {
    var table = tables[t];
    var file_id = table.getAttribute("data-fileid");
    var lines_in_fid = relevant_lines[file_id];
    if (!lines_in_fid) {
      lines_in_fid = {};
    }
    var lines = table.getElementsByClassName("codeline");
    for (var i=0; i<lines.length; i++) {
        var el = lines[i];
        var lineNo = el.getAttribute("data-linenumber");
        if (!lines_in_fid[lineNo]) {
          if (hide) {
            el.setAttribute("hidden", "");
          } else {
            el.removeAttribute("hidden");
          }
        }
    }
window.addEventListener("keydown", function (event) {
  if (event.defaultPrevented) {
    return;
  if (event.key == "S") {
    var checked = document.getElementsByName("showCounterexample")[0].checked;
    filterCounterexample(!checked);
    document.getElementsByName("showCounterexample")[0].checked = !checked;
  } else {
    return;
  event.preventDefault();
}, true);
document.addEventListener("DOMContentLoaded", function() {
    document.querySelector('input[name="showCounterexample"]').onchange=
        function (event) {
      filterCounterexample(this.checked);
    };
</script>
<form>
    <input type="checkbox" name="showCounterexample" id="showCounterexample" />
    <label for="showCounterexample">
       Show only relevant lines
    </label>
</form>
var relevant_lines = {
": {
": 1
HTMLDiagnostics
initVarName
boundNum
initNum
conditionOperator
forLoop
matchref
alloca{S
code{
block_code{
block_data{
temp_object{
Base{
Derived{
Element{
Ivar{
Heap
SymRegion{
VarRegion{D
CodeSpaceRegion
StaticGlobalsMemSpace{
GlobalInternalSpaceRegion
GlobalSystemSpaceRegion
GlobalImmutableSpaceRegion
HeapSpaceRegion
UnknownSpaceRegion
StackArgumentsSpaceRegion
StackLocalsSpaceRegion
field 
errno
 (within a call to '
warning: Path diagnostic report is not generated. Current 
output format does not support diagnostics that cross file 
boundaries. Refer to --analyzer-output for valid output 
formats
Calling 
Entered call
Returning from 
Returning to caller
CALL
--------------
EVENT
--------------
 ---- at ----
CONTROL
--------------
 ---- to ----
MACRO
--------------
NOTE
--------------
<INVALID>
<range>
<NULL STMT>
<block>
<unknown decl>
defaulted 
default 
copy 
move 
warning: could not create file: 
 <key>clang_version</key>
 <key>diagnostics</key>
 <array>
   <key>check_name</key>
   <!-- This hash is experimental and going to change! -->
   <key>issue_hash_content_of_line_in_context</key>
C++ class
C++ method
Objective-C method
  <key>issue_context_kind</key>
  <key>issue_context</key>
  <key>issue_hash_function_offset</key><string>
</string>
  <key>
_files</key>
   <string>
 <key>files</key>
 <array>
 <key>statistics</key>
   <key>notes</key>
   <array>
   <key>path</key>
   <key>macro_expansions</key>
   <array>
<key>kind</key><string>control</string>
<key>edges</key>
<key>start</key>
<key>end</key>
<key>alternate</key>
<key>kind</key><string>event</string>
<key>key_event</key><true/>
<key>location</key>
<key>depth</key>
<key>ranges</key>
<key>extended_message</key>
<key>message</key>
<key>name</key>
<key>expansion</key>
<key>ExecutedLines</key>
<key>
</key>
PlistDiagnostics
Tainted symbols:
Ranges are empty.
Ranges of symbol values:
DeclBind
Store (direct and default bindings), 
direct
$schema
http://json.schemastore.org/sarif-2.0.0-csd.2.beta.2018-11-28
2.0.0-csd.2.beta.2018-11-28
runs
{0:2}
tool
resources
results
files
rules
fullDescription
helpUri
codeFlows
locations
ruleIndex
ruleId
threadFlows
location
importance
important
essential
unimportant
physicalLocation
fileLocation
fileIndex
-._~:@!$&'()*+,;=
roles
resultFile
mimeType
text/plain
startLine
endLine
startColumn
endColumn
fullName
clang static analyzer
en-US
SarifDiagnostics
Undefined
 [as 
 bit integer]
compoundVal{
lazyCompoundVal{
pointerToMember{
 (Loc)
conj_$
, LC
, no stmt
derived_$
extent_$
meta_$
reg_$
Clang was not compiled with Z3 support, rebuild with -DCLANG_ANALYZER_ENABLE_Z3_SOLVER=ON
CTU loaded AST file: 
clang.index
#include 
Add '#include %0' to provide the missing declaration [clang-include-fixer]
Contexts
FilePath
Seen
ContextType
ContextName
TypedefName
Macro
STATISTICS:
attribute
macosx_app_extension
introduced
obsoleted
strict
replacement
defined_in
generated_declaration
attributes list
using declaration
alias declaration
decltype
final
__final
sealed
override
access declaration
throw
block literal parsing
lambda expression parsing
typeid
@catch clause
initializer
'initializer'
'#pragma omp declare target'
schedule modifier
defaultmap modifier
reduction identifier
dependency type
STDC
OPENCL
".CRT$XCC"
".CRT$XCL"
".CRT$XCU"
unless(
apply_to
clang loop 
'is_member'
'functionType'
'unless(is_union)'
'is_thread_local', 'is_global', 'is_parameter', 'unless(is_parameter)'
'is_instance'
any(
redefine_extname
clang section
pragma clang section
OPENCL EXTENSION
pragma comment
pragma detect_mismatch
pointers_to_members
full_generality
runtime_checks
intrinsic
__INTRIN_H
'on' or 'off'
clang optimize
clang loop
clang fp
clang attribute
do/while
'case'
'default'
'do'
InternalPragmaState
<MS inline asm>
asm operand
fpsw
mxcsr
pixel
top-level asm block
'asm'
<#code#>
break;
(id)
converting to boxing syntax requires casting %0 to %1
NSUTF8StringEncoding
NSASCIIStringEncoding
Calling anonymous code
Entering scope
Invoking block
 defined at 
line 
call_once
libcxx03 std::call_once implementation, skipping.
unknown std::call_once implementation, skipping.
__state_
_M_once
 (ENTRY)]
 (EXIT)]
 (INDIRECT GOTO DISPATCH)]
 (NORETURN)]
   T: 
   Preds 
     
(Unreachable)
   Succs 
 NULL
({ ... ; 
... , 
 (OperatorCall)
 (CXXRecordTypedCall
 (BindTemporary)
 (CXXConstructExpr
 (Implicit destructor)
 (Lifetime ends)
 (LoopExit)
CFGScopeBegin(
CFGScopeEnd(
CFGNewAllocator(
 (Base object destructor)
 (Member object destructor)
() (Temporary object destructor)
 (Base initializer)
 (Delegating initializer)
 (Member initializer)
(Temp Dtor) 
try ...
static init 
do ... while 
 ? ... : ...
 || ...
 && ...
__builtin_choose_expr( 
__try ...
switch 
while 
Allocation failed
 --- Call graph Dump --- 
  Function: 
< root >
 calls: 
CallGraph
DADisk
DADissenter
DASessionRef
Allocation failed
::std::forward
parm
 (live variables at block exit) ]
 (live statements at block exit) ]
raise
CMBufferQueueDequeueIfDataReadyAndRetain
CFMutableDictionaryRef
rc_ownership_trusted_implementation
currentHandler
awakeAfterUsingCoder
NSPanel
QCRenderer
createSnapshotImageOfType
QCView
CIContext
createCGImage
fromRect
colorSpace
createCGLayerWithSize
(.*)Get([A-Z_]|$)(.*)
OSIterator
MakeCollectable
rc_ownership_returns_not_retained
#null
#undefined
#ptr
#vref
#lit
 := 
cast[
extendNum
truncNum
toFloat
toInt
objToPtr
CFG {
 BB_
let 
let _x
phi(
BB_null
branch (
) then 
 else 
clang-format on
clang-format off
@param
@return
@returns
@throws
@type
@template
@see
@deprecated
@define
@exports
@mods
/// 
//! 
///<
///< 
//!<
//!< 
^[1-9][0-9]?\.
^[1-9][0-9]?\. 
####
Failed to update the prefix delimiter of a raw string: 
Failed to update the suffix delimiter of a raw string: 
Failed to reformat raw string: 
_T("
^ IWYU pragma:
(Test)?$
([-_](test|unittest))?$
google
(taze:|^/[ 
]*<|@see)
chromium
mozilla
webkit
// clang-format on
Insertions other than header #include insertion are not supported! 
Failed to add header deletion replacement for 
Never
/* clang-format on */
CF_ENUM
CF_OPTIONS
NS_OPTIONS
async
infer
extends
implements
instanceof
option
repeated
signals
Q_SIGNALS
slots
Q_SLOTS
Error while updating namespace end comment: 
Error while adding namespace end comment: 
^/[/*] *(end (of )?)? *(anonymous|unnamed)? *namespace( +([a-zA-Z0-9:_]+))?\.? *(\*/)?$
Error while sorting using declarations: 
<{0}>
"{0}"
#include {0}
Unexpected conflicts in #include deletions: 
New replacement: 
Existing replacement: 
The new replacement's file path is different from the file path of existing replacements
The new insertion has the same insert location as an existing replacement.
&nbsp;
<hr>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        
<table class="code" data-fileid="
</table>
<!doctype html>
<html>
<head>
<title>
</title>
<style type="text/css">
body { color:#000000; background-color:#ffffff }
body { font-family:Helvetica, sans-serif; font-size:10pt }
h1 { font-size:14pt }
.FileName { margin-top: 5px; margin-bottom: 5px; display: inline; }
.FileNav { margin-left: 5px; margin-right: 5px; display: inline; }
.FileNav a { text-decoration:none; font-size: larger; }
.divider { margin-top: 30px; margin-bottom: 30px; height: 15px; }
.divider { background-color: gray; }
.code { border-collapse:collapse; width:100%; }
.code { font-family: "Monospace", monospace; font-size:10pt }
.code { line-height: 1.2em }
.comment { color: green; font-style: oblique }
.keyword { color: blue }
.string_literal { color: red }
.directive { color: darkmagenta }
/* Macro expansions. */
.expansion { display: none; }
.macro:hover .expansion {
  display: block;
  border: 2px solid #FF0000;
  padding: 2px;
  background-color:#FFF0F0;
  font-weight: normal;
  -webkit-border-radius:5px;
  -webkit-box-shadow:1px 1px 7px #000;
  border-radius:5px;
  box-shadow:1px 1px 7px #000;
  position: absolute;
  top: -1em;
  left:10em;
  z-index: 1
#tooltiphint {
  position: fixed;
  width: 50em;
  margin-left: -25em;
  left: 50%;
  padding: 10px;
  border: 1px solid #b0b0b0;
  border-radius: 2px;
  box-shadow: 1px 1px 7px black;
  background-color: #c0c0c0;
  z-index: 2;
.macro {
  color: darkmagenta;
  background-color:LemonChiffon;
  /* Macros are position: relative to provide base for expansions. */
  position: relative;
.num { width:2.5em; padding-right:2ex; background-color:#eeeeee }
.num { text-align:right; font-size:8pt }
.num { color:#444444 }
.line { padding-left: 1ex; border-left: 3px solid #ccc }
.line { white-space: pre }
.msg { -webkit-box-shadow:1px 1px 7px #000 }
.msg { box-shadow:1px 1px 7px #000 }
.msg { -webkit-border-radius:5px }
.msg { border-radius:5px }
.msg { font-family:Helvetica, sans-serif; font-size:8pt }
.msg { float:left }
.msg { padding:0.25em 1ex 0.25em 1ex }
.msg { margin-top:10px; margin-bottom:10px }
.msg { font-weight:bold }
.msg { max-width:60em; word-wrap: break-word; white-space: pre-wrap }
.msgT { padding:0x; spacing:0x }
.msgEvent { background-color:#fff8b4; color:#000000 }
.msgControl { background-color:#bbbbbb; color:#000000 }
.msgNote { background-color:#ddeeff; color:#000000 }
.mrange { background-color:#dfddf3 }
.mrange { border-bottom:1px solid #6F9DBE }
.PathIndex { font-weight: bold; padding:0px 5px; margin-right:5px; }
.PathIndex { -webkit-border-radius:8px }
.PathIndex { border-radius:8px }
.PathIndexEvent { background-color:#bfba87 }
.PathIndexControl { background-color:#8c8c8c }
.PathNav a { text-decoration:none; font-size: larger }
.CodeInsertionHint { font-weight: bold; background-color: #10dd10 }
.CodeRemovalHint { background-color:#de1010 }
.CodeRemovalHint { border-bottom:1px solid #6F9DBE }
.selected{ background-color:orange !important; }
table.simpletable {
  padding: 5px;
  font-size:12pt;
  margin:20px;
  border-collapse: collapse; border-spacing: 0px;
td.rowname {
  text-align: right;
  vertical-align: top;
  font-weight: bold;
  color:#444444;
  padding-right:2ex;
/* Hidden text. */
input.spoilerhider + label {
  cursor: pointer;
  text-decoration: underline;
  display: block;
input.spoilerhider {
 display: none;
input.spoilerhider ~ .spoiler {
  overflow: hidden;
  margin: 10px auto 0;
  height: 0;
  opacity: 0;
input.spoilerhider:checked + label + .spoiler{
  height: auto;
  opacity: 1;
</style>
</head>
<body>
</body></html>
<span class='keyword'>
<span class='comment'>
<span class='string_literal'>
<span class='directive'>
<br>
<span class='expansion'>
</span></span>
<span class='macro'>
<tr class="codeline" data-linenumber="
<td class="num" id="LN
</td><td class="line">
 </td></tr>
names
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
names_start
names_end
names_abbrev_start
names_abbrev_end
names_entries
Header: unit length
Header: version
Header: padding
Header: compilation unit count
Header: local type unit count
Header: foreign type unit count
Header: bucket count
Header: name count
Header: abbreviation table size
Header: augmentation string size
Header: augmentation string
Compilation unit 
String in Bucket 
Abbrev code
End of abbrev
End of abbrev list
End of list: 
Abbreviation code
Length of contribution
DWARF version number
Address size
Segment selector size
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
print-schedule
Print 'sched: [latency:throughput]' in .s output
remarks-section
Emit a section containing remark diagnostics metadata
Start of file scope inline assembly
End of file scope inline assembly
emit
Debug Info Emission
linetables
CodeView Line Tables
dwarf
DWARF Emission
write_exception
DWARF Exception Writer
Control Flow Guard
Control Flow Guard Tables
$tlv$init
_tlv_bootstrap
-- Begin function 
Address taken block that was later removed
' is a protected alias
' label emitted multiple times to assembly file
implicit-def: 
asm-printer
InstructionCount
 instructions in function
avoids zero-length function
Address of block that was removed by CodeGen
func_end
-- End function
.note.GNU-split-stack
.note.GNU-no-split-stack
exception
func_begin
unknown special variable
Unsupported usage of llvm.ptrauth global '
Unsupported expression in static initializer: 
_set_
Block address taken
 %bb.
no GCMetadataPrinter registered for GC: 
xray_instr_map
xray_fn_idx
xray_sleds_start
xray_sleds_end
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
(long double) 
DEBUG_LABEL: 
kill:
REMARKS
0x%llx
Printing <null> Type
Invalid size-changing cast of llvm.ptrauth global
Mismatched address discriminator in llvm.ptrauth global '
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
 Encoding = 
Encoding = 
Abbrev [
] 0x
End Of Children Mark
Abbreviation Code
absptr
omit
uleb128
sleb128
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
Reserved registers on the clobber list may not be preserved across the asm statement, and clobbering them may lead to undefined behaviour.
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
debug_loc
EOM(1)
EOM(2)
Allocation failed
EOM(3)
cu_macro_begin
cu_begin
Allocation failed
disable-debug-info-print
Disable debug info printing
use-dwarf-ranges-base-address-specifier
Use base address specifiers in debug_ranges
generate-arange-section
Generate dwarf aranges
generate-type-units
Generate DWARF4 type units.
split-dwarf-cross-cu-references
Enable cross-cu references in DWO files
use-unknown-locations
Make an absence of debug location information explicit.
At top of block or after label
In all cases
accel-tables
Output dwarf accelerator tables.
Disabled.
Dwarf
DWARF
dwarf-inlined-strings
Use inlined strings rather than string section.
no-dwarf-ranges-section
Disable emission .debug_ranges section.
dwarf-sections-as-references
Use sections+offset as references rather than labels.
dwarf-linkage-names
Which DWARF linkage-name attributes to emit.
Abstract
Abstract subprograms
writer
DWARF Debug Writer
str_offsets_base
rnglists_table_base
loclists_table_base
rnglists_dwo_table_base
addr_table_base
namespac
Length of Public 
 Info
_begin
_end
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Attributes: 
External Name
End Mark
Loc expr size
DW_LLE_offset_pair
  starting offset
  ending offset
DW_LLE_startx_length
  start idx
  length
DW_LLE_end_of_list
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
End Of Macro List Mark
debug_loclist_table_start
debug_loclist_table_end
Offset entry count
DW_RLE_base_addressx
  base address index
  base address
DW_RLE_offset_pair
DW_RLE_startx_length
  start index
DW_RLE_end_of_list
debug_rnglist_table_start
debug_rnglist_table_end
.debug_types
super-register
no DWARF register encoding
sub-register
debug_ranges
string offset=
(anonymous namespace)
__ARRAY_SIZE_TYPE__
Length of Unit
debug_info_dwo_
debug_info_
start
DWARF Unit Type
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
Allocation failed
@LPStart
@TType
ttbaseref
ttbase
cst_begin
cst_end
Call site
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
$cppxdata$
lsda_begin
lsda_end
Number of call sites
LabelStart
LabelEnd
FinallyFunclet
FilterFunction
CatchAll
ExceptionHandler
$stateUnwindMap$
$tryMap$
$ip2state$
MagicNumber
MaxState
UnwindMap
NumTryBlocks
TryBlockMap
IPMapEntries
IPToStateXData
UnwindHelp
ESTypeList
EHFlags
ToState
Action
$handlerMap$
TryLow
TryHigh
CatchHigh
NumCatches
HandlerArray
Adjectives
CatchObjOffset
Handler
ParentFrameOffset
GSCookieOffset
GSCookieXOROffset
EHCookieOffset
EHCookieXOROffset
@?0?
Debug section magic
File index to string table offset subsection
String table
Magic
Section Version
Hash Algorithm
{0:X+} [{1}]
Flags and language
CPUType
Frontend version
Backend version
Null-terminated compiler version string
LF_BUILDINFO index
Inlinee lines subsection
Inlinee lines signature
Inlined function 
 starts at 
Type index of inlined function
Offset into filechecksum table
Starting line number
PtrParent
PtrEnd
Inlinee type index
Symbol subsection for 
PtrNext
Thunk section relative address
Thunk section index
Ordinal
Function name
Offset after prologue
Offset before epilogue
Function type index
Function section relative address
Function section index
Flags
FrameSize
Padding
Offset of padding
Bytes of callee saved registers
Exception handler offset
Exception handler section
Flags (defines frame register)
cannot debug circular reference to unnamed type
TypeIndex
Lexical block name
Subsection size
Record length
Record kind: 
Symbol subsection for globals
DataOffset
Segment
target architecture doesn't map to a CodeView CPUType
<unnamed-tag>
__cpp_exception
GCC_except_table_end
gisel-irtranslator
GISelFailure
unable to translate constant: 
unable to translate memop: 
Opcode
unable to translate in big endian mode
unable to lower arguments due to swifterror/swiftself: 
Prototype
unable to lower arguments: 
unable to translate instruction: 
IRTranslator LLVM IR -> MI
irtranslator
 (in function: 
IRTranslator
gisel-select
cannot select
VReg has no regclass after selection
VReg's low-level type and register class have different sizes
inserting blocks is not supported yet
Select target instructions out of generic instructions
instruction-select
InstructionSelect
gisel-legalize
unable to legalize instruction
Legalize the Machine IR a function's Machine IR
legalizer
Legalizer
disable-gisel-legality-check
Don't verify that MIR is fully legal between GlobalISel passes
Move/duplicate certain instructions close to their use
localizer
Localizer
Mode of the RegBankSelect pass
regbankselect-fast
Run the Fast mode (default mapping)
regbankselect-greedy
Use the Greedy mode (best local mapping)
gisel-regbankselect
unable to map instruction
Assign register bank of generic virtual registers
regbankselect
RegBankSelect
GISelFailure: 
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
fast-isel-sink-local-values
Sink local values in FastISel
trap-func-name
Attempt at an invalid promotion-related conversion
Unable to expand SMUL_FIX using SMUL_LOHI.
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
 PromotedFloats
Do not know how to scalarize the result of this operator!
Do not know how to scalarize this operator's operand!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
list-burr
Bottom-up register reduction list scheduling
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
vliw-td
VLIW scheduler
limit-float-precision
Generate low-precision inline sequences for some float libcalls
switch-peel-threshold
Set the case probability threshold for peeling the case from a switch statement. A value greater than 100 will void this optimization
visitCatchSwitch not yet implemented!
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
Wrong result type for @llvm.get.dynamic.area.offset intrinsic!
annotation
llvm.icall.branch.funnel operand must be a GlobalValue
all llvm.icall.branch.funnel operands must refer to the same GlobalValue
This target doesn't support calls with ptrauth operand bundles.
Cannot lower direct authenticated call to unauthenticated target
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
non-trivial scalar-to-vector conversion
, possible invalid constraint for vector type
scalar-to-vector conversion failed
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
enable-memcpy-dag-opt
Gang up loads and stores generated by inlining of memcpy
ldstmemcpy-glue-max
Number limit for gluing ld/st of memcpy.
Unsupported element size
cannot lower memory intrinsic in address space 
Allocation failed
dag-dump-verbose
Display more information when dumping selection DAG nodes.
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
 vector-reduction
Mem:
<APFloat(
 [TF=
, anyext
, sext
, zext
, trunc to 
 [ORD=
 [ID=
 # D:
 [NoOfDbgValues=
 [NoOfDbgValues>0]
 DbgVal(Order=
(Invalidated)
(Emitted)
(SDNODE=
(SDNODE)
(CONST)
(FRAMEIX=
(VREG=
(Indirect)
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction: 0 disable the abort, 1 will abort but for args, calls and terminators, 2 will also abort for argument lowering, and 3 will never fallback to SelectionDAG.
fast-isel-report-on-fallback
Emit a diagnostic when "fast" instruction selection falls back to SelectionDAG.
use-mbpi
use Machine Branch Probability Info
Instruction schedulers available (before register allocation):
Best scheduler for the target
sdag
Instruction Selection and Scheduling
combine1
DAG Combining 1
legalize_types
Type Legalization
combine_lt
DAG Combining after legalize types
legalize_vec
Vector Legalization
legalize_types2
Type Legalization 2
combine_lv
DAG Combining after legalize vectors
legalize
DAG Legalization
combine2
DAG Combining 2
isel
Instruction Selection
sched
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
sdagisel
FastISelFailure
FastISel didn't lower all arguments: 
FastISel missed call
FastISel missed terminator
FastISel missed
Could not match memory address.  Inline asm failure!
COVERED: 
INCLUDED: 
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
CROSS RC COPY
 label ="
Unsupported library call operation!
argument to '__builtin_return_address' must be a constant integer
__emutls_get_address
Unable to expand signed fixed point multiplication.
Named registers not implemented for this target
bitcode-mdindex-threshold
Number of metadatas above which we emit an index to enable lazy-loading
write-relbf-to-summary
Write relative block frequency to function summary 
APPLE_1_
Unexpected anonymous function when writing summary
Write Bitcode
write-bitcode
Bitcode Writer
static-func-full-module-prefix
Use full module build paths in the profile counter names for static functions.
static-func-strip-dirname-prefix
Strip specified level of directory name from source path in the profile counter name for static functions.
,regular,live_support
__LLVM_COV,
.lprfd
.lprfc
.lprfn
.lprfv
.lprfnd
.lcovmap
__llvm_prf_data
__llvm_prf_cnts
__llvm_prf_names
__llvm_prf_vals
__llvm_prf_vnds
__llvm_covmap
Profile uses zlib compression but the profile reader was built without zlib support
PGOFuncName
llvm.instrprof
llvm.sampleprof
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
Profile data remapping cannot be applied to profile data in compact format (original mangled names are not available).
Unexpected end of memory buffer: 
adcg
Unexpected file type: 
Unexpected version: 
Sections with relocations should have an address of 0
COFF-i386
COFF-x86-64
COFF-ARM
COFF-ARM64
COFF-<unknown arch>
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_ARM64_ABSOLUTE
IMAGE_REL_ARM64_ADDR32
IMAGE_REL_ARM64_ADDR32NB
IMAGE_REL_ARM64_BRANCH26
IMAGE_REL_ARM64_PAGEBASE_REL21
IMAGE_REL_ARM64_REL21
IMAGE_REL_ARM64_PAGEOFFSET_12A
IMAGE_REL_ARM64_PAGEOFFSET_12L
IMAGE_REL_ARM64_SECREL
IMAGE_REL_ARM64_SECREL_LOW12A
IMAGE_REL_ARM64_SECREL_HIGH12A
IMAGE_REL_ARM64_SECREL_LOW12L
IMAGE_REL_ARM64_TOKEN
IMAGE_REL_ARM64_SECTION
IMAGE_REL_ARM64_ADDR64
IMAGE_REL_ARM64_BRANCH19
IMAGE_REL_ARM64_BRANCH14
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
eh_frame
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_X86_64_GOTPCRELX
R_X86_64_REX_GOTPCRELX
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_386_GOT32X
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_MIPS_UNUSED3
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_26
R_MIPS16_GPREL
R_MIPS16_GOT16
R_MIPS16_CALL16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS16_TLS_GD
R_MIPS16_TLS_LDM
R_MIPS16_TLS_DTPREL_HI16
R_MIPS16_TLS_DTPREL_LO16
R_MIPS16_TLS_GOTTPREL
R_MIPS16_TLS_TPREL_HI16
R_MIPS16_TLS_TPREL_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GPREL16
R_MICROMIPS_LITERAL
R_MICROMIPS_GOT16
R_MICROMIPS_PC7_S1
R_MICROMIPS_PC10_S1
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_GOT_HI16
R_MICROMIPS_GOT_LO16
R_MICROMIPS_SUB
R_MICROMIPS_HIGHER
R_MICROMIPS_HIGHEST
R_MICROMIPS_CALL_HI16
R_MICROMIPS_CALL_LO16
R_MICROMIPS_SCN_DISP
R_MICROMIPS_JALR
R_MICROMIPS_HI0_LO16
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_GOTTPREL
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MICROMIPS_GPREL7_S2
R_MICROMIPS_PC23_S2
R_MICROMIPS_PC21_S1
R_MICROMIPS_PC26_S1
R_MICROMIPS_PC18_S3
R_MICROMIPS_PC19_S2
R_MIPS_NUM
R_MIPS_PC32
R_MIPS_EH
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADR_PREL_PG_HI21_NC
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_MOVW_PREL_G0
R_AARCH64_MOVW_PREL_G0_NC
R_AARCH64_MOVW_PREL_G1
R_AARCH64_MOVW_PREL_G1_NC
R_AARCH64_MOVW_PREL_G2
R_AARCH64_MOVW_PREL_G2_NC
R_AARCH64_MOVW_PREL_G3
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_MOVW_GOTOFF_G0
R_AARCH64_MOVW_GOTOFF_G0_NC
R_AARCH64_MOVW_GOTOFF_G1
R_AARCH64_MOVW_GOTOFF_G1_NC
R_AARCH64_MOVW_GOTOFF_G2
R_AARCH64_MOVW_GOTOFF_G2_NC
R_AARCH64_MOVW_GOTOFF_G3
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_GOT_LD_PREL19
R_AARCH64_LD64_GOTOFF_LO15
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_LD64_GOTPAGE_LO15
R_AARCH64_TLSGD_ADR_PREL21
R_AARCH64_TLSGD_ADR_PAGE21
R_AARCH64_TLSGD_ADD_LO12_NC
R_AARCH64_TLSGD_MOVW_G1
R_AARCH64_TLSGD_MOVW_G0_NC
R_AARCH64_TLSLD_ADR_PREL21
R_AARCH64_TLSLD_ADR_PAGE21
R_AARCH64_TLSLD_ADD_LO12_NC
R_AARCH64_TLSLD_MOVW_G1
R_AARCH64_TLSLD_MOVW_G0_NC
R_AARCH64_TLSLD_LD_PREL19
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_LD_PREL19
R_AARCH64_TLSDESC_ADR_PREL21
R_AARCH64_TLSDESC_ADR_PAGE21
R_AARCH64_TLSDESC_LD64_LO12
R_AARCH64_TLSDESC_ADD_LO12
R_AARCH64_TLSDESC_OFF_G1
R_AARCH64_TLSDESC_OFF_G0_NC
R_AARCH64_TLSDESC_LDR
R_AARCH64_TLSDESC_ADD
R_AARCH64_TLSDESC_CALL
R_AARCH64_TLSLE_LDST128_TPREL_LO12
R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_AARCH64_P32_ABS32
R_AARCH64_P32_ABS16
R_AARCH64_P32_PREL32
R_AARCH64_P32_PREL16
R_AARCH64_P32_MOVW_UABS_G0
R_AARCH64_P32_MOVW_UABS_G0_NC
R_AARCH64_P32_MOVW_UABS_G1
R_AARCH64_P32_MOVW_SABS_G0
R_AARCH64_P32_LD_PREL_LO19
R_AARCH64_P32_ADR_PREL_LO21
R_AARCH64_P32_ADR_PREL_PG_HI21
R_AARCH64_P32_ADD_ABS_LO12_NC
R_AARCH64_P32_LDST8_ABS_LO12_NC
R_AARCH64_P32_LDST16_ABS_LO12_NC
R_AARCH64_P32_LDST32_ABS_LO12_NC
R_AARCH64_P32_LDST64_ABS_LO12_NC
R_AARCH64_P32_LDST128_ABS_LO12_NC
R_AARCH64_P32_TSTBR14
R_AARCH64_P32_CONDBR19
R_AARCH64_P32_JUMP26
R_AARCH64_P32_CALL26
R_AARCH64_P32_MOVW_PREL_G0
R_AARCH64_P32_MOVW_PREL_G0_NC
R_AARCH64_P32_MOVW_PREL_G1
R_AARCH64_P32_GOT_LD_PREL19
R_AARCH64_P32_ADR_GOT_PAGE
R_AARCH64_P32_LD32_GOT_LO12_NC
R_AARCH64_P32_LD32_GOTPAGE_LO14
R_AARCH64_P32_TLSGD_ADR_PREL21
R_AARCH64_P32_TLSGD_ADR_PAGE21
R_AARCH64_P32_TLSGD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_ADR_PREL21
R_AARCH64_P32_TLSLD_ADR_PAGE21
R_AARCH64_P32_TLSLD_ADD_LO12_NC
R_AARCH64_P32_TLSLD_LD_PREL19
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G1
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0
R_AARCH64_P32_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_P32_TLSLD_ADD_DTPREL_HI12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12
R_AARCH64_P32_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12
R_AARCH64_P32_TLSLD_LDST128_DTPREL_LO12_NC
R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC
R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_P32_TLSLE_MOVW_TPREL_G1
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0
R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_P32_TLSLE_ADD_TPREL_HI12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12
R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12
R_AARCH64_P32_TLSLE_LDST128_TPREL_LO12_NC
R_AARCH64_P32_TLSDESC_LD_PREL19
R_AARCH64_P32_TLSDESC_ADR_PREL21
R_AARCH64_P32_TLSDESC_ADR_PAGE21
R_AARCH64_P32_TLSDESC_LD32_LO12
R_AARCH64_P32_TLSDESC_ADD_LO12
R_AARCH64_P32_TLSDESC_CALL
R_AARCH64_P32_COPY
R_AARCH64_P32_GLOB_DAT
R_AARCH64_P32_JUMP_SLOT
R_AARCH64_P32_RELATIVE
R_AARCH64_P32_TLS_DTPREL
R_AARCH64_P32_TLS_DTPMOD
R_AARCH64_P32_TLS_TPREL
R_AARCH64_P32_TLSDESC
R_AARCH64_P32_IRELATIVE
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_ARM_IRELATIVE
R_ARC_NONE
R_ARC_8
R_ARC_16
R_ARC_24
R_ARC_32
R_ARC_N8
R_ARC_N16
R_ARC_N24
R_ARC_N32
R_ARC_SDA
R_ARC_SECTOFF
R_ARC_S21H_PCREL
R_ARC_S21W_PCREL
R_ARC_S25H_PCREL
R_ARC_S25W_PCREL
R_ARC_SDA32
R_ARC_SDA_LDST
R_ARC_SDA_LDST1
R_ARC_SDA_LDST2
R_ARC_SDA16_LD
R_ARC_SDA16_LD1
R_ARC_SDA16_LD2
R_ARC_S13_PCREL
R_ARC_W
R_ARC_32_ME
R_ARC_32_ME_S
R_ARC_N32_ME
R_ARC_SECTOFF_ME
R_ARC_SDA32_ME
R_ARC_W_ME
R_AC_SECTOFF_U8
R_AC_SECTOFF_U8_1
R_AC_SECTOFF_U8_2
R_AC_SECTOFF_S9
R_AC_SECTOFF_S9_1
R_AC_SECTOFF_S9_2
R_ARC_SECTOFF_ME_1
R_ARC_SECTOFF_ME_2
R_ARC_SECTOFF_1
R_ARC_SECTOFF_2
R_ARC_SDA_12
R_ARC_SDA16_ST2
R_ARC_32_PCREL
R_ARC_PC32
R_ARC_GOT32
R_ARC_GOTPC32
R_ARC_PLT32
R_ARC_COPY
R_ARC_GLOB_DAT
R_ARC_JMP_SLOT
R_ARC_RELATIVE
R_ARC_GOTOFF
R_ARC_GOTPC
R_ARC_S21W_PCREL_PLT
R_ARC_S25H_PCREL_PLT
R_ARC_JLI_SECTOFF
R_ARC_TLS_DTPMOD
R_ARC_TLS_TPOFF
R_ARC_TLS_GD_GOT
R_ARC_TLS_GD_LD
R_ARC_TLS_GD_CALL
R_ARC_TLS_IE_GOT
R_ARC_TLS_DTPOFF
R_ARC_TLS_DTPOFF_S9
R_ARC_TLS_LE_S9
R_ARC_TLS_LE_32
R_ARC_S25W_PCREL_PLT
R_ARC_S21H_PCREL_PLT
R_ARC_NPS_CMEM16
R_AVR_NONE
R_AVR_32
R_AVR_7_PCREL
R_AVR_13_PCREL
R_AVR_16
R_AVR_16_PM
R_AVR_LO8_LDI
R_AVR_HI8_LDI
R_AVR_HH8_LDI
R_AVR_LO8_LDI_NEG
R_AVR_HI8_LDI_NEG
R_AVR_HH8_LDI_NEG
R_AVR_LO8_LDI_PM
R_AVR_HI8_LDI_PM
R_AVR_HH8_LDI_PM
R_AVR_LO8_LDI_PM_NEG
R_AVR_HI8_LDI_PM_NEG
R_AVR_HH8_LDI_PM_NEG
R_AVR_CALL
R_AVR_LDI
R_AVR_6
R_AVR_6_ADIW
R_AVR_MS8_LDI
R_AVR_MS8_LDI_NEG
R_AVR_LO8_LDI_GS
R_AVR_HI8_LDI_GS
R_AVR_8
R_AVR_8_LO8
R_AVR_8_HI8
R_AVR_8_HLO8
R_AVR_DIFF8
R_AVR_DIFF16
R_AVR_DIFF32
R_AVR_LDS_STS_16
R_AVR_PORT6
R_AVR_PORT5
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_HEX_LD_PLT_B22_PCREL
R_HEX_LD_GOT_LO16
R_HEX_LD_GOT_HI16
R_HEX_LD_GOT_32
R_HEX_LD_GOT_16
R_HEX_LD_GOT_32_6_X
R_HEX_LD_GOT_16_X
R_HEX_LD_GOT_11_X
R_HEX_23_REG
R_HEX_GD_PLT_B22_PCREL_X
R_HEX_GD_PLT_B32_PCREL_X
R_HEX_LD_PLT_B22_PCREL_X
R_HEX_LD_PLT_B32_PCREL_X
R_HEX_27_REG
R_LANAI_NONE
R_LANAI_21
R_LANAI_21_F
R_LANAI_25
R_LANAI_32
R_LANAI_HI16
R_LANAI_LO16
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_JMP_SLOT
R_PPC_LOCAL24PC
R_PPC_REL32
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_GLOB_DAT
R_PPC64_JMP_SLOT
R_PPC64_RELATIVE
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_ADDR16_HIGH
R_PPC64_ADDR16_HIGHA
R_PPC64_TPREL16_HIGH
R_PPC64_TPREL16_HIGHA
R_PPC64_DTPREL16_HIGH
R_PPC64_DTPREL16_HIGHA
R_PPC64_IRELATIVE
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_RISCV_NONE
R_RISCV_32
R_RISCV_64
R_RISCV_RELATIVE
R_RISCV_COPY
R_RISCV_JUMP_SLOT
R_RISCV_TLS_DTPMOD32
R_RISCV_TLS_DTPMOD64
R_RISCV_TLS_DTPREL32
R_RISCV_TLS_DTPREL64
R_RISCV_TLS_TPREL32
R_RISCV_TLS_TPREL64
R_RISCV_BRANCH
R_RISCV_JAL
R_RISCV_CALL
R_RISCV_CALL_PLT
R_RISCV_GOT_HI20
R_RISCV_TLS_GOT_HI20
R_RISCV_TLS_GD_HI20
R_RISCV_PCREL_HI20
R_RISCV_PCREL_LO12_I
R_RISCV_PCREL_LO12_S
R_RISCV_HI20
R_RISCV_LO12_I
R_RISCV_LO12_S
R_RISCV_TPREL_HI20
R_RISCV_TPREL_LO12_I
R_RISCV_TPREL_LO12_S
R_RISCV_TPREL_ADD
R_RISCV_ADD8
R_RISCV_ADD16
R_RISCV_ADD32
R_RISCV_ADD64
R_RISCV_SUB8
R_RISCV_SUB16
R_RISCV_SUB32
R_RISCV_SUB64
R_RISCV_GNU_VTINHERIT
R_RISCV_GNU_VTENTRY
R_RISCV_ALIGN
R_RISCV_RVC_BRANCH
R_RISCV_RVC_JUMP
R_RISCV_RVC_LUI
R_RISCV_GPREL_I
R_RISCV_GPREL_S
R_RISCV_TPREL_I
R_RISCV_TPREL_S
R_RISCV_RELAX
R_RISCV_SUB6
R_RISCV_SET6
R_RISCV_SET8
R_RISCV_SET16
R_RISCV_SET32
R_RISCV_32_PCREL
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_390_PC12DBL
R_390_PLT12DBL
R_390_PC24DBL
R_390_PLT24DBL
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX10
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX10
R_SPARC_GOTDATA_OP
R_AMDGPU_NONE
R_AMDGPU_ABS32_LO
R_AMDGPU_ABS32_HI
R_AMDGPU_ABS64
R_AMDGPU_REL32
R_AMDGPU_REL64
R_AMDGPU_ABS32
R_AMDGPU_GOTPCREL
R_AMDGPU_GOTPCREL32_LO
R_AMDGPU_GOTPCREL32_HI
R_AMDGPU_REL32_LO
R_AMDGPU_REL32_HI
R_AMDGPU_RELATIVE64
R_BPF_NONE
R_BPF_64_64
R_BPF_64_32
R_MSP430_NONE
R_MSP430_32
R_MSP430_10_PCREL
R_MSP430_16
R_MSP430_16_PCREL
R_MSP430_16_BYTE
R_MSP430_16_PCREL_BYTE
R_MSP430_2X_PCREL
R_MSP430_RL_PCREL
R_MSP430_8
R_MSP430_SYM_DIFF
invalid sh_type for string table, expected SHT_STRTAB
empty string table
string table non-null terminated
invalid sh_type
invalid section contents size
Invalid buffer
invalid section header entry size (e_shentsize) in ELF header
section header table goes past the end of the file
section table goes past the end of file
invalid section index
invalid string offset
malformed sleb128, extends past end
invalid sh_entsize
size is not a multiple of sh_entsize
invalid section offset
index past the end of the symbol table
Insufficient alignment
Invalid ELF data
Invalid ELF class
v5tej
More than one dynamic symbol table!
More than one static symbol table!
ELF32-i386
ELF32-iamcu
ELF32-x86-64
ELF32-arm-little
ELF32-arm-big
ELF32-avr
ELF32-hexagon
ELF32-lanai
ELF32-mips
ELF32-msp430
ELF32-ppc
ELF32-riscv
ELF32-sparc
ELF32-amdgpu
ELF32-unknown
ELF64-i386
ELF64-x86-64
ELF64-aarch64-little
ELF64-aarch64-big
ELF64-ppc64
ELF64-riscv
ELF64-s390
ELF64-sparc
ELF64-mips
ELF64-amdgpu
ELF64-BPF
ELF64-unknown
Invalid ELFCLASS!
Section is not SHT_RELA
llvm.object
Invalid section index
LLVM_OVERRIDE_PRODUCER
input module has no datalayout
Unable to determine comdat of alias!
Invalid weak external
Could not find leader
load commands extend past the end of the file
universal header architecture: 
's cputype does not match object file's mach header
Mach-O headers
load command 
 cmdsize not a multiple of 8
 cmdsize not a multiple of 4
LC_DATA_IN_CODE
data in code info
LC_LINKER_OPTIMIZATION_HINT
linker optimization hints
LC_FUNCTION_STARTS
function starts data
LC_SEGMENT_SPLIT_INFO
split info data
LC_DYLIB_CODE_SIGN_DRS
code signing RDs data
LC_CODE_SIGNATURE
code signature data
LC_DYLD_INFO
LC_DYLD_INFO_ONLY
LC_DYLD_EXPORTS_TRIE
export trie
LC_UUID command 
 has incorrect cmdsize
more than one LC_UUID command
LC_SEGMENT_64
LC_SEGMENT
LC_LOAD_DYLIB
LC_LOAD_WEAK_DYLIB
LC_LAZY_LOAD_DYLIB
LC_REEXPORT_DYLIB
LC_LOAD_UPWARD_DYLIB
LC_ID_DYLINKER
LC_LOAD_DYLINKER
LC_DYLD_ENVIRONMENT
LC_VERSION_MIN_MACOSX
LC_VERSION_MIN_IPHONEOS
LC_VERSION_MIN_TVOS
LC_VERSION_MIN_WATCHOS
LC_SOURCE_VERSION command 
more than one LC_SOURCE_VERSION command
LC_MAIN command 
more than one LC_MAIN command
LC_ENCRYPTION_INFO command 
LC_ENCRYPTION_INFO
LC_ENCRYPTION_INFO_64 command 
LC_ENCRYPTION_INFO_64
 LC_SUB_FRAMEWORK cmdsize too small
LC_SUB_FRAMEWORK
sub_framework_command
 LC_SUB_UMBRELLA cmdsize too small
LC_SUB_UMBRELLA
sub_umbrella_command
 LC_SUB_LIBRARY cmdsize too small
LC_SUB_LIBRARY
sub_library_command
 LC_SUB_CLIENT cmdsize too small
LC_SUB_CLIENT
sub_client_command
client
LC_ROUTINES command 
more than one LC_ROUTINES and or LC_ROUTINES_64 command
LC_ROUTINES_64 command 
more than one LC_ROUTINES_64 and or LC_ROUTINES command
LC_UNIXTHREAD
more than one LC_UNIXTHREAD command
LC_THREAD
 for cmd value of: 
 is obsolete and not supported
MH_SIM_SUPPORT files only support LC_BUILD_VERSION and LC_VERSION_MIN_MACOSX load commands
LC_BUILD_VERSION and some LC_VERSION_MIN load command also found
contains LC_DYSYMTAB load command without a LC_SYMTAB load command
ilocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
ilocalsym plus nlocalsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iextdefsym plus nextdefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym in LC_DYSYMTAB load command extends past the end of the symbol table
iundefsym plus nundefsym in LC_DYSYMTAB load  command extends past the end of the symbol table
no LC_ID_DYLIB load command in dynamic library filetype
bad section index: 
 for symbol at index 
bad string index: 
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
ARM64_RELOC_AUTHENTICATED_POINTER
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
Requested symbol index is out of range.
getSymbolIndex() called with no symbol table symbol
Mach-O 32-bit i386
Mach-O arm
Mach-O arm64 (ILP32)
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64e
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
Unrecognized MachO magic number
debug_str_offsets
truncated or malformed object (
load command 0 extends past the end all load commands in the file
 extends past end of file
 with size less than 8 bytes
Structure read out-of-range
 LC_SYMTAB cmdsize too small
more than one LC_SYMTAB command
LC_SYMTAB command 
symoff field of LC_SYMTAB command 
 extends past the end of the file
struct nlist_64
struct nlist
symoff field plus nsyms field times sizeof(
) of LC_SYMTAB command 
symbol table
stroff field of LC_SYMTAB command 
stroff field plus strsize field of LC_SYMTAB command 
string table
 at offset 
 with a size of 
, overlaps 
 LC_DYSYMTAB cmdsize too small
more than one LC_DYSYMTAB command
LC_DYSYMTAB command 
tocoff field of LC_DYSYMTAB command 
tocoff field plus ntoc field times sizeof(struct dylib_table_of_contents) of LC_DYSYMTAB command 
table of contents
modtaboff field of LC_DYSYMTAB command 
struct dylib_module_64
struct dylib_module
modtaboff field plus nmodtab field times sizeof(
) of LC_DYSYMTAB command 
module table
extrefsymoff field of LC_DYSYMTAB command 
extrefsymoff field plus nextrefsyms field times sizeof(struct dylib_reference) of LC_DYSYMTAB command 
reference table
indirectsymoff field of LC_DYSYMTAB command 
indirectsymoff field plus nindirectsyms field times sizeof(uint32_t) of LC_DYSYMTAB command 
indirect table
extreloff field of LC_DYSYMTAB command 
extreloff field plus nextrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
external relocation table
locreloff field of LC_DYSYMTAB command 
locreloff field plus nlocrel field times sizeof(struct relocation_info) of LC_DYSYMTAB command 
local relocation table
 cmdsize too small
more than one 
 command
 command 
dataoff field of 
dataoff field plus datasize field of 
more than one LC_DYLD_INFO and or LC_DYLD_INFO_ONLY command
rebase_off field of 
rebase_off field plus rebase_size field of 
dyld rebase info
bind_off field of 
bind_off field plus bind_size field of 
dyld bind info
weak_bind_off field of 
weak_bind_off field plus weak_bind_size field of 
dyld weak bind info
lazy_bind_off field of 
lazy_bind_off field plus lazy_bind_size field of 
dyld lazy bind info
export_off field of 
export_off field plus export_size field of 
dyld export info
LC_ID_DYLIB
more than one LC_ID_DYLIB command
LC_ID_DYLIB load command in non-dynamic library file type
 name.offset field too small, not past the end of the dylib_command struct
 name.offset field extends past the end of the load command
 library name extends past the end of the load command
 name.offset field too small, not past the end of the dylinker_command struct
 dyld name extends past the end of the load command
more than one LC_VERSION_MIN_MACOSX, LC_VERSION_MIN_IPHONEOS, LC_VERSION_MIN_TVOS or LC_VERSION_MIN_WATCHOS command
 LC_NOTE has incorrect cmdsize
offset field of LC_NOTE command 
size field plus offset field of LC_NOTE command 
LC_NOTE data
 LC_BUILD_VERSION_COMMAND has incorrect cmdsize
more than two LC_BUILD_VERSION load commands
the LC_BUILD_VERSION, command 
, platform value is not allowed when the mach header flag MH_SIM_SUPPORT is set
the two LC_BUILD_VERSION load commands are not for the platforms MACOS and MACCATALYST
 LC_RPATH cmdsize too small
 LC_RPATH path.offset field too small, not past the end of the rpath_command struct
 LC_RPATH path.offset field extends past the end of the load command
 LC_RPATH library name extends past the end of the load command
more than one LC_ENCRYPTION_INFO and or LC_ENCRYPTION_INFO_64 command
cryptoff field of 
cryptoff field plus cryptsize field of 
 LC_LINKER_OPTION cmdsize too small
 LC_LINKER_OPTION string #
 is not NULL terminated
 LC_LINKER_OPTION string count 
 does not match number of strings
.offset field too small, not past the end of the 
.offset field extends past the end of the load command
 name extends past the end of the load command
flavor in 
 extends past end of command
 count in 
 count not x86_THREAD_STATE32_COUNT for flavor number 
 which is a x86_THREAD_STATE32 flavor in 
 x86_THREAD_STATE32 extends past end of command in 
 unknown flavor (
) for flavor number 
 count not x86_THREAD_STATE_COUNT for flavor number 
 which is a x86_THREAD_STATE flavor in 
 x86_THREAD_STATE extends past end of command in 
 count not x86_FLOAT_STATE_COUNT for flavor number 
 which is a x86_FLOAT_STATE flavor in 
 x86_FLOAT_STATE extends past end of command in 
 count not x86_EXCEPTION_STATE_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE flavor in 
 x86_EXCEPTION_STATE extends past end of command in 
 count not x86_THREAD_STATE64_COUNT for flavor number 
 which is a x86_THREAD_STATE64 flavor in 
 x86_THREAD_STATE64 extends past end of command in 
 count not x86_EXCEPTION_STATE64_COUNT for flavor number 
 which is a x86_EXCEPTION_STATE64 flavor in 
 x86_EXCEPTION_STATE64 extends past end of command in 
 count not ARM_THREAD_STATE_COUNT for flavor number 
 which is a ARM_THREAD_STATE flavor in 
 ARM_THREAD_STATE extends past end of command in 
 count not ARM_THREAD_STATE64_COUNT for flavor number 
 which is a ARM_THREAD_STATE64 flavor in 
 ARM_THREAD_STATE64 extends past end of command in 
 count not ARM_EXCEPTION_STATE64_COUNT for flavor number 
 which is a ARM_EXCEPTION_STATE64 flavor in 
 ARM_EXCEPTION_STATE64 extends past end of command in 
 count not PPC_THREAD_STATE_COUNT for flavor number 
 which is a PPC_THREAD_STATE flavor in 
 PPC_THREAD_STATE extends past end of command in 
unknown cputype (
) load command 
 command can't be checked
 LC_TWOLEVEL_HINTS has incorrect cmdsize
more than one LC_TWOLEVEL_HINTS command
offset field of LC_TWOLEVEL_HINTS command 
offset field plus nhints times sizeof(struct twolevel_hint) field of LC_TWOLEVEL_HINTS command 
two level hints
Malformed MachO file.
 extends past the end all load commands in the file
malformed uleb128, extends past end
uleb128 too big for uint64
the mach header extends past the end of the file
 inconsistent cmdsize in 
 for the number of sections
offset field of section 
 not past the headers of the file
offset field plus size field of section 
size field of section 
 greater than the segment
addr field of section 
 less than the segment's vmaddr
addr field plus size of section 
 greater than than the segment's vmaddr plus vmsize
section contents
reloff field of section 
reloff field plus nreloc field times sizeof(struct relocation_info) of section 
section relocation entries
 fileoff field in 
 fileoff field plus filesize field in 
 filesize field in 
 greater than vmsize field
Bad magic number
Missing version number
Bad version number
Bad section type
dylink section ended prematurely
Names must come after code section
Function named more than once
Invalid name entry
Name sub-section ended prematurely
Name section ended prematurely
Linking data must come after code section
Unexpected metadata version: 
 (Expected: 
Too many segment names
Invalid function symbol: 
Linking sub-section ended prematurely
Linking section ended prematurely
invalid function symbol index
invalid global symbol index
undefined weak global symbol
invalid data symbol index
invalid data symbol offset
Section symbols must have local binding
invalid event symbol index
Invalid symbol type
Duplicate symbol name 
Bad/duplicate COMDAT name 
Unsupported COMDAT flags
Invalid COMDAT entry type
COMDAT data index out of range
Data segment in two COMDATs
COMDAT function index out of range
Function in two COMDATs
Relocations not in offset order
Bad relocation function index
Bad relocation type index
Bad relocation global index
Bad relocation event index
Bad relocation data index
Bad relocation section index
Bad relocation type: 
Bad relocation offset
Reloc section ended prematurely
Invalid signature type
Multiple return types not supported
Type section ended prematurely
Invalid table element type
Unexpected import kind
Import section ended prematurely
Invalid function type
Function section ended prematurely
Table section ended prematurely
Memory section ended prematurely
Global section ended prematurely
Event section ended prematurely
Invalid function export
Invalid global export
Invalid event export
Unexpected export kind
Export section ended prematurely
Invalid start function
Invalid function count
Code section ended prematurely
Invalid TableIndex
Elem section ended prematurely
Invalid segment size
Data section ended prematurely
IMPORT
TABLE
MEMORY
EXPORT
START
ELEM
R_WEBASSEMBLY_FUNCTION_INDEX_LEB
R_WEBASSEMBLY_TABLE_INDEX_SLEB
R_WEBASSEMBLY_TABLE_INDEX_I32
R_WEBASSEMBLY_MEMORY_ADDR_LEB
R_WEBASSEMBLY_MEMORY_ADDR_SLEB
R_WEBASSEMBLY_MEMORY_ADDR_I32
R_WEBASSEMBLY_TYPE_INDEX_LEB
R_WEBASSEMBLY_GLOBAL_INDEX_LEB
R_WEBASSEMBLY_FUNCTION_OFFSET_I32
R_WEBASSEMBLY_SECTION_OFFSET_I32
R_WEBASSEMBLY_EVENT_INDEX_LEB
WASM
Zero length section
Section too large
Out of order section type: 
LEB is outside Varuint32 range
EOF while reading string
EOF while reading uint8
LEB is outside Varint32 range
LEB is outside Varuint1 range
Invalid opcode in init_expr
Invalid init_expr
EOF while reading float64
print-summary-global-ids
Print the global id for each value when reading the module summary
Malformed block
Invalid record
Invalid bitcode signature
Invalid bitcode wrapper header
Invalid value
Incompatible epoch: Bitcode '
' vs current: '
Could not find function in stream
Trying to materialize functions before seeing function blocks
Expect SubBlock
Expect function block
 (Producer: '
' Reader: 'LLVM 
Insufficient function protos
Invalid function metadata: incoming forward references
Invalid ID
Invalid cast
Explicit gep type does not match pointee type of pointer operand
EXTRACTVAL: Invalid instruction with 0 indices
EXTRACTVAL: Invalid type
EXTRACTVAL: Invalid struct index
EXTRACTVAL: Invalid array index
INSERTVAL: Invalid instruction with 0 indices
INSERTVAL: Invalid type
INSERTVAL: Invalid struct index
INSERTVAL: Invalid array index
Inserted value type doesn't match aggregate type
Invalid type for value
Explicit invoke type is not a function type
Callee is not a pointer
Callee is not of pointer to function type
Explicit invoke type does not match pointee type of callee operand
Insufficient operands to call
Personality function mismatch
Old-style alloca with a non-pointer type
Fast math flags indicator set for call with no FMF
Explicit call type is not a function type
Callee is not a pointer type
Explicit call type does not match pointee type of callee operand
Fast-math-flags specified for call without floating-point scalar or vector return type
Invalid instruction with no BB
Operand bundles found with no consumer
Never resolved value found in function
Invalid function metadata: outgoing forward refs
Invalid constant reference
Invalid constant type
Explicit gep operator type does not match pointee type of pointer operand
Invalid gep with no operands
Invalid value name
Invalid alignment value
Load/Store operand is not a pointer type
Explicit load/store type does not match pointee type of pointer operand
Cannot load/store from pointer
Never resolved function from blockaddress
Malformed global initializer set
Invalid multiple blocks
Unknown attribute kind (
Bitwidth for integer type out of range
Invalid type
Invalid function argument type
Invalid TYPE table
Invalid vector length
Invalid matrix dimensions
Invalid TYPE table: Only named structs can be forward referenced
Expected a constant
Alias and aliasee types don't match
Invalid multiple synchronization scope names blocks
Invalid empty synchronization scope names block
Invalid global variable comdat ID
Invalid calling convention ID
Invalid function comdat ID
Invalid hash length 
Invalid Summary Block: record for version expected
Invalid Summary Block: version expected
Invalid summary version 
. Version should be in the range [1-6].
Alias expects aliasee summary to be parsed
Name attachment that does not follow a combined record
Invalid hash that does not follow a module path
GUID 
) is 
Expected a single module
llvm.bitcode
Abbreviation starts with an Array or a Blob
Array element type can't be an Array or a Blob
Array op not second to last
Array element type has to be an encoding of a type
Fixed or VBR abbrev record with size > MaxChunkData
Abbrev record with no operands
Invalid abbrev number
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._
import-full-type-definitions
Import full type definitions for ThinLTO.
disable-ondemand-mds-loading
Force disable the lazy-loading on-demand of metadata when loading bitcode for importing.
Corrupted Metadata block
Invalid metadata: fwd refs into function blocks
Invalid record: metadata strings layout
Invalid record: metadata strings with no strings
Invalid record: metadata strings corrupt offset
Invalid record: metadata strings bad length
Invalid record: metadata strings truncated chars
Invalid metadata attachment: expect fwd ref to MDNode
Invalid metadata attachment
Conflicting METADATA_KIND records
METADATA_NAME not followed by METADATA_NAMED_NODE
Invalid named metadata: expect fwd ref to MDNode
Invalid record: Unsupported version of DISubrange
Alignment value is too large
Can't lazyload MD
Type mismatch in constant table!
DW_TAG_null
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_type_unit
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_atomic_type
DW_TAG_call_site
DW_TAG_call_site_parameter
DW_TAG_skeleton_unit
DW_TAG_immutable_type
DW_TAG_MIPS_loop
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_GNU_call_site
DW_TAG_GNU_call_site_parameter
DW_TAG_APPLE_property
DW_TAG_APPLE_ptrauth_type
DW_TAG_BORLAND_property
DW_TAG_BORLAND_Delphi_string
DW_TAG_BORLAND_Delphi_dynamic_array
DW_TAG_BORLAND_Delphi_set
DW_TAG_BORLAND_Delphi_variant
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_rnglists_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_macros
DW_AT_call_all_calls
DW_AT_call_all_source_calls
DW_AT_call_all_tail_calls
DW_AT_call_return_pc
DW_AT_call_value
DW_AT_call_origin
DW_AT_call_parameter
DW_AT_call_pc
DW_AT_call_tail_call
DW_AT_call_target
DW_AT_call_target_clobbered
DW_AT_call_data_location
DW_AT_call_data_value
DW_AT_noreturn
DW_AT_alignment
DW_AT_export_symbols
DW_AT_deleted
DW_AT_defaulted
DW_AT_loclists_base
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_MIPS_assumed_size
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_GNU_call_site_value
DW_AT_GNU_all_call_sites
DW_AT_GNU_macros
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_AT_GNU_discriminator
DW_AT_BORLAND_property_read
DW_AT_BORLAND_property_write
DW_AT_BORLAND_property_implements
DW_AT_BORLAND_property_index
DW_AT_BORLAND_property_default
DW_AT_BORLAND_Delphi_unit
DW_AT_BORLAND_Delphi_class
DW_AT_BORLAND_Delphi_record
DW_AT_BORLAND_Delphi_metaclass
DW_AT_BORLAND_Delphi_constructor
DW_AT_BORLAND_Delphi_destructor
DW_AT_BORLAND_Delphi_anonymous_method
DW_AT_BORLAND_Delphi_interface
DW_AT_BORLAND_Delphi_ABI
DW_AT_BORLAND_Delphi_return
DW_AT_BORLAND_Delphi_frameptr
DW_AT_BORLAND_closure
DW_AT_LLVM_include_path
DW_AT_LLVM_config_macros
DW_AT_LLVM_isysroot
DW_AT_APPLE_ptrauth_key
DW_AT_APPLE_ptrauth_address_discriminated
DW_AT_APPLE_ptrauth_extra_discriminator
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_objc_complete_type
DW_AT_APPLE_property
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_strx
DW_FORM_addrx
DW_FORM_ref_sup4
DW_FORM_strp_sup
DW_FORM_data16
DW_FORM_line_strp
DW_FORM_implicit_const
DW_FORM_loclistx
DW_FORM_rnglistx
DW_FORM_ref_sup8
DW_FORM_strx1
DW_FORM_strx2
DW_FORM_strx3
DW_FORM_strx4
DW_FORM_addrx1
DW_FORM_addrx2
DW_FORM_addrx3
DW_FORM_addrx4
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_FORM_GNU_ref_alt
DW_FORM_GNU_strp_alt
DW_OP_addr
DW_OP_deref
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_constu
DW_OP_consts
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_plus_uconst
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_skip
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_regx
DW_OP_fbreg
DW_OP_bregx
DW_OP_piece
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_bit_piece
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_implicit_pointer
DW_OP_addrx
DW_OP_constx
DW_OP_entry_value
DW_OP_const_type
DW_OP_regval_type
DW_OP_deref_type
DW_OP_xderef_type
DW_OP_convert
DW_OP_reinterpret
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_OP_LLVM_fragment
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_UTF
DW_ATE_UCS
DW_ATE_ASCII
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_Rust
DW_LANG_C11
DW_LANG_Swift
DW_LANG_Julia
DW_LANG_Dylan
DW_LANG_C_plus_plus_14
DW_LANG_Fortran03
DW_LANG_Fortran08
DW_LANG_RenderScript
DW_LANG_BLISS
DW_LANG_Mips_Assembler
DW_LANG_GOOGLE_RenderScript
DW_LANG_BORLAND_Delphi
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_pass_by_reference
DW_CC_pass_by_value
DW_CC_GNU_renesas_sh
DW_CC_GNU_borland_fastcall_i386
DW_CC_BORLAND_safecall
DW_CC_BORLAND_stdcall
DW_CC_BORLAND_pascal
DW_CC_BORLAND_msfastcall
DW_CC_BORLAND_msreturn
DW_CC_BORLAND_thiscall
DW_CC_BORLAND_fastcall
DW_CC_LLVM_vectorcall
DW_CC_LLVM_Win64
DW_CC_LLVM_X86_64SysV
DW_CC_LLVM_AAPCS
DW_CC_LLVM_AAPCS_VFP
DW_CC_LLVM_IntelOclBicc
DW_CC_LLVM_SpirFunction
DW_CC_LLVM_OpenCLKernel
DW_CC_LLVM_Swift
DW_CC_LLVM_PreserveMost
DW_CC_LLVM_PreserveAll
DW_CC_LLVM_X86RegCall
DW_CC_GDB_IBM_OpenCL
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_MACINFO_invalid
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
DW_ATOM_qual_name_hash
DW_ATOM_ext_types
NONE
TYPE
VARIABLE
FUNCTION
EXTERNAL
STATIC
DW_IDX_compile_unit
DW_IDX_type_unit
DW_IDX_die_offset
DW_IDX_parent
DW_IDX_type_hash
llvm.codeview
The buffer is not large enough to read the requested number of bytes.
S_COMPILE
S_REGISTER_16t
S_CONSTANT_16t
S_UDT_16t
S_SSEARCH
S_SKIP
S_CVRESERVE
S_OBJNAME_ST
S_ENDARG
S_COBOLUDT_16t
S_MANYREG_16t
S_RETURN
S_ENTRYTHIS
S_BPREL16
S_LDATA16
S_GDATA16
S_PUB16
S_LPROC16
S_GPROC16
S_THUNK16
S_BLOCK16
S_WITH16
S_LABEL16
S_CEXMODEL16
S_VFTABLE16
S_REGREL16
S_BPREL32_16t
S_LDATA32_16t
S_GDATA32_16t
S_PUB32_16t
S_LPROC32_16t
S_GPROC32_16t
S_THUNK32_ST
S_BLOCK32_ST
S_WITH32_ST
S_LABEL32_ST
S_CEXMODEL32
S_VFTABLE32_16t
S_REGREL32_16t
S_LTHREAD32_16t
S_GTHREAD32_16t
S_SLINK32
S_LPROCMIPS_16t
S_GPROCMIPS_16t
S_PROCREF_ST
S_DATAREF_ST
S_ALIGN
S_LPROCREF_ST
S_OEM
S_TI16_MAX
S_REGISTER_ST
S_CONSTANT_ST
S_UDT_ST
S_COBOLUDT_ST
S_MANYREG_ST
S_BPREL32_ST
S_LDATA32_ST
S_GDATA32_ST
S_PUB32_ST
S_LPROC32_ST
S_GPROC32_ST
S_VFTABLE32
S_REGREL32_ST
S_LTHREAD32_ST
S_GTHREAD32_ST
S_LPROCMIPS_ST
S_GPROCMIPS_ST
S_COMPILE2_ST
S_MANYREG2_ST
S_LPROCIA64_ST
S_GPROCIA64_ST
S_LOCALSLOT_ST
S_PARAMSLOT_ST
S_ANNOTATION
S_GMANPROC_ST
S_LMANPROC_ST
S_RESERVED1
S_RESERVED2
S_RESERVED3
S_RESERVED4
S_LMANDATA_ST
S_GMANDATA_ST
S_MANFRAMEREL_ST
S_MANREGISTER_ST
S_MANSLOT_ST
S_MANMANYREG_ST
S_MANREGREL_ST
S_MANMANYREG2_ST
S_MANTYPREF
S_UNAMESPACE_ST
S_ST_MAX
S_WITH32
S_MANYREG
S_LPROCMIPS
S_GPROCMIPS
S_MANYREG2
S_LPROCIA64
S_GPROCIA64
S_LOCALSLOT
S_PARAMSLOT
S_MANFRAMEREL
S_MANREGISTER
S_MANSLOT
S_MANMANYREG
S_MANREGREL
S_MANMANYREG2
S_DATAREF
S_ANNOTATIONREF
S_TOKENREF
S_GMANPROC
S_LMANPROC
S_ATTR_FRAMEREL
S_ATTR_REGISTER
S_ATTR_REGREL
S_ATTR_MANYREG
S_SEPCODE
S_LOCAL_2005
S_DEFRANGE_2005
S_DEFRANGE2_2005
S_DISCARDED
S_LPROCMIPS_ID
S_GPROCMIPS_ID
S_LPROCIA64_ID
S_GPROCIA64_ID
S_DEFRANGE_HLSL
S_GDATA_HLSL
S_LDATA_HLSL
S_LOCAL_DPC_GROUPSHARED
S_DEFRANGE_DPC_PTR_TAG
S_DPC_SYM_TAG_MAP
S_ARMSWITCHTABLE
S_POGODATA
S_INLINESITE2
S_MOD_TYPEREF
S_REF_MINIPDB
S_PDBMAP
S_GDATA_HLSL32
S_LDATA_HLSL32
S_GDATA_HLSL32_EX
S_LDATA_HLSL32_EX
S_FASTLINK
S_INLINEES
S_END
S_INLINESITE_END
S_PROC_ID_END
S_THUNK32
S_TRAMPOLINE
S_SECTION
S_COFFGROUP
S_EXPORT
S_LPROC32
S_GPROC32
S_LPROC32_ID
S_GPROC32_ID
S_LPROC32_DPC
S_LPROC32_DPC_ID
S_REGISTER
S_PUB32
S_PROCREF
S_LPROCREF
S_ENVBLOCK
S_INLINESITE
S_LOCAL
S_DEFRANGE
S_DEFRANGE_SUBFIELD
S_DEFRANGE_REGISTER
S_DEFRANGE_FRAMEPOINTER_REL
S_DEFRANGE_SUBFIELD_REGISTER
S_DEFRANGE_FRAMEPOINTER_REL_FULL_SCOPE
S_DEFRANGE_REGISTER_REL
S_BLOCK32
S_LABEL32
S_OBJNAME
S_COMPILE2
S_COMPILE3
S_FRAMEPROC
S_CALLSITEINFO
S_FILESTATIC
S_HEAPALLOCSITE
S_FRAMECOOKIE
S_CALLEES
S_CALLERS
S_UDT
S_COBOLUDT
S_BUILDINFO
S_BPREL32
S_REGREL32
S_CONSTANT
S_MANCONSTANT
S_LDATA32
S_GDATA32
S_LMANDATA
S_GMANDATA
S_LTHREAD32
S_GTHREAD32
S_UNAMESPACE
{0} {1}::*
 __unaligned
 __restrict
__unaligned 
{0} {1}
{0} {1}::{2}
<vftable {0} methods>
Buffer contains invalid APSInt type
LF_POINTER
LF_MODIFIER
LF_PROCEDURE
LF_MFUNCTION
LF_LABEL
LF_ARGLIST
LF_FIELDLIST
LF_ARRAY
LF_CLASS
LF_STRUCTURE
LF_INTERFACE
LF_UNION
LF_ENUM
LF_TYPESERVER2
LF_VFTABLE
LF_VTSHAPE
LF_BITFIELD
LF_BCLASS
LF_BINTERFACE
LF_VBCLASS
LF_IVBCLASS
LF_VFUNCTAB
LF_STMEMBER
LF_METHOD
LF_MEMBER
LF_NESTTYPE
LF_ONEMETHOD
LF_ENUMERATE
LF_INDEX
LF_FUNC_ID
LF_MFUNC_ID
LF_BUILDINFO
LF_SUBSTR_LIST
LF_STRING_ID
LF_UDT_SRC_LINE
LF_UDT_MOD_SRC_LINE
LF_METHODLIST
LF_PRECOMP
LF_ENDPRECOMP
LF_MODIFIER_16t
LF_POINTER_16t
LF_ARRAY_16t
LF_CLASS_16t
LF_STRUCTURE_16t
LF_UNION_16t
LF_ENUM_16t
LF_PROCEDURE_16t
LF_MFUNCTION_16t
LF_COBOL0_16t
LF_COBOL1
LF_BARRAY_16t
LF_NULLLEAF
LF_NOTTRAN
LF_DIMARRAY_16t
LF_VFTPATH_16t
LF_PRECOMP_16t
LF_OEM_16t
LF_TYPESERVER_ST
LF_SKIP_16t
LF_ARGLIST_16t
LF_DEFARG_16t
LF_LIST
LF_FIELDLIST_16t
LF_DERIVED_16t
LF_BITFIELD_16t
LF_METHODLIST_16t
LF_DIMCONU_16t
LF_DIMCONLU_16t
LF_DIMVARU_16t
LF_DIMVARLU_16t
LF_REFSYM
LF_BCLASS_16t
LF_VBCLASS_16t
LF_IVBCLASS_16t
LF_ENUMERATE_ST
LF_FRIENDFCN_16t
LF_INDEX_16t
LF_MEMBER_16t
LF_STMEMBER_16t
LF_METHOD_16t
LF_NESTTYPE_16t
LF_VFUNCTAB_16t
LF_FRIENDCLS_16t
LF_ONEMETHOD_16t
LF_VFUNCOFF_16t
LF_TI16_MAX
LF_ARRAY_ST
LF_CLASS_ST
LF_STRUCTURE_ST
LF_UNION_ST
LF_ENUM_ST
LF_COBOL0
LF_BARRAY
LF_DIMARRAY_ST
LF_VFTPATH
LF_PRECOMP_ST
LF_OEM
LF_ALIAS_ST
LF_OEM2
LF_SKIP
LF_DEFARG_ST
LF_DERIVED
LF_DIMCONU
LF_DIMCONLU
LF_DIMVARU
LF_DIMVARLU
LF_FRIENDFCN_ST
LF_MEMBER_ST
LF_STMEMBER_ST
LF_METHOD_ST
LF_NESTTYPE_ST
LF_FRIENDCLS
LF_ONEMETHOD_ST
LF_VFUNCOFF
LF_NESTTYPEEX_ST
LF_MEMBERMODIFY_ST
LF_MANAGED_ST
LF_ST_MAX
LF_TYPESERVER
LF_DIMARRAY
LF_ALIAS
LF_DEFARG
LF_FRIENDFCN
LF_NESTTYPEEX
LF_MEMBERMODIFY
LF_MANAGED
LF_STRIDED_ARRAY
LF_HLSL
LF_MODIFIER_EX
LF_VECTOR
LF_MATRIX
LF_NUMERIC
LF_CHAR
LF_SHORT
LF_USHORT
LF_LONG
LF_ULONG
LF_REAL32
LF_REAL64
LF_REAL80
LF_REAL128
LF_QUADWORD
LF_UQUADWORD
LF_REAL48
LF_COMPLEX32
LF_COMPLEX64
LF_COMPLEX80
LF_COMPLEX128
LF_VARSTRING
LF_OCTWORD
LF_UOCTWORD
LF_DECIMAL
LF_DATE
LF_UTF8STRING
LF_REAL16
LF_PAD0
LF_PAD1
LF_PAD2
LF_PAD3
LF_PAD4
LF_PAD5
LF_PAD6
LF_PAD7
LF_PAD8
LF_PAD9
LF_PAD10
LF_PAD11
LF_PAD12
LF_PAD13
LF_PAD14
LF_PAD15
HasConstructorOrDestructor
HasOverloadedOperator
Nested
ContainsNestedClass
HasOverloadedAssignmentOperator
HasConversionOperator
ForwardReference
Scoped
HasUniqueName
Sealed
Protected
Public
Pseudo
NoInherit
NoConstruct
CompilerGenerated
Vanilla
Virtual
Static
IntroducingVirtual
PureVirtual
PureIntroducingVirtual
Near16
Far16
Huge16
BasedOnSegment
BasedOnValue
BasedOnSegmentValue
BasedOnAddress
BasedOnSegmentAddress
BasedOnType
BasedOnSelf
Near32
Far32
Near64
PointerToDataMember
PointerToMemberFunction
SingleInheritanceData
MultipleInheritanceData
VirtualInheritanceData
GeneralData
SingleInheritanceFunction
MultipleInheritanceFunction
VirtualInheritanceFunction
GeneralFunction
Volatile
Unaligned
NearC
FarC
NearPascal
FarPascal
NearFast
FarFast
NearStdCall
FarStdCall
NearSysCall
FarSysCall
MipsCall
Generic
AlphaCall
PpcCall
SHCall
ArmCall
AM33Call
TriCall
SH5Call
M32RCall
ClrCall
NearVector
CxxReturnUdt
ConstructorWithVirtualBases
Near
TypeLeafKind
LeafData
StringData
NumArgs
ArgType
NumStrings
Strings
MemberCount
FieldList
DerivedFrom
VShape
SizeOf
LinkageName
NumEnumerators
UnderlyingType
FieldListType
ElementType
IndexType
CompleteClass
OverriddenVFTable
VFPtrOffset
VFTableName
MethodName
ClassType
CallingConvention
FunctionOptions
NumParameters
ArgListType
ThisType
ThisAdjustment
VFTableOffset
ParentScope
Guid
PointeeType
PtrType
PtrMode
IsFlat
IsConst
IsVolatile
IsUnaligned
IsRestrict
IsThisPtr&
IsThisPtr&&
Representation
ModifiedType
Modifiers
BitSize
BitOffset
VFEntryCount
SourceFile
LineNumber
Module
AccessSpecifier
MethodOptions
UnknownMember
MethodCount
MethodListIndex
FieldOffset
EnumValue
BaseType
BaseOffset
VBPtrType
VBPtrOffset
VBTableIndex
ContinuationIndex
StartIndex
Signature
PrecompFile
Modifier
Procedure
MemberFunction
ArgList
Interface
TypeServer2
VFTable
VFTableShape
BitField
BaseClass
BaseInterface
VirtualBaseClass
IndirectVirtualBaseClass
VFPtr
StaticDataMember
OverloadedMethod
DataMember
NestedType
OneMethod
Enumerator
ListContinuation
FuncId
MemberFuncId
BuildInfo
StringList
StringId
UdtSourceLine
UdtModSourceLine
MethodOverloadList
Precomp
EndPrecomp
UnknownLeaf
 [ (
<not translated>*
HRESULT*
signed char*
unsigned char*
char*
wchar_t*
char16_t*
char32_t*
__int8*
unsigned __int8*
short*
unsigned short*
__int16*
unsigned __int16*
long*
unsigned long*
int*
unsigned*
__int64*
unsigned __int64*
__int128*
unsigned __int128*
__half*
float*
__float48*
double*
long double*
__float128*
_Complex float*
_Complex double*
_Complex long double*
_Complex __float128*
bool*
__bool16*
__bool32*
__bool64*
<no type>
<unknown simple type>
,,Z
-,Z
H,^
I,^
J,^
\,Z
],^
^,^
`,^
a,^
b,^
c,^
d,^
e,^
f,^
g,^
h,Z
i,^
j,^
k,^
l,^
m,^
n,^
w,.
x,.
y,.
z,.
{,.
|,.
},.
~,.
11.0.0
