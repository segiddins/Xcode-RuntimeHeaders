@(#)PROGRAM:SymbolicationDT  PROJECT:Symbolication-64535.37

initWithCpuType:cpuSubtype:
init
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
allocWithZone:
isLittleEndian
stringWithFormat:
exceptionWithName:reason:userInfo:
is64Bit
cpuType
cpuSubtype
class
isKindOfClass:
isEqualToArchitecture:
isEqual:
is32Bit
isBigEndian
initialize
currentArchitecture
anyArchitecture
ppcArchitecture
ppc32Architecture
ppc64Architecture
i386Architecture
x86_32Architecture
x86_64Architecture
armArchitecture
architectureWithCpuType:cpuSubtype:
encodeWithCoder:
initWithCoder:
copyWithZone:
hash
matchesArchitecture:
description
_cpuType
_cpuSubtype
.cxx_destruct
forMetaclass
type
owningClassInfo
flushMemoryCache
sharedTimerIfCreated
startWithMessage:
initWithTask:getBinariesList:
processName
binaryImagesDescription
executablePath
physicalFootprint
physicalFootprintPeak
_suspend
initWithTask:options:
regions
count
objectAtIndexedSubscript:
taskMemoryCacheForTask:
mapDyldSharedCacheFromTargetWithRegions:
initWithFormat:
addObject:
rangeOfString:
compare:
sortUsingComparator:
initWithTask:symbolicator:scanner:
realizedClasses
initWithScanner:
refineTypesWithOverlay:
addressOfSymbol:inLibrary:
_initWithTask:options:
countByEnumeratingWithState:objects:count:
isSubmap
mapAddress:size:
setNodeScanningLogger:
setReferenceScanningLogger:
detachFromTask
_destroyLinearClassInfos
dealloc
range
address
_withMemoryReaderBlock:
_destroyRetainedLinearArray:withCount:
indexForClassInfo:
numberWithUnsignedInt:
objectForKeyedSubscript:
numberWithUnsignedLongLong:
setObject:forKeyedSubscript:
_retainedLinearArrayWithReturnedCount:
ObjCclassCount
SwiftClassCount
classInfoWithClassName:binaryPath:type:
_addThreadNodesFromTask
_addSpecialNodesFromTask
protection
addRange:
UTF8String
length
_callRemoteMallocEnumerators:block:
hasPrefix:
isEqualToString:
objectContentLevel
_readonlyRegionRanges
setReadonlyRegionRanges:
addOrExtendRange:
setObjectContentLevel:
_sortAndClassifyBlocks
_sortBlocks
_buildRegionPageBlockMaps
_fixupBlockIsas
_findMarkedAbandonedBlocks
nodeForAddress:
infoType
classInfoIndexForObjCClassStructurePointerType:
identifyObjCClassStructureBlocksWithScanner:addressIdentifierBlock:
enumerateRealizedClassInfosWithBlock:
numberWithInt:
unsignedLongLongValue
className
allKeys
sortedArrayUsingSelector:
memoryReader
swiftRuntimeInfoStableABI
swiftRuntimeInfoPreABI
classInfoForMemory:length:remoteAddress:
hasSpecificLayout
instanceSpecificInfoForObject:ofSize:withScanner:memoryReader:
enumerateSublayoutsForSize:withBlock:
enumerateExternalValuesFromObject:withSize:block:
_withOrderedNodeMapper:
_identifyNonObjectsPointedToByTypedIvars
_identifyObjCClassStructureBlocks
_updateLinearClassInfos
enumerateInfosWithBlock:
mapTableWithKeyOptions:valueOptions:
classInfoForIndex:
offset
fullIvarNameAtOffset:
ivarName
typeName
characterAtIndex:
displayName
binaryName
enumerateAllPointerFieldsWithBlock:
_applyTypeOverlay:
hasSwiftContent
instanceSize
enumerateScanningLocationsForSize:withBlock:
defaultScanType
checkSourceAddress:toMaskDestinationAddress:
getLeafFieldAtOffset:leafOffset:
size
scanType
is64bit
enumerateStoredEntriesForObject:ofSize:externalValues:block:
nodeNamespaceSize
_orderedScanWithScanner:recorder:keepMapped:actions:
_withScanningContext:
_removeFalsePositiveLeakedVMregionsFromNodes:nodeCount:recorder:
markReachableNodesFromRoots:inMap:
processSnapshotGraphWithOptions:
initWithPid:nodes:nodeCount:zoneNames:classInfoMap:regions:pthreadOffsets:userMarked:
setSnapshotMachTime:
setScanner:
setDebugTimer:
setShowRawClassNames:
setProcessDescriptionString:
setProcessName:
setBinaryImagesDescription:
setPhysicalFootprint:
setPhysicalFootprintPeak:
setObjectContentLevelForNodeLabels:
setShowsPhysFootprint:
sampleAllThreadsOnceWithFramePointers:
labelForNode:
setLabel:forNode:
enumerateObjectsWithBlock:
addEdgeFromNode:sourceOffset:withScanType:toNode:destinationOffset:
stringWithUTF8String:
setBinarySectionName:forRange:
setRegionSymbolName:forRange:
indexForLocation:
rangeAtIndex:
backtraceLength
stackFramePointers
threadDescriptionStringForBacktrace:returnedAddress:
stringByAppendingString:
setThreadName:forRange:
backtrace
scanNodesForReferences:
unmapAllRegions
initWithTask:symbolicator:graph:debugTimer:collectDisklogs:
setStackLogReader:
processSnapshotGraphWithMallocStackLogs:
nodeDetails:
vmuVMRegionForAddress:
copy
contentForNode:
labelForMemory:length:remoteAddress:classInfo:
classInfoForObjectWithRange:
descriptionForRange:inSortedRegions:options:
nodeDescription:withNodeOffset:sortedVMRegions:
fieldAtOrBeforeOffset:
genericInfo
containsString:
referenceDescription:withSourceNode:destinationNode:sortedVMRegions:symbolicator:alignmentSpacing:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
copyUserMarked
zoneNameForIndex:
vmuVMRegionForNode:
enumerateMarkedObjects:withBlock:
enumerateRegionsWithBlock:
enumerateReferencesWithBlock:
hasLabelsForNodes
shortLabelForNode:
vmPageSize
zoneCount
regionCount
nodeCount
processDescriptionString
initWithSelfTaskAndOptions:
initWithTask:
_indexForClassInfo:
_cachedVariantForGenericInfo:variantKey:
_registerVariant:forGenericInfo:variantKey:
addRootNodesFromTask
addMallocNodesFromTask
addMallocNodes:
printRuntimeMetadataInfo
orderedNodeTraversal:withBlock:
removeRootReachableNodes
processSnapshotGraph
zoneNameForNode:
mallocNodeCount
classInfoForObjectAtAddress:
validateAddressRange:
addressIsInDataSegment:
enumerateNodesWithBlock:
nodeDescription:
nodeDescription:withOffset:
referenceDescription:withSourceNode:destinationNode:symbolicator:alignmentSpacing:
task
memoryCache
objectIdentifier
maxInteriorOffset
setMaxInteriorOffset:
exactScanningEnabled
setExactScanningEnabled:
scanningMask
setScanningMask:
abandonedMarkingEnabled
setAbandonedMarkingEnabled:
debugTimer
showRawClassNames
recordRuntimeMetadataChunkInfo
setRecordRuntimeMetadataChunkInfo:
_task
_pid
_suspendTime
_suspensionToken
_memoryCache
_objectIdentifier
_regionIdentifier
_blocks
_blocksCount
_blocksSize
_regions
_regionsCount
_regionMap
_stackRanges
_zoneNames
_dataSegmentsRangeInSharedCache
_dataSegmentsRangeOutsideSharedCache
_dataSegmentsRangeArrayOutsideSharedCache
_recordRuntimeMetadataChunkInfo
_addressToRuntimeMetadataChunkInfoDict
_zones
_zonesCount
_zonesSize
_threads
_threadsCount
_instanceValues
_instanceValuesCount
_instanceValuesSize
_classInfos
_classInfosCount
_classInfoIndexer
_scanCaches
_autoreleasePoolBoundaryNode
_recordAutoreleasePoolBoundaries
_sortedMethodCacheBucketPtrAddresses
_sortedMethodCacheBucketPtrAddressesIndex
_nextMethodCacheBucketPtrAddress
_exactScanningEnabled
_maxInteriorOffset
_scanningMask
_debugTimer
_showRawClassNames
_processName
_processDescriptionString
_executablePath
_binaryImagesDescription
_physicalFootprint
_physicalFootprintPeak
_regionDescriptionOptions
_referenceLogger
_nodeLogger
_abandonedMarkingEnabled
_processObjectGraph
_userMarkedAbandoned
_variantCachesByIsaIndex
_cfPasteboardReservedBase
numberWithLong:
mapAddress:size:returnedAddress:returnedSize:
usesSwiftRefcounting
pointerSize
nativeWeakReferencePointerMask
refcountIsSideTableMarkerMask
refcountIsSideTableMarkerValue
sideTablePointerMask
sideTablePointerRightShift
sideTablePointerLeftShift
vmRegionRangeInfoForRange:
stackIdentifier
stackIDForNode:
getFramesForStackID:stackFramesBuffer:
getFramesForNode:inLiteZone:stackFramesBuffer:
symbolicatedBacktraceForFrames:frameCount:options:
lastPathComponent
appendString:
coldestFrameIsNotThreadId
appendFormat:
binaryImagePathForPCaddress:
identifierForBinaryImagePath:
functionNameForPCaddress:
containsObject:
initWithBytes:length:encoding:
functionRangeContainingPCaddress:
binaryImageRangeForPCaddress:
stringWithString:
sourceFileNameAndLineNumberForPCaddress:fullPath:
enumerateRecords:
enumerateMSLRecordsAndPayloads:
getFramesForAddress:size:inLiteZone:stackFramesBuffer:
sourcePathForPCaddress:
sourceFileNameForPCaddress:
sourceLineNumberForPCaddress:
symbolicatedBacktraceForNode:nodeDetails:isLiteZone:options:
symbolicatedBacktraceForStackID:options:
inspectingLiveProcess
usesLiteMode
regionTracker
excludedFrames
setExcludedFrames:
liteModeStackIDforAddress:size:
liteModeStackIDforVMregionAddress:
liteMSLPayloadforMallocAddress:size:
liteMSLPayloadforVMregionAddress:
streamFullStackLogsToBlock:
nodesInUniquingTable
_regionTracker
_addressToSymbolicationMap
_excludedFrames
_binaryImagePathToIdentifierMap
_usesLiteMode
_coldestFrameIsNotThreadId
backtraceString
setBacktraceString:
_backtraceString
scannerOrGraph
printout:
descriptionWithOptions:maximumLength:
labelForNode:details:shortLabel:
printContents:size:
nodeTypeDescription:details:mallocBySize:
nodeDescription:withOffset:showLabel:
nodeDescription:usingDetails:
hasSuffix:
subgraphWithMarkedNodes:
setLeakedGraph:
initWithSymbolicator:sampler:options:
addGroupNodeForNodes:count:
stronglyConnectedComponentSearch:withRecorder:
invertedGraph
isRootNode:
isGroupNode:
binaryPath
enumerateMembersOfGroupNode:withBlock:
setLeakTreeRootsArray:
parentGroupForNode:
addChildWithName:address:count:numBytes:toNode:
addUniqueChildWithName:address:count:numBytes:toNode:isLeafNode:
parent
name
substringFromIndex:
referenceDescription:dstDescription:is64bit:
enumerateReferencesOfNode:withBlock:
numChildren
addChildCountsIntoNode
comparePuttingRetainCycleNodesAtTop:
sortUsingSelector:
regularExpressionWithPattern:options:error:
sortedChildren
stringByReplacingMatchesInString:options:range:withTemplate:
sumOfChildCounts
unsignedIntValue
keysSortedByValueUsingComparator:
lastObject
printCallTreeToFile:options:
checkTaskExistence
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
setLeakedNodes:
setAbandoned:
markReachableNodesFromRoots:inMap:options:
printLeak:node:details:region:stop:
buildLeakTree
outputFile
printLeakTree
initWithTask:graph:scanner:stackLogReader:
doNormalLeakDetectionWithError:
showLeakedVMregions
setShowLeakedVMregions:
showContext
setShowContext:
showOnlyVMregions
setShowOnlyVMregions:
fullStacks
setFullStacks:
showBinaryContents
setShowBinaryContents:
checkAbandoned
setCheckAbandoned:
suppressOutput
setSuppressOutput:
showListOfLeaks
setShowListOfLeaks:
groupByType
setGroupByType:
referenceTreeShowRegionVirtualSize
setReferenceTreeShowRegionVirtualSize:
setOutputFile:
fcloseOutput
setFcloseOutput:
graph
scanner
stackLogReader
abandoned
leakedNodes
leakTreeRootsArray
leakedGraph
_showLeakedVMregions
_showOnlyVMregions
_fullStacks
_showBinaryContents
_checkAbandoned
_suppressOutput
_showListOfLeaks
_groupByType
_referenceTreeShowRegionVirtualSize
_objectContentLevel
_max_contents_bytes
_stackLogReader
_graph
_scanner
_outputFile
_fcloseOutput
_numExcluded
_abandoned
_leakedNodes
_leakTreeRootsArray
_leakedGraph
_showContext
setAddress:
setSize:
setStackIdentifier:
userTag
setUserTag:
setClass:forClassName:
_claimUnarchivingOfClass:
handleStackLogType:address:size:stackID:
encodeObject:forKey:
serialize32:
serialize64:
copyContiguousData
decodeObjectOfClass:forKey:
initWithData:
deserialize32
arrayWithCapacity:
deserialize64
_regionIndexForAddress:
objectAtIndex:
removeObjectAtIndex:
insertObject:atIndex:
supportsSecureCoding
initWithTask:stackLogReader:
convertStackIDs:
_regionInfoArray
array
initWithString:
newlineCharacterSet
scanUpToString:intoString:
isAtEnd
scanUpToCharactersFromSet:intoString:
rangeOfString:options:
setObject:forKey:
substringWithRange:
scanHexLongLong:
cStringUsingEncoding:
enumerateMatchesInString:options:range:usingBlock:
date
initFromCorpse
initFromLiveProcess
_libraryLoaded:
objectForKey:
processIdentifier
cleansePathsIncludingBinaryImageList:
stringWithCString:encoding:
substringToIndex:
dataWithLength:
mutableBytes
_readDataFromMemory:atAddress:size:
propertyListWithData:options:format:error:
dictionary
stringByStandardizingPath
dataWithBytes:length:
_extractInfoPlistFromSymbolOwner:withMemory:
bundleIdentifier
binaryImages
dictionaryWithCapacity:
stringByReplacingOccurrencesOfString:withString:
processVersionDictionary
_sanitizeVersion:
setCrashReporterInfo
_bundleLock
lock
mutableCopy
objectEnumerator
nextObject
boolValue
numberWithBool:
sortUsingFunction:context:
unlock
clearCrashReporterInfo
initWithPid:
envVars
string
componentsJoinedByString:
bytes
arrayWithObject:
removeRangeAtIndex:
_rangesOfBinaryImages:forBacktraces:
_binaryImagesDescriptionForRanges:
stringByAppendingPathComponent:
initWithContentsOfFile:
_buildVersionDictionary
_osVersionDictionary
_buildInfoDescription
processVersion
_cpuTypeDescription
parentProcessName
setDateFormat:
stringFromDate:
dateWithTimeIntervalSince1970:
_systemVersionDescription
processDescriptionHeader
dateAndVersionDescription
analysisToolDescription
processStatisticsDescription
parseBinaryImagesDescription:
symbolicatorFromBinaryImagesDescription:
initWithPid:orTask:
parentPid
parentProcessPath
isAppleApplication
binaryImageDictionaryForAddress:
valueForEnvVar:
binaryImagesDescriptionForBacktraces:
_taskIsCorpse
_hardwareModel
_processNameNeedsCorrection
_symbolicator
_executablePathNeedsCorrection
_executableLoadAddress
_is64Bit
_proc_starttime
_lsApplicationInformation
_binaryImages
_sortedBinaryImages
_binaryImageHints
_unreadableBinaryImagePaths
_binaryImagePostProcessingComplete
_mappedMemory
_parentProcessName
_parentExecutablePath
_ppid
_date
_environment
uniquedStringCount
serializeString:
initWithCapacity:
copyDeserializedString
_indexForString:
setString:forNode:
stringForNode:
_strings
_stringToIndexMapVoidPtr
_nodeToStringIndexMapVoidPtr
defaultOverlayWithScanner:
arrayWithObjects:count:
setWithArray:
setScanType:
addVariant:forField:withEvaluator:
setDefaultScanType:
setDestinationLayout:
mutateTypeFieldsWithBlock:
isARR
setDisplayName:
firstFieldWithName:
initWithName:type:scan:offset:size:
replaceField:withFields:
setVariantScanType:withEvaluator:
addMetadataRefinementRule:
defaultOverlay
refinementRules
_rules
superclassInfo
sideTableLayout
nativeWeakReferencePointerIsSideTable
nativeWeakReferenceMarkerMask
nativeWeakReferenceMarkerValue
addVariantRecursively:forField:withEvaluator:
unownedExtraDataLayout
mutateTypeFieldsRecursivelyWithBlock:
stringByAppendingFormat:
initWithTask:symbolicator:
_msl_payload_version
initWithCharactersNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:encoding:freeWhenDone:
rangeOfCharacterFromSet:
removeAllRanges
intersectsLocation:
isPseudo
pseudoNodeTopOfStackChild
sortedChildrenWithPseudoNode
largestTopOfStackPath
addBacktrace:
rootForSamples:symbolicator:sampler:options:
initWithName:address:count:numBytes:
childAtIndex:
setChildren:
browserName
numBytes
nodeWithName:address:count:numBytes:
setString:
getBrowserName:
setCharactersToBeSkipped:
scanString:intoString:
scanLongLong:
scanLocation
addChild:
findOrAddChildWithName:address:nodeSearchType:isLeafNode:
compareSizeAndCount:
parseNameIntoSymbol:library:loadAddress:offset:address:suffix:
longLongValue
pseudoName
sortedChildrenWithPseudoNode:withCompare:
addObjectsFromArray:
symbolNameIsUnknown
nameWithoutOffset
comparePuttingMainThreadFirst:
isMallocBlockContentNode
_printCallTreeToFile:cumulativeOutput:indentString:branchPointCount:topFunctions:options:
deleteCharactersInRange:
countFunctionOccurrencesInTree:
fullOutputWithThreshold:showPseudoNodes:
callTreeHasBranches
stringFromCallTreeWithOptions:
stringFromCallTreeIndentIfNoBranches:showPseudoNodes:
printCallTreeToFile:
filterOutSymbols:required:
initWithArray:
chargeLibrariesInSet:toCaller:parentLibrary:
pruneCount:
pruneMallocSize:
rootForSamples:symbolicator:
makeFakeRootForNode:
allChildren
nameWithStringsForSymbol:library:loadAddress:offset:address:suffix:
findOrAddChildWithName:address:
fullOutputWithThreshold:
stringFromCallTreeIndentIfNoBranches:
printCallTree
invertedNode
filterOutSymbols:
chargeLibrariesToCallers:keepBoundaries:
chargeSystemLibrariesToCallersAndKeepBoundaries:
_parent
_name
_address
_numBytes
_count
_numChildren
_children
allObjects
countForObject:
sortedArrayUsingComparator:
removeLastObject
indexForString:insertIfMissing:
sort
setString:forRange:
stringForAddress:
rangeContainingAddress:
rangeForString:startingAtAddress:
stringForIndex:
_rangeAndStringVectorVoidPtr
_sorted
stackIDsToNodesWithFilter:
addBacktrace:count:numBytes:
allBacktracesHaveBeenAdded
initWithGraph:stackLogReader:
callTreeWithOptions:nodeFilter:
updateFromSystem
removeAllObjects
update
removeObjectForKey:
isApp
enumerateKeysAndObjectsUsingBlock:
isEqualToDictionary:
getProcessIds
_populateFromSystem
allValues
realAppName
newestProcInfoWithName:
startTime
setProcInfos:
addProcInfo:
removeProcInfo:
setOwnedOnly:
ownedOnly:
setAppsOnly:
appsOnly
allProcInfos
allPIDs
allNames
allPathNames
newestProcInfo
procInfoWithPID:
procLock
allProcs
filteredProcs
ownedOnly
userAppName
initWithCondition:
initWithPID:task:processName:is64Bit:options:
initWithPID:orTask:options:
stop
timeIntervalSinceNow
_checkDispatchThreadLimits
initWithSamplingContext:thread:recordFramePointers:
fixupStackWithSamplingContext:symbolicator:
lockWhenCondition:
_makeHighPriority
initializeSamplingContextWithOptions:
recordSampleTo:beginTime:endTime:thread:recordFramePointers:clearMemoryCache:
_makeTimeshare
performSelectorOnMainThread:withObject:waitUntilDone:
unlockWithCondition:
initWithPID:
sampleAllThreadsOnce
_fixupStacks:
symbolicator
tryLockWhenCondition:
_runSamplingThread
detachNewThreadSelector:toTarget:withObject:
samplingDidStart:
samplingDidStop:
threadNameForThread:returnedThreadId:returnedDispatchQueueSerialNum:
dispatchQueueNameForSerialNumber:returnedConcurrentFlag:returnedThreadId:
thread
mainThread
dispatchQueueSerialNumber
setSamplingInterval:
setTimeLimit:
start
waitUntilDone
stopSampling
stopSamplingAndReturnCallNode
outputString
sampleAllThreadsOfPID:
sampleAllThreadsOfTask:
sampleAllThreadsOfTask:symbolicate:
initWithPID:options:
sampleThread:
samplingInterval
timeLimit
setSampleLimit:
sampleLimit
setRecordThreadStates:
samples
sampleCount
flushData
threadNameForThread:
dispatchQueueNameForSerialNumber:
setDelegate:
delegate
preloadSymbols
sampleForDuration:interval:
forceStop
writeOutput:append:
_options
_needTaskPortDealloc
_recordThreadStates
_sampling
_numberOfCopiedBacktraces
_processDescription
_samplingContext
_lastThreadBacktraceMap
_previousThreadList
_mainThread
_previousThreadCount
_maxPreviousThreadCount
_tbRate
_tbInterval
_stateLock
_interval
_timeLimit
_sampleLimit
_numberOfSamples
_samples
_stacksFixed
_delegate
_timeSpentSampling
_dispatchThreadSoftLimit
_dispatchThreadSoftLimitCount
_dispatchThreadHardLimit
_dispatchThreadHardLimitCount
_threadPortToNameMap
_dispatchQueueSerialNumToNameMap
stopPeeking
peekAtAddress:size:returnsBuf:
taskIs64Bit:
enumerateMemoryCache:
startPeeking
readPointerAt:value:
copyRange:to:
_memoryRegions
_taskIs64Bit
_stopped
_intRegion
_stringRegion
_stringRegCapacity
_intRegCapacity
_cursor
serializeNullTerminatedBytes:
version
_serializeValues:count:
_map
_internCursor
initWithUTF8String:
copyDeserializedStringWithID:
skipFields:
copyDeserializedNullTerminatedBytes
_deserializeValues:
_cache
_data
replaceBytesInRange:withBytes:
initWithRanges:count:
setCapacity:
addRanges:
rangeForLocation:
insertRange:atIndex:
intersectsRange:
subrangeNotExcludedBySelfForRange:
largestRange
sumLengths
ranges
_ranges
_max
mergeRange:
mergeRange:excludingRanges:
_mergeAllBitsOfRange:excludingRanges:mergeRanges:
sortAndMergeRanges
mergeRanges:
mergeRanges:excludingRanges:
subtract:mergeRanges:
setVersion:
initWithClassName:binaryPath:type:
_processARRLayout:scanType:
_demangleClassName
hasVariantLayout
swiftFieldWithName:offset:kind:typeref:
initWithName:type:kind:scan:offset:size:stride:subFieldArray:swiftTyperef:
memoizeSwiftField:withName:offset:kind:typeref:
objcABI
swiftMirror
_objcABIFromObjectIdentifier:
_setClassNameWithAddress:symbolicator:
initWithObjcIvar:size:isARC:is64Bit:
_parseIvarsAndLayouts
isRootClass
classInfoForAddress:
_initWithClass:type:realizedOnly:infoMap:objectIdentifier:reader:
_setBinaryPath:
addClassInfo:forAddress:
_freeLocalIvarList
_copyWithInstanceSize:superclassOffset:asVariant:mutable:
translateIsaPointer:
_identifyObjCClassStructureBlocksForIsa:isMetaclass:withScanner:addressIdentifierBlock:
indexForFieldInfo:
fieldInfoForIndex:
initWithSerializer:classMap:version:
decodeObject
remoteIsa
_logDescriptionWithSuperclasses:indentation:toLogger:
destinationLayout
scannableSize
setIsCapture:
setIsByref:
_applyExtendedLayout:withSize:
setSuperclassInfo:
isArraySize
isArrayEntries
enumerateAllFieldsWithBlock:
field
isStorageImplPointer
value
isStorageBitmapPointer
isKeysPointer
isValuesPointer
isKeyField
isValueField
stride
initWithField:value:
_totalIvarCount
enumerateClassHierarchyWithBlock:
enumerateTypeFieldsWithBlock:
enumeratePointerTypeFieldsWithBlock:
enumerateObjectsUsingBlock:
subFieldArray
replaceFieldRecursively:withField:
fullIvarDescription
_genericBlockByrefInfo
descriptionForTypeEncoding:ivarName:
sizeofClassStructure
_setDisplayName:
_setSuperclassInfo:
_setDefaultScanType:
initWithClosureContext:typeInfo:infoMap:swiftFieldMetadataContext:
initSwiftClassWithName:classInfoType:size:
initWithClass:type:infoMap:objectIdentifier:reader:
initWithRealizedClass:type:infoMap:objectIdentifier:reader:
serializeWithClassMap:simpleSerializer:version:
instanceSpecificInfoForObject:ofSize:memoryReader:
_addFields:
_replaceField:withFields:
_replaceFieldRecursively:withField:
_setFields:
_addVariantAction:withEvaluator:
_setIsa:
shortIvarDescription
scanDescriptionWithSize:
isRealized
isMetaClass
hasCppConstructorOrDestructor
ivarCount
_remoteIsa
_remotePointerSize
_ivarCount
_superclassOffset
_instanceSize
_ro_flags
_rw_flags
_defaultScanType
_remoteType
_localIvarList
_remoteClassName
_displayName
_remoteBinaryPath
_superclassLayout
_genericLayout
_variantEvaluators
_variantActions
_weakLayout
_strongLayout
_hasSpecificLayout
_hasVariantLayout
_usesSwiftRefcounting
mutateTypeFieldsRecursivelyWithBlock:parentOffset:
addFields:
setBinaryPath:
setFields:
_field
_value
numberOfMatchesInString:options:range:
decodeArrayOfObjCType:count:at:
isCapture
isByref
initWithSwiftCore:memoryReader:
runtimeHasStableABI
_nativeWeakReferenceMarkerMask
_nativeWeakReferenceMarkerValue
_nativeWeakReferencePointerMask
_nativeWeakReferencePointerIsSideTable
_refcountIsSideTableMarkerMask
_refcountIsSideTableMarkerValue
_sideTablePointerMask
_sideTablePointerRightShift
_sideTablePointerLeftShift
_sideTableLayout
_unownedExtraDataLayout
_runtimeHasStableABI
_endEvent
timeIntervalSinceDate:
sharedTimer
_programStartTime
_eventStartTime
_eventMessage
region
setRegion:
entryIndex
setEntryIndex:
_region
_entryIndex
setScannableSize:
setFlags:
initWithSerializer:classMap:version:returnedDestinationLayoutClassInfoIndex:
_getFieldAtOffset:
setWithObjects:
_fullIvarNameAtOffset:leafOffset:depth:
typedDescription
initializeSubFieldArray
initStorageInfoFieldWithName:type:kind:scan:offset:size:stride:subFieldArray:
initStorageEntryFieldWithName:type:kind:scan:offset:size:stride:subFieldArray:
_setIvarName:
_setTypeName:
_setScanType:
_setOffset:
_setSize:
_setFlags:
bitfieldWidth
_setScannableSize:
_setStride:
_setDestinationLayout:
descriptionOfFieldValueInObjectMemory:scanner:
flags
swiftTyperef
_ivarName
_typeName
_scanType
_offset
_size
_scannable
_stride
_flags
_destinationLayout
_subFieldArray
_swiftTyperef
setObject:atIndexedSubscript:
setIvarName:
setTypeName:
setOffset:
setStride:
addSubField:
_recordRegionsAroundAddress:regionDescriptionOptions:
initWithTask:pid:options:
descriptionOfRegionsAroundAddress:options:maximumLength:memorySizeDivisor:
descriptionWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
columnHeadersWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
descriptionForRegionTotalsWithOptions:memorySizeDivisor:
descriptionForMallocZoneTotalsWithOptions:memorySizeDivisor:
initWithGraph:options:
nonSubmapRegionContainingAddress:
hasFractionalPageSizes
descriptionForRange:
descriptionForRange:options:
descriptionOfRegionsAroundAddress:options:
descriptionForRegionTotalsWithOptions:
_mallocZoneStatisticsMap
_hasFractionalPageSizes
hasSameInfoAsRegion:
addInfoFromRegion:
stringByResolvingSymlinksInPath
breakAtLength:
replaceObjectAtIndex:withObject:
surfaceDescriptions
integerValue
surfaceID
pixelFormat
virtualAddress
width
height
allocationSize
shortValue
_className
_localClass
_handlerSelector
hashTableWithOptions:
loadSwiftReflectionLibraries
_populateSwiftABIVariables
findCFTypes
setupIsaTranslator
findObjCAndSwiftClasses
_generateClassInfosForObjCClassStructurePointerTypes
pointerValue
_classInfoWithNonobjectType:binaryPath:
_isValidInstanceLength:expectedLength:
_classInfoWithPthreadType:
classInfoForNonobjectMemory:length:
hasSwiftReflection
_returnFaultedClass:ofType:
_faultClass:ofType:
_findObjCAndSwiftClassesFromClass:recursionDepth:
dictionaryWithContentsOfFile:
bundleWithIdentifier:
osMajorMinorVersionString
pathForResource:ofType:
buildIsaToObjectLabelHandlerMap
uniquifyStringLabel:stringType:printDetail:
labelForNSNumber:length:remoteAddress:
labelForNSDate:length:remoteAddress:
labelForNSString:mappedSize:remoteAddress:printDetail:
objectLabelHandlerForRemoteIsa:
labelForNSString:length:remoteAddress:
labelForNSCFStringAtRemoteAddress:printDetail:
labelForObjectOfClass:atOffset:ofObject:
_remoteAddressIsOKtoRead:
member:
labelForItemCount:
labelForNSDictionary:length:remoteAddress:
labelForNSSet:length:remoteAddress:
labelForOSDispatchMach:length:remoteAddress:
labelForOSXPCObject:length:remoteAddress:
_findOffsetsInOSXPCConnection:length:
protocol
labelForMallocBlock:
labelForMallocBlock:usingHandlerBlock:
labelForMemory:length:remoteAddress:classInfo:usingHandlerBlock:
classInfoForObjCClassStructurePointerType:
labelForClassStructure:length:remoteAddress:
labelForClassDataRW:length:remoteAddress:
labelForClassDataExtRW:length:remoteAddress:
labelForClassDataRO:length:remoteAddress:
labelForTaggedPointer:
reason
valueWithPointer:
stringByDeletingLastPathComponent
_dlopenLibSwiftRemoteMirrorFromDir:
_dlopenLibSwiftRemoteMirrorNearLibSwiftCoreWithSymbolicator:avoidSystem:
_dlopenLibSwiftRemoteMirrorNearExecutable
_dlopenLibSwiftRemoteMirrorWithSymbolicator:
_populateSwiftReflectionInfo:
CFTypeCount
enumerateAllClassInfosWithBlock:
classInfoForMemory:length:
vmRegionRangeForAddress:
symbolForAddress:
classNameForTaggedPointer:
labelForNSConcreteAttributedString:length:remoteAddress:
labelForNSURL:length:remoteAddress:
labelForNSPathStore2:length:remoteAddress:
labelForCFBundle:length:remoteAddress:
labelForNSBundle:length:remoteAddress:
labelForNSArray:length:remoteAddress:
labelForNSCFDictionary:length:remoteAddress:
labelForNSConcreteHashTable:length:remoteAddress:
labelForNSCFSet:length:remoteAddress:
labelForNSData:length:remoteAddress:
labelForNSConcreteData:length:remoteAddress:
labelForNSConcreteMutableData:length:remoteAddress:
labelForNSInlineData:length:remoteAddress:
labelForOSDispatchQueue:length:remoteAddress:
labelForOSLog:length:remoteAddress:
noLabelForOSXPCObject:length:remoteAddress:
labelForOSTransaction:length:remoteAddress:
labelFor_NSActivityAssertion:length:remoteAddress:
labelForOSXPCConnection:length:remoteAddress:
labelForOSXPCActivity:length:remoteAddress:
labelForProtocol:length:remoteAddress:
labelForNSXPCInterface:length:remoteAddress:
labelForNSXPCConnection:length:remoteAddress:
labelFor__NSMallocBlock__:length:remoteAddress:
labelForMemory:length:
labelForMemory:length:remoteAddress:
needToValidateAddressRange
readonlyRegionRanges
taggedPointerMask
_needToValidateAddressRange
_memoryReader
_objcABI
_swiftMirror
_libSwiftRemoteMirrors
_swiftRuntimeInfoStableABI
_swiftRuntimeInfoPreABI
_debugSwiftRemoteMirror
_realizedIsaToClassInfo
_unrealizedClassInfos
_cfTypeIDToClassInfo
_nonobjectClassInfosDict
_objCClassStructureClassInfoIndexes
_coreFoundationCFTypeIsa
_foundationCFTypeIsa
_objCClassCount
_swiftClassCount
_cfClassCount
_isaTranslator
_fragileNonPointerIsas
_lastCPlusPlusIsa
_lastCPlusPlusClassInfo
_nonObjectIsaHash
_isaToObjectLabelHandlerMap
_itemCountToLabelStringUniquingMap
_labelStringUniquingMaps
_stringTypeDescriptions
_stringUniquingSet
_pidToProcessNameDict
_targetProcessVMranges
_targetProcessContainsMallocStackLoggingLiteZone
_cfBooleanTrueAddress
_cfBooleanFalseAddress
_osDispatchMachOffsetInOSXPCConnection
_taggedPointerMask
_taggedPointerObfuscator
setGraph:
copyOriginalUniquingTable:
populateBacktraceUniquingTableWithStackLogs:
symbolicateBacktraceUniquingTable
encodeInt64:forKey:
encodeInt32:forKey:
_archivedBytes:length:options:
_archivedObject:options:
encodeBool:forKey:
decodeInt32ForKey:
decodeInt64ForKey:
_copyUnarchived:length:options:
_unarchivedObject:ofClass:options:
decodeBoolForKey:
_setFunctionName:forPCAddressRange:
_setSourcePath:lineNumber:forPCAddressRange:
path
_parseSourceInfoString:intoComponents:
sourceLineRangeContainingPCaddress:
diskLogs
setDiskLogs:
_diskLogs
_nodeNamespaceSize
_nodeToStackIndexTable
_nodeToMSLPayloadTable
_backtraceUniquingTable
_originalUniquingTable
_functionNameRanges
_sourceInfoRanges
initWithTask:thread:is64Bit:
setStartTime:
setEndTime:
setLengthTime:
setThreadState:
threadState
_flavor
_callstack
numberWithInteger:
_infoFromCommandLine:
procTableName
firstArgument
processParentId:
requestedAppName
isCFM
isProcessRunning:
caseInsensitiveCompare:
arguments
ppid
isMachO
isNative
isRunning
terminate
signal:
compareByName:
compareByUserAppName:
_arguments
_envVars
_procTableName
_realAppName
_requestedAppName
_firstArg
_startTime
decimalDigitCharacterSet
invertedSet
initWithNodesNoCopy:nodeCount:
setIndexedClassInfos:
initWithArchived:version:options:diskLogs:
intValue
initWithVMRegionData:encodedVersion:simpleSerializer:
setVMRegionDataExtra:
archiveDictionaryRepresentation:options:
internalizeNodes
getVMRegionData:withSimpleSerializer:
getVMRegionDataExtra:
_deriveObjcClassStructureRanges
rangeForSymbolName:inRegion:
enumerateReferencesFromDataRegion:atGlobalSymbol:withBlock:
objectContentLevelForNodeLabels
indexedClassInfos
_renameWithNodeMap:nodeNamespace:edgeMap:edgeNamespace:
binarySectionNameForAddress:
binarySectionRangeContainingAddress:
regionSymbolNameForAddress:
regionSymbolRangeContainingAddress:
threadNameForAddress:
_detailedNodeOffsetDescription:withSourceNode:destinationNode:alignmentSpacing:
_descriptionForRegionAddress:withOffset:showSegment:
stringWithCapacity:
_refineTypesWithOverlay:
_rawReferenceInfoWithName:
_internalAccessRawEdgesWithBlock:
nodeIsAutoreleasePoolContentPage:
scanTypeOfReferenceWithName:
_internalEnumerateEdgesOfNode:withBlock:
nodeDetailIsAutoreleasePoolContentPage:
nodeReferencedFromDataRegion:byGlobalSymbol:
setUserMarked:
shortNodeDescription:
nodeDescription:withDestinationNode:referenceInfo:
nodeOffsetDescription:withSourceNode:destinationNode:
referenceDescription:withSourceNode:destinationNode:alignmentSpacing:
refineEdges:withOptions:markingInvalid:
snapshotMachTime
showsPhysFootprint
_kernPageSize
_machAbsolute
_regionCount
_threadNameRanges
_binarySectionNameRanges
_regionSymbolNameRanges
_gotObjcClassStructureRanges
_pthreadOffsets
_nodeLabels
_userMarked
_showsPhysFootprint
_objectContentLevelForNodeLabels
descriptionStringForAddress:atTime:leafFrame:startOfRecursion:
addAddress:
fileSystemRepresentation
initWithObjects:
whitespaceCharacterSet
characterSetWithCharactersInString:
scanInteger:
scanCharactersFromSet:intoString:
scanFloat:
setScanLocation:
addUniqueChildWithName:address:count:numBytes:toNode:
initWithCallGraphFile:fileHeader:topFunctionsList:binaryImagesList:
_sampler
_uniqueNodeNames
_addressToSymbolNameMap
_addressToLeafSymbolNameMap
_addresses
_combinedName
decodeClassName:asClassName:
allowsKeyedCoding
addFieldInfo:
initWithObjects:count:
addClassInfosFromMap:
fieldInfoCount
_classInfoMap1
_classInfoMap2
_linearClassInfos
_fieldInfoMap1
_fieldInfoMap2
_linearFieldInfos
getObjects:range:
columnHeadersWithOptions:maximumLength:
maxProtection
isWired
prot
maxProt
summarized
external_pager
share_mode
purgeable
virtual_pages
pages_resident
pages_shared_now_private
pages_swapped_out
pages_dirtied
ref_count
user_tag
object_id
nesting_depth
is_submap
is_macho_region
is_unused_data_region
is_unused_data_page_shared_with_active_content
is_wired
reserved_flags
mallocBlockCount
mallocTypeFlag
zone_index
coalesced_region_count
resident_size
shared_now_private_size
swapped_out_size
dirty_size
purgable_vol_size
purgable_non_vol_size
purgable_empty_size
reusable_size
archivedDataWithRootObject:requiringSecureCoding:error:
dataWithBytesNoCopy:length:freeWhenDone:
initForReadingFromData:error:
initWithPlistRepresentation:error:
subdataWithRange:
writeData:
offsetInFile
seekToFileOffset:
seekToEndOfFile
JSONObjectWithData:options:error:
localizedDescription
decapsulateIPSheaderInData:error:
decapsulateSupplementalData:forTag:
decapsulatePlistData:error:
edgeNamespaceSize
graphIs64bit
_reorderEdgesNaturally
numberWithUnsignedInteger:
dataWithPropertyList:format:options:error:
initWithNodes:
_internalAddEdgeFromNode:toNode:withName:
_faultDeadNodeMap
_removeEdges:
raise:format:
_adjustAdjacencyMap
enumerateEdgesWithBlock:
_dfsCore:colors:visitBlock:examineBlock:
_searchMainLoop:action:
_bfsCore:colors:visitBlock:examineBlock:
inverted
setInverted:
removeMarkedNodes:
_renormalize
directedGraphWithData:error:
encapsulateData:to:withSupplementalDataTag:dataGeneratorBlock:
setGraphCompatibilityVersion:
setGraphVersion:
initWithPlistRepresentation:
plistRepresentationWithOptions:
addNode
addEdgeFromNode:toNode:
deadNodeMap
removeMarkedEdges:
isNodePresent:
ungroupNode:
edgeCount
enumerateEdgesOfNode:withBlock:
withNodeMarkingMap:
withEdgeMarkingMap:
depthFirstSearch:nodeVisitBlock:edgeVisitBlock:
breadthFirstSearch:nodeVisitBlock:edgeVisitBlock:
_dumpAdjacencyList
invertEdges
renormalizedGraph
additionalProperties
setAdditionalProperties:
_graphCompatibilityVersion
_graphVersion
_nodeCount
_edgeCount
_edgeCapacity
_externalEdges
_deadNodes
_nextNodeName
_nextEdgeName
_nodeAdjIndex
_edges
_additionalProperties
_indexedNodeSpace
_indexedEdges
_insideSearch
_inverted
_graphIs64bit
setLength:
initWithFormat:arguments:
addEntriesFromDictionary:
_modifyDerivativeGraphCount:
_compareWithGraph:andMarkOnMatch:
initWithNodeCount:nodeProvider:
enumerateObjectsOfGroupNode:withBlock:
nodeReferencedFromSourceNode:byIvarWithName:
enumerateObjectsContainedInCollection:withBlock:
referenceInfoWithName:
createMapForMinusGraph:
createMapForIntersectGraph:
_referenceTable
_referenceTableCapacity
_referenceTableLarge
_referenceTableLargeCount
_referenceTableLargeCapacity
_internalizedNodes
_internalizedCount
_knownClassInfos
_nodeProvider
_referenceGraph
_referenceGraphNodeNamespaceSize
_referenceGraphEdgeNamespaceSize
_referencingCount
subgraphWithShortestPathsFromNode:toNodes:
subgraphWithUniquePathsFromNode:toNodes:
VMUArchitecture unhandled cpuType
Cannot answer isLittleEndian for cpuType is %d cpuSubtype is %d
Cannot answer is64Bit for cpuType is %d cpuSubtype is %d
<VMUArchitecture: %p> 0x%x,0x%x %@ - %@
BigEndian
LittleEndian
<PTHREAD_T>
autoreleasepool boundary
RegionEndOffsetKey
StartRoutineOffsetKey
StartRoutineArgumentOffsetKey
FirstTLSslotKey
LastTLSslotKey
VMUEnumeratorValidation
couldn't create new pthread for determine_pthread_offsets
[%@] Invalid task port provided to initializer.
VMUTaskMemoryScanner building VMUProcessDescription
VMUTaskMemoryScanner get malloc zones array
UnknownZone (%#llx)
i32@?0Q8^{malloc_introspection_t=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}16@"NSString"24
q24@?0@"NSString"8@"NSString"16
DefaultMallocZone
i24@?0r^v8r^v16
VMUTaskMemoryScanner setting up VMUScanOverlay
___CFPasteboardReservedBase
CoreFoundation
Illegal attempt to scan memory of mach_task_self()
Unable to suspend target task: %s (%d)
Unable to resume target task: %s (%d)
VMUTaskMemoryScanner memory reader unmapping queue
^v24@?0Q8Q16
v24@?0I8^{?=QQ}12I20
v16@?0^?8
v16@?0@?<^v@?QQ>8
/usr/lib/libobjc.A.dylib
zone %s 
claimed region: [%#llx-%#llx] %s %s (%llu %s)%s - type '%s' range: [%#lx-%#lx]
page
pages
 [root]
v28@?0I8I12^{?=QQ}16I24
MallocHelperZone_0x
DefaultMallocZone_0x
Region state after claims:
region: [%#llx-%#llx] %s %s (%llu %s)%s  %s
warning: zone enumerator for "%s" returned '%s' %#llx (%llu bytes) in region: [%#llx-%#llx] %s
<unclaimed>
I24@?0Q8I16c20
v32@?0Q8@"DVT_VMUClassInfo"16^c24
q24@?0@"NSNumber"8@"NSNumber"16
    +%5llu %#llx[%u]  %-13s  %s %s
metaclass
class
v28@?0I8Q12@"DVT_VMURuntimeMetadataChunkInfo"20
Swift Metadata
Metadata
%s %#llx-%#llx[%llu]
warning: zone fixup failed - block %#llx from zone "%s" discovered in region [%#llx-%#llx] already claimed by "%s"
v24@?0@"DVT_VMUClassInfo"8I16I20
v24@?0Q8@"NSArray"16
B16@?0^v8
v16@?0@?<v@?I@?<B@?^v>>8
__NSMallocBlock__
v36@?0Q8@"DVT_VMUClassInfo"16I24^c28
%@.%@ (%@)
malloc
v32@?0@"DVT_VMUFieldInfo"8Q16^c24
v24@?0@"DVT_VMUFieldInfo"8I16I20
v60@?0^v8Q16I24Q28I36@"DVT_VMUFieldInfo"40I48@?<v@?IQIIQ>52
-[DVT_VMUTaskMemoryScanner _withOrderedNodeMapper:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUTaskMemoryScanner.m
nextRegionIndex < _regionsCount && _regions[nextRegionIndex].properties.address == maxMappedAddress
VMUTaskMemoryScanner safe unmapping queue
v20@?0I8@?<B@?^v>12
v36@?0I8Q12I20I24Q28
v12@?0I8
__LINKEDIT
v16@?0@?<v@?I>8
v16@?0@?<v@?^vQIQI@"DVT_VMUFieldInfo"I@?<v@?IQIIQ>>8
v16@?0^v8
processSnapshotGraph getting node labels
processSnapshotGraph scan nodes into the graph, while recording symbols of __DATA regions and stacks
__DATA __objc_
__DATA_DIRTY __objc_
__OBJC 
  no associated pthread
%#llx (in %s)
%s (in %s)
processSnapshotGraph find unreferenced VM regions
MALLOC
<%s %#llx> [%llu]
%#llx [%llu]
Region %@ 
Thread %llu
Kernel Pointers Into User Space
%lld bytes into 
 $%s 
%#llx
%+6lld: %s%s
[ivar]
BlockVariable
__block [capture]
[capture]
%@%@%*s%@
%@ --> %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Ti,R,N
is64bit
Tc,R,N
vmPageSize
TI,R,N
realizedClasses
T@"DVT_VMUClassInfoMap",R,N
zoneCount
regionCount
nodeCount
nodeNamespaceSize
processName
T@"NSString",R,N
processDescriptionString
executablePath
binaryImagesDescription
physicalFootprint
TQ,R,N
physicalFootprintPeak
memoryCache
T@"DVT_VMUTaskMemoryCache",R,N,V_memoryCache
objectIdentifier
T@"DVT_VMUObjectIdentifier",R,N,V_objectIdentifier
exactScanningEnabled
Tc,N,V_exactScanningEnabled
abandonedMarkingEnabled
Tc,N,V_abandonedMarkingEnabled
maxInteriorOffset
TQ,N,V_maxInteriorOffset
scanningMask
TI,N,V_scanningMask
debugTimer
T@"DVT_VMUDebugTimer",&,N,V_debugTimer
showRawClassNames
Tc,N,V_showRawClassNames
objectContentLevel
TI,N
recordRuntimeMetadataChunkInfo
Tc,N,V_recordRuntimeMetadataChunkInfo
TI,R,N,V_blocksCount
TI,R,N,V_zonesCount
mallocNodeCount
task
TI,R,N,V_task
Ti,R,N,V_pid
TI,R,N,V_regionsCount
T@"NSString",R,N,V_processName
T@"NSString",R,N,V_processDescriptionString
T@"NSString",R,N,V_executablePath
T@"NSString",R,N,V_binaryImagesDescription
TQ,R,N,V_physicalFootprint
TQ,R,N,V_physicalFootprintPeak
Unable to gather threads of remote process: %s (%d)
Failed to map remote region at [%#llx-%#llx]
Failed to map remote region: [%#llx-%#llx] %s %s (%llu %s)%s (error: %d)
task peeking transformer guard queue
Administrative
Block-containing
Active Block
Unknown
AUTORELEASE!
rflags
region: %+lld 
symbol: '%s' %+lld 
symbol: '%s' 
Backtrace Excluded
[thread %#llx]:
 + %llu
%#llx + %llu
%-*s %#*llx %@
%#*llx (%-*s) %@
  %@
%-3d 
%s%s%@
%s%@
TI,R
Tc,R
inspectingLiveProcess
usesLiteMode
coldestFrameIsNotThreadId
regionTracker
T@"DVT_VMUVMRegionTracker",R
excludedFrames
T@"NSSet",&,N
nodesInUniquingTable
TI,R,V_task
Tc,R,V_usesLiteMode
Tc,R,V_coldestFrameIsNotThreadId
T@"DVT_VMUVMRegionTracker",R,V_regionTracker
T@"NSSet",&,N,V_excludedFrames
backtraceString
T@"NSString",C,N,V_backtraceString
0x%08x 
< content unavailable >
%s: %#llx  size=%llu  
VM: unknown region type
VM: %@
zone: %s
   %s  %s  %s
   %s
Call stack: %s
malloc<%s>
malloc-block
kernel
thread
unaligned +%lld:  --> %@
Storage)
%@%@%s --> %@
printLeakTree identifying strongly-connected-components (cycles) in the graph
v20@?0r^I8I16
printLeakTree identifying root leaks and cycles
v20@?0I8^c12
printLeakTree enumerate stack logs to populate rootLeakAddressToStackIDMap
v36@?0I8Q12Q20{?=Q}28
printLeakTree invert rootLeakAddressToStackIDMap to produce stackID --> {size,count,root-leak-call-tree-root} map
ROOT LEAK: 
printLeakTree building call tree from references
CYCLE BACK TO 
%@  dirty: %s  swapped: %s
%@  purgableVolatile: %s
v68@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20^c60
printLeakTree addChildCountsIntoNode
(ROOT LEAK|CYCLE): <*(VM: \w+|\w+).*
(ROOT LEAK|CYCLE): 0x\S+ \[(.*)\].*
printLeakTree printing call tree
: 0x
$1: malloc<$2>
$1: <$2>
q24@?0@8@16
STACK OF 
INSTANCES
INSTANCE
%u %s OF '%s'
NO STACK
====
printLeakTree releasing tree
unable to inspect heap ranges of target process; it may be using a malloc replacement library without the required support
VMULeakDetectorDomain
message
Process %d: %u nodes malloced for %llu KB
scan for leaks
Process %d: %u leak%s for %llu total leaked bytes.
Process %d: %u object%s abandoned for %llu total abandoned bytes.
Leak
Abandoned
v52@?0I8{?=Qb60b4@}12@"DVT_VMUVMRegion"36^c44
%u leak%s excluded (not printed)
showLeakedVMregions
Tc,N,V_showLeakedVMregions
showContext
Tc,N,V_showContext
showOnlyVMregions
Tc,N,V_showOnlyVMregions
fullStacks
Tc,N,V_fullStacks
showBinaryContents
Tc,N,V_showBinaryContents
checkAbandoned
Tc,N,V_checkAbandoned
suppressOutput
Tc,N,V_suppressOutput
showListOfLeaks
Tc,N,V_showListOfLeaks
groupByType
Tc,N,V_groupByType
referenceTreeShowRegionVirtualSize
Tc,N,V_referenceTreeShowRegionVirtualSize
outputFile
T^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq},N,V_outputFile
fcloseOutput
Tc,N,V_fcloseOutput
TI,N,V_objectContentLevel
graph
T@"DVT_VMUProcessObjectGraph",R,N,V_graph
scanner
T@"DVT_VMUTaskMemoryScanner",R,N,V_scanner
stackLogReader
T@"<VMUStackLogReader>",R,N,V_stackLogReader
abandoned
T^v,N,V_abandoned
leakedNodes
T^v,N,V_leakedNodes
leakTreeRootsArray
T@"NSMutableArray",&,N,V_leakTreeRootsArray
leakedGraph
T@"DVT_VMUProcessObjectGraph",&,N,V_leakedGraph
MallocStackLoggingLite
address
TQ,Vaddress
size
TQ,Vsize
range
T{_VMURange=QQ},R
stackIdentifier
TQ,VstackIdentifier
userTag
TI,VuserTag
VMUVMRegionTracker
DVT_VMUVMRegionTracker
classVersion
simpleSerializerData
supportsSecureCoding
Tq,R
crashreporterInfoMutex
VMUProcessDescription is examining:
   process: %s  pid: %d  path: %s  [_binaryImages count]: %lu
   parent process: %s  pid: %d  path: %s
(0x[a-fA-F0-9]*)\s*-\s*(0x[a-fA-F0-9]*)\s*(\S*)\s*\(([0-9\- \.\?]*)\)\s*<(\S{36})>\s*(.*)
(0x[a-fA-F0-9]*)\s*-\s*(0x[a-fA-F0-9]*)\s*(\S*)\s*(\S*)\s*<(\S{32})>\s*(.*)
__TEXT
%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx%02hhx
v32@?0@"NSTextCheckingResult"8Q16^c24
pid_for_task(%x) failed with error %d: %s
Failed to determine task_t for pid %u %@
v24@?0{_CSTypeRef=QQ}8
v44@?0I8{_CSNotificationData={_CSTypeRef=QQ}(?={Ping=I}{DyldLoad={_CSTypeRef=QQ}}{DyldUnload={_CSTypeRef=QQ}})}12
Failed to create CSSymbolicatorRef for pid %u %@
coreservicesd
Failed to create VMUProcInfo for pid: %d
invalid task corpse info provided
Couldn't map kcdata from kernel -- error %d
__TEXT __info_plist
nonUTF8-binary-name
nonUTF8-binary-path
MACH_HEADER
StartAddress
Size
CFBundleShortVersionString
CFBundleVersion
shortVersion
version
%@ (%@)
com.apple.
/System/
commpage
Ozone
Motion
/System
/usr/lib
PPC-64
X86-64
ARM64
ARM64_32
%08X
Unreadable Binary Images:
Binary images description not available
Binary Images:
<%@> 
(%@ - %@)
(%@)
%#18qx - %#18qx %@%@ %@%@ %@%@
%#10lx - %#10lx %@%@ %@%@ %@%@
Contents
version.plist
ProjectName
SourceVersion
BuildVersion
%@-%@~%@
%@ %@ (%@)
Process:         %@ [%@]
Path:            %@
Load Address:    %#qx
Identifier:      %@
Version:         %@
%@Code Type:       %@
Parent Process:  %@ [%@]
Build Info:      %@
yyyy-MM-dd HH:mm:ss.SSS ZZZ
Date/Time:       %@
Launch Time:     %@
OS Version:      %@
Report Version:  %d
Xcode
.app/Contents/
/version.plist
Analysis Tool Version:  %s %@
 (%@)
Analysis Tool:   %@
Physical footprint:         %s
Physical footprint (peak):  %s
----
swift_reflection_classIsSwiftMask
swift_reflection_getSupportedMetadataVersion
swift_reflection_addImage
swift_reflection_createReflectionContext
swift_reflection_addReflectionInfo
swift_reflection_ownsObject
swift_reflection_ownsAddress
swift_reflection_metadataForObject
swift_reflection_createReflectionContextWithDataLayout
swift_reflection_destroyReflectionContext
swift_reflection_readIsaMask
swift_reflection_typeRefForMetadata
swift_reflection_typeRefForInstance
swift_reflection_typeRefForMangledTypeName
swift_reflection_infoForTypeRef
swift_reflection_childOfTypeRef
swift_reflection_infoForMetadata
swift_reflection_childOfMetadata
swift_reflection_infoForInstance
swift_reflection_childOfInstance
swift_reflection_genericArgumentCountOfTypeRef
swift_reflection_genericArgumentOfTypeRef
swift_reflection_projectExistential
swift_reflection_dumpTypeRef
swift_reflection_dumpInfoForTypeRef
__swift3_fieldmd
__swift3_assocty
__swift3_builtin
__swift3_capture
__swift3_typeref
__swift3_reflstr
__DATA
VMUNodeToStringMap
DVT_VMUNodeToStringMap
%u  stringID %u %@
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
unordered_map::at: key not found
DT_NO_SCAN_OVERLAY
AppKit
Foundation
UIFoundation
NSDragDestination
NSAlert
NSApplication
_target
_delegate
_dataSource
NSWeakObjectValue
c32@?0Q8@"DVT_VMUTaskMemoryScanner"16@?<^v@?QQ>24
_bytes
 (Bytes Storage)
v16@?0@"DVT_VMUMutableFieldInfo"8
v16@?0@"DVT_VMUMutableClassInfo"8
NSConcreteHashTable
NSHashTable
NSConcretePointerArray
NSPointerArray
NSConcreteMapTable
NSMapTable
__NSDate
NSDate
__NSTaggedDate
__NSConcreteUUID
NSUUID
__NSInlineData
NSData
__NSDictionaryI
NSDictionary
__NSDictionary0
__NSSingleEntryDictionaryI
__NSFrozenDictionaryM
__NSDictionaryM
NSMutableDictionary
__NSSetI
NSSet
__NSSingleObjectSetI
__NSFrozenSetM
__NSSetM
NSMutableSet
__NSOrderedSetI
NSOrderedSet
__NSOrderedSetM
NSMutableOrderedSet
__NSArrayI
NSArray
__NSArray0
__NSSingleObjectArrayI
__NSFrozenArrayM
__NSArrayM
NSMutableArray
__NSArrayI_Transfer
__NSCFArray
CFArray
__NSCFDictionary
CFDictionary
__NSCFSet
CFSet
__NSCFString
CFString
__NSCFConstantString
__NSCFCalendar
NSCalendar
__NSCFNumber
NSNumber
__NSCFData
CFData
__NSCFError
CFError
_CFXNotificationRegistrationContainer
_children
_children.elements
_children.singleChildKey
_children.callbacks
content
slice
Object
keys
values
Value
_CFXNotificationRegistrationBase
_parent
_CFXNotificationObserverRegistration
_observer
_CFXNotificationObjectRegistration
_CFXNotificationObjcObserverRegistration
_object
__NSObserver
object
_NSBindingInfo
_retainedController
_NSModelObservingTracker
_modelObserver
__NSOperationInternal
__outerOp
__completion
NSKeyValueObservance
_context
element
_list
storage
 (Storage)
_objs
 (Value Storage)
_keys
 (Key Storage)
NSResponder
_nextResponder
NSMenuItem
_repObject
_submenu
_menu
NSActionCell
_controlView
NSCellAuxiliary
controlView
NSMenu
_supermenu
NSLayoutConstraint
_container
_firstItem
_secondItem
NSLayoutAnchor
_referenceItem
NSView
_superview
_window
_NSViewAuxiliary
_viewController
NSTextInputContext
_client
_value
NSAccessibilityWeakReferenceContainer
_weakReference
NSInputStream
NSOutputStream
_reserved
error
client
^{_CFStreamClient=}
info
callBacks
^{_CFStreamCallBacks=}
streamLock
previousRunloopsAndModes
queue
refinementRules
T@"NSArray",R,N,V_rules
Swift
_refcounts
v20@?0@"DVT_VMUMutableFieldInfo"8I16
_callbacks
_bits
_values
 (%s%@%sStorage)
Weak 
.items
.fields
{NSSliceFields}
*** -[VMUTaskStackLogReader liteMSLPayloadforMallocAddress:size:] error %d from task_peek
v40@?0{msl_disk_stack_logging_record=I{?=Q}QQ}8
%s:%u
v16@?0Q8
T@"DVT_VMUTaskMemoryScanner",W,N,V_scanner
*** getStackLoggingSharedMemoryAddressFromTask: can't get target task symbolicator
libsystem_malloc.dylib
DYLD_IMAGE_SUFFIX
libsystem_malloc%s.dylib
*** getStackLoggingSharedMemoryAddressFromTask: couldn't find libsystem_malloc dylib in target task
___mach_stack_logging_shared_memory_address
*** getStackLoggingSharedMemoryAddressFromTask: task_peek failed for shared_memory_address_address
%s: %s failed 
crashdump
ReportCrash
task_start_peeking
can't suspend
task_stop_peeking
task_resume
*** Error: calling task_try_peek() before task_start_peeking()
v8@?0
/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation
_CFURLFileCacheGetFlags
<<couldn't convert to UTF8>>
..."
0123456789ABCDEF
content length 0
inline content length %ld
MALLOC_
content length %ld  %s + %llu in VM:  %@
content length %ld  %s in VM:  %@
content length %ld entire VM:  %@
content length %ld at offset %llu in VM:  %@
content length %ld -- failed to read data from %#llx
content length %ld at %#llx
%@: %s
%02x
%@: %.128s...   MD5: %@
v44@?0I8{?=Qb60b4@}12^c36
*** Error: calling task_peek() before task_start_peeking()
ROOT CYCLE: 
<< TOTAL >>
Thread_
Main Thread
com.apple.main-thread
    
%d %@
%u (%.2fM) %@
%u (%.1fM) %@
%u (%.0fM) %@
%u (%.2fK) %@
%u (%.1fK) %@
%u (%.0fK) %@
%u (%qu bytes) %@
CONTENT:
  (in 
  load address 
%@%@%@
%@%@
%@%@
%@----
%lu ADDITIONAL CHILDREN
Call graph:
Total number in stack (recursive counted multiple, when >=%d):
Sort by top of stack, same collapsed (when >= 5):
/usr/
KEEP-BOUNDARIES PLACEHOLDER
        %lu       %@
        %@        %lu
VMURangeToStringMap
DVT_VMURangeToStringMap
%#llx-%#llx[%llu] stringID %u %@
step 1 -- build map table with live malloc block addresses as keys
v24@?0@"DVT_VMUVMRegion"8^c16
skipping step 2 of enumerating stack log records to record unique backtrace IDs, since for MallocStackLogging=lite that is done in the previous step of zone enumeration
step 2 -- enumerate stack log records to record unique backtrace IDs for objects of interest
step 3 -- from uniqueBacktraceToObjectsMap, create uniqueBacktraceToObjectsMap
step 4 -- build call tree by iterating the uniqueBacktraceToObjectsMap
%qu unique stacks
freeing up call-tree memory
v32@?0@"NSNumber"8@"DVT_VMUProcInfo"16^c24
VM_ALLOCATE
MALLOC_SMALL
MALLOC_LARGE
MALLOC_HUGE
SBRK
MALLOC_REALLOC
MALLOC_TINY
MALLOC_LARGE_REUSABLE
Performance tool data
MALLOC_NANO
MALLOC_MEDIUM
Mach message
IOKit
Stack
Guard
shared pmap
dylib
ObjC dispatching code
unshared pmap
CoreGraphics
CoreServices
Java
CoreData
CoreData Object IDs
ATS (font support)
CoreAnimation
CG image
WebKit Malloc
CG raster data
CG shared images
CG framebuffers
CG backing stores
CG xalloc
dyld private memory
dyld malloc memory
SQLite page cache
JS VM Gigacage
JS JIT generated code
JS VM Isolated Heap
OpenGL GLSL
OpenCL
CoreImage
WebCore purgeable data
Image IO
CoreProfile
Assets Library
Kernel Alloc Once
Dispatch continuations
Accelerate framework
CoreUI image data
CoreUI image file
Activity Tracing
RawCamera
Process Corpse Info
Apple System Log
Swift runtime
Swift metadata
DHMM
SceneKit
Skywalk Networking
IOSurface
libnetwork
Audio
Video bitstream
CoreMedia XPC
CoreMedia RPC
CoreMedia memory pool
CoreMedia read cache
CoreMedia HTTP cache
QuickLook Thumbnails
Accounts framework
Sanitizer
IOAccelerator
CoreMedia Capture Data
mach_msg_trap
libsystem_kernel.dylib
Unable to make sampling thread high-priority
Time to initialize sampling context:  %0.2f
SYMBOLICATION_SHOW_BACKTRACE_TIMINGS
kern.wq_max_constrained_threads
kern.wq_max_threads
Time spent sampling with CFI:  %0.4f
Thread_<multiple>
Thread_%qu
concurrent
serial
   DispatchQueue_%qu: %@  (%s)
Thread_%x
: %@
   DispatchQueue_<multiple>
unknown-process
Analysis of sampling %@ (pid %d) every %d milliseconds
Analysis of sampling %@ (pid %d) every %d millisecond
Dispatch Thread %@ Limit: %u reached in %u of %u samples -- too many dispatch threads blocked in synchronous operations
Soft
Hard
yyyy-MM-dd_HHmmss
/tmp/%@_%@_XXXX.sample.txt
Unable to create secure temp file
fopen
Unable to open/create sample file %s
fwrite
Unable to write sample file %s
Sample analysis of process %d written to file %s
/usr/bin/open '%s'
v20@?0r^{mapped_region_node_t=QQQI}8B16
-[DVT_VMUSimpleSerializer serializeNullTerminatedBytes:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUSimpleSerializer.mm
strcmp((const char*)(&newStringRegion[encoded]), (const char*)bytes) == 0
-[DVT_VMUSimpleDeserializer copyDeserializedStringWithID:]
stringID < _stringRegCapacity
-[DVT_VMUSimpleDeserializer copyDeserializedNullTerminatedBytes]
-[DVT_VMUSimpleDeserializer _deserializeValues:]
_cursor + (count * sizeof(uint32_t)) <= _intRegCapacity
_nextField
*inOutCursor + sizeof(uint32_t) <= capacity
_sorted?  %s
[%#qx to %#qx] (length: %qd)
Class (objc_class)
Class (swift_class_t)
Class.data (class_rw_t)
Class.data.extended (class_rw_ext_t)
Class.methodCache._buckets (bucket_t)
Class.data.readonly (class_ro_t)
Class.data.methods (method_array_t)
Class.data.methods.lists (method_list_t)
Class.data.properties (property_array_t)
Class.data.properties.lists (property_list_t)
Class.data.protocols (protocol_array_t)
Class.data.protocols.lists (protocol_list_t)
metaclass for %@
__NSExactBlockVariable__
NSBlock
Swift closure context
malloc-block (possibly Swift)
objc_class_abi_version
Swift reflection is unavailable. All Swift content will be scanned conservatively.
Weak references in Swift content may be misidentified as retaining references.
missing ivar at index: %d in class: %@
CGSEventAppendix
v24@?0Q8I16I20
Bad field index in document
-[DVT_VMUClassInfo encodeWithCoder:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUClassInfo.mm
instance size %d, allocation size %d
%*s'%@'%s%s%s [%@] - %s, %s%s {
Class: 
 as '
, Specific
%*s<< %u alignment bytes >>
%*s}
v20@?0I8c12I16
[__block capture]
v32@?0@"DVT_VMUMutableFieldInfo"8Q16^c24
<unknown>
ObjC
CFType
__block variable
v16@?0@"NSString"8
%+*d: <extra space>[%u] (%s)
%@  %@
%@ (%@)  %@  %@
%@  %@  %@
defaultScanType
hasSpecificLayout
hasVariantLayout
pointerSize
TI,R,N,V_remotePointerSize
usesSwiftRefcounting
Tc,R,N,V_usesSwiftRefcounting
ivarCount
TI,R,N,V_ivarCount
typeName
className
T@"NSString",R,N,V_remoteClassName
displayName
binaryName
binaryPath
T@"NSString",R,N,V_remoteBinaryPath
fullIvarDescription
shortIvarDescription
superclassInfo
T@"DVT_VMUClassInfo",R,N,V_superclassLayout
genericInfo
T@"DVT_VMUClassInfo",R,N
infoType
remoteIsa
TQ,R,V_remoteIsa
instanceSize
TI,R,V_instanceSize
isARR
isRealized
isMetaClass
isRootClass
hasCppConstructorOrDestructor
T@"DVT_VMUClassInfo",&,D,N
T@"NSString",C,D,N
TI,D,N
field
T@"DVT_VMUFieldInfo",R,N
value
\((.+) in _([0-9A-Z]+)\)
^([0-9a-zA-Z]+)\.([0-9a-zA-Z].+)
^(.+) with unmangled suffix (.+)
%+*d: %s%s%s[capture];
__block 
%*u: %s%s%@;%@
  [->%@]
_swift_debug_nativeWeakReferenceMarkerMask
_swift_debug_nativeWeakReferenceMarkerValue
_swift_debug_nativeWeakReferencePointerMask
_swift_debug_nativeWeakReferencePointerIsSideTable
_swift_debug_refcountIsSideTableMarkerMask
_swift_debug_refcountIsSideTableMarkerValue
_swift_debug_sideTablePointerMask
_swift_debug_sideTablePointerRightShift
_swift_debug_sideTablePointerLeftShift
 __objc_imageinfo
NO __DATA_DIRTY,__objc_imageinfo section in %s
_owner
SwiftWeakRefStorage
SwiftUnownedRefStorage
nativeWeakReferenceMarkerMask
TQ,R,N,V_nativeWeakReferenceMarkerMask
nativeWeakReferenceMarkerValue
TQ,R,N,V_nativeWeakReferenceMarkerValue
nativeWeakReferencePointerMask
TQ,R,N,V_nativeWeakReferencePointerMask
nativeWeakReferencePointerIsSideTable
TB,R,N,V_nativeWeakReferencePointerIsSideTable
refcountIsSideTableMarkerMask
TQ,R,N,V_refcountIsSideTableMarkerMask
refcountIsSideTableMarkerValue
TQ,R,N,V_refcountIsSideTableMarkerValue
sideTablePointerMask
TQ,R,N,V_sideTablePointerMask
sideTablePointerRightShift
TC,R,N,V_sideTablePointerRightShift
sideTablePointerLeftShift
TC,R,N,V_sideTablePointerLeftShift
sideTableLayout
T@"DVT_VMUMutableClassInfo",R,N,V_sideTableLayout
unownedExtraDataLayout
T@"DVT_VMUMutableClassInfo",R,N,V_unownedExtraDataLayout
runtimeHasStableABI
TB,R,N,V_runtimeHasStableABI
___swift_reflection_version
<no event message>
TIMING:  %s
TIMING (%.02f elapsed):  %.02f seconds for %s
region
T^{?=QIIIIIIQ},N,V_region
entryIndex
TI,N,V_entryIndex
__VMUAssociatedObjectsObjcAbandonedMarkerKey
_removeEntryFromMarkingRegion_block_invoke
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUMemoryMarking.m
entryIndex < region->entry_capacity
retainCount
%s[%d]: error: memory marking region could not be allocated
_addEntryToMarkingRegion_block_invoke
entries[entryIndex] == 0
NSZombieEnabled
%s[%d]: notice: memory marking disabled due to presence of NSZombieEnabled="%s" environment variable
%s[%d]: warning: memory marking timeout encountered - marked objects may be incorrect from this point forward
storage_impl_ptr
array_size
array_entries
storage_bitmap_ptr
keys_ptr
values_ptr
key_field
value_field
_guts
_otherBits
_rawValue
rawValue
_variantBuffer
_storage
_buffer
some
native
 + %u
%@.%@
%+3d "%@" size %u (%s)  %@
flags
TI,R,N,V_flags
isCapture
isByref
isStorageImplPointer
isArraySize
isArrayEntries
isStorageBitmapPointer
isKeysPointer
isValuesPointer
isValueField
isKeyField
swiftTyperef
T^v,R,V_swiftTyperef
typedDescription
T@"NSString",R
ivarName
T@"NSString",R,N,V_ivarName
T@"NSString",R,N,V_typeName
scanType
TI,R,V_scanType
offset
TI,R,V_offset
TI,R,V_size
scannableSize
TI,R,V_scannable
stride
TI,R,V_stride
bitfieldWidth
destinationLayout
subFieldArray
T@"NSArray",R,N
Tc,D,N
unused shlib __
unused shlib __TEXT
unused shlib __DATA
reserved VM address space (unallocated)
MALLOC metadata
ObjC additional data
mapped file
shared memory
MALLOC guard page
Stack Guard
Memory Tag %d
      
--->  
%s%@
v24@?0*8@"DVT_VMUVMRegion"16
%sGAP OF %#llx BYTES
v32@?0*8@"DVT_VMUVMRegion"16@"DVT_VMUVMRegion"24
%#llx is in %#llx-%#llx;  bytes after start: %llu  bytes before end: %llu
%#llx is not in any region.  
Bytes after previous region: %llu  
Bytes before following region: %llu
%sUNUSED SPACE AT START
%sUNUSED SPACE AT END
VIRTUAL
RESIDENT
DIRTY
SWAPPED
ALLOCATION
BYTES
DIRTY+SWAP
REGION
PAGES
SIZE
MALLOC ZONE
COUNT
ALLOCATED
FRAG SIZE
% FRAG
===========
=======
=========
======
TOTAL
ReadOnly portion of Libraries: Total=%s resident=%s(%.0f%%) swapped_out_or_unallocated=%s(%.0f%%)
Writable regions: Total=%s written=%s(%.0f%%) resident=%s(%.0f%%) swapped_out=%s(%.0f%%) unallocated=%s(%.0f%%)
TOTAL, minus reserved VM space
VOLATILE
NONVOL
EMPTY
 REGION
REGION TYPE
   COUNT (non-coalesced)
========
=====
        see MALLOC ZONE table below
        not counted in TOTAL below
 (reserved)
        %@
MALLOC_NANO (empty)
MALLOC_TINY (empty)
MALLOC_SMALL (empty)
MALLOC_MEDIUM (empty)
MALLOC_LARGE (empty)
MALLOC_REALLOC (empty)
MALLOC_OTHER
metadata
(empty)
%@ %@
%@ (reserved)
*** Can't suspend task %d: %s
VMUVMRegionIdentifier gather VM region data
VMUVMRegionIdentifier markMachOLibraries
VMUVMRegionIdentifier markMallocAreas
VMUVMRegionIdentifier markStacks
VMUVMRegionIdentifier markIOSurfaces
VMUVMRegionIdentifier markOthers
VMUVMRegionIdentifier coalesceIdenticalRegions
VMUVMRegionIdentifier collectVMpageStatistics
libgmalloc.B.dylib
libgmalloc.dylib
vm.self_region_footprint
Error setting sysctl: %s. %d.
vm_region
dyld shared cache combined __LINKEDIT
libobjc.A.dylib
__TEXT __objc_opt_ro
%@ zone structure
 zone structure
thread %d
STACK GUARD
stack guard for thread %d
SurfaceID: %#x  %ux%u (%s) %s
  '%@'
, shared with
 %s[%u]
Submap
machine-wide VM submap
process-only VM submap
system shared lib __DATA not used by this process
system shared lib __TEXT not used by this process
Object_id=%lx
collectVMpageStatistics: error in mach_vm_page_range_query
unused system shared lib __DATA, on dirty page
%-*s
 %10s
 %10s %10s %10s %7s %7s
%10qu
%3llu%%
unknown type
TC malloc
unused but dirty shlib __DATA
 %*s
 %*s %*s %*s
 %8s
<couldn't read content>
<couldn't read name>
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR
_objc_class_abi_version
VMUObjectIdentifier loadSwiftReflectionLibraries
VMUObjectIdentifier findCFTypes
VMUObjectIdentifier findObjCAndSwiftClasses
___kCFBooleanTrue
___kCFBooleanFalse
/usr/lib/libpthread.dylib
/usr/lib/swift/libswiftCore.dylib
@autoreleasepool content
pthread_mutex_t
pthread_attr_t
pthread_cond_t
pthread_condattr_t
pthread_mutexattr_t
pthread_once_t
pthread_rwlock_t
pthread_rwlockattr_t
pthread_t
pthread_override_s
vtable for 
__SwiftValue
_SwiftValue
__NSCFType
NSCFType
___CFRuntimeClassTableCount
___CFRuntimeClassTable
_firstRealizedClass
_objc_debug_indexed_isa_magic_mask
_objc_debug_indexed_isa_magic_value
_objc_debug_indexed_isa_index_mask
_objc_debug_indexed_isa_index_shift
_objc_indexed_classes
_objc_indexed_classes_count
_objc_debug_isa_class_mask
_objc_debug_isa_magic_mask
_objc_debug_isa_magic_value
_objc_debug_taggedpointer_mask
_objc_debug_taggedpointer_obfuscator
Q24@?0@?<^v@?QQ>8Q16
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%u.%u
com.apple.SymbolicationDT
VMUObjectLabelHandlers
%@-%@
plist
Symbolication: could not find object label handler plist %@.plist
Symbolication: could not read object label handler plist from %@
length:remoteAddress:
Classes
v32@?0@"NSString"8@"NSDictionary"16^c24
NSString
NSAtom
NSIndexPath
NSManagedObjectID
constant
has-length-byte
mutable
immutable
non-inline
Unicode
"%@"
%@:  "%@"
length: %lu  %@:  "%@"
length: %lu  "%@"
NSURL
Base URL: %@;  
"file://
CFBundle
NSPathStore2
SInt8
SInt16
SInt32
SInt64
Float32
Float64
char
short
long
long long
float
double
CFIndex
NSInteger
CGFloat
type %s  value: %@
yyyy-MM-dd HH:mm:ss Z
item count: %ld
com.apple.xpc.anonymous
anonymous
.peer.0x
com.apple.CFNetwork
CFNetwork
com.apple.CF
com.apple.lsd
LaunchServices
"%s" (from %s)
"%s"
user-interactive
user-initiated
default
utility
background
%@  QOS %s
libsystem_trace.dylib
[%s:%s]
SYMBOLICATION_LABELS_FOR_ALL_OSXPCOBJECTS
i32@?0*8Q16Q24
OS_dispatch_mach
%@ [no process]
%@ pid %u [%s]
Protocol: %@
_xconnection
_remoteObjectInterface
Protocol: <couldn't read name>
%@  Connection: %@
<unknown-binary>
%#qx + %qu
  %s:%u
%@  %@  %#qx%@
@"NSString"40@?0@"DVT_VMUObjectLabelHandlerInfo"8^v16Q24Q32
 (malloc)
 (char[])
class_createInstance
  !! caught exception %s when analyzing object instance: %s
  type %s
libswiftRemoteMirror.dylib
libswiftRemoteMirrorLegacy.dylib
libswiftRemoteMirror42.dylib
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Unable to access %@ with errno: %d
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Successfully dlopened %@
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Failed to dlopen %@
libswiftCore.dylib
Resources
/usr/lib/libxcselect.dylib
xcselect_get_developer_dir_path
%s/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx
_objc_debug_swift_stable_abi_bit
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: swift_reflection_interop_addLibrary failed for %@
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Loaded Swift Remote Mirror from %@
v32@?0@"NSString"8@"NSValue"16^c24
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: loading info for Swift runtime at %s
<unavailable>
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Runtime with stable ABI has been loaded
SYMBOLICATION_DEBUG_SWIFT_REMOTE_MIRROR: Runtime pre-dating the stable ABI has been loaded
swiftRuntimeInfoStableABI
T@"DVT_VMUSwiftRuntimeInfo",R,N,V_swiftRuntimeInfoStableABI
swiftRuntimeInfoPreABI
T@"DVT_VMUSwiftRuntimeInfo",R,N,V_swiftRuntimeInfoPreABI
swiftMirror
T^{libSwiftRemoteMirrorWrapper=^{SwiftReflectionInteropContext}Q},R,N,V_swiftMirror
needToValidateAddressRange
Tc,R,V_needToValidateAddressRange
hasSwiftContent
hasSwiftReflection
objcABI
TI,R,V_objcABI
memoryReader
T@?,R,N,V_memoryReader
T@"DVT_VMUClassInfoMap",R,N,V_realizedIsaToClassInfo
taggedPointerMask
TQ,R,N,V_taggedPointerMask
symbolicator
T{_CSTypeRef=QQ},R,N,V_symbolicator
readonlyRegionRanges
T@"DVT_VMURangeArray",&,N,V_readonlyRegionRanges
VMUGraphStackLogReader
DVT_VMUGraphStackLogReader
VMUGraphStackLogReader archiving backtrace uniquing table
backtraceUniquingTableSize
backtraceUniquingTableFlags
backtraceUniquingTableContents
originalUniquingTableContents
VMUGraphStackLogReader archiving nodeToStackIDTable
nodeToStackIdTable
VMUGraphStackLogReader archiving nodeToMSLPayloadTable
nodeToMSLPayloadTable
functionNameRanges
sourceInfoRanges
VMUGraphStackLogReader archiving VM regionTracker
vmRegionTracker
-[DVT_VMUGraphStackLogReader initWithCoder:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocStackLoggingSupport/VMUGraphStackLogReader.m
tableSize == tableContentsSize
copyOriginalUniquingTable build map of node --> payload
-[DVT_VMUGraphStackLogReader copyOriginalUniquingTable:]_block_invoke
nodeIndex < _graph.nodeNamespaceSize
populateUniquingTable build map of address --> {nodeIndex,stackID}
populateUniquingTable read stack log records
populateUniquingTable invert map table to create oldStackId --> nodeIndex map
populateUniquingTable get backtraces from libmalloc into our backtrace uniquing table
populateUniquingTable convert VM region tracker's from old to new stackID's
Q16@?0Q8
symbolicateBacktraceUniquingTable
v24@?0Q8Q16
v16@?0@?<v@?Q>8
%u:%u:%u
%@:%u
-[DVT_VMUGraphStackLogReader enumerateMSLRecordsAndPayloads:]
!_backtraceUniquingTable || !_originalUniquingTable
T@"DVT_VMUProcessObjectGraph",W,N,V_graph
diskLogs
T@"NSData",&,N,V_diskLogs
I386 Simple
I386 ESP
ARM Simple
ARM LR
unknown
VMUBacktrace (Flavor: %@ Time: %f - %f Process: %d Thread: %X  Dispatch queue serial num: %lld)
Frames:
symbol name not found
[%3d] %#08.8qx  {%s.%s + %#qx} %s
frame pointer %#llx
unsupported flavor %d, skipping fixup
Failure calling sysctl to get process list buffer size
Failure calling sysctl to get buf size
Failure calling sysctl to get proc buf
Exited process
Argument num %d utf8 null: %s
LaunchCFMApp
mach_kernel
<VMUProcInfo: %@ (PID %d)>
sysctl.proc_cputype
You have access to multiple processes named %s:
Found process %d (%s) from partial name %s
You have access to multiple processes that match the partial name %s:
    %s %5d %s
Which process? (letter or PID) 
DisplayName
Identifier
ExecutablePath
ShortVersionString
Version
IsAppleCode
BinaryInfoDwarfUUIDKey
BinaryInfoArchitectureKey
System
processGraphInfo
showsPhysFootprint
kernPageSize
zoneNames
machTime
physFootprint
physFootprintPeak
pthreadOffsets
VMUVMRegionCurrentVersion
regionData
regionDataSerializer
regionDataSerializerCompressed
regionDataExtra
threadNameRanges
binarySectionNameRanges
regionSymbolNameRanges
nodeLabels
userMarked
archiving VMUObjectGraph and VMUDirectedGraph
VMUProcessObjectGraph archiving region data
VMUProcessObjectGraph archiving thread / binary / regionSymbol to range mappings
VMUProcessObjectGraph archiving node labels
VMUProcessObjectGraph archiving userMarked
VMUProcessObjectGraph archiving stackLogReader
OBJC_CLASS_$_%@
v60@?0I8I12I16{?=^{?}{?=QIQ}^{?}}20
< process and analysis tool header unavailable >
< binary images list unavailable >
%@: '%@'%@
%@ + %llu
thread-specific-data key %llu
pthread start routine argument
pthread_t structure %+4lld
%s+ %llu
region 
malloc<%llu>
Stack %@
Thread %llu  %@
Kernel
<%@>
<%@ %#llx> [%llu]
__DATA 
Region %@
 --> offset %llu
+%llu bytes
%@%s%*s%s
%lld bytes into %@
 --> %@
v20@?0^{_VMUDirectedGraphEdge=III}8I16
v36@?0I8I12I16I20I24^c28
snapshotMachTime
TQ,N,V_machAbsolute
TQ,N,V_physicalFootprint
TQ,N,V_physicalFootprintPeak
T@"<VMUStackLogReader>",&,N,V_stackLogReader
Tc,N,V_showsPhysFootprint
objectContentLevelForNodeLabels
TI,N,V_objectContentLevelForNodeLabels
TI,R,N,V_kernPageSize
TI,R,N,V_regionCount
unscanned
strong
unowned
unretained
weak
__strong
__unowned
__unsafe_unretained
__weak
*** Symbolication:  Can't read zone 0x%qx (error %d)
preparing to enumerate %@
*** Symbolication:  no introspect structure for malloc zone %@
*** Symbolication:  Can't read pointers from zone %@ (error %d)
*** task_malloc_get_all_zones: can't get target task symbolicator
*** task_malloc_get_all_zones: couldn't find libsystem_malloc dylib in target task
_malloc_zones
_malloc_num_zones
*** task_malloc_get_all_zones: error %d reading num_zones at %qx
*** task_malloc_get_all_zones: error %d reading zones_address at %qx
*** task_malloc_get_all_zones: error %d reading zones at %qx
%s_0x%qx
unnamed_zone_0x%qx
<no symbol>
<no path>
%d %s
*** Symbolication:  Don't know how to introspect target process's malloc zone named %@
*** Symbolication:  Couldn't create symbolicator for %s to introspect target process's malloc zone named %@: %s
*** Symbolication:  Examining malloc zone %@ is not supported in iOS simulator processes.
*** Symbolication:  Couldn't load %s to introspect target process's malloc zone named %@: %s
*** Symbolication:  %s in target process is different than in analysis process, which can cause problems analyzing memory.
*** Symbolication:  %s in target process is different than in analysis process, which can cause problems analyzing memory.  You may need to relaunch the target process and analysis process to get the new version of the framework.  The dyld shared cache may also be out of date, which could affect system performance.  To update the dyld shared cache, run 'sudo update_dyld_shared_cache' and reboot.
*** Symbolication: malloc zone %@ has no enumerator function!
%d %s %s
*** Symbolication:  Couldn't find symbol %s in %s to introspect target process's malloc zone named %@
 -- loaded from target process
enumerating %@ by calling %#llx %@ in %@%s
/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/
DYLD_ROOT_PATH
SIMULATOR_UDID
libclang_rt.asan
libclang_rt.tsan
*** Symbolication: analysis tool cannot dlopen %s, so cannot introspect target process's malloc zone named %@.
*** Symbolication:  not loading %s since %s is not running using Library Validation, so cannot introspect target process's malloc zone named %@.
<unknown binary>
0x%qx
  RECURSION COLLAPSED
%@  %s:%u
%@  %@:%u
IGNORE THIS FRAME
couldn't open %s for reading call tree
Call graph:
Total number in stack
Binary Images:
bytes
parse error with line: '%s'
T@"NSString",C,N,V_binaryImagesDescription
,...
VMUClassInfoMap
DVT_VMUClassInfoMap
-[DVT_VMUClassInfoMap encodeWithCoder:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUClassInfoMap.mm
[coder allowsKeyedCoding]
classMapVersion
v32@?0@"NSNumber"8@"NSNumber"16^c24
-[DVT_VMUClassInfoMap _applyTypeOverlay:]
replacementIndex < linearCount + 1 && replacementIndex != i
count
fieldInfoCount
error: '%@' for ivar: %s
%@ %s%@
v40@?0c8I12@"NSString"16@"NSString"24@"NSString"32
id[]
Class[]
SEL[]
char[]
uchar[]
short[]
ushort[]
int32_t[]
uint32_t[]
long[]
ulong[]
int64_t[]
uint64_t[]
float[]
double[]
bool[]
char*[]
__CFString
struct %@
Class
{vector<
{shared_ptr<
{unique_ptr<
{unordered_map<
%@,%@>
unordered_map
%d %c
%u %c
%lld
%llu
tagged pointer %@
<%@ %p>
%p %s
 (in %s)
@selector(%s)
{CGRect=
x:%g y:%g w:%g h:%g
{_NSRange=
NSNotFound
{ location:%@  length:%@ }
LiIcCqQsSfdB@*?#:^
 %.*s:%@ 
{RefCounts<swift::
    FAILED STRUCTURE TYPE ENCODING: %s
    UNION TYPE ENCODING: %s
malformed type encoding
union
struct
<unnamed %s>
%s %.*s
[%.*s]
%s%.*s%s
unsigned char
ushort
int32_t
uint32_t
ulong
int64_t
uint64_t
bitfield:
bool
void
char*
_Atomic 
atomic 
const 
%.0fK
%.1fM
%.1fG
%.1fT
%llu   
%.2f
Memory graph file content is obsolete development version, no longer supported
VSIZE
RSDNT
SWAP
 PURGE  
%-*s %*s-%-*s [%@] %s/%s %s%s  %s
START 
 END
SHRMOD
REGION DETAIL
...%@
        
 PURGE=%c
%s  0x%llx-0x%llx [%@] %s/%s  %@
%-*s %0*llx-%0*llx [%@] %s/%s SM=%s%@  %@
/System/Library/Extensions
/usr
/(AppKit|UIKit(Core))\.framework|/libswiftAppKit.dylib
/Foundation.framework|/libswiftFoundation.dylib
/CoreFoundation.framework
/CoreData\.framework/|/libsql[^/]*\.dylib|/libswiftCoreData.dylib
/(Web(Kit|Core)|JavaScriptCore)\.framework/
/(CFNetwork|IO)\.framework/
/(Core(Text|UI|Graphics|Video|Image|Media(IOServices)?|PDF)|ATS|ColorSync|ImageIO|Metal(Kit)?|OpenGL|Quartz(Core)?|QTKit|VideoToolbox|OpenCL|QD|IOSurface)\.framework|/libswiftCore(Graphics|Image).dylib
/(Speech[^/]*\.framework|[^/]*(A|a)udio[^/]*\.(framework|component|bundle|kext)|AppleHDA.kext)/
/(Security(Foundation|Interface|HI)?|Kerberos(Helper)?|TrustEvaluationAgent)\.framework/|/lib(crypto|ssl|sasl2)[^/]*\.dylib|/sasl2/
/(JavaVM|Ruby|Python|Tcl|Tk)\.framework/|/ruby/|/lib(tcl|tk|python|perl|swiftCore|swiftObjectiveC|c\+\+abi)[^/]*\.dylib
/usr/lib/((lib[^/]*\.dylib)|dyld|system)|/libswift(Darwin|Dispatch).dylib
/System/Library/(Private)?Frameworks/[^/]*\.framework/
VMUDirectedGraphCompatibilityVersionNumberInGraphKey
VMUDirectedGraphToolCompatibilityVersionKey
Data parameter cannot be nil.
MEMGRAPH
Version %llu of memory graph is not supported by the currently installed tools
This platform cannot map in the memory graph plist at offset %llu of size %llu
-[DVT_VMUDirectedGraph decapsulateSupplementalData:forTag:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUDirectedGraph.m
strlen(tag) <= 8
+[DVT_VMUDirectedGraph encapsulateData:to:withSupplementalDataTag:dataGeneratorBlock:]
[fh offsetInFile] == supplementalHeaderOffset
[fh offsetInFile] == supplementalDataOffset
([fh offsetInFile] % 16) == 0
i24@?0^v8Q16
Invalid IPS header: %@
length
IPS length is invalid.
bug_type
Invalid bug type in IPS header.
DISKLOGS
File does not contain a memory graph in the correct format
graphCompatibilityVersion
graphEncodingVersion
File does not contain memory graph version information (not in correct format)
The graph version (%d) is too new.  The latest graph version this tool supports is %d.
nodes
edges
edgeNamespaceSize
additionalProperties
graphIs64bit
node
reference
Memory graph is too large to open
details
options
directedGraphInfo
compactEdgeList
memgraph file is malformed - unable to deserialize.
sparseEdgeList
inverted
deadNodes
B20@?0{_VMUDirectedGraphEdge=III}8
VMUDestructiveMutationWhileEnumeratingException
Destructive mutation attempted while traversing graph!
-[DVT_VMUDirectedGraph _adjustAdjacencyMap]
_edgeCapacity || (!groupEdges && !_edgeCount)
-[DVT_VMUDirectedGraph _dfsCore:colors:visitBlock:examineBlock:]
_indexedEdges < VMUGraphNameNone
agendaIdx != 0
-[%@ %s]: %s
^block parameters must be non-nil.
v20@?0I8*12
node: %d at %d (%d edges leaving)
%d: %d -> %d%s
 [group contain]
 [group up]
Tc,N
T@"NSDictionary",C,N,V_additionalProperties
TI,R,N,V_nodeCount
edgeCount
TI,R,N,V_nextNodeName
TI,R,N,V_nextEdgeName
Tc,R,N,V_graphIs64bit
v28@?0Q8S16@?<Q@?^v>20
1.2.11
Unable to initialize deflate: %d (%s)
Unable to compress data: %d (%s)
Q16@?0^v8
Unable to decompress data: %d (%s)
Unable to initialize inflate: %d (%s)
VMUDirectedGraphDomain
Memory graph has bizarrely high %s count %zu
_internalEdge
edgeList
<no-type>
root VM region
non-root VM region
objectGraphInfo
internalized node
objectDetails
-[%s %s] error: malformed serialized data
referenceDetails
referenceDetailsLarge
archivedClassInfos
-[DVT_VMUObjectGraph archiveDictionaryRepresentation:options:]
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/MallocHeapInspection/VMUObjectGraph.m
(_internalizedNodes[i].address & (1ull << 63)) == 0
{?=Qb60b4@}12@?0I8
v28@?0I8I12I16^c20
indexedClassInfos
T@"DVT_VMUClassInfoMap",&,N,V_knownClassInfos
^block parameter must be non-nil.
C16@?0I8C12
c28@?0I8I12I16*20
-[DVT_VMUObjectGraph(UsefulAlgorithms) isRootNode:]
self.inverted
vmu_create_backtrace_uniquing_table
/Library/Caches/com.apple.xbs/Sources/Symbolication/Symbolication-64535.37/BaseSupport/VMUBacktraceUniquing.c
uniquing_table->numNodes < MAX_UNIQUING_TABLE_NODES
vmu_create_backtrace_uniquing_table_from_archive
vmu_remove_stack_from_backtrace_uniquing_table
uniqued_stack < MAX_UNIQUING_TABLE_NODES
node->refcount == 0
old_backtraces_contained - uniquing_table->backtraces_contained <= 1
vmu_stack_frames_for_uniqued_stack
(VMUBacktraceUniquing): Invalid parent node %#x
(VMUBacktraceUniquing): Invalid PC 0x%llx at frame %u for stackID %llu
%8llu  address %#llx  parent %u
  context %#llx
(VMUBacktraceUniquing) allocate_pages(): virtual memory exhausted! (XRBacktraceRepository)
can't expand backtrace uniquing table from %llu nodes to %llu nodes (exceeds maximum %u)
failed to expand uniquing table to %llu bytes
(VMUBacktraceUniquing) expandUniquingTable(): VMCopyFailed
(VMUBacktraceUniquing) expandUniquingTable(): mach_vm_deallocate failed. [%p]
unable to reinsert node when expanding backtrace uniquing table - bad hashing function?
__isPlatformOrVariantPlatformVersionAtLeast
/BuildRoot/Library/Caches/com.apple.xbs/Sources/clang/clang-1103.0.32.62/compiler-rt/lib/builtins/os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
%d.%d.%d
DVT_VMUArchitecture
NSCoding
NSCopying
DVT_VMURuntimeMetadataChunkInfo
1A!`
DVT_VMUTaskMemoryScanner
VMUCommonGraphInterface
NSObject
DVT_VMUStackLogReaderBase
VMUStackLogReader
DVT_VMUCallTreeRootWithBacktrace
DVT_VMULeakDetector
DVT_VMUVMRegionRangeInfo
DVT_VMUVMRegionTracker
NSSecureCoding
DVT_VMUProcessDescription
DVT_VMUNodeToStringMap
DVT_VMUScanOverlay
DVT_VMUTaskStackLogReader
DVT_VMUCallTreePseudoNode
DVT_VMUCallTreeNode
DVT_VMURangeToStringMap
DVT_VMUStackLogConsolidator
DVT_VMUProcList
DVT_VMUSampler
2AQ1
DVT_VMUTaskMemoryCache
DVT_VMUAbstractSerializer
DVT_VMUSimpleSerializer
DVT_VMUSimpleDeserializer
DVT_VMURangeArray
DVT_VMUNonOverlappingRangeArray
DVT_VMUClassInfo
DVT_VMUMutableClassInfo
DVT_VMUFieldValue
DVT_VMUSwiftRuntimeInfo
DVT_VMUDebugTimer
DVT___VMULeaksMarkerObject
DVT_VMUFieldInfo
DVT_VMUMutableFieldInfo
DVT_VMUVMRegionIdentifier
DVT_VMUObjectLabelHandlerInfo
DVT_VMUObjectIdentifier
DVT_VMUGraphStackLogReader
DVT_VMUBacktrace
DVT_VMUProcInfo
0@!`
DVT_VMUProcessObjectGraph
DVT_VMUCallTreeRoot
DVT_VMUCallTreeLeafNode
DVT_VMUClassInfoMap
DVT_VMUVMRegion
DVT_VMUDirectedGraph
DVT_VMUObjectGraph
UsefulAlgorithms
v16@0:8
@16@0:8
@24@0:8i16i20
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
c16@0:8
c24@0:8@16
Q16@0:8
i16@0:8
@"DVT_VMUClassInfo"
@56@0:8{?=Qb60b4@}16Q40@48
@116@0:8{?=QIQ}16{?=Qb60b4@}40{?=Qb60b4@}64@88{_CSTypeRef=QQ}96I112
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
^v16@0:8
{?=Qb60b4@}20@0:8I16
@20@0:8I16
@24@0:8Q16
I24@0:8@?16
I32@0:8^v16@?24
I24@0:8Q16
v32@0:8^v16^v24
^v20@0:8I16
I16@0:8
@"NSString"20@0:8I16
@"DVT_VMUVMRegion"20@0:8I16
@"DVT_VMUVMRegion"24@0:8Q16
I24@0:8@?<v@?I{?=Qb60b4@}^c>16
I32@0:8^v16@?<v@?I{?=Qb60b4@}^c>24
I24@0:8@?<v@?@"DVT_VMUVMRegion"^c>16
I24@0:8@?<v@?III{?=^{?}{?=QIQ}^{?}}^c>16
v24@0:8@"DVT_VMUScanOverlay"16
@"DVT_VMUClassInfoMap"16@0:8
@28@0:8I16Q20
v24@0:8@?16
v28@0:8I16@?20
I24@0:8@16
@32@0:8@16Q24
v40@0:8@16@24Q32
v20@0:8I16
Q32@0:8Q16Q24
v44@0:8@?16@?24B32@?36
I36@0:8^I16I24@?28
@20@0:8c16
c32@0:8{_VMURange=QQ}16
c24@0:8Q16
@68@0:8{?=QIQ}16I40I44{_CSTypeRef=QQ}48I64
v24@0:8Q16
v20@0:8c16
@"DVT_VMUTaskMemoryCache"
@"DVT_VMUObjectIdentifier"
@"DVT_VMUVMRegionIdentifier"
^{_VMUBlockNode=Qb3b2b36b23}
^{_VMURegionNode=@^vQ^{_VMURegionNode}^{?}IQQ}
^{_VMURegionMap=^v^{_VMURegionNode}IQQ[0I]}
@"DVT_VMURangeArray"
@"NSMutableArray"
{_VMURange="location"Q"length"Q}
@"NSMutableDictionary"
^{_VMUZoneNode=Q@^{malloc_introspection_t}}
^{_VMUThreadNode=QII^Q}
^{_VMUInstanceValues=Q@}
@"DVT_VMUClassInfoMap"
^^{_VMUScanLocationCache}
@"DVT_VMUDebugTimer"
@"NSString"
@"DVT_VMUProcessObjectGraph"
i24@0:8@?16
q32@0:8I16c20^Q24
q44@0:8Q16Q24c32^Q36
q32@0:8Q16^Q24
{_VMURange=QQ}24@0:8Q16
@28@0:8Q16c24
@56@0:8I16{?=Qb60b4@}20c44Q48
@32@0:8Q16Q24
@40@0:8^Q16q24Q32
Q20@0:8I16
Q24@0:8Q16
{?=Q}32@0:8Q16Q24
{?=Q}24@0:8Q16
i24@0:8@?<v@?IQQQ>16
i24@0:8@?<v@?IQQ{?=Q}>16
@"NSString"24@0:8Q16
@"NSString"28@0:8Q16c24
@"NSString"56@0:8I16{?=Qb60b4@}20c44Q48
@"NSString"32@0:8Q16Q24
@"NSString"40@0:8^Q16q24Q32
@"DVT_VMUVMRegionTracker"16@0:8
@"NSSet"16@0:8
v24@0:8@"NSSet"16
v24@0:8@?<i@?^vQ>16
@"DVT_VMUVMRegionTracker"
@"NSMapTable"
@"NSSet"
@44@0:8I16@20@28@36
v24@0:8r*16
@48@0:8I16{?=Qb60b4@}20c44
v32@0:8^v16Q24
v68@0:8r*16I24{?=Qb60b4@}28@52^c60
@32@0:8I16^{?=Qb60b4@}20c28
@28@0:8I16^{?=Qb60b4@}20
@68@0:8{?=^{?}{?=QIQ}^{?}}16@56c64
I24@0:8o^@16
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@0:8
v24@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16
v24@0:8^v16
@"<VMUStackLogReader>"
@"DVT_VMUTaskMemoryScanner"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
{_VMURange=QQ}16@0:8
@28@0:8I16@20
q16@0:8
Q44@0:8I16Q20Q28Q36
@32@0:8{_VMURange=QQ}16
{_CSTypeRef=QQ}24@0:8@16
@24@0:8i16I20
@24@0:8I16c20
@40@0:8^{mapped_memory_t=}16Q24Q32
@40@0:8{_CSTypeRef=QQ}16^{mapped_memory_t=}32
v32@0:8{_CSTypeRef=QQ}16
@32@0:8@16@24
{_CSTypeRef="_opaque_1"Q"_opaque_2"Q}
{timeval="tv_sec"q"tv_usec"i}
@"NSDictionary"
@"NSArray"
^{mapped_memory_t=}
@"NSDate"
v28@0:8@16I24
@36@0:8I16{_CSTypeRef=QQ}20
@56@0:8@16{_CSTypeRef=QQ}24@40Q48
@40@0:8@16{_CSTypeRef=QQ}24
@44@0:8@16Q24I32Q36
@64@0:8@16@24@32@40@48@56
v64@0:8^@16^@24^Q32^Q40^Q48^@56
@40@0:8@16Q24i32c36
q24@0:8@16
@32@0:8@16:24
v60@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16@24@32I40@44Q52
@24@0:8c16c20
v32@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16Q24
@40@0:8@16@24@32
@28@0:8@16c24
@"DVT_VMUCallTreeNode"
I28@0:8@16c24
v40@0:8@16{_VMURange=QQ}24
{_VMURange=QQ}32@0:8@16Q24
@24@0:8@?16
@32@0:8Q16@?24
@"<VMUCommonGraphInterface>"
c20@0:8c16
@20@0:8i16
@"NSLock"
@44@0:8i16I20@24c32Q36
@32@0:8i16I20Q24
@28@0:8i16Q20
v20@0:8i16
Q52@0:8@16d24d32I40c44c48
v24@0:8d16
d16@0:8
{_CSTypeRef=QQ}16@0:8
@36@0:8I16^Q20^Q28
@40@0:8Q16^c24^Q32
@32@0:8@16^Q24
v24@0:8I16I20
v28@0:8@16c24
@"DVT_VMUProcessDescription"
^{sampling_context_t=}
@"NSConditionLock"
c20@0:8I16
i32@0:8Q16Q24
i48@0:8Q16Q24^Q32^Q40
i40@0:8Q16Q24^^v32
i32@0:8Q16^Q24
c40@0:8{_VMURange=QQ}16^v32
I24@0:8r*16
v28@0:8^I16I24
r*16@0:8
^I20@0:8I16
@"NSData"
@28@0:8r^{_VMURange=QQ}16I24
v32@0:8{_VMURange=QQ}16
{_VMURange=QQ}20@0:8I16
v36@0:8{_VMURange=QQ}16I32
{_VMURange=QQ}32@0:8{_VMURange=QQ}16
^{_VMURange=QQ}16@0:8
^{_VMURange=QQ}
v40@0:8{_VMURange=QQ}16@32
v32@0:8@16@24
v44@0:8{_VMURange=QQ}16@32c40
@36@0:8@16@24I32
@32@0:8r*16r*24
v28@0:8r*16I24
v40@0:8Q16{_CSTypeRef=QQ}24
@60@0:8Q16{swift_typeinfo=iIIII}24@44^{libSwiftRemoteMirrorWrapper=^{SwiftReflectionInteropContext}Q}52
@36@0:8@16I24Q28
@56@0:8Q16I24c28@32@40@?48
@52@0:8Q16I24@28@36@?44
v44@0:8Q16c24@28@?36
v32@0:8@16@?24
v36@0:8@16@24I32
v32@0:8c16i20@?24
@32@0:8I16I20c24c28
@36@0:8Q16I24@?28
@44@0:8Q16I24@28@?36
v44@0:8Q16I24@28@?36
v36@0:8Q16I24@?28
v32@0:8@?16@?24
v40@0:8@16@24@?32
@"DVT_VMUFieldInfo"
@40@0:8{_CSTypeRef=QQ}16@?32
B16@0:8
C16@0:8
@"DVT_VMUMutableClassInfo"
^{?=QIIIIIIQ}16@0:8
v24@0:8^{?=QIIIIIIQ}16
^{?=QIIIIIIQ}
@36@0:8^{objc_ivar=}16I24c28c32
@68@0:8@16@24I32I36I40I44I48@52^v60
@60@0:8@16@24I32I36I40I44I48@52
@44@0:8@16@24I32I36I40
@44@0:8@16@24I32^I36
@28@0:8I16^I20
@32@0:8I16^I20I28
@32@0:8^v16@24
v28@0:8@?16I24
c32@0:8@16@24
@48@0:8{_VMURange=QQ}16@32Q40
@32@0:8I16i20Q24
@40@0:8{_VMURange=QQ}16Q32
@44@0:8Q16Q24Q32I40
@28@0:8Q16I24
@44@0:8I16{_CSTypeRef=QQ}20@36
c32@0:8Q16Q24
I20@0:8I16
@32@0:8^v16Q24
@40@0:8^v16Q24Q32
v28@0:8Q16I24
Q32@0:8r*16r*24
{_CSTypeRef=QQ}24@0:8Q16
@24@0:8^v16
@32@0:8@16i24c28
@44@0:8^v16Q24Q32c40
@24@0:8q16
@40@0:8{_VMURange=QQ}16@?32
@36@0:8@16I24^v28
@56@0:8^v16Q24Q32@40@?48
@48@0:8^v16Q24Q32@40
c36@0:8{_CSTypeRef=QQ}16c32
c32@0:8{_CSTypeRef=QQ}16
i24@0:8^{SwiftReflectionInteropContext=}16
@?16@0:8
^{libSwiftRemoteMirrorWrapper=^{SwiftReflectionInteropContext}Q}16@0:8
^{libSwiftRemoteMirrorWrapper=^{SwiftReflectionInteropContext}Q}
@"DVT_VMUSwiftRuntimeInfo"
@"NSHashTable"
@"NSMutableSet"
@"DVT_VMUNonOverlappingRangeArray"
@56@0:8I16{_CSTypeRef=QQ}20@36@44B52
B24@0:8@16
v44@0:8@16I24{_VMURange=QQ}28
v32@0:8@16^I24
^{vmu_backtrace_uniquing_table_t=^vQQQQIiIII{_opaque_pthread_rwlock_t=q[192c]}}
^{backtrace_uniquing_table=}
@"DVT_VMURangeToStringMap"
@32@0:8^{sampling_context_t=}16I24c28
@28@0:8I16I20c24
v40@0:8^{sampling_context_t=}16{_CSTypeRef=QQ}24
^Q16@0:8
{?="context"{?="t_begin"d"t_end"d"pid"i"thread"I"run_state"i"dispatch_queue_serial_num"Q}"frames"^Q"framePtrs"^Q"length"I}
c20@0:8i16
i20@0:8i16
{timeval=qi}16@0:8
@72@0:8i16^{_VMUBlockNode=Qb3b2b36b23}20I28@32@40@48@56^v64
@48@0:8@16q24Q32@40
v32@0:8@16Q24
{_VMURange=QQ}32@0:8@16@24
I40@0:8@16@24@?32
I32@0:8@16@24
v40@0:8^I16I24^I28I36
@36@0:8Q16Q24c32
@32@0:8I16Q20c28
@48@0:8I16I20{?=QIQ}24
@48@0:8{?=QIQ}16I40I44
@52@0:8{?=QIQ}16I40I44I48
v32@0:8I16I20^v24
v36@0:8^v16^v24I32
c40@0:8{?=Qb60b4@}16
@"DVT_VMUNodeToStringMap"
@"DVT_VMUGraphStackLogReader"
@48@0:8{_CSTypeRef=QQ}16@32Q40
@40@0:8Q16Q24c32c36
@52@0:8@16Q24I32Q36@44
@56@0:8@16Q24I32Q36@44c52
@48@0:8@16^@24^@32^@40
@"DVT_VMUSampler"
@"NSCountedSet"
v28@0:8^@16I24
I32@0:8@16Q24
^@24@0:8^I16
@48@0:8r*16I24I28{swift_typeref_interop=Qi}32
v56@0:8@16r*24I32I36{swift_typeref_interop=Qi}40
@40@0:8Q16Q24I32c36
@40@0:8^{_VMUVMRegionData=QQIiiIIIIIiICCCIIb1b1b1b1b1b27QQQQQQQ}16q24@32
v24@0:8^{_VMUVMRegionDataExtra=QQ}16
v32@0:8^{_VMUVMRegionData=QQIiiIIIIIiICCCIIb1b1b1b1b1b27QQQQQQQ}16@24
@40@0:8r^v16Q24Q32
^v40@0:8@16^Q24Q32
@40@0:8@16#24Q32
@32@0:8@16^@24
v48@0:8@16@24r*32@?40
v24@0:8q16
@32@0:8@16r*24
v28@0:8I16I20I24
I24@0:8I16I20
I28@0:8r^I16I24
I28@0:8I16@?20
v44@0:8I16*20@?28@?36
v36@0:8I16@?20@?28
^{_VMUDirectedGraphEdge=III}
@28@0:8I16@?20
@28@0:8^{_VMUBlockNode=Qb3b2b36b23}16I24
I44@0:8I16Q20I28I32Q36
I28@0:8I16@20
{?=QIQ}20@0:8I16
^v28@0:8@16c24
^v24@0:8@16
^{_VMUObjectGraphEdge=(?={?=b24b2b5b1}{?=b31b1})}
^{_VMUObjectGraphEdgeLarge=b56b8b56b8}
@"DVT_VMUObjectGraph"
@28@0:8I16^v20
[VMUSampler initWithPID:orTask:options:] failed to get task for pid %u  err %d
[VMUSampler initWithPID:orTask:options:] failed to get pid for task %u  err %d
[VMUSampler initWithPID:orTask:options:] pid and task are both NULL
[VMUSampler recordSampleTo:...] task_threads failed for pid %u, err %d
[VMUSampler recordSampleTo:...] task_suspend2 failed for pid %u, err %d
[VMUSampler recordSampleTo:...] thread_info failed for pid %u thread index %u thread %u, err %d
[VMUSampler recordSampleTo:...] didn't record samples for any threads
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
