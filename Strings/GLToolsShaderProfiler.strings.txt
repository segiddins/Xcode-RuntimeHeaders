St12length_error
St11logic_error
St9exception
init
copyWithZone:
copy
initWithCoder:
class
setWithObjects:
decodeObjectOfClasses:forKey:
encodeWithCoder:
encodeObject:forKey:
supportsSecureCoding
.cxx_destruct
_functionFlag
dictionary
stringWithUTF8String:
copyDataForFilename:error:
initWithData:encoding:
setSource:
numberWithUnsignedInt:
setObject:forKeyedSubscript:
doesNotRecognizeSelector:
initWithDelegate:
isRuntimeOSAppleInternal
standardUserDefaults
boolForKey:
deviceInfo
platform
metalPluginForPlatform:
shaderProfiler
captureSessionInfo
isKindOfClass:
contextsInfo
objectAtIndexedSubscript:
rendererType
_getRendererType
sharedExtensionRegistry
extensionsForSlot:
countByEnumeratingWithState:objects:count:
objectForKey:
bundle
classNamed:
supportRendererType:
alloc
modifiedCaptureArchive
discardAndClose
captureArchive
currentFunction
currentFile
name
hasPrefix:
stateMirrorManager
isRenderEndWithEvents:type:
isRenderBeginWithEvents:type:
drawCallInfoList
count
setDrawCallIndex:
setFunctionIndex:
setFragmentCount:
setInstanceCount:
setVertexCount:
programInfoWithId:
setProgramId:
programInfoList
setProgramIndex:
programIndex
addObject:
programId
_shaderInfoDictForProgram:stages:contextStateMirror:archiveModifier:
numberWithInt:
objectForKeyedSubscript:
setVertexShaderInfo:
setFragmentShaderInfo:
vertexShaderInfo
fragmentShaderInfo
setValid:
setProgramInfo:
drawCallInfoIndices
setFragmentShaderWriteDepth:
setFragmentShaderUseDiscard:
programPipelineInfoWithId:
programPipelineInfoList
setSeparable:
setVertexProgramId:
vertexProgramId
setFragmentProgramId:
fragmentProgramId
setBlendingIsEnabled:
fragmentShaderWriteDepth
vertexCount
instanceCount
isFramebufferFetchWithEvents:type:
numberWithUnsignedLong:
dictionaryWithObjectsAndKeys:
initWithBlock:
arrayWithObject:
createTemporaryModifiedArchive:modifiers:copyDataFiles:
defaultManager
removeItemAtPath:error:
_getShaderList
analyzerResult
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
setError:
setResult:
calculateFrameTime:result:
calculateUtilizations:result:
objectAtIndex:
unsignedIntValue
programInfo
source
loadLLDB
setBinary:
_preProcessUSCSampleData:result:targetIndex:
binary
uscSamples
extractShaderBinaryTextSegment:
analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
disassembleBinary:
setAnalyzerResult:
setDisassembly:
drawCallCost
drawCallIndex
fragmentCount
setVertexCountPercentage:
setFragmentCountPercentage:
setInstanceCountPercentage:
valid
unsignedIntegerValue
timing
isDisassemblerAvailable
removeTemporaryDirectory
functionIndex
shaderSourceForProgramInfo:atFunctionIndex:
future
numberWithUnsignedInteger:
numberWithBool:
queryShaderInfoWithPayload:
waitUntilResolved
result
error
computeFromShaderInfoResult:usingGLShaderProfilerResult:forFuture:
bytes
length
_generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:withUSCSampleBuffer:withUSCSampleNum:targetIndex:
respondsToSelector:
_generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:withUSCSampleList:withUSCSampleNum:targetIndex:
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:withUSCSampleList:withUSCSampleNum:
_addSampleWithPC:state:drawCallIdx:shaderBinary:
setUscSamples:
appendBytes:length:
newShaderProfilerWithDelegate:
initializeShaderAnalyzer
isMultiContext
enumerateFragmentShadersForResult:andShaderInfoDictionary:usingBlock:
profileShader:
collectBatchFilteredDataForShaderProfilerResult:
_harvestDrawCallFootprint
_platformShaderProfiler
functionFlag
GPUShaderProfilerHarvestDrawCallFootprint
com.apple.GPUToolsShaderProfiler
analyzer class name
blending draw call scale
blending draw call bit start
blending draw call bit end
flag
parameters
c16@?0@"DYCaptureArchiveModifier"8
vertex shader info
fragment shader info
v32@?0@8@16^c24
draw call info
MetalPluginName
frametime
performance statistics
footprint
vertex shader key
fragment shader key
binary
disassembly is unavailable
GPUShaderProfilerExportShaderInfo
function flag
draw call num
usc sampling period
harvest draw call footprint
v8@?0
usc sampling address data
usc sampling sample data
unsupported mode: 0x%0.4x
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
GLShaderProfilerResult
DYGLShaderProfiler
c16@0:8
@16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSMutableArray"
@40@0:8I16I20^{ContextStateMirror<GPUTools::AnalyzerBaseObjectTypes>={DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>={VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis>={VecN<float, 2>=[2f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>={VecN<float, 3>=[3f]}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>={VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>=I}{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>=I}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>=I}{DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis>=I}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis>={VecN<int, 4>=[4i]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}[32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][16{DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis>={VecN<double, 4>=[4d]}}][16{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}]{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}[8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}][8{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}][32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}]{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<int, GPUTools::CStateBaseAnalysis>=i}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>={VecN<float, 3>=[3f]}}[8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][8{DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis>={VecN<float, 3>=[3f]}}][8{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][8{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][8{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][8{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][8{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][8{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}]{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}[32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis>={VecN<float, 4>=[4f]}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis>={StateEnum=i}}][32{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][32{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}][32{DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis>={StateBool=i}}][32{DYStateElement<float, GPUTools::CStateBaseAnalysis>=f}]{DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx> >, GPUTools::CStateBaseAnalysis>={vector<DYMtx, std::__1::allocator<DYMtx> >=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx> >=^{?}}}}{DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx> >, GPUTools::CStateBaseAnalysis>={vector<DYMtx, std::__1::allocator<DYMtx> >=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx> >=^{?}}}}[32{DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx> >, GPUTools::CStateBaseAnalysis>={vector<DYMtx, std::__1::allocator<DYMtx> >=^{?}^{?}{__compressed_pair<DYMtx *, std::__1::allocator<DYMtx> >=^{?}}}}][16{DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis>={?=[4[4f]]}}][64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>=Q}][64{DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis>=Q}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}][32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}[64{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}[32{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}]{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis>={BindingPoint=ii}}{DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis>={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}{DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, GPUTools::CStateBaseAnalysis>={vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}}{DYStateElement<long long, GPUTools::CStateBaseAnalysis>=q}{DYStateElement<long long, GPUTools::CStateBaseAnalysis>=q}{DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis>={StateErrorStatus=i}}{ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int> > >={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true> >=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true> >=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int> > >={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true> >=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true> >=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int> > >={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true> >=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true> >=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int> > >={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true> >=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true> >=f}}}i}{ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes>, int>={unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int> > >={__hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true> >=f}}}{unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={__hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::hash<int>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnalyzerBaseObjectTypes> > >, std::__1::equal_to<int>, true> >=f}}}i}Q^{SharegroupStateMirror<GPUTools::AnalyzerBaseObjectTypes>}^{StateMirrorManager<GPUTools::AnalyzerBaseObjectTypes>}Q}24@32
c28@0:8^v16I24
i16@0:8
v40@0:8@16@24@?32
@40@0:8@16@24@32
v36@0:8@16@24i32
v52@0:8@16^{vector<std::__1::unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> >, std::__1::allocator<std::__1::unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> > > >=^{unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> >}^{unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> >}{__compressed_pair<std::__1::unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> > *, std::__1::allocator<std::__1::unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> > > >=^{unique_ptr<renderLUTEntry, std::__1::default_delete<renderLUTEntry> >}}}24I32I36^{DYGLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}40I48
v36@0:8I16I20I24@28
@"<DYPShaderProfiler>"
