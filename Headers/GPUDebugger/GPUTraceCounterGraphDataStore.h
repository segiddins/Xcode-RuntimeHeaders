//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <GPUDebugger/GPUTimelineGraphDataProvider-Protocol.h>
#import <GPUDebugger/GPUTraceCounterGraphSampleProvider-Protocol.h>

@class DYJSScriptingContext, DYShaderProfilerResult, GPUDebuggerController, GPUTimelineGraphDataSource, GPUTraceCounterGraphDataProvider, GPUTraceCounterGraphGroupItem, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface GPUTraceCounterGraphDataStore : NSObject <GPUTimelineGraphDataProvider, GPUTraceCounterGraphSampleProvider>
{
    DYShaderProfilerResult *_shaderProfilerResult;
    DYShaderProfilerResult *_shaderProfilerResultBase;
    int _platform;
    DYJSScriptingContext *_toolsCounterJSContext;
    GPUDebuggerController *_controller;
    GPUTraceCounterGraphDataProvider *_parent;
    NSMutableArray *_dataItems;
    NSMutableArray *_groupItems;
    NSMutableArray *_planeItems;
    GPUTraceCounterGraphGroupItem *_miscGroup;
    NSMutableDictionary *_stringMap;
    NSMutableDictionary *_filterSynonyms;
    NSMutableDictionary *_counterNameToPlane;
    NSMutableArray *_counterNamesForAnalysis;
    NSMutableArray *_toolsCounterNames;
    NSMutableArray *_computeMaskIndices;
    NSMutableArray *_batchFilteredIndices;
    NSString *_vendorAnalysisScript;
    NSDictionary *_vendorAnalysisFunctions;
    NSDictionary *_vendorAnalysisConfigurationVariables;
    NSArray *_samples;
    NSArray *_samplesBase;
    NSArray *_samplesForAnalysis;
    NSArray *_samplesPerEncoder;
    NSArray *_samplesForAnalysisPerEncoder;
    struct unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _drawIndexToSampleIndexMap;
    struct unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _sampleIndexToDrawIndexMap;
    unsigned int _nUnsupportedCalls;
    unsigned long long _gpuTimePlaneIndex;
    unsigned long long _minimalGPUTime;
    BOOL _useTimeAsXaxis;
    NSObject<OS_dispatch_queue> *_updateQueue;
    NSObject<OS_dispatch_source> *_updateTimerSource;
    NSMutableArray *_queuedUpdatedDrawcalls;
    id _profilerToken;
    float _progress;
    BOOL _encoderData;
    BOOL _loadingShaderProfilerResult;
    GPUTimelineGraphDataSource *_timelineDataSource;
}

@property(readonly, nonatomic) BOOL loadingShaderProfilerResult; // @synthesize loadingShaderProfilerResult=_loadingShaderProfilerResult;
@property(readonly, nonatomic) BOOL encoderData; // @synthesize encoderData=_encoderData;
@property(readonly, nonatomic) NSArray *toolsCounterNames; // @synthesize toolsCounterNames=_toolsCounterNames;
@property(readonly, nonatomic) NSArray *counterNamesForAnalysis; // @synthesize counterNamesForAnalysis=_counterNamesForAnalysis;
@property(readonly, nonatomic) GPUTimelineGraphDataSource *timelineDataSource; // @synthesize timelineDataSource=_timelineDataSource;
@property(readonly, nonatomic) NSArray *groupItems; // @synthesize groupItems=_groupItems;
@property(readonly, nonatomic) NSArray *planeItems; // @synthesize planeItems=_planeItems;
@property(readonly, nonatomic) NSArray *dataItems; // @synthesize dataItems=_dataItems;
@property(readonly, nonatomic) NSDictionary *vendorAnalysisConfigurationVariables; // @synthesize vendorAnalysisConfigurationVariables=_vendorAnalysisConfigurationVariables;
@property(readonly, nonatomic) NSDictionary *vendorAnalysisFunctions; // @synthesize vendorAnalysisFunctions=_vendorAnalysisFunctions;
@property(readonly, nonatomic) NSString *vendorAnalysisScript; // @synthesize vendorAnalysisScript=_vendorAnalysisScript;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) float profilingProgress;
@property(readonly, nonatomic) BOOL isProfilerRunning;
@property(readonly, nonatomic) unsigned long long miscGroupIndex;
- (id)planeOfCounterName:(id)arg1;
- (id)label;
- (void)_updateQueuedUpdatedDrawcalls;
- (void)_updateQueuedUpdatedDrawCalls:(id)arg1;
- (void)_queueUpdatedDrawcalls:(id)arg1 highPriority:(BOOL)arg2 done:(BOOL)arg3;
- (void)_setupUpdateTimer;
- (id)computeMaskIndices;
- (id)samplesForAnalysis;
- (id)samplesBase;
- (id)samples;
- (id)mappedStringForString:(id)arg1;
- (BOOL)writeCounterDataToUrl:(id)arg1;
- (id)collectToolsCounters:(id)arg1;
- (void)_collectToolsDerivedCounters;
- (unsigned long long)_addCounterWithName:(id)arg1 functionName:(id)arg2 dataType:(id)arg3 description:(id)arg4 unit:(id)arg5;
- (void)exportScriptingContext:(id)arg1 dataItem:(id)arg2;
- (id)itemDataForAPIItem:(id)arg1;
- (unsigned long long)counterDataIndexFromAPIItem:(id)arg1;
- (BOOL)shouldHighlightItemAtIndex:(unsigned long long)arg1 isGroup:(_Bool)arg2;
- (unsigned long long)sortingIndexOfPlaneIndex:(unsigned long long)arg1;
- (id)formatValue:(float)arg1 forPlane:(unsigned long long)arg2 usesGroupingSeparator:(BOOL)arg3;
- (unsigned long long)referencePlaneIndex;
- (id)columns;
- (id)planes;
- (id)_itemDataForCounterAtIndex:(unsigned long long)arg1;
- (void)_buildMarkers;
- (void)_buildFilterItems;
- (id)_filterStringsWithSynonyms:(id)arg1 synonyms:(id)arg2;
- (void)_rebuildDataSource;
- (void)_updateData;
- (void)_buildDrawCallIndexMap;
- (void)_configurePlane:(id)arg1 configuration:(id)arg2;
- (void)setShowEmptyCounters:(BOOL)arg1;
- (void)updateShaderProfilerResult;
- (void)dealloc;
- (id)initWithController:(id)arg1 encoderData:(BOOL)arg2 parent:(id)arg3;

@end

