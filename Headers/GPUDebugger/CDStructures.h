//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

@class NSArray, NSNumber, NSString;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct Buffer {
    char *data;
    unsigned int size;
    unsigned long long offset;
    struct __CFString *label;
};

struct BufferSource {
    unsigned int bufferIndex;
    unsigned long long bufferOffset;
    unsigned long long bufferStride;
    int stepFunction;
    unsigned int stepRate;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYInterposeVersion {
    int version;
    char *patch;
};

struct DYShaderProfilerTiming {
    struct Statistics _field1;
    struct Statistics _field2;
    struct Statistics _field3;
};

struct DrawCallStatistics {
    NSString *drawcallTypeName;
    NSNumber *maximum;
    NSArray *types;
    NSArray *total;
    NSArray *diffTotal;
    NSArray *base;
    NSArray *current;
    NSArray *apiItems;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct GPUBufferViewerAdaptorElementComponentsRows {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct GPUBufferViewerAdaptorGeometryParams {
    unsigned long long vertexStart;
    unsigned long long vertexCount;
    struct Buffer indexBuffer;
    unsigned long long indexType;
    unsigned long long indexCount;
    unsigned long long indexStart;
    unsigned long long indexPrimitiveRestart;
    struct Buffer tessellationFactorBuffer;
    unsigned long long tessellationFactorStepFunction;
    unsigned long long tessellationFactorBufferInstanceStride;
    _Bool tessellationFactorScaleEnabled;
    float tessellationFactorScale;
    unsigned int maxTessellationFactor;
    unsigned long long patchType;
    unsigned long long controlPointsPerPatch;
    unsigned long long patchCount;
    unsigned long long patchStart;
    struct Buffer patchIndexBuffer;
    struct Buffer controlPointIndexBuffer;
    unsigned long long controlPointIndexType;
    unsigned long long instanceCount;
    long long baseVertex;
    unsigned long long baseInstance;
    unsigned long long amplificationCount;
    struct GPUBufferViewerAdaptorRegion computeStageInRegion;
    unsigned long long perVertexAmplificationAndInstanceDirectInstanceStride;
};

struct GPUBufferViewerAdaptorRegion {
    union {
        struct {
            unsigned long long originX;
            unsigned long long originY;
            unsigned long long originZ;
            unsigned long long width;
            unsigned long long height;
            unsigned long long depth;
        } ;
        long long coords[6];
    } ;
};

struct GPUMessageTraceActivity {
    double _startTime;
    double _endTime;
    char _inProgress;
};

struct GPUTimelineGraphDataPlaneCell {
    long long _field1;
    long long _field2;
    struct GPUTimelineGraphReferencePlaneCell *_field3;
    unsigned long long _field4;
};

struct GPUTimelineGraphMarker;

struct GPUTimelineGraphReferencePlaneCell {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
    unsigned long long _field5;
};

struct GPUValueRange {
    float min;
    float max;
};

struct Statistics {
    double _field1;
    double _field2;
    double _field3;
};

struct Struct {
    struct __CFString *name;
    int type;
    unsigned int count;
    unsigned int size;
    int outputFormat;
    int typeAlias;
    unsigned long long mask;
    struct BufferSource bufferSource;
    struct vector<GPUToolsPlatformSupport::Common::GPUDebugger::Struct, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> members;
};

struct XRTimeRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*> *__next_;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct mutex {
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } __m_;
};

struct shared_ptr<AsyncTexture>;

struct shared_ptr<GPUTools::FD::Function> {
    struct Function *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<AsyncTexture>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long, unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::hash<unsigned long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, unsigned long>, std::__1::equal_to<unsigned long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *__begin_;
    struct CGPoint *__end_;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *__value_;
    } __end_cap_;
};

struct vector<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
    struct Buffer *__begin_;
    struct Buffer *__end_;
    struct __compressed_pair<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer *, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
        struct Buffer *__value_;
    } __end_cap_;
};

struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>;

struct vector<GPUTimelineGraphMarker, std::__1::allocator<GPUTimelineGraphMarker>> {
    struct GPUTimelineGraphMarker *__begin_;
    struct GPUTimelineGraphMarker *__end_;
    struct __compressed_pair<GPUTimelineGraphMarker *, std::__1::allocator<GPUTimelineGraphMarker>> {
        struct GPUTimelineGraphMarker *__value_;
    } __end_cap_;
};

struct vector<GPUTimelineGraphReferencePlaneCell, std::__1::allocator<GPUTimelineGraphReferencePlaneCell>> {
    struct GPUTimelineGraphReferencePlaneCell *__begin_;
    struct GPUTimelineGraphReferencePlaneCell *__end_;
    struct __compressed_pair<GPUTimelineGraphReferencePlaneCell *, std::__1::allocator<GPUTimelineGraphReferencePlaneCell>> {
        struct GPUTimelineGraphReferencePlaneCell *__value_;
    } __end_cap_;
};

struct vector<GPUToolsPlatformSupport::Common::GPUDebugger::Struct, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> {
    struct Struct *__begin_;
    struct Struct *__end_;
    struct __compressed_pair<GPUToolsPlatformSupport::Common::GPUDebugger::Struct *, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> {
        struct Struct *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>, std::__1::allocator<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>>> {
    map_b7e40c1f *__begin_;
    map_b7e40c1f *__end_;
    struct __compressed_pair<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>*, std::__1::allocator<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>>> {
        map_b7e40c1f *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<AsyncTexture>, std::__1::allocator<std::__1::shared_ptr<AsyncTexture>>> {
    struct shared_ptr<AsyncTexture> *__begin_;
    struct shared_ptr<AsyncTexture> *__end_;
    struct __compressed_pair<std::__1::shared_ptr<AsyncTexture>*, std::__1::allocator<std::__1::shared_ptr<AsyncTexture>>> {
        struct shared_ptr<AsyncTexture> *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>, std::__1::allocator<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>>> {
    struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__begin_;
    struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__end_;
    struct __compressed_pair<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>*, std::__1::allocator<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>>> {
        struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long width;
    unsigned long long height;
    unsigned long long scale;
} CDStruct_b00b4bef;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    CDStruct_b00b4bef _field1;
    CDStruct_b00b4bef _field2;
} CDStruct_3c478e70;

// Template types
typedef struct map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_b7e40c1f;

typedef struct shared_ptr<GPUTools::FD::Function> {
    struct Function *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2d3f6817;

typedef struct vector<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
    struct Buffer *__begin_;
    struct Buffer *__end_;
    struct __compressed_pair<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer *, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
        struct Buffer *__value_;
    } __end_cap_;
} vector_d2e2fb42;

typedef struct vector<GPUTimelineGraphMarker, std::__1::allocator<GPUTimelineGraphMarker>> {
    struct GPUTimelineGraphMarker *__begin_;
    struct GPUTimelineGraphMarker *__end_;
    struct __compressed_pair<GPUTimelineGraphMarker *, std::__1::allocator<GPUTimelineGraphMarker>> {
        struct GPUTimelineGraphMarker *__value_;
    } __end_cap_;
} vector_2c9ce4e9;

typedef struct vector<GPUTimelineGraphReferencePlaneCell, std::__1::allocator<GPUTimelineGraphReferencePlaneCell>> {
    struct GPUTimelineGraphReferencePlaneCell *__begin_;
    struct GPUTimelineGraphReferencePlaneCell *__end_;
    struct __compressed_pair<GPUTimelineGraphReferencePlaneCell *, std::__1::allocator<GPUTimelineGraphReferencePlaneCell>> {
        struct GPUTimelineGraphReferencePlaneCell *__value_;
    } __end_cap_;
} vector_e98c3527;

typedef struct vector<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>, std::__1::allocator<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>>> {
    map_b7e40c1f *__begin_;
    map_b7e40c1f *__end_;
    struct __compressed_pair<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>*, std::__1::allocator<std::__1::map<unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::EncodedResource>>>>>>> {
        map_b7e40c1f *__value_;
    } __end_cap_;
} vector_56802008;

typedef struct vector<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>, std::__1::allocator<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>>> {
    struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__begin_;
    struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__end_;
    struct __compressed_pair<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>*, std::__1::allocator<std::__1::vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>>>> {
        struct vector<GPUTimelineGraphDataPlaneCell, std::__1::allocator<GPUTimelineGraphDataPlaneCell>> *__value_;
    } __end_cap_;
} vector_553fcf91;

typedef struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *__value_;
    } __end_cap_;
} vector_7984f87c;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *_field1;
    } _field3;
} vector_eb9481f9;

#pragma mark Named Unions

union DYTextureChannelMappings {
    CDStruct_a06f635e _field1;
    unsigned char _field2[4];
    unsigned int _field3;
};

