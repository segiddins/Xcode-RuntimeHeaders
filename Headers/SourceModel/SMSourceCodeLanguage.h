//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <SourceModel/NSCopying-Protocol.h>

@class NSArray, NSString, SMLanguageSpecification;

@interface SMSourceCodeLanguage : NSObject <NSCopying>
{
    NSString *_identifier;
    NSString *_languageName;
    NSString *_languageSpecificationIdentifier;
    SMLanguageSpecification *_languageSpecification;
    NSString *_documentationAbbreviation;
    NSArray *_fileDataTypeIdentifiers;
    NSArray *_fileExtensions;
    NSArray *_conformedToLanguageIdentifiers;
    NSArray *_conformedToLanguages;
    BOOL _supportsIndentation;
    BOOL _allowWhitespaceTrimming;
    BOOL _requiresHardTabs;
    NSArray *_indentationTriggers;
    BOOL _scriptingLanguage;
    NSArray *_commentSyntaxes;
    NSArray *_lineCommentPrefixes;
    NSArray *_blockCommentCircumfixes;
    NSArray *_documentationSyntaxes;
    NSArray *_lineDocumentationPrefixes;
    NSArray *_blockDocumentationCircumfixes;
    NSArray *_standardTypes;
    BOOL _isHidden;
    BOOL _usesColorLiteral;
    BOOL _usesFileLiteral;
    BOOL _usesImageLiteral;
    Class _nativeSourceModelParserClass;
}

+ (id)sourceCodeLanguageForFileDataTypeIdentifier:(id)arg1;
+ (id)sourceCodeLanguageForFileExtension:(id)arg1;
+ (id)sourceCodeLanguageForLanguageSpecificationIdentifier:(id)arg1;
+ (id)sourceCodeLanguageWithIdentifier:(id)arg1;
+ (id)sourceCodeLanguages;
+ (id)loadAndCacheSourceCodeLanguageWithPlist:(id)arg1;
+ (void)loadAndCacheDefaultSourceCodeLanguages;
+ (void)ensureDefaultSourceCodeLanguagesLoaded;
+ (id)_sourceCodeLanguageForMetadata:(id)arg1;
+ (id)registerSourceCodeLanguageFromMetadataPlist:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
@property(readonly, copy) NSArray *standardTypes; // @synthesize standardTypes=_standardTypes;
@property(readonly, copy) NSArray *blockDocumentationCircumfixes; // @synthesize blockDocumentationCircumfixes=_blockDocumentationCircumfixes;
@property(readonly, copy) NSArray *lineDocumentationPrefixes; // @synthesize lineDocumentationPrefixes=_lineDocumentationPrefixes;
@property(readonly, copy) NSArray *blockCommentCircumfixes; // @synthesize blockCommentCircumfixes=_blockCommentCircumfixes;
@property(readonly, copy) NSArray *lineCommentPrefixes; // @synthesize lineCommentPrefixes=_lineCommentPrefixes;
@property(readonly) BOOL usesImageLiteral; // @synthesize usesImageLiteral=_usesImageLiteral;
@property(readonly) BOOL usesFileLiteral; // @synthesize usesFileLiteral=_usesFileLiteral;
@property(readonly) BOOL usesColorLiteral; // @synthesize usesColorLiteral=_usesColorLiteral;
@property(readonly) BOOL isHidden; // @synthesize isHidden=_isHidden;
@property(readonly) BOOL scriptingLanguage; // @synthesize scriptingLanguage=_scriptingLanguage;
@property(readonly) NSArray *indentationTriggers; // @synthesize indentationTriggers=_indentationTriggers;
@property(readonly) BOOL requiresHardTabs; // @synthesize requiresHardTabs=_requiresHardTabs;
@property(readonly) BOOL allowWhitespaceTrimming; // @synthesize allowWhitespaceTrimming=_allowWhitespaceTrimming;
@property(readonly) BOOL supportsIndentation; // @synthesize supportsIndentation=_supportsIndentation;
@property(readonly, copy) NSArray *fileExtensions; // @synthesize fileExtensions=_fileExtensions;
@property(readonly, copy) NSArray *fileDataTypeIdentifiers; // @synthesize fileDataTypeIdentifiers=_fileDataTypeIdentifiers;
@property(readonly, copy) NSString *documentationAbbreviation; // @synthesize documentationAbbreviation=_documentationAbbreviation;
@property(readonly, copy) NSString *languageName; // @synthesize languageName=_languageName;
@property(readonly, copy) NSString *identifier; // @synthesize identifier=_identifier;
- (BOOL)conformsToLanguage:(id)arg1;
@property(readonly, copy) NSArray *conformedToLanguages;
@property(readonly) SMLanguageSpecification *languageSpecification;
@property(readonly) Class nativeSourceModelParserClass; // @synthesize nativeSourceModelParserClass=_nativeSourceModelParserClass;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLanguageDescription:(id)arg1;

@end

