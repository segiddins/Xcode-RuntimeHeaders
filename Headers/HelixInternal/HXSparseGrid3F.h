//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface HXSparseGrid3F : NSObject
{
    // Error parsing type: {DefaultAccessorSparseGrid="sparseGrid"{SparseGrid<helix::SimdTypes<float, 3> >="m_data"{SparseGridStruct<helix::SimdTypes<float, 3> >="m_data"{SmallArraysAllocator<unsigned int, helix::DefaultAllocator>="m_buffer"^I"m_capacity"Q"m_count"Q"m_freeData"{DynamicBitset<helix::DefaultAllocator>="m_word"{DynamicArray<unsigned long long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}"m_size"Q}"m_freeDataCount"Q"m_freeBlocsListUpperPow2"{DynamicArray<unsigned long, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^Q}}"m_hashToData"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_veryLargeObjects"{DynamicArray<unsigned int, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^I}"m_objects"{DynamicArray<helix::SparseGridStruct<helix::SimdTypes<float, 3> >::SparseGridObject, helix::DefaultAllocator>="m_allocator"^{DefaultAllocator}"m_capacity"Q"m_size"Q"m_data"^{SparseGridObject}}"m_objectCount"Q"m_hashDivisor"I"m_cellSize"f"m_cellSizeVec""m_invCellSize"f"m_gridOrigin""m_initialized"B"m_veryLargeListDirty"B"m_initialObjectCount"Q"m_initialBBox"{Box<helix::SimdTypes<float, 3> >="m_min""m_max"}"m_currentBBox"{Box<helix::SimdTypes<float, 3> >="m_min""m_max"}"m_autoCellSize"B"m_cellSizeHint"f"m_autoCellSizeMultiplierHint"f"m_volumeObjectSizeSum"d"m_volumeObjectCount"Q"m_initialVolumePerObject"f}}}, name: m_sparseGridStruct
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)getClosestFromPosition:(float)arg1 transformScaling:(id)arg2 maximumUnscaledDistance:(id)arg3 workingData:result: /* Error: Ran out of types for this method. */;
- (void)raycastWithStart:(BOOL)arg1 unitDirection:(float)arg2 doubleSided:(id)arg3 maximumDistance:(id)arg4 workingData:result: /* Error: Ran out of types for this method. */;
- (void)getObjectsIntersectingLineOfType:(long long)arg1 startPoint:(id)arg2 endPoint:result: /* Error: Ran out of types for this method. */;
- (void)getObjectsInSphere:(CDStruct_37a3040a)arg1 result:(id)arg2;
- (void)getObjectsInBox:(struct)arg1 result:(id)arg2;
- (void)getObjectsContainingPoint:(id)arg1 result: /* Error: Ran out of types for this method. */;
- (void)updateGrid;
- (void)removeObject:(long long)arg1;
- (CDStruct_37a3040a)getBoundingSphereOfObject:(long long)arg1;
- (struct)getBoundingBoxOfObject:(long long)arg1;
- (void)setObject:(long long)arg1 withBoundingSphere:(CDStruct_37a3040a)arg2;
- (void)setObject:(long long)arg1 withBoundingBox:(struct)arg2;
- (void)setObject:(long long)arg1 withPoint: /* Error: Ran out of types for this method. */;
- (BOOL)isObjectValid:(long long)arg1;
@property(readonly) struct sparseGridBoundingBox;
@property(readonly, nonatomic) float autoCellSizeMultiplier;
@property(readonly, nonatomic) BOOL autoCellSizeEnabled;
- (void)enableAutomaticCellSizeWithMultiplier:(float)arg1;
@property float cellSize;
@property(nonatomic) long long objectIndexRange;
- (id)initWithCellSize:(float)arg1;
- (id)init;

@end

