//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class DTGPUCounterProfile, NSArray, NSDictionary, NSString;
@protocol DTGPUDataSourceDelegate, MTLDevice, OS_dispatch_queue, OS_dispatch_source;

@interface DTGPUDataSource : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    DTGPUCounterProfile *_collectingProfile;
    unsigned long long _windowLimit;
    unsigned long long _sampleInterval;
    unsigned long long _stopTime;
    struct unique_ptr<DTGPUCounterRingBuffer, std::__1::default_delete<DTGPUCounterRingBuffer>> _counterBuffer;
    NSArray *_supportedCounterProfiles;
    id <MTLDevice> _device;
    id <DTGPUDataSourceDelegate> _delegate;
}

@property(nonatomic) __weak id <DTGPUDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak id <MTLDevice> device; // @synthesize device=_device;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_queryDisplayInfoDict;
- (unsigned long long)timestampOfFirstSample;
- (BOOL)isEqual:(id)arg1;
- (void)_sampleCounters;
- (void)reset;
- (void)flushRemainingData:(CDUnknownBlockType)arg1;
- (void)stop;
- (BOOL)run;
- (id)configure:(unsigned int)arg1 interval:(unsigned long long)arg2 windowLimit:(unsigned long long)arg3;
@property(readonly, nonatomic) DTGPUCounterProfile *collectingProfile;
@property(readonly, nonatomic) NSDictionary *deviceInfoDict;
@property(readonly, nonatomic) NSString *deviceName;
@property(readonly, nonatomic) unsigned long long windowLimit;
@property(readonly, nonatomic) unsigned long long minSampleInterval;
@property(readonly, nonatomic) NSArray *supportedCounterProfiles;
- (id)initWithMTLDevice:(id)arg1 workQueue:(id)arg2;

@end

