//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSString.h>

#import <DVTFoundation/DVTBroadcastName-Protocol.h>
#import <DVTFoundation/DVTDiffHashing-Protocol.h>
#import <DVTFoundation/DVTPropertyListValue-Protocol.h>
#import <DVTFoundation/_TtP13DVTFoundation20DVTResourceReference_-Protocol.h>

@class NSArray, NSData, NSDate, NSDictionary, NSNumber;
@protocol NSCopying;

@interface NSString (DVTBroadcastCenterAdditions) <DVTBroadcastName, DVTPropertyListValue, DVTDiffHashing, _TtP13DVTFoundation20DVTResourceReference_>
+ (BOOL)dvt_isDataUTF8WithBOM:(id)arg1;
+ (BOOL)dvt_isDataUnicodeEncoded:(id)arg1 isBigEndian:(char *)arg2;
+ (id)dvt_stringWithPotentiallyMalformedUTF8Bytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)dvt_stringWithPotentiallyMalformedUTF8Bytes:(const char *)arg1 length:(unsigned long long)arg2 stopAtTrailingIncompleteUTF8Sequence:(BOOL)arg3 getUsedLength:(unsigned long long *)arg4 getNumberOfMalformedSequences:(unsigned long long *)arg5;
+ (id)dvt_stringWithListComponentsJoinedByCommasAndOr:(id)arg1;
+ (id)dvt_stringWithListComponentsJoinedByCommasAndAnd:(id)arg1;
+ (id)dvt_stringWithUniqueFileNameSuffixForDistinguishingStrings:(id)arg1;
+ (BOOL)dvt_isFileUTF8WithBOM:(id)arg1 fileData:(id)arg2;
+ (BOOL)dvt_isFileUnicode:(id)arg1 fileData:(id)arg2;
+ (id)dvt_stringWithUnsignedLong:(unsigned long long)arg1 base:(unsigned long long)arg2;
+ (id)dvt_UUIDString;
+ (id)dvt_localizedNameOfLineEnding:(unsigned long long)arg1;
+ (id)dvt_stringWithFileSystemRepresentation:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)dvt_stringWithFileSystemRepresentation:(const char *)arg1;
- (id)dvt_sharedCopy;
- (unsigned long long)macroRegistrationNumber;
- (id)dvt_debugDescription;
- (void)dvt_assertInternalConsistency;
- (id)dvt_stringForm;
- (BOOL)dvt_isLiteral;
- (id)dvt_evaluateAsStringListInScope:(id)arg1 withState:(const struct DVTNestedMacroExpansionState *)arg2;
- (id)dvt_evaluateAsStringInScope:(id)arg1 withState:(const struct DVTNestedMacroExpansionState *)arg2;
- (id)dvt_literalValueOfCommonString;
- (id)dvt_parseAsMacroExpansionStringList;
- (id)dvt_parseAsMacroExpansionStringListReturningError:(id *)arg1;
- (id)dvt_parseAsMacroExpansionString;
- (id)dvt_parseAsMacroExpansionStringReturningError:(id *)arg1;
- (id)dvt_parseAsMacroAssignmentsUsingMacroNameRegistry:(id)arg1 returningErrorString:(id *)arg2;
- (id)dvt_parseAsMacroAssignmentUsingMacroNameRegistry:(id)arg1 returningErrorString:(id *)arg2;
- (id)dvt_parseAsMacroAssignmentsWithBlock:(CDUnknownBlockType)arg1 returningErrorString:(id *)arg2;
- (id)_dvt_parseAsMacroAssignmentsIntoMacroDefinitionTable:(id)arg1 withBlock:(CDUnknownBlockType)arg2 returningErrorString:(id *)arg3;
- (id)dvt_parseAsMacroAssignmentParsingValueWithBlock:(CDUnknownBlockType)arg1 returningErrorString:(id *)arg2;
- (BOOL)dvt_findPatternHasContent;
- (id)dvt_findPatternComponentSummary;
- (id)dvt_findPatternComponentPropertyListRepresentation;
- (id)dvt_findPatternComponentRepresentation;
- (void)dvt_provideFileSystemRepresentationToBlock:(CDUnknownBlockType)arg1;
@property(readonly) NSDictionary *dictionaryValue;
@property(readonly) NSArray *arrayValue;
@property(readonly) NSDate *dateValue;
@property(readonly) NSNumber *numberValue;
@property(readonly) NSData *dataValue;
@property(readonly) NSString *stringValue;
- (unsigned long long)dvt_diffHashForDataSource:(id)arg1;
- (BOOL)dvt_isAsciiInRange:(struct _NSRange)arg1;
- (BOOL)dvt_isAscii;
- (double)dvt_doubleValue;
- (BOOL)dvt_isComposedEntirelyOfCharactersFromSet:(id)arg1;
- (BOOL)dvt_isRange:(struct _NSRange)arg1 composedEntirelyOfCharactersFromSet:(id)arg2;
- (struct _NSRange)dvt_interiorRangeAfterTrimmingCharactesFromSet:(id)arg1 preservingRange:(struct _NSRange)arg2;
- (struct _NSRange)dvt_interiorRangeAfterTrimmingCharactesFromSet:(id)arg1;
- (id)dvt_stringByReplacingCharactersFromSet:(id)arg1 withString:(id)arg2;
- (id)dvt_stringByReplacingCharactersFromSet:(id)arg1 inRange:(struct _NSRange)arg2 withString:(id)arg3;
- (BOOL)dvt_containsCharacterFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)dvt_containsCharacterFromSet:(id)arg1;
- (struct _NSRange)dvt_suffixRangeFromIndex:(long long)arg1;
- (struct _NSRange)dvt_suffixRangeOfLength:(long long)arg1;
- (struct _NSRange)dvt_prefixRangeOfLength:(long long)arg1;
- (struct _NSRange)dvt_fullRange;
- (void)dvt_invokeWithAccessToCharacters:(CDUnknownBlockType)arg1;
- (void)dvt_invokeWithAccessToCharactersInRange:(struct _NSRange)arg1 block:(CDUnknownBlockType)arg2;
- (void)dvt_invokeWithAccessToUTF8Bytes:(CDUnknownBlockType)arg1;
- (BOOL)dvt_canBeEncodedWithEncoding:(unsigned long long)arg1;
- (BOOL)dvt_range:(struct _NSRange)arg1 isEqualToString:(id)arg2;
- (BOOL)dvt_hasCaseInsensitivePrefix:(id)arg1;
- (id)dvt_arrayByParsingAsStringList;
- (void)dvt_enumerateWhitespaceSeparatedSubstringsInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)dvt_substringFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)dvt_enumerateOccurrencesOfSubstring:(id)arg1 options:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)dvt_md5Hash;
- (id)dvt_stringByRepeating:(unsigned long long)arg1;
- (id)dvt_componentsSeparatedByUnquotedWhitespacePreservingQuotes:(BOOL)arg1;
- (id)dvt_stringByMakingAbsolutePathWithBasePath:(id)arg1;
- (id)dvt_stringByMakingPathRelativeToBasePath:(id)arg1;
- (id)dvt_stringByStrippingExtraZeroesAfterDecimalPlace;
- (id)dvt_capitalizedWordsFromString;
- (id)dvt_wordsFromString;
- (id)dvt_wordsFromStringWithLetterCasing:(unsigned long long)arg1;
- (id)dvt_stringWithLetterCasing:(unsigned long long)arg1;
- (id)dvt_stringByManglingToLegalC99ExtendedIdentifier;
- (id)dvt_stringByManglingToLegalCIdentifier;
- (id)dvt_stringByManglingToLegalRFC1034Identifier;
- (id)dvt_stringByManglingToLegalBundleIdentifier;
- (id)dvt_stringByManglingToLegalIdentifierOfType:(int)arg1;
- (long long)dvt_versionNumberComparison:(id)arg1;
- (id)dvt_dataForHexString;
- (BOOL)dvt_isLegalCIdentifier;
- (BOOL)dvt_isSemanticVersion;
- (BOOL)dvt_hasLeadingZero;
- (BOOL)dvt_hasContent;
- (BOOL)dvt_isNonEmpty;
- (BOOL)dvt_isEmpty;
- (id)dvt_stringByEscapingForXML;
- (id)dvt_stringByDecodingXMLEntities;
- (id)dvt_stringByRemovingCStringEscapeSequences;
- (id)dvt_stringByQuotingOnlyIfNeeded:(BOOL)arg1 quoteTabsAndEOLs:(BOOL)arg2 quoteHighBitUnichars:(BOOL)arg3;
- (id)dvt_stringByQuotingIfNeeded;
- (id)dvt_stringByTranslatingSmartQuotesToReal;
- (unsigned long long)dvt_numberOfLines;
- (struct _NSRange)dvt_lineIndexRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)dvt_characterRangeForLineRange:(struct _NSRange)arg1;
- (id)dvt_UUIDStringWithHyphens;
- (unsigned long long)dvt_adlerHashWithRange:(struct _NSRange)arg1;
- (id)dvt_stringByStandardizingWithLineEnding:(unsigned long long)arg1;
- (id)dvt_stringByLowercasingFirstCharacter;
- (id)dvt_stringByCapitalizingFirstCharacter;
- (id)dvt_lastKeyPathComponent;
- (id)dvt_firstKeyPathComponent;
- (id)dvt_stringByReplacingWhitespaceRunsWithCharacter:(unsigned short)arg1 range:(struct _NSRange)arg2;
- (id)dvt_stringByAppendingSuffixIfMissing:(id)arg1;
- (id)dvt_stringByRemovingSuffix:(id)arg1;
- (id)dvt_stringByRemovingPrefix:(id)arg1;
- (BOOL)dvt_getFileSystemRepresentation:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)dvt_stringWithANSITextBoldCyan;
- (id)dvt_stringWithANSITextBoldRed;
- (id)dvt_stringWithANSITextBold;
@property(nonatomic, readonly) id <NSCopying> resourceKey;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

