//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class DVTDocumentLocation, DVTFilePath, DVTRangeArray, IDEOpenQuicklyQuery, NSArray, NSString, NSURL;

@interface IDEOpenQuicklyResult : NSObject
{
    double _textScore;
    double _compositeScore;
    DVTRangeArray *_matchedRanges;
    struct DVTFuzzyMatchCandidate *_candidate;
    IDEOpenQuicklyQuery *_query;
}

+ (id)documentLocationForFilePath:(id)arg1 lineNumber:(id)arg2;
+ (id)documentLocationForURL:(id)arg1 lineNumber:(id)arg2;
+ (double)scoreCandidate:(struct DVTFuzzyMatchCandidate *)arg1 precision:(long long)arg2 isFileName:(BOOL)arg3 fromFilePathOrURL:(id)arg4 isFromProject:(BOOL)arg5 sourceSDKFilePath:(id)arg6 isFromInterestingFramework:(BOOL)arg7 isPrivateSDKContent:(BOOL)arg8 query:(id)arg9 textScore:(double *)arg10 matchedRanges:(id *)arg11;
+ (id)resultWithCandidate:(struct DVTFuzzyMatchCandidate *)arg1 query:(id)arg2 textScore:(double)arg3 compositeScore:(double)arg4 matchedRanges:(id)arg5;
- (void).cxx_destruct;
@property(readonly) IDEOpenQuicklyQuery *query; // @synthesize query=_query;
@property(readonly) struct DVTFuzzyMatchCandidate *candidate; // @synthesize candidate=_candidate;
@property(readonly) DVTRangeArray *matchedRanges; // @synthesize matchedRanges=_matchedRanges;
@property(readonly) double compositeScore; // @synthesize compositeScore=_compositeScore;
@property(readonly) double textScore; // @synthesize textScore=_textScore;
- (long long)compareCompositeScoreInDescendingOrder:(id)arg1;
@property(readonly) BOOL isFromPoject;
@property(readonly) BOOL isSymbolic;
@property(readonly) DVTFilePath *sourceSDKFilePath;
@property(readonly) NSURL *displayPathURL;
@property(readonly) DVTDocumentLocation *location;
@property(readonly) NSArray *childResults;
- (BOOL)representsSameResult:(id)arg1;
- (unsigned long long)hashOfResultIdentity;
- (id)alternateTitleGivenParentResult:(id)arg1;
- (BOOL)representsAlternativeOfResult:(id)arg1;
- (unsigned long long)hashForAlternateIdentity;
- (id)valueStandingInForForAlternateIdentity;
@property(readonly) BOOL isAlternateGroupRepresentingMultipleSDKs;
- (id)description;
@property(readonly) NSString *text;
- (id)updatedResultForQuery:(id)arg1 precision:(long long)arg2;
- (id)flattenToPrimaryResult;

@end

