//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDEFoundation/DVTInvalidation-Protocol.h>
#import <IDEFoundation/DVTXMLUnarchiving-Protocol.h>

@class DVTCustomDataSpecifier, DVTMutableOrderedDictionary, DVTStackBacktrace, IDEContainer, NSArray, NSMutableArray, NSString, NSURL;
@protocol DVTCustomDataStoring;

@interface IDEBreakpointBucket : NSObject <DVTXMLUnarchiving, DVTInvalidation>
{
    DVTCustomDataSpecifier *_archivingDataSpecifier;
    NSString *_archivingContainerItemBaseStandardizedPathString;
    NSMutableArray *_breakpoints;
    DVTMutableOrderedDictionary *_urlToFileBucketDict;
    BOOL _currentlyDecoding;
    NSString *_uuid;
    unsigned long long _type;
    IDEContainer<DVTCustomDataStoring> *_archivingContainer;
    NSString *_displayName;
    NSURL *_fileURL;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingBucketsAndBreakpoints;
+ (id)keyPathsForValuesAffectingShared;
+ (id)userGlobalBucket:(id *)arg1;
+ (id)bucketForUUID:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
@property(copy) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) IDEContainer<DVTCustomDataStoring> *archivingContainer; // @synthesize archivingContainer=_archivingContainer;
@property(readonly) unsigned long long type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void)primitiveInvalidate;
- (void)addBreakpoints:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (id)_breakpointArchivingProxiesArray;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (void)dvt_awakeFromXMLUnarchiver:(id)arg1;
- (id)_displayNameForWorkspace;
- (id)archivingContainerItemBaseStandardizedPathString;
- (void)_persistBreakpoints;
- (void)notifyPersistencyStateChanged;
- (id)removeBreakpoints:(id)arg1;
- (void)addBreakpoint:(id)arg1;
- (void)_addToFileBucketIfNecessary:(id)arg1;
- (id)_fileBreakpointBucketForBreakpoint:(id)arg1 shouldCreate:(BOOL)arg2;
@property(readonly) NSArray *bucketsAndBreakpoints;
@property(readonly, getter=isShared) BOOL shared;
- (BOOL)_decodeFromContainer:(id *)arg1;
- (void)_encodeToContainer;
- (BOOL)_shouldEncodeDecode;
- (id)_archivingDataSpecifierWithName:(id)arg1;
@property(readonly) DVTCustomDataSpecifier *archivingDataSpecifier;
- (id)_archivingDataStore;
@property(readonly, copy) NSString *description;
- (id)initWithType:(unsigned long long)arg1 archivingContainer:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(retain) NSArray *breakpoints; // @dynamic breakpoints;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSMutableArray *mutableBreakpoints; // @dynamic mutableBreakpoints;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

