//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct BreakpointLocation;

struct Broadcaster;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct Debugger;

struct ExecutionContextRef;

struct Process;

struct SBBreakpointLocation {
    struct shared_ptr<lldb_private::BreakpointLocation> _field1;
};

struct SBBroadcaster {
    struct shared_ptr<lldb_private::Broadcaster> m_opaque_sp;
    struct Broadcaster *m_opaque_ptr;
};

struct SBDebugger {
    struct shared_ptr<lldb_private::Debugger> m_opaque_sp;
};

struct SBProcess {
    struct weak_ptr<lldb_private::Process> m_opaque_wp;
};

struct SBTarget {
    struct shared_ptr<lldb_private::Target> m_opaque_sp;
};

struct SBThread {
    struct shared_ptr<lldb_private::ExecutionContextRef> m_opaque_sp;
};

struct SwiftSyntaxStructure;

struct Target;

struct _DVTGraphBounds {
    double minX;
    double maxX;
    double minY;
    double maxY;
};

struct _IDEPlaygroundTextViewFlags {
    unsigned int hasMultipleSections;
    unsigned int disableForwardScrollToGlobalScrollView;
    unsigned int changingAccessoryAnnotationWidth;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __shared_weak_count;

struct shared_ptr<SwiftSyntaxStructure> {
    struct SwiftSyntaxStructure *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::BreakpointLocation> {
    struct BreakpointLocation *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<lldb_private::Broadcaster> {
    struct Broadcaster *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::Debugger> {
    struct Debugger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::ExecutionContextRef> {
    struct ExecutionContextRef *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<lldb_private::Target> {
    struct Target *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>;

struct vector<std::__1::shared_ptr<SwiftSyntaxStructure>, std::__1::allocator<std::__1::shared_ptr<SwiftSyntaxStructure>>> {
    shared_ptr_99585c3b *__begin_;
    shared_ptr_99585c3b *__end_;
    struct __compressed_pair<std::__1::shared_ptr<SwiftSyntaxStructure>*, std::__1::allocator<std::__1::shared_ptr<SwiftSyntaxStructure>>> {
        shared_ptr_99585c3b *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>, std::__1::allocator<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>>> {
    struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__begin_;
    struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__end_;
    struct __compressed_pair<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>*, std::__1::allocator<std::__1::vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>>>> {
        struct vector<SwiftSyntaxToken, std::__1::allocator<SwiftSyntaxToken>> *__first_;
    } __end_cap_;
};

struct weak_ptr<lldb_private::Process> {
    struct Process *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long data[3];
} CDStruct_3b0d17db;

typedef struct {
    double minX;
    double maxX;
    double minY;
    double maxY;
} CDStruct_bf6d4a14;

// Template types
typedef struct shared_ptr<SwiftSyntaxStructure> {
    struct SwiftSyntaxStructure *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_99585c3b;

typedef struct vector<std::__1::shared_ptr<SwiftSyntaxStructure>, std::__1::allocator<std::__1::shared_ptr<SwiftSyntaxStructure>>> {
    shared_ptr_99585c3b *__begin_;
    shared_ptr_99585c3b *__end_;
    struct __compressed_pair<std::__1::shared_ptr<SwiftSyntaxStructure>*, std::__1::allocator<std::__1::shared_ptr<SwiftSyntaxStructure>>> {
        shared_ptr_99585c3b *__first_;
    } __end_cap_;
} vector_c3e2d001;

