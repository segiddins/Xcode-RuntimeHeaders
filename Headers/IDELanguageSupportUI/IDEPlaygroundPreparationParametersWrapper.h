//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDELanguageSupportUI/DVTInvalidation-Protocol.h>

@class DVTNotificationToken, DVTObservingToken, DVTStackBacktrace, IDEPlaygroundPreparationParameters, IDEPlaygroundPreperationToken, NSError, NSString;
@protocol IDEPlaygroundAppBundle;

@interface IDEPlaygroundPreparationParametersWrapper : NSObject <DVTInvalidation>
{
    BOOL _parametersAreValid;
    BOOL _recalculatingParameters;
    id <IDEPlaygroundAppBundle> _playgroundAppBundle;
    CDUnknownBlockType _recalculateParametersBlock;
    IDEPlaygroundPreperationToken *_preparationToken;
    IDEPlaygroundPreparationParameters *_preparationParameters;
    NSError *_error;
    DVTNotificationToken *_activeRunContextBuildablesDidChangeObservingToken;
    DVTObservingToken *_activeRunDestinationObservingToken;
    DVTObservingToken *_activeRunContextObservingToken;
    DVTObservingToken *_activeRunContextRunnableObservingToken;
    DVTObservingToken *_buildableReferenceToUseForMacroExpansionObservingToken;
    DVTObservingToken *_frameworkSearchPathObservingToken;
    DVTObservingToken *_auxiliarySourceSearchPathObservingToken;
    DVTObservingToken *_resourcesUpdatedObservingToken;
    DVTObservingToken *_sdkObservingToken;
    DVTObservingToken *_pageContextObservingToken;
}

+ (void)initialize;
@property(retain) DVTObservingToken *pageContextObservingToken; // @synthesize pageContextObservingToken=_pageContextObservingToken;
@property(retain) DVTObservingToken *sdkObservingToken; // @synthesize sdkObservingToken=_sdkObservingToken;
@property(retain) DVTObservingToken *resourcesUpdatedObservingToken; // @synthesize resourcesUpdatedObservingToken=_resourcesUpdatedObservingToken;
@property(retain) DVTObservingToken *auxiliarySourceSearchPathObservingToken; // @synthesize auxiliarySourceSearchPathObservingToken=_auxiliarySourceSearchPathObservingToken;
@property(retain) DVTObservingToken *frameworkSearchPathObservingToken; // @synthesize frameworkSearchPathObservingToken=_frameworkSearchPathObservingToken;
@property(retain) DVTObservingToken *buildableReferenceToUseForMacroExpansionObservingToken; // @synthesize buildableReferenceToUseForMacroExpansionObservingToken=_buildableReferenceToUseForMacroExpansionObservingToken;
@property(retain) DVTObservingToken *activeRunContextRunnableObservingToken; // @synthesize activeRunContextRunnableObservingToken=_activeRunContextRunnableObservingToken;
@property(retain) DVTObservingToken *activeRunContextObservingToken; // @synthesize activeRunContextObservingToken=_activeRunContextObservingToken;
@property(retain) DVTObservingToken *activeRunDestinationObservingToken; // @synthesize activeRunDestinationObservingToken=_activeRunDestinationObservingToken;
@property(retain) DVTNotificationToken *activeRunContextBuildablesDidChangeObservingToken; // @synthesize activeRunContextBuildablesDidChangeObservingToken=_activeRunContextBuildablesDidChangeObservingToken;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) IDEPlaygroundPreparationParameters *preparationParameters; // @synthesize preparationParameters=_preparationParameters;
@property(retain, nonatomic) IDEPlaygroundPreperationToken *preparationToken; // @synthesize preparationToken=_preparationToken;
@property(copy) CDUnknownBlockType recalculateParametersBlock; // @synthesize recalculateParametersBlock=_recalculateParametersBlock;
@property(retain, nonatomic) id <IDEPlaygroundAppBundle> playgroundAppBundle; // @synthesize playgroundAppBundle=_playgroundAppBundle;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_recalculateParametersIfNeeded;
- (void)invalidateParameters;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

