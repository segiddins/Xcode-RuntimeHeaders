//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class DVTDevice, DVTDownloadableOperationDownload, DVTFilePath, DVTPlatform, NSError, NSString;
@protocol OS_dispatch_queue;

@interface DVTDeviceSymbolsCoordinator : NSObject
{
    BOOL _lookupByOSVersion;
    BOOL _allowNFADownload;
    BOOL _allowADCDownload;
    BOOL _preferUniversalSymbols;
    DVTFilePath *_symbolsPath;
    NSError *_downloadError;
    DVTDownloadableOperationDownload *_downloadOperation;
    DVTDevice *_responsibleDevice;
    NSString *_modelCode;
    NSString *_operatingSystemVersion;
    NSString *_operatingSystemBuild;
    DVTPlatform *_platform;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly) BOOL preferUniversalSymbols; // @synthesize preferUniversalSymbols=_preferUniversalSymbols;
@property(readonly) BOOL allowADCDownload; // @synthesize allowADCDownload=_allowADCDownload;
@property(readonly) BOOL allowNFADownload; // @synthesize allowNFADownload=_allowNFADownload;
@property(readonly) BOOL lookupByOSVersion; // @synthesize lookupByOSVersion=_lookupByOSVersion;
@property(readonly) DVTPlatform *platform; // @synthesize platform=_platform;
@property(readonly) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_operatingSystemBuild;
@property(readonly) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
@property(readonly) NSString *modelCode; // @synthesize modelCode=_modelCode;
@property(readonly) DVTDevice *responsibleDevice; // @synthesize responsibleDevice=_responsibleDevice;
@property(retain) DVTDownloadableOperationDownload *downloadOperation; // @synthesize downloadOperation=_downloadOperation;
@property(retain) NSError *downloadError; // @synthesize downloadError=_downloadError;
@property(retain) DVTFilePath *symbolsPath; // @synthesize symbolsPath=_symbolsPath;
- (id)_downloadOpForSymbolsFileURL:(id)arg1 fromURL:(id)arg2 requireAuth:(BOOL)arg3 error:(id *)arg4;
- (id)_xbsTrainNameForPlatform:(id)arg1 update:(id)arg2 devToolsTrain:(BOOL)arg3 error:(id *)arg4;
- (void)_completePreparationForSymbolsPath:(id)arg1;
- (void)_downloadSymbolsToFileURL:(id)arg1 fromServers:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_downloadSymbolsToFileURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cacheSymbolsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_updateModificationDateOf:(id)arg1;
- (id)initWithDevice:(id)arg1 andResponsibleDevice:(id)arg2;
- (id)initWithDevice:(id)arg1 andPairedDevice:(id)arg2;
- (id)initWithDevice:(id)arg1;

@end

