//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GPUHistogram;

@interface DYRenderingAttributes : NSObject
{
    // Error parsing type: , name: _enabledStates
    double _toneMapFactors[4];
    GPUHistogram *_histograms[4];
    BOOL _hasUserDefinedChannelMappings;
    BOOL _hasUserDefinedToneMapping;
    BOOL _flipped;
    BOOL _premultipliedAlpha;
    BOOL _combineColorChannelHistograms;
    union DYTextureChannelMappings _channelMappings;
    union DYTextureChannelMappings _defaultChannelMappings;
    int _selectedMipmapLevel;
    int _selectedLayer;
    int _renderTargetArrayIndex;
    unsigned int _pixelFormat;
    unsigned long long _channelFlags;
    // Error parsing type: , name: _minValues
    // Error parsing type: , name: _maxValues
    // Error parsing type: , name: _defaultMinValues
    // Error parsing type: , name: _defaultMaxValues
    // Error parsing type: , name: _histogramMinValues
    // Error parsing type: , name: _histogramMaxValues
}

+ (void)initialize;
@property(nonatomic) BOOL combineColorChannelHistograms; // @synthesize combineColorChannelHistograms=_combineColorChannelHistograms;
// Error parsing type for property histogramMaxValues:
// Property attributes: T,N,V_histogramMaxValues

// Error parsing type for property histogramMinValues:
// Property attributes: T,N,V_histogramMinValues

@property(nonatomic) BOOL premultipliedAlpha; // @synthesize premultipliedAlpha=_premultipliedAlpha;
@property(readonly, nonatomic) unsigned long long channelFlags; // @synthesize channelFlags=_channelFlags;
@property(readonly, nonatomic) unsigned int pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property(nonatomic) BOOL flipped; // @synthesize flipped=_flipped;
@property(nonatomic) int renderTargetArrayIndex; // @synthesize renderTargetArrayIndex=_renderTargetArrayIndex;
@property(nonatomic) int selectedLayer; // @synthesize selectedLayer=_selectedLayer;
@property(nonatomic) int selectedMipmapLevel; // @synthesize selectedMipmapLevel=_selectedMipmapLevel;
@property(nonatomic) BOOL hasUserDefinedToneMapping; // @synthesize hasUserDefinedToneMapping=_hasUserDefinedToneMapping;
// Error parsing type for property defaultMaxValues:
// Property attributes: T,N,V_defaultMaxValues

// Error parsing type for property defaultMinValues:
// Property attributes: T,N,V_defaultMinValues

// Error parsing type for property maxValues:
// Property attributes: T,N,V_maxValues

// Error parsing type for property minValues:
// Property attributes: T,N,V_minValues

@property(nonatomic) BOOL hasUserDefinedChannelMappings; // @synthesize hasUserDefinedChannelMappings=_hasUserDefinedChannelMappings;
@property(nonatomic) union DYTextureChannelMappings defaultChannelMappings; // @synthesize defaultChannelMappings=_defaultChannelMappings;
@property(nonatomic) union DYTextureChannelMappings channelMappings; // @synthesize channelMappings=_channelMappings;
// Error parsing type for property enabledStates:
// Property attributes: T,N,V_enabledStates

- (void).cxx_destruct;
- (id)description;
- (void)getChannelMap:(unsigned char [4])arg1;
- (void)updateWithMinValues:(double [4])arg1 maxValues:(double [4])arg2 minLimits:(double [4])arg3 maxLimits:(double [4])arg4 factors:(double [4])arg5;
- (double)toneMapFactorForChannelIndex:(unsigned char)arg1;
- (void)setHistogram:(id)arg1 forChannel:(long long)arg2;
- (id)histogramForChannel:(long long)arg1;
- (void)setChannelEnabled:(BOOL)arg1 forIndex:(unsigned char)arg2;
- (BOOL)isChannelEnabledForIndex:(unsigned char)arg1;
- (void)setMaxValue:(double)arg1 forChannel:(long long)arg2;
- (void)setMinValue:(double)arg1 forChannel:(long long)arg2;
- (void)setChannelMapping:(unsigned char)arg1 forChannel:(long long)arg2;
- (unsigned char)channelMappingForChannel:(long long)arg1;
- (void)setEnabledState:(BOOL)arg1 forChannel:(long long)arg2;
- (BOOL)enabledStateForChannel:(long long)arg1;
- (id)initWithPixelFormat:(unsigned int)arg1;

@end

