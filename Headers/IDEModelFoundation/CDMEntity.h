//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <IDEModelFoundation/CDMIdentification-Protocol.h>
#import <IDEModelFoundation/DVTInvalidation-Protocol.h>
#import <IDEModelFoundation/IDEKeyDrivenNavigableItemRepresentedObject-Protocol.h>

@class CDMInheritanceRelationship, CDMModel, DVTDocumentLocation, DVTFileDataType, DVTStackBacktrace, IDEFileReference, NSArray, NSDictionary, NSImage, NSMutableArray, NSMutableDictionary, NSNumber, NSString;

@interface CDMEntity : NSObject <CDMIdentification, DVTInvalidation, IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSString *_name;
    NSString *_representedClassName;
    NSMutableArray *_attributes;
    NSMutableArray *_fetchedProperties;
    NSMutableArray *_relationships;
    NSMutableArray *_allProperties;
    BOOL _isAbstract;
    NSMutableDictionary *_userInfoDictionary;
    NSString *_elementID;
    NSString *_versionHashModifier;
    NSMutableArray *_descendants;
    CDMModel *_model;
    NSNumber *_uniqueID;
    CDMInheritanceRelationship *_inheritanceRelationship;
    CDMInheritanceRelationship *_oldInheritanceRelationship;
    NSMutableArray *_compoundIndexes;
    NSMutableArray *_uniquenessConstraints;
    long long _codeGenerationType;
}

+ (id)dictionaryOfPropertyPLists:(id)arg1;
+ (id)keyPathsForValuesAffectingInspectedUniquenessConstraints;
+ (id)keyPathsForValuesAffectingInspectedCompoundIndexes;
+ (id)keyPathsForValuesAffectingRelationshipsIncludingInheritance;
+ (id)keyPathsForValuesAffectingInspectedClassName;
+ (id)keyPathsForValuesAffectingInspectedModuleName;
+ (id)keyPathsForValuesAffectingAllProperties;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingSortedFetchedProperties;
+ (id)keyPathsForValuesAffectingSortedRelationships;
+ (id)keyPathsForValuesAffectingSortedAttributes;
+ (id)keyPathsForValuesAffectingAllRelationshipsIncludingInheritance;
+ (id)keyPathsForValuesAffectingAllAttributesIncludingInheritance;
+ (id)keyPathsForValuesAffectingAllPropertiesIncludingInheritance;
@property(nonatomic) long long codeGenerationType; // @synthesize codeGenerationType=_codeGenerationType;
@property(copy) NSArray *uniquenessConstraints; // @synthesize uniquenessConstraints=_uniquenessConstraints;
@property(copy) NSArray *compoundIndexes; // @synthesize compoundIndexes=_compoundIndexes;
@property(retain) CDMInheritanceRelationship *oldInheritanceRelationship; // @synthesize oldInheritanceRelationship=_oldInheritanceRelationship;
@property(retain) CDMInheritanceRelationship *inheritanceRelationship; // @synthesize inheritanceRelationship=_inheritanceRelationship;
@property(copy) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain) CDMModel *model; // @synthesize model=_model;
@property(copy) NSMutableArray *descendants; // @synthesize descendants=_descendants;
@property(copy, nonatomic) NSString *versionHashModifier; // @synthesize versionHashModifier=_versionHashModifier;
@property(copy, nonatomic) NSString *elementID; // @synthesize elementID=_elementID;
@property(copy, nonatomic) NSDictionary *userInfoDictionary; // @synthesize userInfoDictionary=_userInfoDictionary;
@property(nonatomic) BOOL isAbstract; // @synthesize isAbstract=_isAbstract;
@property(copy, nonatomic) NSArray *relationships; // @synthesize relationships=_relationships;
@property(copy, nonatomic) NSArray *fetchedProperties; // @synthesize fetchedProperties=_fetchedProperties;
@property(copy, nonatomic) NSArray *attributes; // @synthesize attributes=_attributes;
@property(copy, nonatomic) NSString *representedClassName; // @synthesize representedClassName=_representedClassName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)stringRepresentation;
- (id)xmlElementDescription;
- (id)uniquenessConstraintsXMLElementTree;
- (id)compoundIndexesXMLElementTree;
- (id)userInfoXMLElementTree;
- (id)syncKeys;
- (void)stitchToRelatedModelElements;
- (id)initWithXMLElementDescription:(id)arg1 belongingToModel:(id)arg2;
- (id)xmlElementAttributes;
@property(readonly) NSString *navigableItem_name;
- (void)generateErrorsAndWarningsWithCallback:(id)arg1 forDocumentAtURL:(id)arg2;
- (void)fillInStateWithDictionary:(id)arg1 entityNameMapTable:(id)arg2;
- (id)pastePropertiesWithDictionary:(id)arg1 entityNameMapTable:(id)arg2;
- (id)pasteFetchedPropertiesFromPlistArray:(id)arg1 entityNameMapTable:(id)arg2;
- (id)pasteFetchRequestsFromPlistArray:(id)arg1 entityNameMapTable:(id)arg2;
- (id)pasteRelationshipsFromPlistArray:(id)arg1 entityNameMapTable:(id)arg2;
- (id)pasteAttributesFromPlistArray:(id)arg1 entityNameMapTable:(id)arg2;
- (id)addKeysToDictionary:(id)arg1;
- (id)undoManager;
- (void)cascadeChangesToLegacyEntity:(id)arg1;
- (id)userInfoDictionaryForExternalUse;
- (BOOL)syncable;
- (id)initWithLegacyEntitysAttributes:(id)arg1 belongingToModel:(id)arg2;
- (id)initWithName:(id)arg1 belongingToModel:(id)arg2;
- (id)init;
- (id)initInModel:(id)arg1;
- (void)primitiveInvalidate;
- (void)removeFetchedProperty:(id)arg1;
- (void)addFetchedProperty:(id)arg1;
- (void)removeRelationship:(id)arg1;
- (void)addRelationship:(id)arg1;
- (void)removeAttribute:(id)arg1;
- (void)addAttribute:(id)arg1;
- (void)removeDescendantEntity:(id)arg1;
- (void)addDescendantEntity:(id)arg1;
- (void)didChangeValueForKey:(id)arg1;
- (void)setInspectedParentEntity:(id)arg1;
- (id)inspectedParentEntity;
@property(retain) CDMEntity *parentEntity;
- (void)setInspectedUniquenessConstraints:(id)arg1;
- (id)inspectedUniquenessConstraints;
- (void)setInspectedCompoundIndexes:(id)arg1;
- (id)inspectedCompoundIndexes;
- (BOOL)mapsDirectlyTo:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)relationshipsIncludingInheritance;
@property(readonly) BOOL hasRepresentedClassName;
- (void)setInspectedClassName:(id)arg1;
- (id)inspectedClassName;
- (void)setInspectedModuleName:(id)arg1;
- (id)inspectedModuleName;
- (id)possibleModuleDisplayValues;
- (id)possibleModuleNameObjects;
@property(readonly) NSArray *allProperties;
- (void)updateAllProperties;
- (id)targetedConfigurations;
- (id)targetedRelationships;
- (id)targetedFetchRequests;
- (id)inheritedPropertyForName:(id)arg1;
- (id)entityRelationshipForName:(id)arg1;
- (id)entityAttributeForName:(id)arg1;
- (id)entityFetchedPropertyForName:(id)arg1;
- (id)entityPropertyForName:(id)arg1;
- (id)possibleParentEntities;
- (id)owningConfigurations;
- (id)_commaSeparatedStringFromPropertyNames:(id)arg1;
- (id)_propertyNamesFromCommaSeparatedString:(id)arg1;
- (void)_registerUndoBlockForFoundEntity:(CDUnknownBlockType)arg1;
- (void)code_classReferences:(id *)arg1 headers:(id *)arg2;
- (id)code_superclassInclude;
- (id)code_classInclude;
- (id)code_effectiveSuperclassName;
- (id)code_effectiveClassName;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;
- (id)sortedFetchedProperties;
- (id)sortedRelationships;
- (id)sortedAttributes;
- (id)allRelationshipsIncludingInheritance;
- (id)allAttributesIncludingInheritance;
- (id)allPropertiesIncludingInheritance;
- (BOOL)validateName:(id *)arg1 error:(id *)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSString *navigableItem_accessibleImageDescription;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) BOOL navigableItem_missingReferencedContentIsImportant;
@property(readonly) BOOL navigableItem_referencedContentExists;
@property(readonly) NSString *navigableItem_subtitle;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

