//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <DeltaFoundation/DEHashing-Protocol.h>
#import <DeltaFoundation/NSCoding-Protocol.h>
#import <DeltaFoundation/NSCopying-Protocol.h>

@class NSDictionary, NSIndexSet, NSMutableArray;
@protocol DEDescriptorDelegate;

@interface DEDescriptor : NSObject <NSCoding, NSCopying, DEHashing>
{
    struct _NSRange _originalTokenRange;
    struct _NSRange _modifiedTokenRange;
    struct _NSRange _ancestorTokenRange;
    struct _NSRange _intermediateTokenRange;
    struct _NSRange _originalContentRange;
    struct _NSRange _modifiedContentRange;
    unsigned long long _originalTokenHash;
    unsigned long long _modifiedTokenHash;
    DEDescriptor *_parentDiffDescriptor;
    NSMutableArray *_childDescriptors;
    NSDictionary *_subdescriptorResults;
    long long _diffDescriptorType;
    long long _diffMergeDirection;
    BOOL _resolved;
    BOOL _binaryConflict;
    BOOL _diffMergeDirectionLocked;
    id <DEDescriptorDelegate> _delegate;
    NSIndexSet *_originalTokenizedRanges;
    NSIndexSet *_modifiedTokenizedRanges;
    struct _NSRange _intermediateModifiedTokenRange;
}

+ (void)initialize;
- (void).cxx_destruct;
@property BOOL diffMergeDirectionLocked; // @synthesize diffMergeDirectionLocked=_diffMergeDirectionLocked;
@property BOOL binaryConflict; // @synthesize binaryConflict=_binaryConflict;
@property(retain) DEDescriptor *parentDiffDescriptor; // @synthesize parentDiffDescriptor=_parentDiffDescriptor;
@property unsigned long long modifiedTokenHash; // @synthesize modifiedTokenHash=_modifiedTokenHash;
@property unsigned long long originalTokenHash; // @synthesize originalTokenHash=_originalTokenHash;
@property struct _NSRange intermediateModifiedTokenRange; // @synthesize intermediateModifiedTokenRange=_intermediateModifiedTokenRange;
@property struct _NSRange intermediateTokenRange; // @synthesize intermediateTokenRange=_intermediateTokenRange;
@property struct _NSRange ancestorTokenRange; // @synthesize ancestorTokenRange=_ancestorTokenRange;
@property(retain) NSDictionary *subdescriptorResults; // @synthesize subdescriptorResults=_subdescriptorResults;
@property(retain) NSIndexSet *modifiedTokenizedRanges; // @synthesize modifiedTokenizedRanges=_modifiedTokenizedRanges;
@property(retain) NSIndexSet *originalTokenizedRanges; // @synthesize originalTokenizedRanges=_originalTokenizedRanges;
@property long long diffDescriptorType; // @synthesize diffDescriptorType=_diffDescriptorType;
@property struct _NSRange modifiedContentRange; // @synthesize modifiedContentRange=_modifiedContentRange;
@property struct _NSRange originalContentRange; // @synthesize originalContentRange=_originalContentRange;
@property struct _NSRange modifiedTokenRange; // @synthesize modifiedTokenRange=_modifiedTokenRange;
@property struct _NSRange originalTokenRange; // @synthesize originalTokenRange=_originalTokenRange;
@property(nonatomic) __weak id <DEDescriptorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) BOOL isInsertionOrDeletion;
- (void)diffDescriptor:(id)arg1 willRemoveChildDiffDescriptor:(id)arg2;
- (void)diffDescriptor:(id)arg1 didAddChildDiffDescriptor:(id)arg2;
- (void)removeAllChildDiffDescriptors;
- (void)removeChildDiffDescriptorAtIndex:(long long)arg1;
- (void)removeChildDiffDescriptor:(id)arg1;
- (void)insertChildDiffDescriptor:(id)arg1 atIndex:(long long)arg2;
- (void)addChildDiffDescriptor:(id)arg1;
- (void)removeObjectFromChildDiffDescriptorsAtIndex:(long long)arg1;
- (void)insertObject:(id)arg1 inChildDiffDescriptorsAtIndex:(long long)arg2;
- (void)_diffDescriptor:(id)arg1 willRemoveChildDiffDescriptor:(id)arg2;
- (void)_diffDescriptor:(id)arg1 didAddChildDiffDescriptor:(id)arg2;
- (id)modifiedSubdescriptorIndexes;
- (id)modifiedSubdescriptors;
- (id)subdescriptors;
@property BOOL resolved; // @dynamic resolved;
@property long long diffMergeDirection; // @dynamic diffMergeDirection;
- (BOOL)allowsThreeWayResolution;
- (id)childDiffDescriptors;
- (unsigned long long)de_diffHashForDataSource:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

