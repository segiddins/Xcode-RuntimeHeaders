//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <GPUToolsRenderer/MTLDevice-Protocol.h>

@class MTLCommandQueueDescriptor, MTLComputePipelineDescriptor, MTLIndirectCommandBufferDescriptor, MTLMotionEstimationPipelineDescriptor, MTLMotionEstimatorCapabilities, MTLRenderPipelineDescriptor, MTLStructType, MTLTextureDescriptor, NSArray, NSData, NSMutableDictionary, NSString, OS_dispatch_data, _MTLIndirectArgumentBufferLayout;
@protocol MTLArgumentEncoder, MTLBuffer, MTLCommandQueue, MTLComputeCommandEncoder, MTLComputePipelineState, MTLDeserializationContext, MTLDevice, MTLDeviceSPI, MTLFunction, MTLIndirectArgumentEncoder, MTLIndirectCommandBuffer, MTLIndirectRenderCommandEncoder, MTLLibrary, MTLMotionEstimationPipeline, MTLPipelineCache, MTLPipelineLibrarySPI, MTLRenderCommandEncoder, MTLRenderPipelineState, MTLSamplerState, MTLSharedEvent, MTLTexture;

@protocol MTLDeviceSPI <MTLDevice>
+ (void)registerDevices;
- (BOOL)isPlacementHeapSupported;
- (unsigned long long)offsetFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)resourceIndexFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)indirectBufferAddressForResourceIndex:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (void)removeResourceFromGlobalResourceTable:(unsigned long long)arg1 resourceType:(unsigned long long)arg2;
- (void)addIndirectCommandBufferToGlobalResourceTable:(id <MTLIndirectCommandBuffer>)arg1;
- (void)addRenderPipelineStateToGlobalResourceTable:(id <MTLRenderPipelineState>)arg1;
- (void)addComputePipelineStateToGlobalResourceTable:(id <MTLComputePipelineState>)arg1;
- (void)addSamplerStateToGlobalResourceTable:(id <MTLSamplerState>)arg1;
- (void)addTextureToGlobalResourceTable:(id <MTLTexture>)arg1;
- (void)addBufferToGlobalResourceTable:(id <MTLBuffer>)arg1;
- (BOOL)requiresIndirectionForAllResourceTypes;
- (id <MTLBuffer>)newBufferWithBytesNoCopy:(void *)arg1 length:(long long)arg2 options:(unsigned long long)arg3 atResourceIndex:(long long)arg4 deallocator:(void (^)(void *, long long))arg5;
- (id <MTLBuffer>)newBufferWithBytes:(void *)arg1 length:(long long)arg2 options:(unsigned long long)arg3 atResourceIndex:(long long)arg4;
- (id <MTLBuffer>)newBufferWithLength:(long long)arg1 options:(unsigned long long)arg2 atResourceIndex:(long long)arg3;
- (BOOL)useDeviceResourceTableForType:(unsigned long long)arg1;
- (id <MTLBuffer>)utilityBufferForRenderCommandEncoder:(id <MTLRenderCommandEncoder>)arg1;
- (id <MTLBuffer>)utilityBufferForComputeCommandEncoder:(id <MTLComputeCommandEncoder>)arg1;
- (long long)createNewUtilityBuffer;
@property(nonatomic) long long currentUtilityBufferIndex;
@property(nonatomic, copy) NSArray *utilityBuffers;
- (BOOL)isUtilityBufferRequired;
@property(nonatomic) BOOL resourceIndirectionEnabled;
- (BOOL)isResourceIndirectionEnabled;
- (BOOL)setResourcesPurgeableState:(id *)arg1 newState:(unsigned long long)arg2 oldState:(unsigned long long *)arg3 count:(int)arg4;
- (id <MTLSharedEvent>)newSharedEventWithMachPort:(unsigned int)arg1;
- (id <MTLIndirectRenderCommandEncoder>)newIndirectRenderCommandEncoderWithBuffer:(id <MTLBuffer>)arg1;
- (id <MTLBuffer>)newIndirectCommandBufferWithDescriptor:(MTLIndirectCommandBufferDescriptor *)arg1 maxCount:(long long)arg2 options:(unsigned long long)arg3;
@property(nonatomic, readonly) unsigned long long samplerReductionModeSupport;
- (id <MTLTexture>)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(long long)arg2 deallocator:(void (^)(void *, long long))arg3 descriptor:(MTLTextureDescriptor *)arg4 offset:(long long)arg5 bytesPerRow:(long long)arg6;
- (id <MTLTexture>)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(long long)arg2 descriptor:(MTLTextureDescriptor *)arg3 offset:(long long)arg4 bytesPerRow:(long long)arg5;
- (BOOL)_registerInterestNotification;
- (void)_wasRemoved;
- (void)_removeRequested;
@property(nonatomic, readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities;
- (id <MTLArgumentEncoder>)newArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (_MTLIndirectArgumentBufferLayout *)newIndirectArgumentBufferLayoutWithStructType:(MTLStructType *)arg1;
@property(nonatomic, readonly) BOOL requiresIABEmulation;
@property(nonatomic, readonly) unsigned long long dedicatedMemorySize;
@property(nonatomic, readonly) unsigned long long sharedMemorySize;
- (id <MTLCommandQueue>)newCommandQueueWithDescriptor:(MTLCommandQueueDescriptor *)arg1;
- (BOOL)supportsSampleCount:(long long)arg1;
- (CDStruct_c0454aff)pipelineCacheStats;
- (CDStruct_c0454aff)libraryCacheStats;
- (void)unloadShaderCaches;
@property(nonatomic, readonly) BOOL supportPriorityBand;
@property(nonatomic, readonly) unsigned int acceleratorPort;
@property(nonatomic, readonly) long long maxComputeAttributes;
@property(nonatomic, readonly) long long maxTextureBufferWidth;
@property(nonatomic, readonly) long long maxCustomSamplePositions;
@property(nonatomic, readonly) long long maxViewportCount;
@property(nonatomic, readonly) long long maxIndirectSamplersPerDevice;
@property(nonatomic, readonly) long long maxIndirectSamplers;
@property(nonatomic, readonly) long long maxIndirectTextures;
@property(nonatomic, readonly) long long maxIndirectBuffers;
@property(nonatomic, readonly) long long maxTessellationFactor;
@property(nonatomic, readonly) long long maxInterpolatedComponents;
@property(nonatomic, readonly) long long maxComputeThreadgroupMemoryAlignmentBytes;
@property(nonatomic, readonly) long long maxFunctionConstantIndices;
@property(nonatomic, readonly) long long deviceLinearReadOnlyTextureAlignmentBytes;
@property(nonatomic, readonly) long long deviceLinearTextureAlignmentBytes;
@property(nonatomic, readonly) long long iosurfaceReadOnlyTextureAlignmentBytes;
@property(nonatomic, readonly) long long iosurfaceTextureAlignmentBytes;
@property(nonatomic, readonly) long long linearTextureAlignmentBytes;
@property(nonatomic, readonly) long long maxTextureLayers;
@property(nonatomic, readonly) long long maxTextureDimensionCube;
@property(nonatomic, readonly) long long maxTextureDepth3D;
@property(nonatomic, readonly) long long maxTextureHeight3D;
@property(nonatomic, readonly) long long maxTextureWidth3D;
@property(nonatomic, readonly) long long maxTextureHeight2D;
@property(nonatomic, readonly) long long maxTextureWidth2D;
@property(nonatomic, readonly) long long maxTextureWidth1D;
@property(nonatomic, readonly) long long minBufferNoCopyAlignmentBytes;
@property(nonatomic, readonly) long long minConstantBufferAlignmentBytes;
@property(nonatomic, readonly) long long maxVisibilityQueryOffset;
@property(nonatomic, readonly) float maxPointSize;
@property(nonatomic, readonly) float maxLineWidth;
@property(nonatomic, readonly) long long maxComputeThreadgroupMemory;
@property(nonatomic, readonly) long long maxTotalComputeThreadsPerThreadgroup;
@property(nonatomic, readonly) long long maxComputeLocalMemorySizes;
@property(nonatomic, readonly) long long maxComputeInlineDataSize;
@property(nonatomic, readonly) long long maxComputeSamplers;
@property(nonatomic, readonly) long long maxComputeTextures;
@property(nonatomic, readonly) long long maxComputeBuffers;
@property(nonatomic, readonly) long long maxFragmentInlineDataSize;
@property(nonatomic, readonly) long long maxFragmentSamplers;
@property(nonatomic, readonly) long long maxFragmentTextures;
@property(nonatomic, readonly) long long maxFragmentBuffers;
@property(nonatomic, readonly) long long maxInterpolants;
@property(nonatomic, readonly) long long maxVertexInlineDataSize;
@property(nonatomic, readonly) long long maxVertexSamplers;
@property(nonatomic, readonly) long long maxVertexTextures;
@property(nonatomic, readonly) long long maxVertexBuffers;
@property(nonatomic, readonly) long long maxVertexAttributes;
@property(nonatomic, readonly) long long maxColorAttachments;
- (id <MTLTexture>)newTextureWithSurface:(long long)arg1 buffer:(long long)arg2;
- (id <MTLTexture>)newTextureWithDescriptor:(MTLTextureDescriptor *)arg1 iosurface:(struct __IOSurface *)arg2 plane:(long long)arg3;
- (long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;
- (BOOL)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;
- (BOOL)deviceSupportsFeatureSet:(unsigned long long)arg1;
@property(nonatomic, readonly) const CDStruct_daf93e08 *limits;
- (id <MTLDevice>)_deviceWrapper;
- (void)_setDeviceWrapper:(id <MTLDeviceSPI>)arg1;
@property(nonatomic, readonly) unsigned long long featureProfile;
@property(nonatomic) BOOL metalAssertionsEnabled;
@property(nonatomic, readonly) unsigned long long doubleFPConfig;
@property(nonatomic, readonly) unsigned long long singleFPConfig;
@property(nonatomic, readonly) unsigned long long halfFPConfig;
- (BOOL)isMagicMipmapSupported;
- (void)compilerPropagatesThreadPriority:(_Bool)arg1;
- (NSString *)productName;
- (NSString *)familyName;
- (NSString *)vendorName;
- (void)newPrecompiledComputePipelineStateWithDescriptor:(MTLComputePipelineDescriptor *)arg1 options:(unsigned long long)arg2 pipelineCache:(id <MTLPipelineCache>)arg3 completionHandler:(void (^)(NSArray *, NSError *))arg4;
- (MTLMotionEstimatorCapabilities *)motionEstimatorCapabilities;
- (void)setGPUAssertionsEnabled:(BOOL)arg1;
- (BOOL)areGPUAssertionsEnabled;
- (void)allowLibrariesFromOtherPlatforms;
@property(nonatomic, readonly) BOOL supportsFloat16BCubicFiltering;
@property(nonatomic, readonly) BOOL supportsForceSeamsOnCubemaps;
@property(nonatomic, readonly) BOOL supportsTexture2DMultisampleArray;
@property(nonatomic, readonly) BOOL supportsDepthClipModeClampExtended;
@property(nonatomic, readonly) BOOL supportsSIMDReduction;
@property(nonatomic, readonly) BOOL supportsMirrorClampToEdgeSamplerMode;
@property(nonatomic, readonly) BOOL supportsBlackOrWhiteSamplerBorderColors;
@property(nonatomic, readonly) BOOL supportsShaderBarycentricCoordinates;
@property(nonatomic, readonly) BOOL supportsSIMDShufflesAndBroadcast;
@property(nonatomic, readonly) BOOL supportsShaderMinLODClamp;
@property(nonatomic, readonly) BOOL supportsSIMDGroup;
@property(nonatomic, readonly) BOOL supportsFP32TessFactors;
@property(nonatomic, readonly) BOOL supportsStencilFeedback;
@property(nonatomic, readonly) BOOL supportsMSAAStencilResolveFilter;
@property(nonatomic, readonly) BOOL supportsIndirectTessellation;
@property(nonatomic, readonly) BOOL supportsViewportAndScissorArray;
@property(nonatomic, readonly) BOOL supportsLayeredRendering;
@property(nonatomic, readonly) BOOL supports2DLinearTexArraySPI;
@property(nonatomic, readonly) BOOL supportsSeparateVisibilityAndShadingRate;
@property(nonatomic, readonly) BOOL supportsNonSquareTileShaders;
@property(nonatomic, readonly) BOOL supportsLinearTexture2DArray;
@property(nonatomic, readonly) BOOL supportsRasterOrderGroups;
@property(nonatomic, readonly) BOOL supportsRenderPassWithoutRenderTarget;
@property(nonatomic, readonly) BOOL supportsConcurrentComputeDispatch;
@property(nonatomic, readonly) BOOL supportsQuadShufflesAndBroadcast;
@property(nonatomic, readonly) BOOL supportsTextureCubeArray;
@property(nonatomic, readonly) BOOL supportsReadWriteTextureCubeArguments;
@property(nonatomic, readonly) BOOL supportsReadWriteTextureArguments;
@property(nonatomic, readonly) BOOL supportsNonUniformThreadgroupSize;
@property(nonatomic, readonly) BOOL supportsMipLevelsSmallerThanBlockSize;
@property(nonatomic, readonly) BOOL supportsPostDepthCoverage;
@property(nonatomic, readonly) BOOL supportsNativeHardwareFP16;
@property(nonatomic, readonly) BOOL supportsImageBlockSampleCoverageControl;
@property(nonatomic, readonly) BOOL supportsTileShaders;
@property(nonatomic, readonly) BOOL supportsImageBlocks;
@property(nonatomic, readonly) BOOL supportsRenderTextureWrites;
@property(nonatomic, readonly) BOOL supportsQuadGroup;
@property(nonatomic, readonly) BOOL supportsMemoryOrderAtomics;
@property(nonatomic, readonly) BOOL supportsAlphaYUVFormats;
@property(nonatomic, readonly) BOOL supportsTextureSwizzle;
@property(nonatomic, readonly) BOOL supportsTextureOutOfBoundsReads;
@property(nonatomic, readonly) BOOL supportsNorm16BCubicFiltering;
@property(nonatomic, readonly) BOOL supportsIndirectTextures;
@property(nonatomic, readonly) BOOL supportsIndirectStageInRegion;
@property(nonatomic, readonly) BOOL supportsCMPIndirectCommandBuffers;
@property(nonatomic, readonly) BOOL supportsGFXIndirectCommandBuffers;
@property(nonatomic, readonly) BOOL supportsMSAADepthResolveFilter;
@property(nonatomic, readonly) BOOL supportsMSAAStencilResolve;
@property(nonatomic, readonly) BOOL supportsMSAADepthResolve;
@property(nonatomic, readonly) BOOL supportsSamplerCompareFunction;
@property(nonatomic, readonly) BOOL supportsMutableTier1ArgumentBuffers;
@property(nonatomic, readonly) BOOL supportsCombinedMSAAStoreAndResolveAction;
@property(nonatomic, readonly) BOOL supportsArrayOfSamplers;
@property(nonatomic, readonly) BOOL supportsArrayOfTextures;
@property(nonatomic, readonly) BOOL supportsReadWriteBufferArguments;
@property(nonatomic, readonly) BOOL supportsTessellation;
@property(nonatomic, readonly) BOOL supportsIndirectDrawAndDispatch;
@property(nonatomic, readonly) BOOL supportsBaseVertexInstanceDrawing;
@property(nonatomic, readonly) BOOL supportsCountingOcclusionQuery;
@property(nonatomic, readonly) BOOL supportsFragmentBufferWrites;
@property(nonatomic, readonly) BOOL supports3DASTCTextures;
@property(nonatomic, readonly) BOOL supportsPacked32TextureBufferWrites;
@property(nonatomic, readonly) BOOL supportsDepthClipMode;
@property(nonatomic, readonly) BOOL supportsSRGBwrites;
@property(nonatomic, readonly) BOOL supportsPublicXR10Formats;
@property(nonatomic, readonly) BOOL supportsASTCTextureCompression;
@property(nonatomic, readonly) BOOL supportsGPUStatistics;
@property(nonatomic, readonly) BOOL supportsSeparateDepthStencil;
@property(nonatomic, readonly) BOOL supportsRelaxedTextureViewRequirements;
@property(nonatomic, readonly) BOOL supportsShaderLODAverage;
@property(nonatomic, readonly) BOOL supportsInvariantVertexPosition;
@property(nonatomic, readonly) BOOL supportsFastMathInfNaNPropagation;
@property(nonatomic, readonly) BOOL supportsMemorylessRenderTargets;
@property(nonatomic, readonly) BOOL supportsRenderToLinearTextures;
@property(nonatomic, readonly) BOOL supportsProgrammableBlending;
@property(nonatomic, readonly) BOOL supportsBufferWithIOSurface;
@property(nonatomic, readonly) BOOL supportsFragmentOnlyEncoders;
@property(nonatomic, readonly) BOOL supportsPipelineLibraries;
@property(nonatomic, readonly) BOOL supportsLinearTextureFromSharedBuffer;
@property(nonatomic, readonly) BOOL supportsNonPrivateMSAATextures;
@property(nonatomic, readonly) BOOL supportsNonPrivateDepthStencilTextures;
@property(nonatomic, readonly) BOOL supportsOpenCLTextureWriteSwizzles;
@property(nonatomic, readonly) BOOL supportsPlacementHeaps;
@property(nonatomic, readonly) BOOL supportsSamplerReductionMode;
@property(nonatomic, readonly) BOOL supportsQueryTextureLOD;
@property(nonatomic, readonly) BOOL supports32bpcMSAATextures;
@property(nonatomic, readonly) BOOL supportsSamplerAddressModeClampToHalfBorder;
@property(nonatomic, readonly) BOOL supportsCustomBorderColor;
@property(nonatomic, readonly) BOOL supportsLargeFramebufferConfigs;
@property(nonatomic, readonly) BOOL supports3DBCTextures;
@property(nonatomic, readonly) BOOL supportsBCTextureCompression;
@property(nonatomic, readonly) BOOL supportsProgrammableSamplePositions;
@property(nonatomic, readonly) BOOL supportsReadWriteTextureArgumentsTier2;
@property(nonatomic, readonly) BOOL supportsArgumentBuffersTier2;
@property(nonatomic, readonly) BOOL supportsBufferlessClientStorageTexture;
@property(nonatomic, readonly) BOOL supportsQuadReduction;

@optional
- (BOOL)isQuadDataSharingSupported;
- (id <MTLIndirectArgumentEncoder>)newIndirectArgumentEncoderWithLayout:(_MTLIndirectArgumentBufferLayout *)arg1;
- (id <MTLBuffer>)newBufferWithIOSurface:(struct __IOSurface *)arg1;
- (NSMutableDictionary *)copyIOSurfaceSharedTextureProperties:(MTLTextureDescriptor *)arg1;
- (BOOL)isFramebufferReadSupported;
- (BOOL)isASTCPixelFormatsSupported;
- (BOOL)isSystemDefaultDevice;
- (MTLStructType *)newStructTypeWithSerializedData:(OS_dispatch_data *)arg1;
- (OS_dispatch_data *)serializeStructType:(MTLStructType *)arg1 version:(unsigned int)arg2;
- (OS_dispatch_data *)serializeStructType:(MTLStructType *)arg1;
- (MTLComputePipelineDescriptor *)newComputePipelineDescriptorWithSerializedData:(OS_dispatch_data *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (MTLRenderPipelineDescriptor *)newRenderPipelineDescriptorWithSerializedData:(OS_dispatch_data *)arg1 deserializationContext:(id <MTLDeserializationContext>)arg2;
- (OS_dispatch_data *)serializeComputePipelineDescriptor:(MTLComputePipelineDescriptor *)arg1;
- (OS_dispatch_data *)serializeRenderPipelineDescriptor:(MTLRenderPipelineDescriptor *)arg1;
- (NSData *)endCollectingPipelineDescriptors;
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(NSString *)arg1;
- (void)startCollectingPipelineDescriptors;
- (id <MTLPipelineLibrarySPI>)newPipelineLibraryWithFilePath:(NSString *)arg1 error:(id *)arg2;
@property(nonatomic, readonly) const struct MTLTargetDeviceArch *targetDeviceInfo;
- (id <MTLLibrary>)newLibraryWithCIFiltersForComputePipeline:(NSArray *)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (id <MTLLibrary>)newLibraryWithCIFilters:(NSArray *)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (id <MTLLibrary>)newLibraryWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (id <MTLComputePipelineState>)newComputePipelineStateWithImageFilterFunctionsSPI:(NSArray *)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (id <MTLIndirectArgumentEncoder>)newIndirectArgumentEncoderWithArguments:(NSArray *)arg1;
- (void *)getShaderCacheKeys;
- (id <MTLFunction>)newFunctionWithGLIR:(void *)arg1 inputsDescription:(OS_dispatch_data *)arg2 functionType:(unsigned long long)arg3;
- (id <MTLFunction>)newFunctionWithGLIR:(void *)arg1 functionType:(unsigned long long)arg2;
- (void)newComputePipelineStateWithDescriptor:(MTLComputePipelineDescriptor *)arg1 completionHandler:(void (^)(id <MTLComputePipelineState>, NSError *))arg2;
- (id <MTLComputePipelineState>)newComputePipelineStateWithDescriptor:(MTLComputePipelineDescriptor *)arg1 error:(id *)arg2;
- (void)unmapShaderSampleBuffer;
- (BOOL)mapShaderSampleBufferWithBuffer:(CDStruct_32a7f38a *)arg1 capacity:(long long)arg2 size:(long long)arg3;
@property(nonatomic) BOOL shaderDebugInfoCaching;
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long *)arg2 indexCount:(long long)arg3;
- (unsigned long long)resourcePatchingTypeForResourceType:(unsigned long long)arg1;
- (void)setupMPSFunctionTable:(void *)arg1;
- (void)setIndirectArgumentBufferDecodingData:(OS_dispatch_data *)arg1;
- (OS_dispatch_data *)indirectArgumentBufferDecodingData;
- (id <MTLMotionEstimationPipeline>)newMotionEstimationPipelineWithDescriptor:(MTLMotionEstimationPipelineDescriptor *)arg1;
- (BOOL)supportsPrimitiveType:(unsigned long long)arg1;

// Remaining properties
@property(nonatomic, readonly) BOOL ASTCPixelFormatsSupported;
@property(nonatomic, readonly) BOOL framebufferReadSupported;
@property(nonatomic) BOOL gpuAssertionsEnabled;
@property(nonatomic, readonly) BOOL magicMipmapSupported;
@property(nonatomic, readonly) BOOL placementHeapSupported;
@property(nonatomic, readonly) BOOL quadDataSharingSupported;
@property(nonatomic, readonly) BOOL systemDefaultDevice;
@property(nonatomic, readonly) BOOL utilityBufferRequired;
@end

